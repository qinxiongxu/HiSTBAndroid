	.arch armv7-a
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 2
	.eabi_attribute 18, 4
	.file	"real8.c"
@ GNU C (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) version 4.4.1 (arm-hisiv200-linux-gnueabi)
@	compiled by GNU C version 4.1.1 20061011 (Red Hat 4.1.1-30), GMP version 4.3.1, MPFR version 2.4.2.
@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
@ options passed:  -nostdinc
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include
@ -Iarch/arm/include/generated
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include
@ -Iinclude
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include/uapi
@ -Iarch/arm/include/generated/uapi
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/uapi
@ -Iinclude/generated/uapi
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0
@ -Idrivers/msp/vfmw/vfmw_v4.0
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/mach-hi3798mx/include
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/include
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/drv/include
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/scene/stb
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/osal/linux_kernel
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/softlib
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/syntax
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiSCDV200
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV300R001
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/product/Hi3798MV100
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common_test/vdecko
@ -imultilib armv7a_soft -iprefix
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/
@ -isysroot /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../target
@ -D__KERNEL__ -D__LINUX_ARM_ARCH__=7 -Uarm -DCHIP_TYPE_hi3796mv100
@ -DSDK_VERSION=HiSTBAndroidV600R001C00SPC064_v2016061301 -DHI_MCE_SUPPORT
@ -DHI_GPIOI2C_SUPPORT -DHI_LOG_SUPPORT=1 -DHI_LOG_LEVEL=4
@ -DHI_PROC_SUPPORT=1 -DHI_HDMI_SUPPORT_1_4 -DHI_KEYLED_SUPPORT
@ -DHI_HDCP_SUPPORT -DHI_SCI_SUPPORT -DHI_PVR_SUPPORT -DHI_VI_SUPPORT
@ -DHI_VENC_SUPPORT -DHI_AENC_SUPPORT -DHI_PQ_V3_0 -DENV_ARMLINUX_KERNEL
@ -DDNR_DISABLE -DSCD_MP4_SLICE_ENABLE -DSUPPORT_JPEG_444
@ -DVFMW_EXTRA_TYPE_DEFINE -DPRODUCT_STB -D__VFMW_REGISTER_ISR__
@ -DQ_MATRIX_FIXED -DVFMW_VDH_V300R001_SUPPORT -DCFG_SCD_TIME_OUT=2000
@ -DCFG_VDH_TIME_OUT=500 -DVFMW_H264_SUPPORT -DVFMW_HEVC_SUPPORT
@ -DVFMW_MVC_SUPPORT -DVFMW_MPEG2_SUPPORT -DVFMW_MPEG4_SUPPORT
@ -DVFMW_AVS_SUPPORT -DVFMW_VC1_SUPPORT -DVFMW_BPD_H_SUPPORT
@ -DVFMW_REAL8_SUPPORT -DVFMW_REAL9_SUPPORT -DVFMW_VP6_SUPPORT
@ -DVFMW_VP8_SUPPORT -DVFMW_DIVX3_SUPPORT -DVFMW_H263_SUPPORT
@ -DVFMW_JPEG_SUPPORT -DVFMW_RAW_SUPPORT -DVFMW_USER_SUPPORT
@ -DCFG_MAX_CHAN_NUM=16 -DVFMW_DPRINT_SUPPORT -DVFMW_SCD_LOWDLY_SUPPORT
@ -DVFMW_AVSPLUS_SUPPORT -DVFMW_MODULE_LOWDLY_SUPPORT
@ -DVFMW_SYSTEM_REG_DISABLE -DHI_VDEC_SVDEC_BUILTIN -DKBUILD_STR(s)=#s
@ -DKBUILD_BASENAME=KBUILD_STR(real8) -DKBUILD_MODNAME=KBUILD_STR(hi_vfmw)
@ -isystem
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/include
@ -include
@ /home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/linux/kconfig.h
@ -MD drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/.real8.o.d
@ /home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/real8.c
@ -mlittle-endian -mapcs -mno-sched-prolog -mabi=aapcs-linux
@ -mno-thumb-interwork -marm -march=armv7-a -msoft-float -auxbase-strip
@ drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/real8.o -O2 -Wall
@ -Wundef -Wstrict-prototypes -Wno-trigraphs
@ -Werror-implicit-function-declaration -Wno-format-security
@ -Wframe-larger-than=1024 -Wdeclaration-after-statement -Wno-pointer-sign
@ -p -fno-strict-aliasing -fno-common -fno-delete-null-pointer-checks
@ -fno-dwarf2-cfi-asm -funwind-tables -fno-stack-protector
@ -fno-omit-frame-pointer -fno-optimize-sibling-calls -fno-strict-overflow
@ -fconserve-stack -fno-pic -fverbose-asm
@ options enabled:  -falign-loops -fargument-alias -fauto-inc-dec
@ -fbranch-count-reg -fcaller-saves -fcprop-registers -fcrossjumping
@ -fcse-follow-jumps -fdefer-pop -fearly-inlining
@ -feliminate-unused-debug-types -fexpensive-optimizations
@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm
@ -fguess-branch-probability -fident -fif-conversion -fif-conversion2
@ -findirect-inlining -finline -finline-functions-called-once
@ -finline-small-functions -fipa-cp -fipa-pure-const -fipa-reference
@ -fira-share-save-slots -fira-share-spill-slots -fivopts
@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
@ -fmerge-debug-strings -fmove-loop-invariants -foptimize-register-move
@ -fpeephole -fpeephole2 -fprofile -fpromote-loop-indices
@ -freg-struct-return -fregmove -frename-registers -freorder-blocks
@ -freorder-functions -frerun-cse-after-loop -fsched-interblock
@ -fsched-spec -fsched-stalled-insns-dep -fschedule-insns -fschedule-insns2
@ -fsection-anchors -fsigned-zeros -fsplit-ivs-in-unroller
@ -fsplit-wide-types -fthread-jumps -ftoplevel-reorder -ftrapping-math
@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-copy-prop
@ -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
@ -ftree-dse -ftree-fre -ftree-loop-im -ftree-loop-ivcanon
@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-pre -ftree-reassoc
@ -ftree-scev-cprop -ftree-sink -ftree-sra -ftree-switch-conversion
@ -ftree-ter -ftree-vect-loop-version -ftree-vrp -funit-at-a-time
@ -funroll-loops -funwind-tables -fverbose-asm -fweb
@ -fzero-initialized-in-bss -mapcs-frame -mglibc -mlittle-endian

@ Compiler executable checksum: fa59e0bd179ef45b3a3c3e6f3383fdac

	.text
	.align	2
	.global	Real8_CB_SetDimensions
	.type	Real8_CB_SetDimensions, %function
Real8_CB_SetDimensions:
	.fnstart
.LFB1534:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #88]	@ D.38764, <variable>.pic_width_in_pixel
	cmp	r3, #128	@ D.38764,
	beq	.L21	@,
	cmp	r3, #176	@ D.38764,
	beq	.L22	@,
	cmp	r3, #352	@ D.38764,
	bne	.L7	@,
	ldr	r2, [r0, #84]	@ <variable>.pic_height_in_pixel, <variable>.pic_height_in_pixel
	cmp	r2, #288	@ <variable>.pic_height_in_pixel,
	beq	.L23	@,
.L8:
	add	ip, r3, #15	@ tmp154, D.38764,
	add	r1, r2, #15	@ tmp155, <variable>.pic_height_in_pixel,
	mov	r3, ip, lsr #4	@ D.38785, tmp154,
	mov	r2, r1, lsr #4	@ D.38787, tmp155,
	str	r3, [r0, #28]	@ D.38785, <variable>.Rv8ParsePicParam.m_nMBs
	mul	ip, r3, r2	@ tmp157, D.38785, D.38787
	str	r2, [r0, #24]	@ D.38787, <variable>.Rv8ParsePicParam.m_nGOBs
	sub	r3, ip, #1	@ prephitmp.520, tmp157,
	cmp	r3, #47	@ prephitmp.520,
	movls	r3, #0	@ i,
	bls	.L4	@,
	cmp	r3, #98	@ prephitmp.520,
	bls	.L17	@,
.L9:
	cmp	r3, #396	@ prephitmp.520,
	movcc	r3, #2	@ i,
	bcc	.L4	@,
	cmp	r3, #1584	@ prephitmp.520,
	movcc	r3, #3	@ i,
	bcc	.L4	@,
	cmp	r3, #6336	@ prephitmp.520,
	movcc	r3, #4	@ i,
	movcs	r3, #5	@ i,
.L4:
	movw	r2, #:lower16:.LANCHOR0	@ tmp161,
	movt	r2, #:upper16:.LANCHOR0	@ tmp161,
	ldr	r3, [r2, r3, asl #2]	@ tmp162, MBA_FieldWidth
	str	r3, [r0, #32]	@ tmp162, <variable>.Rv8ParsePicParam.m_mbaSize
	ldmfd	sp, {fp, sp, pc}	@
.L22:
	ldr	r2, [r0, #84]	@ <variable>.pic_height_in_pixel, <variable>.pic_height_in_pixel
	cmp	r2, #144	@ <variable>.pic_height_in_pixel,
	bne	.L8	@,
	mov	ip, #11	@ tmp143,
	mov	r2, #9	@ tmp144,
	str	ip, [r0, #28]	@ tmp143, <variable>.Rv8ParsePicParam.m_nMBs
	str	r2, [r0, #24]	@ tmp144, <variable>.Rv8ParsePicParam.m_nGOBs
.L17:
	mov	r3, #1	@ i,
	b	.L4	@
.L21:
	ldr	r2, [r0, #84]	@ <variable>.pic_height_in_pixel, <variable>.pic_height_in_pixel
	cmp	r2, #96	@ <variable>.pic_height_in_pixel,
	bne	.L8	@,
	mov	r3, #6	@ tmp141,
	mov	r1, #8	@ tmp140,
	str	r3, [r0, #24]	@ tmp141, <variable>.Rv8ParsePicParam.m_nGOBs
	mov	r3, #0	@ i,
	str	r1, [r0, #28]	@ tmp140, <variable>.Rv8ParsePicParam.m_nMBs
	b	.L4	@
.L7:
	cmp	r3, #704	@ D.38764,
	bne	.L24	@,
	ldr	r2, [r0, #84]	@ <variable>.pic_height_in_pixel, <variable>.pic_height_in_pixel
	cmp	r2, #576	@ <variable>.pic_height_in_pixel,
	bne	.L8	@,
	mov	ip, #44	@ tmp149,
	mov	r2, #36	@ tmp150,
	str	ip, [r0, #28]	@ tmp149, <variable>.Rv8ParsePicParam.m_nMBs
	movw	r3, #1583	@ prephitmp.520,
	str	r2, [r0, #24]	@ tmp150, <variable>.Rv8ParsePicParam.m_nGOBs
	b	.L9	@
.L23:
	mov	r3, #18	@ tmp147,
	mov	r1, #22	@ tmp146,
	str	r3, [r0, #24]	@ tmp147, <variable>.Rv8ParsePicParam.m_nGOBs
	movw	r3, #395	@ prephitmp.520,
	str	r1, [r0, #28]	@ tmp146, <variable>.Rv8ParsePicParam.m_nMBs
	b	.L9	@
.L24:
	cmp	r3, #1408	@ D.38764,
	ldr	r2, [r0, #84]	@ <variable>.pic_height_in_pixel, <variable>.pic_height_in_pixel
	bne	.L8	@,
	cmp	r2, #1152	@ <variable>.pic_height_in_pixel,
	bne	.L8	@,
	mov	r3, #72	@ tmp153,
	mov	r1, #88	@ tmp152,
	str	r3, [r0, #24]	@ tmp153, <variable>.Rv8ParsePicParam.m_nGOBs
	movw	r3, #6335	@ prephitmp.520,
	str	r1, [r0, #28]	@ tmp152, <variable>.Rv8ParsePicParam.m_nMBs
	b	.L9	@
	.fnend
	.size	Real8_CB_SetDimensions, .-Real8_CB_SetDimensions
	.align	2
	.global	Real8_CB_SetRPRSizes
	.type	Real8_CB_SetRPRSizes, %function
Real8_CB_SetRPRSizes:
	.fnstart
.LFB1538:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #44
	sub	sp, sp, #44	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r7, .L27	@ tmp138,
	mov	r4, r1	@ num_sizes, num_sizes
	sub	r1, fp, #36	@,,
	mov	ip, r0	@ pPictureHeader, pPictureHeader
	mov	r6, r2	@ sizes, sizes
	add	r5, r1, r4, asl #2	@, tmp142,, num_sizes,
	sub	r8, fp, #72	@ tmp137,,
	ldmia	r7!, {r0, r1, r2, r3}	@ tmp145,,,,
	str	r6, [ip, #12]	@ sizes, <variable>.Rv8ParsePicParam.m_pSizes
	str	r4, [ip, #16]	@ num_sizes, <variable>.Rv8ParsePicParam.m_numSizes
	mov	r6, r8	@ tmp146, tmp137
	mov	r4, r7	@ tmp147, tmp145
	stmia	r6!, {r0, r1, r2, r3}	@ tmp146,,,,
	ldmia	r4!, {r0, r1, r2, r3}	@ tmp147,,,,
	ldr	r4, [r4, #0]	@ C.460, C.460
	stmia	r6!, {r0, r1, r2, r3}	@ tmp146,,,,
	str	r4, [r6, #0]	@ C.460, size
	ldr	r3, [r5, #-36]	@ tmp144, size
	str	r3, [ip, #8]	@ tmp144, <variable>.Rv8ParsePicParam.m_pctszSize
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L28:
	.align	2
.L27:
	.word	.LANCHOR0+24
	.fnend
	.size	Real8_CB_SetRPRSizes, .-Real8_CB_SetRPRSizes
	.align	2
	.global	RV8_RecordVFMWState
	.type	RV8_RecordVFMWState, %function
RV8_RecordVFMWState:
	.fnstart
.LFB1543:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	RV8_RecordVFMWState, .-RV8_RecordVFMWState
	.align	2
	.global	Real8_WriteSliceMsg
	.type	Real8_WriteSliceMsg, %function
Real8_WriteSliceMsg:
	.fnstart
.LFB1544:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r3, #44	@ tmp138,
	mla	r3, r3, r1, r0	@ tmp139, tmp138, HoldSliceNum, pCtx
	movw	ip, #44896	@ tmp141,
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.bit_stream_addr_0, <variable>.CodecInfo.SliceHeader.bit_stream_addr_0
	movw	ip, #44888	@ tmp148,
	add	r1, r1, #1	@ tmp206, HoldSliceNum,
	str	r2, [r3, #88]	@ <variable>.CodecInfo.SliceHeader.bit_stream_addr_0, <variable>.StreamPhyAddr
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.bit_offset_0, <variable>.CodecInfo.SliceHeader.bit_offset_0
	movw	ip, #44892	@ tmp155,
	str	r2, [r3, #96]	@ <variable>.CodecInfo.SliceHeader.bit_offset_0, <variable>.StreamBitOffset
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.bit_len_0, <variable>.CodecInfo.SliceHeader.bit_len_0
	movw	ip, #44908	@ tmp162,
	str	r2, [r3, #104]	@ <variable>.CodecInfo.SliceHeader.bit_len_0, <variable>.StreamLength
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.bit_stream_addr_1, <variable>.CodecInfo.SliceHeader.bit_stream_addr_1
	movw	ip, #44900	@ tmp169,
	str	r2, [r3, #92]	@ <variable>.CodecInfo.SliceHeader.bit_stream_addr_1, <variable>.StreamPhyAddr
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.bit_offset_1, <variable>.CodecInfo.SliceHeader.bit_offset_1
	movw	ip, #44904	@ tmp176,
	str	r2, [r3, #100]	@ <variable>.CodecInfo.SliceHeader.bit_offset_1, <variable>.StreamBitOffset
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.bit_len_1, <variable>.CodecInfo.SliceHeader.bit_len_1
	movw	ip, #44876	@ tmp183,
	str	r2, [r3, #108]	@ <variable>.CodecInfo.SliceHeader.bit_len_1, <variable>.StreamLength
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.dblk_filter_passthrough, <variable>.CodecInfo.SliceHeader.dblk_filter_passthrough
	movw	ip, #44872	@ tmp190,
	str	r2, [r3, #112]	@ <variable>.CodecInfo.SliceHeader.dblk_filter_passthrough, <variable>.dblk_filter_passthrough
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.osvquant, <variable>.CodecInfo.SliceHeader.osvquant
	movw	ip, #44868	@ tmp197,
	str	r2, [r3, #116]	@ <variable>.CodecInfo.SliceHeader.osvquant, <variable>.osvquant
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.SliceQP, <variable>.CodecInfo.SliceHeader.SliceQP
	movw	ip, #44880	@ tmp204,
	str	r2, [r3, #120]	@ <variable>.CodecInfo.SliceHeader.SliceQP, <variable>.sliceqp
	ldr	r2, [r0, ip]	@ <variable>.CodecInfo.SliceHeader.first_mb_in_slice, <variable>.CodecInfo.SliceHeader.first_mb_in_slice
	str	r2, [r3, #124]	@ <variable>.CodecInfo.SliceHeader.first_mb_in_slice, <variable>.first_mb_in_slice
	str	r1, [r0, #44]	@ tmp206, <variable>.Rv8DecParam.TotalSliceNum
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	Real8_WriteSliceMsg, .-Real8_WriteSliceMsg
	.align	2
	.global	Real8_WritePicMsg
	.type	Real8_WritePicMsg, %function
Real8_WritePicMsg:
	.fnstart
.LFB1545:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #44808	@ tmp134,
	movw	r2, #44912	@ tmp147,
	movw	r7, #44824	@ tmp137,
	movw	r6, #44820	@ tmp139,
	movw	r5, #46008	@ tmp141,
	movw	ip, #46012	@ tmp143,
	movw	r4, #44916	@ tmp149,
	movw	r1, #44848	@ tmp145,
	ldr	r3, [r0, r8]	@ <variable>.CodecInfo.PictureHeader.PicCodType, <variable>.CodecInfo.PictureHeader.PicCodType
	ldr	r1, [r0, r1]	@ <variable>.CodecInfo.PictureHeader.PQUANT, <variable>.CodecInfo.PictureHeader.PQUANT
	ldr	r8, [r0, r7]	@ <variable>.CodecInfo.PictureHeader.pic_width_in_mb, <variable>.CodecInfo.PictureHeader.pic_width_in_mb
	cmp	r3, #2	@ <variable>.CodecInfo.PictureHeader.PicCodType,
	ldr	r7, [r0, r6]	@ <variable>.CodecInfo.PictureHeader.pic_height_in_mb, <variable>.CodecInfo.PictureHeader.pic_height_in_mb
	ldr	r6, [r0, r5]	@ <variable>.CodecInfo.Ratio0, <variable>.CodecInfo.Ratio0
	ldr	r5, [r0, ip]	@ <variable>.CodecInfo.Ratio1, <variable>.CodecInfo.Ratio1
	ldr	ip, [r0, r4]	@ <variable>.CodecInfo.PrevPicMb0QP, <variable>.CodecInfo.PrevPicMb0QP
	ldr	r4, [r0, r2]	@ <variable>.CodecInfo.PrevPicQP, <variable>.CodecInfo.PrevPicQP
	str	r8, [r0, #12]	@ <variable>.CodecInfo.PictureHeader.pic_width_in_mb, <variable>.Rv8DecParam.PicWidthInMb
	str	r7, [r0, #16]	@ <variable>.CodecInfo.PictureHeader.pic_height_in_mb, <variable>.Rv8DecParam.PicHeightInMb
	str	r6, [r0, #24]	@ <variable>.CodecInfo.Ratio0, <variable>.Rv8DecParam.Ratio0
	str	r5, [r0, #28]	@ <variable>.CodecInfo.Ratio1, <variable>.Rv8DecParam.Ratio1
	str	r4, [r0, #36]	@ <variable>.CodecInfo.PrevPicQP, <variable>.Rv8DecParam.PrevPicQP
	str	ip, [r0, #40]	@ <variable>.CodecInfo.PrevPicMb0QP, <variable>.Rv8DecParam.PrevPicMb0QP
	strb	r3, [r0, #20]	@ <variable>.CodecInfo.PictureHeader.PicCodType, <variable>.Rv8DecParam.PicCodingType
	str	r1, [r0, #32]	@ <variable>.CodecInfo.PictureHeader.PQUANT, <variable>.Rv8DecParam.PQUANT
	strne	r1, [r0, r2]	@ <variable>.CodecInfo.PictureHeader.PQUANT, <variable>.CodecInfo.PrevPicQP
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	Real8_WritePicMsg, .-Real8_WritePicMsg
	.align	2
	.global	Real8_WriteReg
	.type	Real8_WriteReg, %function
Real8_WriteReg:
	.fnstart
.LFB1546:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	str	r1, [r0, #48]	@ fst_slc_grp, <variable>.Rv8DecParam.FstSlcGrp
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	Real8_WriteReg, .-Real8_WriteReg
	.align	2
	.global	Real8_ModifySliceMsg
	.type	Real8_ModifySliceMsg, %function
Real8_ModifySliceMsg:
	.fnstart
.LFB1547:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #124]	@ <variable>.first_mb_in_slice, <variable>.first_mb_in_slice
	ldr	r1, [r0, #12]	@ D.39266, <variable>.Rv8DecParam.PicWidthInMb
	cmp	r3, #0	@ <variable>.first_mb_in_slice,
	ldr	r3, [r0, #16]	@ D.39267, <variable>.Rv8DecParam.PicHeightInMb
	bne	.L39	@,
	mul	r1, r1, r3	@ tmp199, D.39266, D.39267
	ldr	r2, [r0, #44]	@ temp.770, <variable>.Rv8DecParam.TotalSliceNum
	cmp	r2, #2	@ temp.770,
	sub	r1, r1, #1	@ TotalMbnMinus1, tmp199,
	bls	.L40	@,
	sub	r4, r2, #1	@ prephitmp.672, temp.770,
	cmp	r4, #1	@ prephitmp.672,
	bls	.L45	@,
	ldr	r3, [r0, #168]	@ temp.743, <variable>.first_mb_in_slice
	cmp	r3, #0	@ temp.743,
	ble	.L39	@,
	cmp	r1, r3	@ TotalMbnMinus1, temp.743
	ble	.L39	@,
	tst	r2, #1	@ temp.770,
	mov	r3, r0	@ ivtmp.741, pCtx
	mov	ip, #1	@ i.742,
	bne	.L43	@,
	ldr	r3, [r0, #212]	@ D.39280, <variable>.first_mb_in_slice
	mov	ip, #2	@ i.742,
	cmp	r3, #0	@ D.39280,
	ble	.L39	@,
	cmp	r1, r3	@ TotalMbnMinus1, D.39280
	add	r3, r0, #44	@ ivtmp.741, pCtx,
	bgt	.L43	@,
.L39:
	mov	r0, #0	@ D.39273,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L40:
	moveq	r4, #1	@ prephitmp.672,
	bne	.L46	@,
.L45:
	tst	r4, #1	@ prephitmp.672,
	mov	r3, r0	@ ivtmp.734, pCtx
	mov	ip, #0	@ i,
	beq	.L42	@,
	cmp	r4, #0	@ prephitmp.672,
	bls	.L97	@,
	ldr	r6, [r0, #124]	@ temp.744, <variable>.first_mb_in_slice
	mov	ip, #1	@ i,
	ldr	r5, [r0, #168]	@ D.39287, <variable>.first_mb_in_slice
	add	r3, r0, #44	@ ivtmp.734, pCtx,
	cmp	r6, r5	@ temp.744, D.39287
	bge	.L39	@,
	cmp	r4, ip	@ prephitmp.672, i
	add	r5, ip, #1	@ tmp255, i,
	add	ip, r5, #1	@ i, tmp255,
	add	r5, r3, #44	@ tmp256, ivtmp.734,
	bls	.L97	@,
.L49:
	ldr	r7, [r3, #124]	@ temp.744, <variable>.first_mb_in_slice
	ldr	r6, [r3, #168]	@ D.39287, <variable>.first_mb_in_slice
	add	r3, r3, #88	@ ivtmp.734, ivtmp.734,
	cmp	r7, r6	@ temp.744, D.39287
	bge	.L39	@,
	ldr	r6, [r5, #168]	@ D.39287, <variable>.first_mb_in_slice
	ldr	r5, [r5, #124]	@ temp.744, <variable>.first_mb_in_slice
	cmp	r5, r6	@ temp.744, D.39287
	bge	.L39	@,
.L42:
	cmp	r4, ip	@ prephitmp.672, i
	add	r5, ip, #1	@ tmp255, i,
	add	ip, r5, #1	@ i, tmp255,
	add	r5, r3, #44	@ tmp256, ivtmp.734,
	bhi	.L49	@,
.L97:
	mov	r3, #44	@ tmp202,
	mla	r4, r3, r4, r0	@ tmp203, tmp202, prephitmp.672, pCtx
	ldr	r3, [r4, #124]	@ D.39292, <variable>.first_mb_in_slice
	cmp	r3, #0	@ D.39292,
	ble	.L39	@,
	cmp	r1, r3	@ TotalMbnMinus1, D.39292
	blt	.L39	@,
.L46:
	cmp	r2, #0	@ temp.770,
	beq	.L99	@,
	mov	r6, #0	@ i.769,
	mov	ip, r0	@ ivtmp.751, pCtx
	mov	r3, r0	@ ivtmp.727, pCtx
	mov	r4, r6	@ i.749, i.769
	b	.L52	@
.L101:
	cmp	r5, #0	@ temp.748,
	blt	.L39	@,
	cmp	r1, r5	@ TotalMbnMinus1, temp.748
	blt	.L39	@,
	cmp	r2, #0	@ TotalMbnMinus1.747,
	blt	.L39	@,
	cmp	r1, r2	@ TotalMbnMinus1, TotalMbnMinus1.747
	blt	.L39	@,
	ldr	r2, [r0, #44]	@ temp.770, <variable>.Rv8DecParam.TotalSliceNum
	cmp	r2, r4	@ temp.770, i.749
	bls	.L100	@,
.L52:
	sub	r2, r2, #1	@ tmp205, temp.770,
	ldr	r5, [r3, #124]	@ temp.748, <variable>.first_mb_in_slice
	cmp	r6, r2	@ i.769, tmp205
	add	r4, r4, #1	@ i.749, i.749,
	streq	r1, [r3, #128]	@ TotalMbnMinus1, <variable>.last_mb_in_slice
	ldrne	r2, [r3, #168]	@ <variable>.first_mb_in_slice, <variable>.first_mb_in_slice
	moveq	r2, r1	@ TotalMbnMinus1.747, TotalMbnMinus1
	mov	r6, r4	@ i.769, i.749
	subne	r2, r2, #1	@ TotalMbnMinus1.747, <variable>.first_mb_in_slice,
	strne	r2, [r3, #128]	@ TotalMbnMinus1.747, <variable>.last_mb_in_slice
	cmp	r5, r2	@ temp.748, TotalMbnMinus1.747
	add	r3, r3, #44	@ ivtmp.727, ivtmp.727,
	ble	.L101	@,
	b	.L39	@
.L44:
	ldr	r5, [r3, #212]	@ D.39280, <variable>.first_mb_in_slice
	add	r3, r3, #88	@ ivtmp.741, ivtmp.741,
	cmp	r5, #0	@ D.39280,
	ble	.L39	@,
	cmp	r1, r5	@ TotalMbnMinus1, D.39280
	ble	.L39	@,
	ldr	r5, [r6, #212]	@ D.39280, <variable>.first_mb_in_slice
	cmp	r5, #0	@ D.39280,
	ble	.L39	@,
	cmp	r1, r5	@ TotalMbnMinus1, D.39280
	ble	.L39	@,
.L43:
	add	ip, ip, #1	@ tmp261, i.742,
	add	r6, r3, #44	@ tmp260, ivtmp.741,
	cmp	r4, ip	@ prephitmp.672, tmp261
	add	ip, ip, #1	@ i.742, tmp261,
	bhi	.L44	@,
	b	.L45	@
.L100:
	cmp	r2, #0	@ temp.770,
	ldr	r3, [r0, #88]	@ stream_base_addr, <variable>.StreamPhyAddr
	beq	.L53	@,
	tst	r2, #1	@ temp.770,
	mov	r5, r3	@ stream_base_addr.771, stream_base_addr
	mov	r4, #0	@ i.750,
	bne	.L56	@,
	mov	r1, r3	@ stream_base_addr.756, stream_base_addr
	ldr	r3, [r0, #92]	@ stream_base_addr, <variable>.StreamPhyAddr
	cmp	r3, r5	@ stream_base_addr, stream_base_addr.771
	bcs	.L71	@,
	ldr	r5, [r0, #108]	@ <variable>.StreamLength, <variable>.StreamLength
	cmp	r5, #0	@ <variable>.StreamLength,
	beq	.L71	@,
.L72:
	add	ip, r0, #44	@ ivtmp.751, pCtx,
	mov	r4, #1	@ i.750,
	ldr	r5, [ip, #88]	@ stream_base_addr.771, <variable>.StreamPhyAddr
.L56:
	cmp	r5, r3	@ stream_base_addr.771, stream_base_addr
	movcs	r5, r3	@ stream_base_addr.756, stream_base_addr
	ldr	r3, [ip, #92]	@ stream_base_addr, <variable>.StreamPhyAddr
	add	r4, r4, #1	@ tmp251, i.750,
	add	r1, ip, #44	@ tmp252, ivtmp.751,
	cmp	r3, r5	@ stream_base_addr, stream_base_addr.756
	bcs	.L54	@,
.L102:
	ldr	ip, [ip, #108]	@ <variable>.StreamLength, <variable>.StreamLength
	cmp	ip, #0	@ <variable>.StreamLength,
	beq	.L54	@,
.L55:
	cmp	r4, r2	@ tmp251, temp.770
	beq	.L53	@,
	ldr	ip, [r1, #88]	@ stream_base_addr.771, <variable>.StreamPhyAddr
	cmp	ip, r3	@ stream_base_addr.771, stream_base_addr
	movcs	ip, r3	@ stream_base_addr.756, stream_base_addr
	ldr	r3, [r1, #92]	@ stream_base_addr, <variable>.StreamPhyAddr
	cmp	r3, ip	@ stream_base_addr, stream_base_addr.756
	bcs	.L74	@,
	ldr	r5, [r1, #108]	@ <variable>.StreamLength, <variable>.StreamLength
	cmp	r5, #0	@ <variable>.StreamLength,
	beq	.L74	@,
	add	ip, r1, #44	@ ivtmp.751, tmp252,
	add	r4, r4, #1	@ i.750, tmp251,
	ldr	r5, [ip, #88]	@ stream_base_addr.771, <variable>.StreamPhyAddr
.L103:
	cmp	r5, r3	@ stream_base_addr.771, stream_base_addr
	movcs	r5, r3	@ stream_base_addr.756, stream_base_addr
	ldr	r3, [ip, #92]	@ stream_base_addr, <variable>.StreamPhyAddr
	add	r4, r4, #1	@ tmp251, i.750,
	add	r1, ip, #44	@ tmp252, ivtmp.751,
	cmp	r3, r5	@ stream_base_addr, stream_base_addr.756
	bcc	.L102	@,
.L54:
	mov	r3, r5	@ stream_base_addr, stream_base_addr.756
	b	.L55	@
.L74:
	mov	r3, ip	@ stream_base_addr, stream_base_addr.756
	add	ip, r1, #44	@ ivtmp.751, tmp252,
	add	r4, r4, #1	@ i.750, tmp251,
	ldr	r5, [ip, #88]	@ stream_base_addr.771, <variable>.StreamPhyAddr
	b	.L103	@
.L71:
	mov	r3, r1	@ stream_base_addr, stream_base_addr.756
	b	.L72	@
.L99:
	ldr	r3, [r0, #88]	@ stream_base_addr, <variable>.StreamPhyAddr
.L53:
	cmp	r2, #0	@ temp.770,
	bic	r4, r3, #15	@ prephitmp.676, stream_base_addr,
	str	r4, [r0, #52]	@ prephitmp.676, <variable>.Rv8DecParam.StreamBaseAddr
	beq	.L57	@,
	tst	r2, #1	@ temp.770,
	mov	r3, r0	@ ivtmp.700, pCtx
	mov	r1, #0	@ i.745,
	bne	.L60	@,
	ldr	r3, [r0, #92]	@ <variable>.StreamPhyAddr, <variable>.StreamPhyAddr
	cmp	r3, #0	@ <variable>.StreamPhyAddr,
	beq	.L93	@,
	ldr	r1, [r0, #100]	@ <variable>.StreamBitOffset, <variable>.StreamBitOffset
	ldr	ip, [r0, #96]	@ <variable>.StreamBitOffset, <variable>.StreamBitOffset
	ldr	r7, [r0, #88]	@ <variable>.StreamPhyAddr, <variable>.StreamPhyAddr
	and	r5, r1, #7	@ tmp293, <variable>.StreamBitOffset,
	and	r6, ip, #7	@ tmp283, <variable>.StreamBitOffset,
	add	r3, r3, r1, lsr #3	@, tmp287, <variable>.StreamPhyAddr, <variable>.StreamBitOffset,
	add	ip, r7, ip, lsr #3	@, tmp278, <variable>.StreamPhyAddr, <variable>.StreamBitOffset,
	rsb	r3, r4, r3	@ BytePos1, prephitmp.676, tmp287
	rsb	r4, r4, ip	@ BytePos0.759, prephitmp.676, tmp278
	and	r1, r3, #15	@ tmp291, BytePos1,
	and	ip, r4, #15	@ tmp281, BytePos0.759,
	bic	r4, r4, #15	@ tmp280, BytePos0.759,
	add	r1, r5, r1, asl #3	@, tmp294, tmp293, tmp291,
	str	r4, [r0, #88]	@ tmp280, <variable>.StreamPhyAddr
	add	ip, r6, ip, asl #3	@, tmp284, tmp283, tmp281,
	bic	r5, r3, #15	@ tmp290, BytePos1,
	str	ip, [r0, #96]	@ tmp284, <variable>.StreamBitOffset
	str	r1, [r0, #100]	@ tmp294, <variable>.StreamBitOffset
	str	r5, [r0, #92]	@ tmp290, <variable>.StreamPhyAddr
.L94:
	mov	r1, #1	@ i.745,
	add	r3, r0, #44	@ ivtmp.700, pCtx,
	ldr	r4, [r0, #52]	@ prephitmp.676, <variable>.Rv8DecParam.StreamBaseAddr
	b	.L60	@
.L104:
	ldr	ip, [r3, #96]	@ <variable>.StreamBitOffset, <variable>.StreamBitOffset
	ldr	r6, [r3, #88]	@ <variable>.StreamPhyAddr, <variable>.StreamPhyAddr
	and	r5, ip, #7	@ tmp216, <variable>.StreamBitOffset,
	add	ip, r6, ip, lsr #3	@, tmp211, <variable>.StreamPhyAddr, <variable>.StreamBitOffset,
	rsb	r4, r4, ip	@ BytePos0, prephitmp.676, tmp211
	and	ip, r4, #15	@ tmp214, BytePos0,
	bic	r4, r4, #15	@ tmp213, BytePos0,
	str	r4, [r3, #88]	@ tmp213, <variable>.StreamPhyAddr
	add	ip, r5, ip, asl #3	@, tmp218, tmp216, tmp214,
	str	ip, [r3, #96]	@ tmp218, <variable>.StreamBitOffset
.L59:
	add	r1, r1, #1	@ tmp246, i.745,
	add	r3, r3, #44	@ tmp247, ivtmp.700,
	cmp	r1, r2	@ tmp246, temp.770
	bcs	.L57	@,
	ldr	ip, [r3, #92]	@ <variable>.StreamPhyAddr, <variable>.StreamPhyAddr
	ldr	r4, [r0, #52]	@ prephitmp.676, <variable>.Rv8DecParam.StreamBaseAddr
	cmp	ip, #0	@ <variable>.StreamPhyAddr,
	bne	.L67	@,
	ldr	ip, [r3, #96]	@ <variable>.StreamBitOffset, <variable>.StreamBitOffset
	ldr	r6, [r3, #88]	@ <variable>.StreamPhyAddr, <variable>.StreamPhyAddr
	and	r5, ip, #7	@ tmp333, <variable>.StreamBitOffset,
	add	ip, r6, ip, lsr #3	@, tmp328, <variable>.StreamPhyAddr, <variable>.StreamBitOffset,
	rsb	r4, r4, ip	@ BytePos0, prephitmp.676, tmp328
	and	r6, r4, #15	@ tmp331, BytePos0,
	bic	r4, r4, #15	@ tmp330, BytePos0,
	str	r4, [r3, #88]	@ tmp330, <variable>.StreamPhyAddr
	add	ip, r5, r6, asl #3	@, tmp334, tmp333, tmp331,
	str	ip, [r3, #96]	@ tmp334, <variable>.StreamBitOffset
.L95:
	ldr	r4, [r0, #52]	@ prephitmp.676, <variable>.Rv8DecParam.StreamBaseAddr
	add	r1, r1, #1	@ i.745, tmp246,
	add	r3, r3, #44	@ ivtmp.700, tmp247,
.L60:
	ldr	ip, [r3, #92]	@ <variable>.StreamPhyAddr, <variable>.StreamPhyAddr
	cmp	ip, #0	@ <variable>.StreamPhyAddr,
	beq	.L104	@,
	ldr	r6, [r3, #96]	@ <variable>.StreamBitOffset, <variable>.StreamBitOffset
	ldr	r8, [r3, #88]	@ <variable>.StreamPhyAddr, <variable>.StreamPhyAddr
	and	r7, r6, #7	@ tmp226, <variable>.StreamBitOffset,
	ldr	r5, [r3, #100]	@ <variable>.StreamBitOffset, <variable>.StreamBitOffset
	add	r6, r8, r6, lsr #3	@, tmp221, <variable>.StreamPhyAddr, <variable>.StreamBitOffset,
	rsb	r4, r4, r6	@ BytePos0.759, prephitmp.676, tmp221
	and	r6, r5, #7	@ tmp237, <variable>.StreamBitOffset,
	and	r8, r4, #15	@ tmp224, BytePos0.759,
	bic	r4, r4, #15	@ tmp223, BytePos0.759,
	str	r4, [r3, #88]	@ tmp223, <variable>.StreamPhyAddr
	add	ip, ip, r5, lsr #3	@, tmp231, <variable>.StreamPhyAddr, <variable>.StreamBitOffset,
	add	r7, r7, r8, asl #3	@, tmp228, tmp226, tmp224,
	str	r7, [r3, #96]	@ tmp228, <variable>.StreamBitOffset
	ldr	r4, [r0, #52]	@ <variable>.Rv8DecParam.StreamBaseAddr, <variable>.Rv8DecParam.StreamBaseAddr
	rsb	ip, r4, ip	@ BytePos1, <variable>.Rv8DecParam.StreamBaseAddr, tmp231
	and	r4, ip, #15	@ tmp235, BytePos1,
	bic	ip, ip, #15	@ tmp234, BytePos1,
	str	ip, [r3, #92]	@ tmp234, <variable>.StreamPhyAddr
	add	ip, r6, r4, asl #3	@, tmp239, tmp237, tmp235,
	str	ip, [r3, #100]	@ tmp239, <variable>.StreamBitOffset
	b	.L59	@
.L67:
	ldr	r6, [r3, #96]	@ <variable>.StreamBitOffset, <variable>.StreamBitOffset
	ldr	r8, [r3, #88]	@ <variable>.StreamPhyAddr, <variable>.StreamPhyAddr
	and	r7, r6, #7	@ tmp313, <variable>.StreamBitOffset,
	ldr	r5, [r3, #100]	@ <variable>.StreamBitOffset, <variable>.StreamBitOffset
	add	r6, r8, r6, lsr #3	@, tmp308, <variable>.StreamPhyAddr, <variable>.StreamBitOffset,
	rsb	r4, r4, r6	@ BytePos0.759, prephitmp.676, tmp308
	and	r6, r5, #7	@ tmp323, <variable>.StreamBitOffset,
	and	r8, r4, #15	@ tmp311, BytePos0.759,
	bic	r4, r4, #15	@ tmp310, BytePos0.759,
	str	r4, [r3, #88]	@ tmp310, <variable>.StreamPhyAddr
	add	ip, ip, r5, lsr #3	@, tmp317, <variable>.StreamPhyAddr, <variable>.StreamBitOffset,
	add	r7, r7, r8, asl #3	@, tmp314, tmp313, tmp311,
	str	r7, [r3, #96]	@ tmp314, <variable>.StreamBitOffset
	ldr	r4, [r0, #52]	@ <variable>.Rv8DecParam.StreamBaseAddr, <variable>.Rv8DecParam.StreamBaseAddr
	rsb	ip, r4, ip	@ BytePos1, <variable>.Rv8DecParam.StreamBaseAddr, tmp317
	and	r4, ip, #15	@ tmp321, BytePos1,
	bic	r5, ip, #15	@ tmp320, BytePos1,
	str	r5, [r3, #92]	@ tmp320, <variable>.StreamPhyAddr
	add	ip, r6, r4, asl #3	@, tmp324, tmp323, tmp321,
	str	ip, [r3, #100]	@ tmp324, <variable>.StreamBitOffset
	b	.L95	@
.L57:
	mov	r0, #1	@ D.39273,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L93:
	ldr	r5, [r0, #96]	@ <variable>.StreamBitOffset, <variable>.StreamBitOffset
	ldr	r6, [r0, #88]	@ <variable>.StreamPhyAddr, <variable>.StreamPhyAddr
	and	r1, r5, #7	@ tmp303, <variable>.StreamBitOffset,
	add	r3, r6, r5, lsr #3	@, tmp298, <variable>.StreamPhyAddr, <variable>.StreamBitOffset,
	rsb	ip, r4, r3	@ BytePos0, prephitmp.676, tmp298
	and	r6, ip, #15	@ tmp301, BytePos0,
	bic	r4, ip, #15	@ tmp300, BytePos0,
	str	r4, [r0, #88]	@ tmp300, <variable>.StreamPhyAddr
	add	r5, r1, r6, asl #3	@, tmp304, tmp303, tmp301,
	str	r5, [r0, #96]	@ tmp304, <variable>.StreamBitOffset
	b	.L94	@
	.fnend
	.size	Real8_ModifySliceMsg, .-Real8_ModifySliceMsg
	.align	2
	.global	REAL8DEC_Support
	.type	REAL8DEC_Support, %function
REAL8DEC_Support:
	.fnstart
.LFB1555:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r3, #1	@ tmp134,
	str	r3, [r0, #0]	@ tmp134,* flag
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	REAL8DEC_Support, .-REAL8DEC_Support
	.align	2
	.global	REAL8DEC_GetImageBuffer
	.type	REAL8DEC_GetImageBuffer, %function
REAL8DEC_GetImageBuffer:
	.fnstart
.LFB1554:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:80296	@ tmp138,
	movt	r4, #:upper16:80296	@ tmp138,
	mov	r5, r0	@ pCtx, pCtx
	ldr	r0, [r0, r4]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmp	r0, #1	@ D.39914,
	ldmeqfd	sp, {r4, r5, fp, sp, pc}	@
	ldr	r0, [r5, r4]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmn	r0, #1	@,
	movne	r0, #0	@ D.39917,
	ldmnefd	sp, {r4, r5, fp, sp, pc}	@
	add	r1, r5, #46080	@, pCtx,
	ldr	r0, [r5, r4]	@, <variable>.ChanID
	add	r1, r1, #56	@,,
	bl	FSP_ClearNotInVoQueue	@
	mov	r0, #0	@ D.39917,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	REAL8DEC_GetImageBuffer, .-REAL8DEC_GetImageBuffer
	.align	2
	.global	REAL8DEC_Destroy
	.type	REAL8DEC_Destroy, %function
REAL8DEC_Destroy:
	.fnstart
.LFB1549:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #45984	@ tmp135,
	ldr	r2, [r0, r3]	@ <variable>.CodecInfo.FrmCnt, <variable>.CodecInfo.FrmCnt
	movw	r1, #:lower16:.LC0	@,
	mov	r0, #2	@,
	movt	r1, #:upper16:.LC0	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	REAL8DEC_Destroy, .-REAL8DEC_Destroy
	.align	2
	.global	REAL8DEC_RecycleImage
	.type	REAL8DEC_RecycleImage, %function
REAL8DEC_RecycleImage:
	.fnstart
.LFB1551:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r0, #0	@ pCtx, pCtx
	mov	r6, r1	@ ImgID, ImgID
	moveq	r0, r5	@ D.39806, pCtx
	ldmeqfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	movw	r4, #:lower16:80296	@ tmp138,
	movt	r4, #:upper16:80296	@ tmp138,
	mov	r2, #0	@,
	ldr	r0, [r5, r4]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	ldr	r0, [r5, r4]	@, <variable>.ChanID
	mov	r1, r6	@, ImgID
	bl	FSP_GetFsImagePtr	@
	mov	r0, #1	@ D.39806,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	REAL8DEC_RecycleImage, .-REAL8DEC_RecycleImage
	.align	2
	.global	REAL8DEC_Init
	.type	REAL8DEC_Init, %function
REAL8DEC_Init:
	.fnstart
.LFB1548:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #46480	@ tmp139,
	ldr	r7, [r0, r6]	@ D.39347, <variable>.ImageQue.ResetMagicWord
	mov	r5, r1	@ pstExtraData, pstExtraData
	movw	r1, #:lower16:80304	@,
	movt	r1, #:upper16:80304	@,
	mov	r4, r0	@ pCtx, pCtx
	bl	__memzero	@
	add	r2, r4, #46080	@, pCtx,
	str	r7, [r4, r6]	@ D.39347, <variable>.ImageQue.ResetMagicWord
	add	r0, r2, #56	@,,
	bl	ResetVoQueue	@
	movw	r3, #44916	@ tmp146,
	movw	ip, #44912	@ tmp144,
	str	r5, [r4, #0]	@ pstExtraData, <variable>.pstExtraData
	mov	r0, #15	@ tmp145,
	str	r0, [r4, r3]	@ tmp145, <variable>.CodecInfo.PrevPicMb0QP
	str	r0, [r4, ip]	@ tmp145, <variable>.CodecInfo.PrevPicQP
	movw	r2, #44728	@ tmp158,
	ldr	r1, [r5, #8]	@ <variable>.s32DecMode, <variable>.s32DecMode
	movw	r5, #11370	@ tmp148,
	mov	ip, #1	@ tmp155,
	movw	r3, #44832	@ tmp156,
	strb	ip, [r4, r2]	@ tmp155, <variable>.CodecInfo.PictureHeader.pixel_aspect_ratio
	movw	r2, #44804	@ tmp154,
	strb	r1, [r4, r5]	@ <variable>.s32DecMode, <variable>.CodecInfo.UsedDecMode
	movw	r1, #11372	@ tmp151,
	mov	r5, #0	@ tmp152,
	mov	r0, #8192	@ tmp157,
	strb	r5, [r4, r1]	@ tmp152, <variable>.CodecInfo.Imgbuf_allocated
	str	r0, [r4, r3]	@ tmp157, <variable>.CodecInfo.PictureHeader.m_uTRWrap
	mov	r0, r4	@, pCtx
	str	ip, [r4, r2]	@ tmp155, <variable>.CodecInfo.PictureHeader.Fid
	bl	VCTRL_GetChanIDByCtx	@
	movw	r3, #:lower16:80296	@ tmp161,
	movt	r3, #:upper16:80296	@ tmp161,
	cmn	r0, #1	@ D.39358,
	str	r0, [r4, r3]	@ D.39358, <variable>.ChanID
	movne	r0, r5	@ D.39363, tmp152
	ldmnefd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	mov	r0, r5	@, tmp152
	movw	r1, #:lower16:.LC1	@,
	movt	r1, #:upper16:.LC1	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.39363,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	REAL8DEC_Init, .-REAL8DEC_Init
	.align	2
	.global	Real8_SetImgFormat
	.type	Real8_SetImgFormat, %function
Real8_SetImgFormat:
	.fnstart
.LFB1542:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:80296	@ tmp142,
	movt	r1, #:upper16:80296	@ tmp142,
	mov	r5, r0	@ pCtx, pCtx
	movw	r3, #46092	@ tmp144,
	ldr	r0, [r0, r1]	@, <variable>.ChanID
	ldr	r1, [r5, r3]	@, <variable>.CodecInfo.CurFsID
	bl	FSP_GetFsImagePtr	@
	subs	r4, r0, #0	@ pImg,
	ldmeqfd	sp, {r4, r5, fp, sp, pc}	@
	movw	r1, #44808	@ tmp146,
	ldr	r2, [r5, r1]	@ <variable>.CodecInfo.PictureHeader.PicCodType, <variable>.CodecInfo.PictureHeader.PicCodType
	mov	r1, #0	@ tmp150,
	str	r1, [r4, #148]	@ tmp150, <variable>.is_fld_save
	and	r3, r2, #3	@ D.39152, <variable>.CodecInfo.PictureHeader.PicCodType,
	movw	r2, #44816	@ tmp151,
	orr	lr, r3, #7168	@ tmp148, D.39152,
	str	r3, [r4, #156]	@ D.39152, <variable>.bottom_fld_type
	str	r3, [r4, #152]	@ D.39152, <variable>.top_fld_type
	orr	ip, lr, #32	@ tmp148, tmp148,
	str	ip, [r4, #160]	@ tmp148, <variable>.format
	movw	lr, #44812	@ tmp153,
	ldr	r3, [r5, r2]	@ <variable>.CodecInfo.PictureHeader.pic_width_in_pixel, <variable>.CodecInfo.PictureHeader.pic_width_in_pixel
	str	r3, [r4, #164]	@ <variable>.CodecInfo.PictureHeader.pic_width_in_pixel, <variable>.image_width
	ldr	ip, [r5, lr]	@ <variable>.CodecInfo.PictureHeader.pic_height_in_pixel, <variable>.CodecInfo.PictureHeader.pic_height_in_pixel
	str	ip, [r4, #168]	@ <variable>.CodecInfo.PictureHeader.pic_height_in_pixel, <variable>.image_height
	bl	SetAspectRatio	@
	ldr	r2, [r5, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r0, [r2, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r0, #25	@ <variable>.eCapLevel,
	beq	.L126	@,
.L124:
	mov	r3, #8	@ tmp170,
	mov	r2, #1	@ tmp173,
	mov	r1, #0	@ tmp171,
	str	r3, [r4, #392]	@ tmp170, <variable>.ImageDnr.QP_U
	str	r3, [r4, #384]	@ tmp170, <variable>.ImageDnr.video_standard
	strb	r2, [r4, #377]	@ tmp173, <variable>.ImageDnr.chroma_format_idc
	strb	r1, [r4, #372]	@ tmp171, <variable>.ImageDnr.pic_structure
	strb	r2, [r4, #379]	@ tmp173, <variable>.ImageDnr.use_pic_qp_en
	str	r3, [r4, #388]	@ tmp170, <variable>.ImageDnr.QP_Y
	str	r3, [r4, #396]	@ tmp170, <variable>.ImageDnr.QP_V
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L126:
	ldr	r0, [r4, #168]	@ <variable>.image_height, <variable>.image_height
	ldr	r2, [r4, #192]	@ D.39160, <variable>.image_stride
	add	ip, r0, #15	@ tmp158, <variable>.image_height,
	ldr	r3, [r4, #104]	@ <variable>.luma_phy_addr, <variable>.luma_phy_addr
	ldr	r0, [r4, #32]	@ <variable>.luma_vir_addr, <variable>.luma_vir_addr
	mov	lr, r2, asl #4	@ tmp157, D.39160,
	mov	r1, ip, lsr #4	@ tmp160, tmp158,
	str	r3, [r4, #120]	@ <variable>.luma_phy_addr, <variable>.luma_2d_phy_addr
	add	ip, r3, r2	@ tmp165, <variable>.luma_phy_addr, D.39160
	mul	r1, r1, lr	@ D.39166, tmp160, tmp157
	str	ip, [r4, #96]	@ tmp165, <variable>.btm_luma_phy_addr
	str	r0, [r4, #48]	@ <variable>.luma_vir_addr, <variable>.luma_2d_vir_addr
	str	r3, [r4, #88]	@ <variable>.luma_phy_addr, <variable>.top_luma_phy_addr
	add	lr, r1, r3	@ tmp162, D.39166, <variable>.luma_phy_addr
	add	r1, r0, r1	@ tmp164, <variable>.luma_vir_addr, D.39166
	str	lr, [r4, #108]	@ tmp162, <variable>.chrom_phy_addr
	add	r0, lr, r2	@ tmp166, tmp162, D.39160
	str	r1, [r4, #36]	@ tmp164, <variable>.chrom_vir_addr
	str	r0, [r4, #100]	@ tmp166, <variable>.btm_chrom_phy_addr
	mov	r0, lr	@, tmp162
	str	lr, [r4, #92]	@ tmp162, <variable>.top_chrom_phy_addr
	bl	MEM_Phy2Vir	@
	ldr	ip, [r4, #92]	@ <variable>.top_chrom_phy_addr, <variable>.top_chrom_phy_addr
	str	ip, [r4, #124]	@ <variable>.top_chrom_phy_addr, <variable>.chrom_2d_phy_addr
	str	r0, [r4, #52]	@, <variable>.chrom_2d_vir_addr
	b	.L124	@
	.fnend
	.size	Real8_SetImgFormat, .-Real8_SetImgFormat
	.align	2
	.global	REAL8DEC_VDMPostProc
	.type	REAL8DEC_VDMPostProc, %function
REAL8DEC_VDMPostProc:
	.fnstart
.LFB1553:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pCtx, pCtx
	mov	r5, r1	@ ErrRatio, ErrRatio
	mov	r6, r2	@ Mb0QpInCurrPic, Mb0QpInCurrPic
	mov	r0, #22	@,
	mov	r2, r1	@, ErrRatio
	movw	r1, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC2	@,
	bl	dprint_vfmw	@
	mov	r0, #8	@,
	mov	r1, r4	@, pCtx
	bl	ReleasePacket	@
	movw	r3, #:lower16:80296	@ tmp146,
	movt	r3, #:upper16:80296	@ tmp146,
	movw	r2, #46092	@ tmp148,
	ldr	r1, [r4, r2]	@, <variable>.CodecInfo.CurFsID
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_GetFsImagePtr	@
	cmp	r0, #0	@ pCurImg
	beq	.L129	@,
	movw	lr, #44808	@ tmp151,
	movw	ip, #11373	@ tmp150,
	ldr	r1, [r4, lr]	@ <variable>.CodecInfo.PictureHeader.PicCodType, <variable>.CodecInfo.PictureHeader.PicCodType
	cmp	r1, #2	@ <variable>.CodecInfo.PictureHeader.PicCodType,
	strb	r1, [r4, ip]	@ <variable>.CodecInfo.PictureHeader.PicCodType, <variable>.CodecInfo.LastDecPicCodingType
	andne	r6, r6, #31	@ tmp157, Mb0QpInCurrPic,
	movwne	r1, #44916	@ tmp156,
	strne	r6, [r4, r1]	@ tmp157, <variable>.CodecInfo.PrevPicMb0QP
	cmp	r5, #0	@ ErrRatio,
	movlt	r5, #0	@ iftmp.503,
	blt	.L132	@,
	cmp	r5, #100	@ ErrRatio,
	movge	r5, #100	@ iftmp.503,
.L132:
	str	r5, [r0, #200]	@ iftmp.503, <variable>.error_level
	movw	r1, #:lower16:.LC3	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC3	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pCtx
	bl	Real8_SetImgFormat	@
	movw	r3, #11370	@ tmp159,
	ldrb	r0, [r4, r3]	@ zero_extendqisi2	@ <variable>.CodecInfo.UsedDecMode, <variable>.CodecInfo.UsedDecMode
	cmp	r0, #2	@ <variable>.CodecInfo.UsedDecMode,
	beq	.L135	@,
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [ip, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r2, #1	@ <variable>.s32DecOrderOutput,
	beq	.L135	@,
	movw	r0, #44808	@ tmp165,
	ldr	lr, [r4, r0]	@ <variable>.CodecInfo.PictureHeader.PicCodType, <variable>.CodecInfo.PictureHeader.PicCodType
	cmp	lr, #2	@ <variable>.CodecInfo.PictureHeader.PicCodType,
	beq	.L135	@,
	movw	r2, #11375	@ tmp167,
	movw	lr, #46096	@ tmp174,
	ldrb	r3, [r4, r2]	@ zero_extendqisi2	@ <variable>.CodecInfo.RefNum, <variable>.CodecInfo.RefNum
	cmp	r3, #1	@ <variable>.CodecInfo.RefNum,
	movwhi	r3, #46084	@ tmp169,
	mvnls	r1, #0	@ prephitmp.932,
	ldrhi	r1, [r4, r3]	@ prephitmp.932,
	cmn	r1, #1	@ prephitmp.932,
	str	r1, [r4, lr]	@ prephitmp.932, <variable>.CodecInfo.ToQueFsID
	beq	.L139	@,
.L143:
	movw	r5, #:lower16:80296	@ tmp175,
	movt	r5, #:upper16:80296	@ tmp175,
	movw	r6, #46096	@ tmp177,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_GetFsImagePtr	@
	ldr	r8, [r4, r6]	@ D.39896, <variable>.CodecInfo.ToQueFsID
	mov	r1, r8	@, D.39896
	mov	r7, r0	@ pToQueImg,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_GetRef	@
	mov	r2, r8	@, D.39896
	movw	r1, #:lower16:.LC4	@,
	movt	r1, #:upper16:.LC4	@,
	mov	r3, r0	@ D.39901,
	mov	r0, #12	@,
	bl	dprint_vfmw	@
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	ldr	r1, [r4, r6]	@, <variable>.CodecInfo.ToQueFsID
	mov	r2, #1	@,
	bl	FSP_SetDisplay	@
	add	r3, r4, #46080	@, pCtx,
	ldr	r0, [r4, r5]	@ <variable>.ChanID, <variable>.ChanID
	mov	r1, #8	@,
	add	r3, r3, #56	@,,
	mov	r2, r4	@, pCtx
	str	r7, [sp, #0]	@ pToQueImg,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@,
	bne	.L142	@,
.L139:
	movw	ip, #45984	@ tmp193,
	mov	r0, #1	@ D.39864,
	ldr	r2, [r4, ip]	@ <variable>.CodecInfo.FrmCnt, <variable>.CodecInfo.FrmCnt
	add	r1, r2, r0	@ tmp196, <variable>.CodecInfo.FrmCnt,
	str	r1, [r4, ip]	@ tmp196, <variable>.CodecInfo.FrmCnt
.L129:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L135:
	movw	ip, #46092	@ tmp173,
	movw	lr, #46096	@ tmp174,
	ldr	r1, [r4, ip]	@ prephitmp.932,
	cmn	r1, #1	@ prephitmp.932,
	str	r1, [r4, lr]	@ prephitmp.932, <variable>.CodecInfo.ToQueFsID
	bne	.L143	@,
	b	.L139	@
.L142:
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r2, #0	@,
	ldr	r1, [r4, r6]	@, <variable>.CodecInfo.ToQueFsID
	bl	FSP_SetDisplay	@
	mov	r0, #0	@ D.39864,
	b	.L129	@
	.fnend
	.size	REAL8DEC_VDMPostProc, .-REAL8DEC_VDMPostProc
	.align	2
	.global	REAL8DEC_GetRemainImg
	.type	REAL8DEC_GetRemainImg, %function
REAL8DEC_GetRemainImg:
	.fnstart
.LFB1552:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pCtx, pCtx
	ldr	r0, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r0, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r3, #1	@ <variable>.s32DecOrderOutput,
	beq	.L156	@,
	movw	r6, #:lower16:80296	@ tmp142,
	movt	r6, #:upper16:80296	@ tmp142,
	movw	r7, #46088	@ tmp144,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r4, r7]	@, <variable>.CodecInfo.BwdFsID
	bl	FSP_GetFsImagePtr	@
	subs	r8, r0, #0	@ pImg,
	beq	.L156	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r4, r7]	@, <variable>.CodecInfo.BwdFsID
	bl	FSP_GetDisplay	@
	cmp	r0, #2	@,
	beq	.L154	@,
.L156:
	add	r5, r4, #46080	@ tmp169, pCtx,
	add	r5, r5, #56	@ tmp169, tmp169,
.L145:
	mov	r0, r5	@, tmp169
	bl	GetVoLastImageID	@
.L147:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L154:
	mov	r0, r4	@, pCtx
	add	r5, r4, #46080	@ tmp169, pCtx,
	bl	Real8_SetImgFormat	@
	add	r5, r5, #56	@ tmp169, tmp169,
	mov	r1, #1	@ tmp150,
	str	r1, [r8, #244]	@ tmp150, <variable>.last_frame
	mov	r2, r1	@, tmp150
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r4, r7]	@, <variable>.CodecInfo.BwdFsID
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, r6]	@ <variable>.ChanID, <variable>.ChanID
	mov	r1, #8	@,
	mov	r2, r4	@, pCtx
	mov	r3, r5	@, tmp169
	str	r8, [sp, #0]	@ pImg,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@,
	beq	.L146	@,
	ldr	r1, [r4, r7]	@, <variable>.CodecInfo.BwdFsID
	mov	r2, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	b	.L145	@
.L146:
	ldr	r2, [r8, #200]	@ <variable>.error_level, <variable>.error_level
	cmp	r2, #100	@ <variable>.error_level,
	bhi	.L145	@,
	ldr	ip, [r8, #164]	@ <variable>.image_width, <variable>.image_width
	cmp	ip, #31	@ <variable>.image_width,
	bls	.L145	@,
	ldr	lr, [r8, #168]	@ <variable>.image_height, <variable>.image_height
	cmp	lr, #31	@ <variable>.image_height,
	movhi	r0, #0	@ ret,
	bhi	.L147	@,
	b	.L145	@
	.fnend
	.size	REAL8DEC_GetRemainImg, .-REAL8DEC_GetRemainImg
	.align	2
	.global	Real8_CB_FindNextSliceStartCode
	.type	Real8_CB_FindNextSliceStartCode, %function
Real8_CB_FindNextSliceStartCode:
	.fnstart
.LFB1536:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pBs, pBs
	bl	BsToNextByte	@
	mov	r0, r4	@, pBs
	bl	BsResidBits	@
	add	r7, r0, #7	@ tmp142, D.38845,
	cmp	r0, #0	@ D.38845,
	movlt	r0, r7	@ D.38845, tmp142
	mov	r7, r0, asr #3	@ tmp143, D.38845,
	sub	r6, r7, #2	@ RemainByte, tmp143,
	cmp	r6, #0	@ RemainByte,
	ble	.L158	@,
	sub	r2, r7, #3	@ tmp147, tmp143,
	mov	r0, r4	@, pBs
	mov	r1, #17	@,
	and	r7, r2, #1	@ tmp149, tmp147,
	bl	BsShow	@
	cmp	r0, #1	@ D.38847,
	mov	r3, r0	@ D.38847,
	beq	.L172	@,
	mov	r0, r4	@, pBs
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r5, #1	@ i,
	cmp	r6, r5	@ RemainByte, i
	ble	.L158	@,
	cmp	r7, #0	@ tmp149,
	beq	.L161	@,
	mov	r0, r4	@, pBs
	mov	r1, #17	@,
	bl	BsShow	@
	cmp	r0, r5	@ D.38847,
	mov	r3, r0	@ D.38847,
	beq	.L172	@,
	mov	r0, r4	@, pBs
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r5, #2	@ i,
	cmp	r6, r5	@ RemainByte, i
	bgt	.L161	@,
	b	.L158	@
.L159:
	bl	BsSkip	@
	mov	r1, #17	@,
	mov	r0, r4	@, pBs
	bl	BsShow	@
	mov	r1, #8	@,
	mov	r3, r0	@ D.38847,
	cmp	r3, #1	@ D.38847,
	mov	r0, r4	@, pBs
	beq	.L172	@,
	bl	BsSkip	@
	cmp	r6, r5	@ RemainByte, i
	ble	.L158	@,
.L161:
	mov	r1, #17	@,
	mov	r0, r4	@, pBs
	bl	BsShow	@
	add	r5, r5, #1	@ tmp150, i,
	mov	r1, #8	@,
	add	r5, r5, #1	@ i, tmp150,
	mov	r3, r0	@ D.38847,
	cmp	r3, #1	@ D.38847,
	mov	r0, r4	@, pBs
	bne	.L159	@,
.L172:
	mov	r0, r3	@ D.38850, D.38847
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L158:
	mov	r0, #0	@ D.38850,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	Real8_CB_FindNextSliceStartCode, .-Real8_CB_FindNextSliceStartCode
	.align	2
	.global	Real8_CB_GetSSC
	.type	Real8_CB_GetSSC, %function
Real8_CB_GetSSC:
	.fnstart
.LFB1539:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r1, #76]	@ <variable>.Fid, <variable>.Fid
	cmp	r3, #1	@ <variable>.Fid,
	moveq	r0, #0	@ D.38900,
	ldmeqfd	sp, {fp, sp, pc}	@
	bl	Real8_CB_FindNextSliceStartCode	@
	subs	r0, r0, #0	@ D.38900,,
	movne	r0, #1	@ D.38900
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	Real8_CB_GetSSC, .-Real8_CB_GetSSC
	.align	2
	.global	Real8_CB_GetVLCBits
	.type	Real8_CB_GetVLCBits, %function
Real8_CB_GetVLCBits:
	.fnstart
.LFB1530:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, #0	@ length,
	movw	r7, #:lower16:.LANCHOR0	@ tmp150,
	movt	r7, #:upper16:.LANCHOR0	@ tmp150,
	mov	r6, r0	@ pBs, pBs
	mov	r8, r1	@ pInfo, pInfo
	mov	r5, r4	@ info, length
.L178:
	mov	r1, #8	@,
	mov	r0, r6	@, pBs
	bl	BsShow	@
	add	r1, r0, r7	@ tmp144,, tmp150
	mov	r0, r6	@, pBs
	ldrb	ip, [r1, #60]	@ zero_extendqisi2	@ lengthAndInfo, gs_VLCDecodeTable
	and	r2, ip, #15	@ tmp147, lengthAndInfo,
	mov	r1, ip, lsr #4	@ thisChunksLength, lengthAndInfo,
	mov	r3, ip, lsr #5	@ tmp146, lengthAndInfo,
	add	r4, r4, r1	@ length, length, thisChunksLength
	orr	r5, r2, r5, asl r3	@, info, tmp147, info,
	bl	BsSkip	@
	tst	r4, #1	@ length,
	beq	.L178	@,
	str	r5, [r8, #0]	@ info,* pInfo
	mov	r0, r4	@, length
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	Real8_CB_GetVLCBits, .-Real8_CB_GetVLCBits
	.align	2
	.global	Real8_CB_Get1Bit
	.type	Real8_CB_Get1Bit, %function
Real8_CB_Get1Bit:
	.fnstart
.LFB1529:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r1, #1	@,
	mov	r5, r0	@ pBs, pBs
	bl	BsShow	@
	mov	r1, #1	@,
	mov	r4, r0	@ D.38585,
	mov	r0, r5	@, pBs
	bl	BsSkip	@
	mov	r0, r4	@, D.38585
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	Real8_CB_Get1Bit, .-Real8_CB_Get1Bit
	.align	2
	.global	Real8_CB_GetBits
	.type	Real8_CB_GetBits, %function
Real8_CB_GetBits:
	.fnstart
.LFB1528:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pBs, pBs
	mov	r5, r1	@ nBits, nBits
	bl	BsShow	@
	mov	r1, r5	@, nBits
	mov	r4, r0	@ D.38579,
	mov	r0, r6	@, pBs
	bl	BsSkip	@
	mov	r0, r4	@, D.38579
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	Real8_CB_GetBits, .-Real8_CB_GetBits
	.align	2
	.global	Real8_CB_GetSliceHeader
	.type	Real8_CB_GetSliceHeader, %function
Real8_CB_GetSliceHeader:
	.fnstart
.LFB1540:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [fp, #8]	@ pPictureHeader, pPictureHeader
	mov	r8, r3	@ iSliceGFID, iSliceGFID
	mov	r5, r2	@ iSliceMBA, iSliceMBA
	mov	r7, r0	@ pBs, pBs
	ldr	r6, [fp, #4]	@ iSQUANT, iSQUANT
	ldr	r3, [r4, #76]	@ <variable>.Fid, <variable>.Fid
	cmp	r3, #1	@ <variable>.Fid,
	beq	.L205	@,
	cmp	r1, #0	@ bFirstSlice,
	beq	.L206	@,
	mov	r3, #1	@ D.38927,
	mov	r0, #0	@ tmp195,
	str	r0, [r2, #0]	@ tmp195,* iSliceMBA
	mvn	r2, #0	@ tmp196,
	str	r2, [r6, #0]	@ tmp196,* iSQUANT
.L198:
	mov	r0, r3	@, D.38927
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L205:
	cmp	r1, #0	@ bFirstSlice,
	bne	.L187	@,
	mov	r1, #3	@,
	ldr	sl, [r4, #40]	@ D.38918, <variable>.Rv8ParsePicParam.mba
	bl	Real8_CB_GetBits	@
	cmp	r0, #7	@ versionEncoding,
	bhi	.L188	@,
	movw	r2, #:lower16:.LANCHOR0	@ tmp171,
	movt	r2, #:upper16:.LANCHOR0	@ tmp171,
	add	r0, r2, r0, asl #2	@, tmp174, tmp171, versionEncoding,
	ldr	r1, [r0, #316]	@ tmp176, s_RVVersionEncodingToMinorVersion
	cmp	r1, #2	@ tmp176,
	bhi	.L188	@,
	cmn	sl, #1	@ D.38918,
	movne	sl, #0	@, D.40647
	moveq	sl, #1	@, D.40647
	cmp	sl, #0	@ D.40647,
	bne	.L207	@,
	mov	r0, r7	@, pBs
	mov	r1, #2	@,
	bl	Real8_CB_GetBits	@
	ldr	ip, [r4, #36]	@ <variable>.Rv8ParsePicParam.ptype, <variable>.Rv8ParsePicParam.ptype
	cmp	r0, ip	@, <variable>.Rv8ParsePicParam.ptype
	bne	.L188	@,
.L190:
	mov	r0, r7	@, pBs
	bl	Real8_CB_Get1Bit	@
	cmp	r0, #0	@,
	bne	.L188	@,
	mov	r0, r7	@, pBs
	mov	r1, #5	@,
	bl	Real8_CB_GetBits	@
	uxtb	r3, r0	@ D.38940,
	strb	r3, [r4, #6]	@ D.38940, <variable>.Rv8ParsePicParam.pquant
	cmp	r3, #31	@ D.38940,
	bhi	.L188	@,
	mov	r1, #1	@,
	mov	r0, r7	@, pBs
	bl	Real8_CB_GetBits	@
	subs	r1, r0, #0	@ tmp180,,
	movne	r1, #1	@ tmp180
	cmp	sl, #0	@ D.40647,
	strb	r1, [r4, #5]	@ tmp180, <variable>.Rv8ParsePicParam.deblocking_filter_passthrough
	beq	.L191	@,
	mov	r0, r7	@, pBs
	mov	r1, #13	@,
	bl	Real8_CB_GetBits	@
	str	r0, [r4, #44]	@, <variable>.Rv8ParsePicParam.tr
.L192:
	ldr	r1, [r4, #8]	@ D.38954, <variable>.Rv8ParsePicParam.m_pctszSize
	cmp	r1, #0	@ D.38954,
	beq	.L193	@,
	cmp	sl, #0	@ D.40647,
	beq	.L194	@,
	mov	r0, r7	@, pBs
	bl	Real8_CB_GetBits	@
	ldr	r3, [r4, #12]	@ D.38960, <variable>.Rv8ParsePicParam.m_pSizes
	cmp	r3, #0	@ D.38960,
	str	r0, [r4, #56]	@ D.38959, <variable>.Rv8ParsePicParam.pctsz
	beq	.L188	@,
	add	r1, r3, r0, asl #3	@, tmp184, D.38960, D.38959,
	ldr	ip, [r3, r0, asl #3]	@ width,* D.38960
	mov	r0, r4	@, pPictureHeader
	ldr	lr, [r1, #4]	@ height,
	str	ip, [r4, #88]	@ width, <variable>.pic_width_in_pixel
	str	ip, [r4, #60]	@ width, <variable>.Rv8ParsePicParam.pwidth
	str	lr, [r4, #84]	@ height, <variable>.pic_height_in_pixel
	str	lr, [r4, #64]	@ height, <variable>.Rv8ParsePicParam.pheight
	bl	Real8_CB_SetDimensions	@
	mov	r0, r7	@, pBs
	ldr	r1, [r4, #32]	@, <variable>.Rv8ParsePicParam.m_mbaSize
	bl	Real8_CB_GetBits	@
	str	r0, [r4, #40]	@, <variable>.Rv8ParsePicParam.mba
.L195:
	mov	r0, r7	@, pBs
	mov	r1, #1	@,
	bl	Real8_CB_GetBits	@
	strb	r0, [r4, #4]	@, <variable>.Rv8ParsePicParam.rtype
.L187:
	ldr	r1, [r4, #40]	@ <variable>.Rv8ParsePicParam.mba, <variable>.Rv8ParsePicParam.mba
	mov	r3, #1	@ D.38927,
	mov	r0, #0	@ tmp192,
	str	r1, [r5, #0]	@ <variable>.Rv8ParsePicParam.mba,* iSliceMBA
	ldrb	ip, [r4, #6]	@ zero_extendqisi2	@ <variable>.Rv8ParsePicParam.pquant, <variable>.Rv8ParsePicParam.pquant
	str	ip, [r6, #0]	@ <variable>.Rv8ParsePicParam.pquant,* iSQUANT
	str	r0, [r8, #0]	@ tmp192,* iSliceGFID
	mov	r0, r3	@, D.38927
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L206:
	bl	Real8_CB_Get1Bit	@
	cmp	r0, #1	@,
	beq	.L208	@,
.L188:
	mov	r3, #0	@ D.38927,
.L209:
	mov	r0, r3	@, D.38927
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L208:
	mov	r0, r7	@, pBs
	ldr	r1, [r4, #32]	@, <variable>.Rv8ParsePicParam.m_mbaSize
	bl	Real8_CB_GetBits	@
	str	r0, [r5, #0]	@,* iSliceMBA
	ldr	r3, [r4, #32]	@ <variable>.Rv8ParsePicParam.m_mbaSize, <variable>.Rv8ParsePicParam.m_mbaSize
	cmp	r3, #11	@ <variable>.Rv8ParsePicParam.m_mbaSize,
	bls	.L200	@,
	mov	r0, r7	@, pBs
	bl	Real8_CB_Get1Bit	@
	cmp	r0, #1	@,
	bne	.L188	@,
.L200:
	mov	r0, r7	@, pBs
	mov	r1, #5	@,
	bl	Real8_CB_GetBits	@
	cmp	r0, #31	@ D.39002,
	str	r0, [r6, #0]	@ D.39002,* iSQUANT
	bgt	.L188	@,
	mov	r0, r7	@, pBs
	bl	Real8_CB_Get1Bit	@
	cmp	r0, #1	@ D.39007,
	mov	r4, r0	@ D.39007,
	bne	.L188	@,
	mov	r0, r7	@, pBs
	mov	r1, #2	@,
	bl	Real8_CB_GetBits	@
	mov	r3, r4	@ D.38927, D.39007
	str	r0, [r8, #0]	@,* iSliceGFID
	b	.L198	@
.L207:
	mov	r0, r7	@, pBs
	mov	r1, #2	@,
	bl	Real8_CB_GetBits	@
	str	r0, [r4, #36]	@, <variable>.Rv8ParsePicParam.ptype
	b	.L190	@
.L191:
	mov	r0, r7	@, pBs
	mov	r1, #13	@,
	bl	Real8_CB_GetBits	@
	ldr	r2, [r4, #44]	@ <variable>.Rv8ParsePicParam.tr, <variable>.Rv8ParsePicParam.tr
	cmp	r0, r2	@, <variable>.Rv8ParsePicParam.tr
	beq	.L192	@,
	mov	r3, #0	@ D.38927,
	b	.L209	@
.L194:
	mov	r0, r7	@, pBs
	bl	Real8_CB_GetBits	@
	ldr	r3, [r4, #56]	@ <variable>.Rv8ParsePicParam.pctsz, <variable>.Rv8ParsePicParam.pctsz
	cmp	r0, r3	@, <variable>.Rv8ParsePicParam.pctsz
	bne	.L188	@,
	mov	r0, r7	@, pBs
	ldr	r1, [r4, #32]	@, <variable>.Rv8ParsePicParam.m_mbaSize
	bl	Real8_CB_GetBits	@
	str	r0, [r4, #40]	@, <variable>.Rv8ParsePicParam.mba
.L197:
	mov	r0, r7	@, pBs
	mov	r1, #1	@,
	bl	Real8_CB_GetBits	@
	ldrb	r2, [r4, #4]	@ zero_extendqisi2	@ <variable>.Rv8ParsePicParam.rtype, <variable>.Rv8ParsePicParam.rtype
	cmp	r0, r2	@, <variable>.Rv8ParsePicParam.rtype
	beq	.L187	@,
	mov	r3, #0	@ D.38927,
	b	.L209	@
.L193:
	mov	r0, r7	@, pBs
	ldr	r1, [r4, #32]	@, <variable>.Rv8ParsePicParam.m_mbaSize
	bl	Real8_CB_GetBits	@
	cmp	sl, #0	@ D.40647,
	str	r0, [r4, #40]	@, <variable>.Rv8ParsePicParam.mba
	beq	.L197	@,
	b	.L195	@
	.fnend
	.size	Real8_CB_GetSliceHeader, .-Real8_CB_GetSliceHeader
	.align	2
	.global	Real8_CB_SearchBits_IgnoreOnly0
	.type	Real8_CB_SearchBits_IgnoreOnly0, %function
Real8_CB_SearchBits_IgnoreOnly0:
	.fnstart
.LFB1537:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r3	@ lookahead, lookahead
	mov	r4, r2	@ code, code
	mov	r6, r0	@ pBs, pBs
	mov	r7, r1	@ nbits, nbits
	bl	Real8_CB_GetBits	@
	cmp	r0, r4	@ w, code
	cmpne	r5, #0	@, lookahead,
	mov	r3, r0	@ w,
	beq	.L211	@,
	sub	r2, r7, #1	@ tmp152, nbits,
	mov	sl, #1	@ tmp153,
	mov	sl, sl, asl r2	@ msb, tmp153,
	ands	r8, r0, sl	@ tmp154, w, msb
	bne	.L212	@,
	movw	r0, #:lower16:.LANCHOR0	@ tmp155,
	movt	r0, #:upper16:.LANCHOR0	@ tmp155,
	add	r7, r0, r7, asl #2	@, tmp158, tmp155, nbits,
	ldr	r9, [r7, #348]	@ pretmp.1146, GetBitsMask
	b	.L213	@
.L214:
	tst	r3, sl	@ w, msb
	bne	.L212	@,
.L213:
	mov	r0, r6	@, pBs
	and	r7, r9, r3, asl #1	@, D.38872, pretmp.1146, w,
	bl	Real8_CB_Get1Bit	@
	add	r8, r8, #1	@ n, n,
	orr	r3, r7, r0	@ w, D.38872,
	cmp	r4, r3	@ code, w
	cmpne	r5, r8	@, lookahead, n
	bhi	.L214	@,
.L211:
	cmp	r4, r3	@ code, w
	movne	r0, #0	@, D.38879
	moveq	r0, #1	@, D.38879
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L212:
	mov	r0, #0	@ D.38879,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	Real8_CB_SearchBits_IgnoreOnly0, .-Real8_CB_SearchBits_IgnoreOnly0
	.align	2
	.global	Real8_CB_GetPicSize
	.type	Real8_CB_GetPicSize, %function
Real8_CB_GetPicSize:
	.fnstart
.LFB1535:
	@ args = 0, pretend = 0, frame = 88
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #92
	sub	sp, sp, #92	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r8, .L233	@ tmp149,
	mov	r5, r1	@ pRv8ParsePicParam, pRv8ParsePicParam
	str	r2, [fp, #-128]	@ width, %sfp
	str	r3, [fp, #-132]	@ height, %sfp
	mov	r4, r0	@ pBs, pBs
	mov	ip, r8	@ tmp177, tmp149
	sub	lr, fp, #92	@ tmp148,,
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp177,,,,
	mov	r6, lr	@ tmp178, tmp148
	sub	r9, fp, #124	@ tmp151,,
	add	r8, r8, #64	@ tmp155, tmp149,
	sub	sl, fp, #60	@ tmp154,,
	add	r7, ip, #16	@ tmp152, tmp177,
	stmia	r6!, {r0, r1, r2, r3}	@ tmp178,,,,
	ldmia	ip, {r0, r1, r2, r3}	@ tmp177,,,,
	mov	ip, r9	@ tmp180, tmp151
	stmia	r6, {r0, r1, r2, r3}	@ tmp178,,,,
	ldmia	r7!, {r0, r1, r2, r3}	@ tmp179,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ tmp180,,,,
	ldmia	r7, {r0, r1, r2, r3}	@ tmp179,,,,
	stmia	ip, {r0, r1, r2, r3}	@ tmp180,,,,
	ldmia	r8, {r0, r1, r2, r3}	@ tmp155,,,,
	stmia	sl, {r0, r1, r2, r3}	@ tmp154,,,,
	ldr	r0, [r5, #32]	@ <variable>.ptype, <variable>.ptype
	sub	r3, r0, #2	@ tmp156, <variable>.ptype,
	cmp	r3, #1	@ tmp156,
	bls	.L231	@,
.L218:
	mov	r0, r4	@, pBs
	mov	r1, #3	@,
	bl	Real8_CB_GetBits	@
	sub	r5, fp, #44	@,,
	add	r6, r5, r0, asl #2	@, tmp162,,,
	ldr	r5, [r6, #-48]	@ w, code_width
	cmp	r5, #0	@ w,
	beq	.L226	@,
.L220:
	mov	r0, r4	@, pBs
	mov	r1, #3	@,
	bl	Real8_CB_GetBits	@
	sub	r2, fp, #44	@,,
	add	ip, r2, r0, asl #2	@, tmp167,, code.1189,
	mov	r3, r0	@ code.1189,
	ldr	r6, [ip, #-80]	@ h, code_height1
	cmp	r6, #0	@ h,
	beq	.L232	@,
.L222:
	ldr	ip, [fp, #-128]	@, %sfp
	str	r5, [ip, #0]	@ w,
	ldr	lr, [fp, #-132]	@, %sfp
	str	r6, [lr, #0]	@ h,
.L224:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L226:
	mov	r0, r4	@, pBs
	mov	r1, #8	@,
	bl	Real8_CB_GetBits	@
	cmp	r0, #255	@ code.1188,
	add	r5, r5, r0, asl #2	@, w, w, code.1188,
	bne	.L220	@,
	mov	r0, r4	@, pBs
	mov	r1, #8	@,
	bl	Real8_CB_GetBits	@
	cmp	r0, #255	@ code.1188,
	add	r5, r5, r0, asl #2	@, w, w, code.1188,
	beq	.L226	@,
	b	.L220	@
.L231:
	mov	r0, r4	@, pBs
	bl	Real8_CB_Get1Bit	@
	cmp	r0, #0	@,
	beq	.L218	@,
	ldr	r3, [r5, #64]	@ <variable>.pwidth_prev, <variable>.pwidth_prev
	ldr	r0, [fp, #-128]	@, %sfp
	str	r3, [r0, #0]	@ <variable>.pwidth_prev,
	ldr	r2, [fp, #-132]	@, %sfp
	ldr	r1, [r5, #68]	@ <variable>.pheight_prev, <variable>.pheight_prev
	str	r1, [r2, #0]	@ <variable>.pheight_prev,
	b	.L224	@
.L232:
	mov	r0, r4	@, pBs
	mov	r6, r3, asl #1	@ code.1190, code.1189,
	bl	Real8_CB_Get1Bit	@
	sub	r3, fp, #44	@,,
	orr	r6, r0, r6	@ code.1191,, code.1190
	and	r0, r6, #3	@ tmp169, code.1191,
	add	r1, r3, r0, asl #2	@, tmp172,, tmp169,
	ldr	r6, [r1, #-16]	@ h, code_height2
	cmp	r6, #0	@ h,
	bne	.L222	@,
.L225:
	mov	r0, r4	@, pBs
	mov	r1, #8	@,
	bl	Real8_CB_GetBits	@
	cmp	r0, #255	@ code.1193,
	add	r6, r6, r0, asl #2	@, h, h, code.1193,
	bne	.L222	@,
	mov	r0, r4	@, pBs
	mov	r1, #8	@,
	bl	Real8_CB_GetBits	@
	cmp	r0, #255	@ code.1193,
	add	r6, r6, r0, asl #2	@, h, h, code.1193,
	beq	.L225	@,
	b	.L222	@
.L234:
	.align	2
.L233:
	.word	.LANCHOR0+448
	.fnend
	.size	Real8_CB_GetPicSize, .-Real8_CB_GetPicSize
	.align	2
	.global	Real8_CB_GetCPFMT
	.type	Real8_CB_GetCPFMT, %function
Real8_CB_GetCPFMT:
	.fnstart
.LFB1533:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r1	@ pPictureHeader, pPictureHeader
	mov	r1, #4	@,
	mov	r5, r0	@ pBs, pBs
	bl	Real8_CB_GetBits	@
	mov	r1, #9	@,
	strb	r0, [r4, #0]	@, <variable>.pixel_aspect_ratio
	mov	r0, r5	@, pBs
	bl	Real8_CB_GetBits	@
	add	r1, r0, #1	@ tmp142,,
	mov	r0, r5	@, pBs
	mov	r3, r1, asl #2	@ tmp143, tmp142,
	str	r3, [r4, #88]	@ tmp143, <variable>.pic_width_in_pixel
	bl	Real8_CB_Get1Bit	@
	cmp	r0, #1	@ D.38744,
	mov	r6, r0	@ D.38744,
	movne	r6, #0	@ D.38747,
	beq	.L239	@,
	mov	r0, r6	@, D.38747
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L239:
	mov	r0, r5	@, pBs
	mov	r1, #9	@,
	bl	Real8_CB_GetBits	@
	mov	r0, r0, asl #2	@ tmp144,,
	str	r0, [r4, #84]	@ tmp144, <variable>.pic_height_in_pixel
	mov	r0, r6	@, D.38747
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	Real8_CB_GetCPFMT, .-Real8_CB_GetCPFMT
	.align	2
	.global	Real8_CB_GetPictureHeader
	.type	Real8_CB_GetPictureHeader, %function
Real8_CB_GetPictureHeader:
	.fnstart
.LFB1541:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r1, #76]	@ <variable>.Fid, <variable>.Fid
	mov	r4, r1	@ pPictureHeader, pPictureHeader
	mov	r5, r0	@ pBs, pBs
	cmp	r3, #1	@ <variable>.Fid,
	bne	.L241	@,
	mvn	r1, #0	@ tmp147,
	sub	r2, fp, #36	@,,
	str	r1, [r4, #40]	@ tmp147, <variable>.Rv8ParsePicParam.mba
	sub	r3, fp, #32	@,,
	mov	r1, #0	@,
	sub	ip, fp, #40	@ tmp150,,
	str	r4, [sp, #4]	@ pPictureHeader,
	str	ip, [sp, #0]	@ tmp150,
	bl	Real8_CB_GetSliceHeader	@
	cmp	r0, #1	@,
	mvnne	r0, #1	@ Status,
	beq	.L261	@,
.L243:
	ldr	lr, [r4, #88]	@ <variable>.pic_width_in_pixel, <variable>.pic_width_in_pixel
	ldr	r3, [r4, #84]	@ <variable>.pic_height_in_pixel, <variable>.pic_height_in_pixel
	add	ip, lr, #15	@ tmp194, <variable>.pic_width_in_pixel,
	add	r1, r3, #15	@ tmp196, <variable>.pic_height_in_pixel,
	mov	r2, ip, lsr #4	@ D.39107, tmp194,
	str	r2, [r4, #96]	@ D.39107, <variable>.pic_width_in_mb
	mov	lr, r1, lsr #4	@ D.39109, tmp196,
	str	lr, [r4, #92]	@ D.39109, <variable>.pic_height_in_mb
	mul	ip, r2, lr	@ tmp198, D.39107, D.39109
	str	ip, [r4, #100]	@ tmp198, <variable>.total_mbs
.L257:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L241:
	mov	r1, #140	@,
	mov	r0, r4	@, pPictureHeader
	bl	__memzero	@
	mov	r0, r5	@, pBs
	mov	r1, #24	@,
	bl	Real8_CB_GetBits	@
	cmp	r0, #1	@,
	beq	.L262	@,
.L250:
	mvn	r0, #1	@ Status,
	b	.L257	@
.L262:
	sub	r6, fp, #44	@ tmp200,,
	mov	r0, r5	@, pBs
	mov	r1, r6	@, tmp200
	bl	Real8_CB_GetVLCBits	@
	cmp	r0, #30	@,
	bls	.L250	@,
	ldr	r3, [fp, #-44]	@ info, info
	ands	r2, r3, #1	@ tmp171, info,
	bne	.L250	@,
	tst	r3, #2	@ info,
	ubfx	r0, r3, #7, #8	@ tmp182, info,,
	strne	r2, [r4, #84]	@ tmp171, <variable>.pic_height_in_pixel
	ubfx	r3, r3, #2, #5	@ tmp179, info,,
	moveq	r2, #176	@ tmp173,
	strne	r2, [r4, #88]	@ tmp171, <variable>.pic_width_in_pixel
	streq	r2, [r4, #88]	@ tmp173, <variable>.pic_width_in_pixel
	mov	r1, r6	@, tmp200
	moveq	r2, #144	@ tmp174,
	str	r0, [r4, #108]	@ tmp182, <variable>.TR
	streq	r2, [r4, #84]	@ tmp174, <variable>.pic_height_in_pixel
	mov	r0, r5	@, pBs
	str	r3, [r4, #120]	@ tmp179, <variable>.PQUANT
	bl	Real8_CB_GetVLCBits	@
	cmp	r0, #1	@ length.1251,
	streq	r0, [r4, #80]	@ length.1251, <variable>.PicCodType
	beq	.L254	@,
	cmp	r0, #3	@ length.1251,
	bne	.L255	@,
	ldr	ip, [fp, #-44]	@ info, info
	cmp	ip, #1	@ info,
	moveq	ip, #0	@ tmp186,
	streq	ip, [r4, #80]	@ tmp186, <variable>.PicCodType
	bne	.L250	@,
.L254:
	ldr	r3, [r4, #88]	@ prephitmp.1238, <variable>.pic_width_in_pixel
	cmp	r3, #0	@ prephitmp.1238,
	beq	.L263	@,
.L256:
	sub	r1, r3, #48	@ tmp189, prephitmp.1238,
	movw	r2, #8144	@ tmp190,
	cmp	r1, r2	@ tmp189, tmp190
	bhi	.L250	@,
	ldr	r0, [r4, #84]	@ <variable>.pic_height_in_pixel, <variable>.pic_height_in_pixel
	sub	r3, r0, #48	@ tmp191, <variable>.pic_height_in_pixel,
	cmp	r3, r2	@ tmp191, tmp190
	bhi	.L250	@,
.L259:
	mov	r0, r4	@, pPictureHeader
	bl	Real8_CB_SetDimensions	@
	mov	r0, #1	@ Status,
	b	.L243	@
.L261:
	ldr	r0, [r4, #36]	@ <variable>.Rv8ParsePicParam.ptype, <variable>.Rv8ParsePicParam.ptype
	cmp	r0, #3	@ <variable>.Rv8ParsePicParam.ptype,
	ldrls	pc, [pc, r0, asl #2]	@ <variable>.Rv8ParsePicParam.ptype
	b	.L244	@
.L249:
	.word	.L245
	.word	.L246
	.word	.L247
	.word	.L248
.L248:
	mov	r3, #2	@ tmp157,
	str	r3, [r4, #80]	@ tmp157, <variable>.PicCodType
.L244:
	ldr	r5, [r4, #88]	@ <variable>.pic_width_in_pixel, <variable>.pic_width_in_pixel
	movw	r3, #8144	@ tmp166,
	ldrb	r6, [r4, #4]	@ zero_extendqisi2	@ <variable>.Rv8ParsePicParam.rtype, <variable>.Rv8ParsePicParam.rtype
	sub	lr, r5, #48	@ tmp164, <variable>.pic_width_in_pixel,
	ldrb	ip, [r4, #6]	@ zero_extendqisi2	@ <variable>.Rv8ParsePicParam.pquant, <variable>.Rv8ParsePicParam.pquant
	ldrb	r5, [r4, #5]	@ zero_extendqisi2	@ <variable>.Rv8ParsePicParam.deblocking_filter_passthrough, <variable>.Rv8ParsePicParam.deblocking_filter_passthrough
	cmp	lr, r3	@ tmp164, tmp166
	add	r0, r4, #44
	ldmia	r0, {r0, r1, r2}	@ phole ldm
	str	r6, [r4, #112]	@ <variable>.Rv8ParsePicParam.rtype, <variable>.Rounding
	str	r5, [r4, #116]	@ <variable>.Rv8ParsePicParam.deblocking_filter_passthrough, <variable>.Deblocking_Filter_Passthrough
	str	ip, [r4, #120]	@ <variable>.Rv8ParsePicParam.pquant, <variable>.PQUANT
	str	r0, [r4, #108]	@ <variable>.Rv8ParsePicParam.tr, <variable>.TR
	str	r1, [r4, #128]	@ <variable>.Rv8ParsePicParam.trb, <variable>.TRB
	str	r2, [r4, #132]	@ <variable>.Rv8ParsePicParam.dbq, <variable>.DBQUANT
	bhi	.L250	@,
	ldr	r1, [r4, #84]	@ <variable>.pic_height_in_pixel, <variable>.pic_height_in_pixel
	sub	r2, r1, #48	@ tmp167, <variable>.pic_height_in_pixel,
	cmp	r2, r3	@ tmp167, tmp166
	bls	.L259	@,
	mvn	r0, #1	@ Status,
	b	.L257	@
.L247:
	mov	lr, #1	@ tmp156,
	str	lr, [r4, #80]	@ tmp156, <variable>.PicCodType
	b	.L244	@
.L246:
	mov	r6, #0	@ tmp154,
	str	r6, [r4, #20]	@ tmp154, <variable>.Rv8ParsePicParam.m_isForcedKey
	str	r6, [r4, #80]	@ tmp154, <variable>.PicCodType
	b	.L244	@
.L245:
	mov	r5, #0	@ tmp152,
	mov	r2, #1	@ tmp153,
	str	r5, [r4, #80]	@ tmp152, <variable>.PicCodType
	str	r2, [r4, #20]	@ tmp153, <variable>.Rv8ParsePicParam.m_isForcedKey
	b	.L244	@
.L255:
	cmp	r0, #5	@ length.1251,
	bne	.L250	@,
	ldr	r3, [fp, #-44]	@ info, info
	cmp	r3, #0	@ info,
	bne	.L250	@,
	add	lr, r3, #2	@ tmp188, tmp188,
	str	lr, [r4, #80]	@ tmp188, <variable>.PicCodType
	b	.L254	@
.L263:
	mov	r0, r5	@, pBs
	mov	r1, r4	@, pPictureHeader
	bl	Real8_CB_GetCPFMT	@
	cmp	r0, #0	@,
	beq	.L250	@,
	ldr	r3, [r4, #88]	@ prephitmp.1238, <variable>.pic_width_in_pixel
	b	.L256	@
	.fnend
	.size	Real8_CB_GetPictureHeader, .-Real8_CB_GetPictureHeader
	.align	2
	.global	Real8_ArrangeVHBMem
	.type	Real8_ArrangeVHBMem, %function
Real8_ArrangeVHBMem:
	.fnstart
.LFB1532:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #60
	sub	sp, sp, #60	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r7, r2	@ pPictureHeader, pPictureHeader
	ldr	r2, [r2, #96]	@ D.38667, <variable>.pic_width_in_mb
	mov	r4, r1	@ pCtx, pCtx
	cmp	r2, #1	@ D.38667,
	ldrls	r3, [r7, #92]	@ prephitmp.1273, <variable>.pic_height_in_mb
	bls	.L266	@,
	ldr	r3, [r7, #92]	@ prephitmp.1273, <variable>.pic_height_in_mb
	cmp	r3, #1	@ prephitmp.1273,
	bls	.L266	@,
	ldr	r1, [r1, #0]	@ D.38674, <variable>.pstExtraData
	ldr	r3, [r1, #788]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r3, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L269	@,
	ldr	r0, [r1, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r0, #25	@ <variable>.eCapLevel,
	beq	.L291	@,
.L270:
	mov	sl, #5	@ prephitmp.1275,
	mov	r9, #4	@ DecFsNum,
	ldr	r5, [r7, #88]	@ PicWidth, <variable>.pic_width_in_pixel
	mov	r1, #2	@,
	ldr	r6, [r7, #84]	@ PicHeight, <variable>.pic_height_in_pixel
	str	r1, [fp, #-88]	@, %sfp
.L277:
	sub	r8, fp, #84	@ tmp204,,
	mov	r1, #36	@,
	mov	r0, r8	@, tmp204
	bl	__memzero	@
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r1, [r7, #84]	@ <variable>.pic_height_in_pixel, <variable>.pic_height_in_pixel
	mov	r2, #0	@ tmp177,
	ldr	r0, [r7, #88]	@ <variable>.pic_width_in_pixel, <variable>.pic_width_in_pixel
	ldr	ip, [r3, #20]	@ <variable>.s32DnrDispOutEnable, <variable>.s32DnrDispOutEnable
	strb	r2, [fp, #-82]	@ tmp177, FspInstCfg.s32RprEnable
	str	r5, [fp, #-72]	@ PicWidth, FspInstCfg.s32DecFsWidth
	str	r6, [fp, #-68]	@ PicHeight, FspInstCfg.s32DecFsHeight
	movw	r6, #:lower16:80296	@ tmp190,
	str	r1, [fp, #-52]	@ <variable>.pic_height_in_pixel, FspInstCfg.s32DispFsHeight
	movt	r6, #:upper16:80296	@ tmp190,
	strb	ip, [fp, #-84]	@ <variable>.s32DnrDispOutEnable, FspInstCfg.s32DispLoopEnable
	mov	r1, r8	@, tmp204
	str	r0, [fp, #-56]	@ <variable>.pic_width_in_pixel, FspInstCfg.s32DispFsWidth
	ldr	r0, [r3, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	strb	sl, [fp, #-77]	@ prephitmp.1275, FspInstCfg.s32ExpectedDispFsNum
	cmp	r0, #24	@ <variable>.eCapLevel,
	uxtbne	r2, r9	@ iftmp.446, DecFsNum
	strb	r2, [fp, #-79]	@ iftmp.446, FspInstCfg.s32ExpectedDecFsNum
	ldr	r7, [r3, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r7, #24	@ <variable>.eCapLevel,
	ldrne	r2, [fp, #-88]	@, %sfp
	moveq	r7, #1	@ iftmp.447,
	uxtbne	r7, r2	@ iftmp.447,
	strb	r7, [fp, #-76]	@ iftmp.447, FspInstCfg.s32ExpectedPmvNum
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r7, #0	@ tmp188,
	strb	r7, [fp, #-80]	@ tmp188, FspInstCfg.s32UserDec
	bl	FSP_ConfigInstance	@
	subs	r5, r0, #0	@ D.38725,
	movne	r0, r7	@ D.38671, tmp188
	beq	.L292	@,
.L268:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L269:
	ldr	ip, [r1, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	ip, #25	@ <variable>.eCapLevel,
	bne	.L270	@,
	ldr	r2, [r7, #88]	@ temp.1297, <variable>.pic_width_in_pixel
	ldr	ip, [r1, #744]	@ D.38682, <variable>.stChanOption.s32MaxWidth
	cmp	r2, ip	@ temp.1297, D.38682
	bhi	.L293	@,
	ldr	r3, [r7, #84]	@ prephitmp.1279, <variable>.pic_height_in_pixel
	ldr	lr, [r1, #748]	@ prephitmp.1277, <variable>.stChanOption.s32MaxHeight
	cmp	r3, lr	@ prephitmp.1279, prephitmp.1277
	bhi	.L280	@,
	ldr	r5, [r1, #776]	@ <variable>.stChanOption.s32SupportBFrame, <variable>.stChanOption.s32SupportBFrame
	ldr	r9, [r1, #768]	@ temp.1300, <variable>.stChanOption.s32MaxRefFrameNum
	cmp	r5, #0	@ <variable>.stChanOption.s32SupportBFrame,
	moveq	r5, #1	@,
	streq	r5, [fp, #-88]	@, %sfp
	beq	.L283	@,
	add	r6, r9, #1	@ PmvNum.1302, temp.1300,
	cmp	r6, #17	@ PmvNum.1302,
	movge	r6, #17	@ PmvNum.1302,
	str	r6, [fp, #-88]	@ PmvNum.1302, %sfp
.L283:
	ldrb	sl, [r1, #796]	@ zero_extendqisi2	@ prephitmp.1275, <variable>.stChanOption.s32DisplayFrameNum
	add	r9, r9, #2	@ DecFsNum, temp.1300,
	mov	r5, r2	@ PicWidth, temp.1297
	mov	r6, r3	@ PicHeight, prephitmp.1279
	b	.L277	@
.L266:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC5	@,
	movt	r1, #:upper16:.LC5	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.38671,
	b	.L268	@
.L292:
	ldr	lr, [r4, #0]	@ temp.1313, <variable>.pstExtraData
	sub	r3, fp, #48	@,,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r2, [lr, #28]	@, <variable>.s32SyntaxMemSize
	ldr	r1, [lr, #24]	@, <variable>.s32SyntaxMemAddr
	bl	FSP_PartitionFsMemory	@
	cmp	r0, #0	@,
	bne	.L294	@,
	mov	r3, #1	@ tmp200,
	movw	r2, #11372	@ tmp199,
	mov	r0, r3	@ D.38671, tmp200
	strb	r3, [r4, r2]	@ tmp200, <variable>.CodecInfo.Imgbuf_allocated
	b	.L268	@
.L291:
	ldr	r2, [r7, #88]	@ D.38681, <variable>.pic_width_in_pixel
	ldr	r5, [r1, #744]	@ PicWidth, <variable>.stChanOption.s32MaxWidth
	cmp	r2, r5	@ D.38681, PicWidth
	bhi	.L295	@,
	ldr	r3, [r7, #84]	@ prephitmp.1283, <variable>.pic_height_in_pixel
	ldr	r6, [r1, #748]	@ PicHeight, <variable>.stChanOption.s32MaxHeight
	cmp	r3, r6	@ prephitmp.1283, PicHeight
	bhi	.L272	@,
	movw	r2, #11372	@ tmp165,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ <variable>.CodecInfo.Imgbuf_allocated, <variable>.CodecInfo.Imgbuf_allocated
	cmp	r0, #1	@ <variable>.CodecInfo.Imgbuf_allocated,
	beq	.L268	@,
	ldr	r8, [r1, #776]	@ <variable>.stChanOption.s32SupportBFrame, <variable>.stChanOption.s32SupportBFrame
	ldr	r9, [r1, #768]	@ D.38692, <variable>.stChanOption.s32MaxRefFrameNum
	cmp	r8, #0	@ <variable>.stChanOption.s32SupportBFrame,
	moveq	r0, #1	@,
	streq	r0, [fp, #-88]	@, %sfp
	beq	.L276	@,
	add	sl, r9, #1	@ PmvNum.1294, D.38692,
	cmp	sl, #17	@ PmvNum.1294,
	movge	sl, #17	@ PmvNum.1294,
	str	sl, [fp, #-88]	@ PmvNum.1294, %sfp
.L276:
	add	r9, r9, #2	@ DecFsNum, D.38692,
	ldrb	sl, [r1, #796]	@ zero_extendqisi2	@ prephitmp.1275, <variable>.stChanOption.s32DisplayFrameNum
	b	.L277	@
.L293:
	ldr	lr, [r1, #748]	@ prephitmp.1277, <variable>.stChanOption.s32MaxHeight
	ldr	r3, [r7, #84]	@ prephitmp.1279, <variable>.pic_height_in_pixel
.L280:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC6	@,
	movt	r1, #:upper16:.LC6	@,
	stmia	sp, {ip, lr}	@ phole stm
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.38671,
	b	.L268	@
.L295:
	ldr	r6, [r1, #748]	@ PicHeight, <variable>.stChanOption.s32MaxHeight
	ldr	r3, [r7, #84]	@ prephitmp.1283, <variable>.pic_height_in_pixel
.L272:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC6	@,
	movt	r1, #:upper16:.LC6	@,
	stmia	sp, {r5, r6}	@ phole stm
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.38671,
	b	.L268	@
.L294:
	mov	r0, r5	@, D.38725
	movw	r1, #:lower16:.LC7	@,
	movt	r1, #:upper16:.LC7	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.38671, D.38725
	b	.L268	@
	.fnend
	.size	Real8_ArrangeVHBMem, .-Real8_ArrangeVHBMem
	.align	2
	.global	Real8_GetImageBuffer
	.type	Real8_GetImageBuffer, %function
Real8_GetImageBuffer:
	.fnstart
.LFB1531:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:80296	@ tmp142,
	movt	r5, #:upper16:80296	@ tmp142,
	mov	r4, r0	@ pCtx, pCtx
	mov	r1, #1	@,
	movw	r6, #46092	@ tmp144,
	ldr	r0, [r0, r5]	@, <variable>.ChanID
	bl	FSP_NewLogicFs	@
	cmp	r0, #0	@ D.38618,
	mov	r1, r0	@ D.38618,
	str	r0, [r4, r6]	@ D.38618, <variable>.CodecInfo.CurFsID
	blt	.L303	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	r5, r0, #0	@ pLf,
	beq	.L304	@,
	ldr	r2, [r4, r6]	@, <variable>.CodecInfo.CurFsID
	mov	r0, #18	@,
	movw	r1, #:lower16:.LC10	@,
	movt	r1, #:upper16:.LC10	@,
	bl	dprint_vfmw	@
	ldr	r2, [r5, #520]	@ D.38633, <variable>.pstDecodeFs
	cmp	r2, #0	@ D.38633,
	beq	.L300	@,
	ldr	r3, [r5, #524]	@ D.38636, <variable>.pstDispOutFs
	cmp	r3, #0	@ D.38636,
	beq	.L300	@,
	ldr	r0, [r5, #528]	@ D.38639, <variable>.pstTfOutFs
	cmp	r0, #0	@ D.38639,
	beq	.L300	@,
	ldr	ip, [r0, #12]	@ <variable>.PhyAddr, <variable>.PhyAddr
	movw	r1, #:lower16:.LC11	@,
	ldr	r2, [r2, #12]	@ <variable>.PhyAddr, <variable>.PhyAddr
	movt	r1, #:upper16:.LC11	@,
	ldr	r3, [r3, #12]	@ <variable>.PhyAddr, <variable>.PhyAddr
	mov	r0, #18	@,
	str	ip, [sp, #0]	@ <variable>.PhyAddr,
	bl	dprint_vfmw	@
.L300:
	movw	lr, #46092	@ tmp179,
	mov	r0, #1	@ D.38627,
	ldr	r2, [r4, lr]	@ <variable>.CodecInfo.CurFsID, <variable>.CodecInfo.CurFsID
	cmp	r2, #2	@ <variable>.CodecInfo.CurFsID,
	streq	r2, [r4, lr]	@ <variable>.CodecInfo.CurFsID, <variable>.CodecInfo.CurFsID
.L298:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L303:
	movw	r7, #46088	@ tmp148,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC8	@,
	movt	r1, #:upper16:.LC8	@,
	bl	dprint_vfmw	@
	movw	r8, #46084	@ tmp152,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	r1, [r4, r7]	@, <variable>.CodecInfo.BwdFsID
	mov	r6, #0	@ tmp155,
	bl	FSP_ClearLogicFs	@
	ldr	r1, [r4, r8]	@, <variable>.CodecInfo.FwdFsID
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	str	r6, [r4, r8]	@ tmp155, <variable>.CodecInfo.FwdFsID
	str	r6, [r4, r7]	@ tmp155, <variable>.CodecInfo.BwdFsID
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_GetNullLogicFs	@
	movw	r3, #11375	@ tmp162,
	add	r1, r4, #46080	@, pCtx,
	strb	r6, [r4, r3]	@ tmp155, <variable>.CodecInfo.RefNum
	add	r1, r1, #56	@,,
	str	r0, [r4, r8]	@ D.38625, <variable>.CodecInfo.FwdFsID
	str	r0, [r4, r7]	@ D.38625, <variable>.CodecInfo.BwdFsID
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_ClearNotInVoQueue	@
	mov	r0, r6	@ D.38627, tmp155
	b	.L298	@
.L304:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC9	@,
	mov	r2, #556	@,
	movt	r1, #:upper16:.LC9	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.38627, pLf
	b	.L298	@
	.fnend
	.size	Real8_GetImageBuffer, .-Real8_GetImageBuffer
	.global	__aeabi_idiv
	.align	2
	.global	REAL8DEC_Decode
	.type	REAL8DEC_Decode, %function
REAL8DEC_Decode:
	.fnstart
.LFB1550:
	@ args = 0, pretend = 0, frame = 304
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #324
	sub	sp, sp, #324	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	sub	r7, fp, #296	@ tmp898,,
	sub	r8, fp, #156	@ tmp890,,
	mov	r4, r0	@ pCtx, pCtx
	mov	r5, r1	@ pPacket, pPacket
	mov	r2, #140	@,
	mov	r1, #0	@,
	mov	r0, r7	@, tmp898
	bl	memset	@
	mov	r1, #0	@,
	mov	r2, #64	@,
	mov	r0, r8	@, tmp890
	bl	memset	@
	movw	r3, #44792	@ tmp259,
	ldr	r3, [r4, r3]	@ <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pheight, <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pheight
	movw	ip, #44788	@ tmp256,
	ldr	r2, [r4, ip]	@ <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pwidth, <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pwidth
	mov	r0, #44800	@ tmp258,
	movw	ip, #44804	@ tmp269,
	cmp	r5, #0	@ pPacket,
	movw	r1, #44796	@ tmp255,
	str	r3, [r4, r0]	@ <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pheight, <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pheight_prev
	add	r6, r4, #44544	@ pPictureHeader, pCtx,
	mov	r0, #1	@ tmp270,
	str	r0, [r4, ip]	@ tmp270, <variable>.CodecInfo.PictureHeader.Fid
	movw	ip, #44832	@ tmp271,
	str	r2, [r4, r1]	@ <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pwidth, <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pwidth_prev
	add	r6, r6, #184	@ pPictureHeader, pPictureHeader,
	mov	r1, #8192	@ tmp272,
	str	r2, [fp, #-236]	@ <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pwidth, TmpPictureHeader.Rv8ParsePicParam.pwidth
	str	r1, [r4, ip]	@ tmp272, <variable>.CodecInfo.PictureHeader.m_uTRWrap
	str	r3, [fp, #-232]	@ <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pheight, TmpPictureHeader.Rv8ParsePicParam.pheight
	str	r1, [fp, #-192]	@ tmp272, TmpPictureHeader.m_uTRWrap
	str	r2, [fp, #-228]	@ <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pwidth, TmpPictureHeader.Rv8ParsePicParam.pwidth_prev
	str	r3, [fp, #-224]	@ <variable>.CodecInfo.PictureHeader.Rv8ParsePicParam.pheight, TmpPictureHeader.Rv8ParsePicParam.pheight_prev
	str	r0, [fp, #-220]	@ tmp270, TmpPictureHeader.Fid
	beq	.L396	@,
	add	r0, r4, #8	@, pCtx,
	movw	r1, #11348	@,
	str	r0, [fp, #-304]	@, %sfp
	bl	__memzero	@
	movw	r0, #45948	@ tmp279,
	mov	sl, #0	@ tmp280,
	str	sl, [r4, r0]	@ tmp280, <variable>.CodecInfo.BsOffset
	movw	r2, #45968	@ tmp281,
	ldr	ip, [r5, #16]	@ <variable>.LenInByte, <variable>.LenInByte
	movw	r3, #45952	@ tmp283,
	movw	r0, #11360	@ tmp285,
	str	ip, [r4, r2]	@ <variable>.LenInByte, <variable>.CodecInfo.PacketTail
	movw	ip, #45956	@ tmp287,
	ldr	r1, [r5, #12]	@ <variable>.PhyAddr, <variable>.PhyAddr
	str	r1, [r4, r3]	@ <variable>.PhyAddr, <variable>.CodecInfo.BsPhyAddr
	movw	r3, #11368	@ tmp288,
	ldr	r2, [r5, #0]	@ <variable>.VirAddr, <variable>.VirAddr
	str	r2, [r4, r0]	@ <variable>.VirAddr, <variable>.CodecInfo.BsVirAddr
	ldr	r2, [r5, #16]	@ temp.1431, <variable>.LenInByte
	str	r2, [r4, ip]	@ temp.1431, <variable>.CodecInfo.BsLength
	ldrb	r1, [r5, #5]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	strb	r1, [r4, r3]	@ <variable>.IsLastSeg, <variable>.CodecInfo.IsLastSeg
	ldrb	r0, [r5, #5]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r0, #1	@ <variable>.IsLastSeg,
	beq	.L308	@,
	ldr	ip, [r5, #92]	@ <variable>.PhyAddr, <variable>.PhyAddr
	movw	r3, #45960	@ tmp292,
	movw	r1, #11364	@ tmp294,
	movw	r0, #45964	@ tmp296,
	str	ip, [r4, r3]	@ <variable>.PhyAddr, <variable>.CodecInfo.BsPhyAddr1
	movw	r3, #11369	@ tmp298,
	ldr	lr, [r5, #80]	@ <variable>.VirAddr, <variable>.VirAddr
	str	lr, [r4, r1]	@ <variable>.VirAddr, <variable>.CodecInfo.BsVirAddr1
	ldr	ip, [r5, #96]	@ <variable>.LenInByte, <variable>.LenInByte
	str	ip, [r4, r0]	@ <variable>.LenInByte, <variable>.CodecInfo.BsLength1
	ldrb	r1, [r5, #85]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	strb	r1, [r4, r3]	@ <variable>.IsLastSeg, <variable>.CodecInfo.IsLastSeg1
	ldrb	lr, [r5, #85]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	lr, #1	@ <variable>.IsLastSeg,
	bne	.L397	@,
	sub	r0, r2, #75	@ tmp317, temp.1431,
	movw	r3, #:lower16:3145652	@ tmp318,
	movt	r3, #:upper16:3145652	@ tmp318,
	cmp	r0, r3	@ tmp317, tmp318
	bhi	.L310	@,
.L400:
	movw	lr, #11360	@ tmp319,
	ldr	r1, [r4, lr]	@ D.39470, <variable>.CodecInfo.BsVirAddr
	cmp	r1, #0	@ D.39470,
	beq	.L310	@,
	add	r5, r4, #46080	@ pBs, pCtx,
	add	r5, r5, #24	@ pBs, pBs,
	mov	r0, r5	@, pBs
	bl	BsInit	@
	mov	r0, r5	@, pBs
	mov	r1, #8	@,
	bl	Real8_CB_GetBits	@
	cmp	r0, #8	@,
	str	r0, [fp, #-316]	@, %sfp
	bhi	.L310	@,
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	bl	Real8_CB_GetBits	@
	mov	ip, r0, asl #24	@ tmp322, temp.1506,
	and	r1, r0, #16711680	@ tmp324, temp.1506,
	and	r2, r0, #65280	@ tmp327, temp.1506,
	orr	r3, ip, r0, lsr #24	@, tmp323, tmp322, temp.1506,
	orr	ip, r3, r1, lsr #8	@, tmp326, tmp323, tmp324,
	mov	r0, r5	@, pBs
	mov	r1, #32	@,
	orr	r3, ip, r2, asl #8	@, tmp329, tmp326, tmp327,
	str	r3, [fp, #-156]	@ tmp329, RPR_Sizes
	bl	Real8_CB_GetBits	@
	and	ip, r0, #16711680	@ tmp333, temp.1446,
	mov	r1, r0, lsr #24	@ tmp331, temp.1446,
	and	r2, r0, #65280	@ tmp336, temp.1446,
	orr	r0, r1, r0, asl #24	@, tmp332, tmp331, temp.1446,
	orr	r3, r0, ip, lsr #8	@, tmp335, tmp332, tmp333,
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	orr	ip, r3, r2, asl #8	@, tmp338, tmp335, tmp336,
	str	ip, [fp, #-152]	@ tmp338, RPR_Sizes
	bl	Real8_CB_GetBits	@
	mov	r3, r0, asl #24	@ tmp340, D.39477,
	and	r1, r0, #65280	@ tmp342, D.39477,
	and	r2, r0, #16711680	@ tmp345, D.39477,
	orr	ip, r3, r0, lsr #24	@, tmp341, tmp340, D.39477,
	orr	r3, ip, r1, asl #8	@, tmp344, tmp341, tmp342,
	mov	r0, r5	@, pBs
	mov	r1, #32	@,
	orr	ip, r3, r2, lsr #8	@, tmp347, tmp344, tmp345,
	str	ip, [fp, #-148]	@ tmp347, RPR_Sizes
	bl	Real8_CB_GetBits	@
	and	r3, r0, #65280	@ tmp351, temp.1571,
	mov	r1, r0, asl #24	@ tmp349, temp.1571,
	and	r2, r0, #16711680	@ tmp354, temp.1571,
	orr	r0, r1, r0, lsr #24	@, tmp350, tmp349, temp.1571,
	orr	ip, r0, r3, asl #8	@, tmp353, tmp350, tmp351,
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	orr	r3, ip, r2, lsr #8	@, tmp356, tmp353, tmp354,
	str	r3, [fp, #-144]	@ tmp356, RPR_Sizes
	bl	Real8_CB_GetBits	@
	mov	ip, r0, asl #24	@ tmp358, temp.1581,
	and	r1, r0, #65280	@ tmp360, temp.1581,
	and	r2, r0, #16711680	@ tmp363, temp.1581,
	orr	r3, ip, r0, lsr #24	@, tmp359, tmp358, temp.1581,
	orr	ip, r3, r1, asl #8	@, tmp362, tmp359, tmp360,
	mov	r0, r5	@, pBs
	mov	r1, #32	@,
	orr	r3, ip, r2, lsr #8	@, tmp365, tmp362, tmp363,
	str	r3, [fp, #-140]	@ tmp365, RPR_Sizes
	bl	Real8_CB_GetBits	@
	and	ip, r0, #65280	@ tmp369, temp.1591,
	mov	r1, r0, asl #24	@ tmp367, temp.1591,
	and	r2, r0, #16711680	@ tmp372, temp.1591,
	orr	r0, r1, r0, lsr #24	@, tmp368, tmp367, temp.1591,
	orr	r3, r0, ip, asl #8	@, tmp371, tmp368, tmp369,
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	orr	ip, r3, r2, lsr #8	@, tmp374, tmp371, tmp372,
	str	ip, [fp, #-136]	@ tmp374, RPR_Sizes
	bl	Real8_CB_GetBits	@
	mov	r3, r0, asl #24	@ tmp376, temp.1601,
	and	r1, r0, #65280	@ tmp378, temp.1601,
	and	r2, r0, #16711680	@ tmp381, temp.1601,
	orr	ip, r3, r0, lsr #24	@, tmp377, tmp376, temp.1601,
	orr	r3, ip, r1, asl #8	@, tmp380, tmp377, tmp378,
	mov	r0, r5	@, pBs
	mov	r1, #32	@,
	orr	ip, r3, r2, lsr #8	@, tmp383, tmp380, tmp381,
	str	ip, [fp, #-132]	@ tmp383, RPR_Sizes
	bl	Real8_CB_GetBits	@
	and	r3, r0, #65280	@ tmp387, temp.1611,
	mov	r1, r0, asl #24	@ tmp385, temp.1611,
	and	r2, r0, #16711680	@ tmp390, temp.1611,
	orr	r0, r1, r0, lsr #24	@, tmp386, tmp385, temp.1611,
	orr	ip, r0, r3, asl #8	@, tmp389, tmp386, tmp387,
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	orr	r3, ip, r2, lsr #8	@, tmp392, tmp389, tmp390,
	str	r3, [fp, #-128]	@ tmp392, RPR_Sizes
	bl	Real8_CB_GetBits	@
	mov	ip, r0, asl #24	@ tmp394, temp.1621,
	and	r1, r0, #65280	@ tmp396, temp.1621,
	and	r2, r0, #16711680	@ tmp399, temp.1621,
	orr	r3, ip, r0, lsr #24	@, tmp395, tmp394, temp.1621,
	orr	ip, r3, r1, asl #8	@, tmp398, tmp395, tmp396,
	mov	r0, r5	@, pBs
	mov	r1, #32	@,
	orr	r3, ip, r2, lsr #8	@, tmp401, tmp398, tmp399,
	str	r3, [fp, #-124]	@ tmp401, RPR_Sizes
	bl	Real8_CB_GetBits	@
	and	ip, r0, #65280	@ tmp405, temp.1631,
	mov	r1, r0, asl #24	@ tmp403, temp.1631,
	and	r2, r0, #16711680	@ tmp408, temp.1631,
	orr	r0, r1, r0, lsr #24	@, tmp404, tmp403, temp.1631,
	orr	r3, r0, ip, asl #8	@, tmp407, tmp404, tmp405,
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	orr	ip, r3, r2, lsr #8	@, tmp410, tmp407, tmp408,
	str	ip, [fp, #-120]	@ tmp410, RPR_Sizes
	bl	Real8_CB_GetBits	@
	mov	r3, r0, asl #24	@ tmp412, temp.1641,
	and	r1, r0, #65280	@ tmp414, temp.1641,
	and	r2, r0, #16711680	@ tmp417, temp.1641,
	orr	ip, r3, r0, lsr #24	@, tmp413, tmp412, temp.1641,
	orr	r3, ip, r1, asl #8	@, tmp416, tmp413, tmp414,
	mov	r0, r5	@, pBs
	mov	r1, #32	@,
	orr	ip, r3, r2, lsr #8	@, tmp419, tmp416, tmp417,
	str	ip, [fp, #-116]	@ tmp419, RPR_Sizes
	bl	Real8_CB_GetBits	@
	and	r3, r0, #65280	@ tmp423, temp.1651,
	mov	r1, r0, asl #24	@ tmp421, temp.1651,
	and	r2, r0, #16711680	@ tmp426, temp.1651,
	orr	r0, r1, r0, lsr #24	@, tmp422, tmp421, temp.1651,
	orr	ip, r0, r3, asl #8	@, tmp425, tmp422, tmp423,
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	orr	r3, ip, r2, lsr #8	@, tmp428, tmp425, tmp426,
	str	r3, [fp, #-112]	@ tmp428, RPR_Sizes
	bl	Real8_CB_GetBits	@
	mov	ip, r0, asl #24	@ tmp430, temp.1661,
	and	r1, r0, #65280	@ tmp432, temp.1661,
	and	r2, r0, #16711680	@ tmp435, temp.1661,
	orr	r3, ip, r0, lsr #24	@, tmp431, tmp430, temp.1661,
	orr	ip, r3, r1, asl #8	@, tmp434, tmp431, tmp432,
	mov	r0, r5	@, pBs
	mov	r1, #32	@,
	orr	r3, ip, r2, lsr #8	@, tmp437, tmp434, tmp435,
	str	r3, [fp, #-108]	@ tmp437, RPR_Sizes
	bl	Real8_CB_GetBits	@
	and	ip, r0, #65280	@ tmp441, temp.1671,
	mov	r1, r0, asl #24	@ tmp439, temp.1671,
	and	r2, r0, #16711680	@ tmp444, temp.1671,
	orr	r0, r1, r0, lsr #24	@, tmp440, tmp439, temp.1671,
	orr	r3, r0, ip, asl #8	@, tmp443, tmp440, tmp441,
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	orr	ip, r3, r2, lsr #8	@, tmp446, tmp443, tmp444,
	str	ip, [fp, #-104]	@ tmp446, RPR_Sizes
	bl	Real8_CB_GetBits	@
	mov	r3, r0, asl #24	@ tmp448, temp.1681,
	and	r1, r0, #65280	@ tmp450, temp.1681,
	and	r2, r0, #16711680	@ tmp453, temp.1681,
	orr	ip, r3, r0, lsr #24	@, tmp449, tmp448, temp.1681,
	orr	r3, ip, r1, asl #8	@, tmp452, tmp449, tmp450,
	mov	r0, r5	@, pBs
	mov	r1, #32	@,
	orr	ip, r3, r2, lsr #8	@, tmp455, tmp452, tmp453,
	str	ip, [fp, #-100]	@ tmp455, RPR_Sizes
	bl	Real8_CB_GetBits	@
	and	r1, r0, #65280	@ tmp459, temp.1435,
	mov	r3, r0, asl #24	@ tmp457, temp.1435,
	and	r2, r0, #16711680	@ tmp462, temp.1435,
	orr	ip, r3, r0, lsr #24	@, tmp458, tmp457, temp.1435,
	orr	r3, ip, r1, asl #8	@, tmp461, tmp458, tmp459,
	mov	r0, r5	@, pBs
	mov	r1, #8	@,
	orr	ip, r3, r2, lsr r1	@, tmp464, tmp461, tmp462,
	str	ip, [fp, #-96]	@ tmp464, RPR_Sizes
	bl	Real8_CB_GetBits	@
	movw	r2, #44920	@ tmp465,
	cmp	r0, #255	@ D.39488,
	add	r0, r0, #1	@ D.39490, D.39488,
	str	r0, [r4, r2]	@ D.39490, <variable>.CodecInfo.TotalSliceNum
	bhi	.L310	@,
	cmp	r0, #0	@ D.39490,
	addeq	r1, r4, #44800	@, pCtx,
	streq	r1, [fp, #-320]	@, %sfp
	moveq	r3, r0	@ D.39491, D.39490
	beq	.L312	@,
	add	sl, r4, #44800	@, pCtx,
	str	sl, [fp, #-320]	@, %sfp
	ldr	r9, [fp, #-320]	@, %sfp
	movw	lr, #:lower16:3145727	@ tmp910,
	movt	lr, #:upper16:3145727	@ tmp910,
	str	r6, [fp, #-324]	@ pPictureHeader, %sfp
	add	sl, r9, #124	@ ivtmp.1424,,
	mov	r9, #0	@ i.1445,
	mov	r6, lr	@ tmp910, tmp910
	b	.L313	@
.L399:
	movw	lr, #44920	@,
	ldr	r3, [r4, lr]	@ D.39491, <variable>.CodecInfo.TotalSliceNum
	cmp	r3, r9	@ D.39491, i.1445
	bls	.L398	@,
.L313:
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	bl	BsSkip	@
	mov	r1, #32	@,
	mov	r0, r5	@, pBs
	add	r9, r9, #1	@ i.1445, i.1445,
	bl	Real8_CB_GetBits	@
	mov	r1, r0, asl #24	@ tmp468, SliceByteOffset,
	and	r2, r0, #65280	@ tmp470, SliceByteOffset,
	orr	ip, r1, r0, lsr #24	@, tmp469, tmp468, SliceByteOffset,
	and	r1, r0, #16711680	@ tmp473, SliceByteOffset,
	orr	r3, ip, r2, asl #8	@, tmp472, tmp469, tmp470,
	orr	r0, r3, r1, lsr #8	@, D.39506, tmp472, tmp473,
	str	r0, [sl, #0]	@ D.39506, <variable>.CodecInfo.SliceByteOffset
	cmp	r0, r6	@ D.39506, tmp910
	add	sl, sl, #4	@ ivtmp.1424, ivtmp.1424,
	ble	.L399	@,
.L310:
	mov	r0, #0	@ D.39434,
.L307:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L397:
	movw	r6, #:lower16:80296	@ tmp302,
	movt	r6, #:upper16:80296	@ tmp302,
	ldr	r1, [r5, #20]	@, <variable>.StreamID
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r5, #100]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	mov	r0, sl	@ D.39434, tmp280
	b	.L307	@
.L308:
	movw	r0, #45964	@ tmp312,
	movw	r3, #:lower16:3145652	@ tmp318,
	str	sl, [r4, r0]	@ tmp280, <variable>.CodecInfo.BsLength1
	movt	r3, #:upper16:3145652	@ tmp318,
	sub	r0, r2, #75	@ tmp317, temp.1431,
	movw	ip, #11369	@ tmp314,
	cmp	r0, r3	@ tmp317, tmp318
	movw	r1, #45960	@ tmp308,
	movw	lr, #11364	@ tmp310,
	strb	sl, [r4, ip]	@ tmp280, <variable>.CodecInfo.IsLastSeg1
	str	sl, [r4, r1]	@ tmp280, <variable>.CodecInfo.BsPhyAddr1
	str	sl, [r4, lr]	@ tmp280, <variable>.CodecInfo.BsVirAddr1
	bls	.L400	@,
	b	.L310	@
.L396:
	movw	lr, #45984	@ tmp277,
	movw	r1, #:lower16:.LC12	@,
	ldr	r2, [r4, lr]	@, <variable>.CodecInfo.FrmCnt
	movt	r1, #:upper16:.LC12	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.39434, pPacket
	b	.L307	@
.L398:
	ldr	r6, [fp, #-324]	@ pPictureHeader, %sfp
.L312:
	ldr	r0, [fp, #-320]	@, %sfp
	sub	sl, r3, #1	@ pretmp.1386, D.39491,
	tst	sl, #1	@ pretmp.1386,
	mov	r1, #0	@ i,
	add	r9, r0, #128	@,,
	str	r9, [fp, #-324]	@, %sfp
	mov	r2, r9	@ ivtmp.1418,
	bne	.L401	@,
.L388:
	mov	r9, r5	@ pBs, pBs
	b	.L314	@
.L315:
	ldr	r5, [r2, #0]	@ D.39512, <variable>.CodecInfo.SliceByteOffset
	ldr	ip, [r2, #-4]	@ D.39507, <variable>.CodecInfo.SliceByteOffset
	cmp	r5, ip	@ D.39512, D.39507
	ble	.L310	@,
	ldr	ip, [r2, #4]	@ D.39512, <variable>.CodecInfo.SliceByteOffset
	add	r2, r0, #4	@ ivtmp.1418, tmp915,
	ldr	r0, [r0, #-4]	@ D.39507, <variable>.CodecInfo.SliceByteOffset
	cmp	ip, r0	@ D.39512, D.39507
	ble	.L310	@,
.L314:
	cmp	r1, sl	@ i, pretmp.1386
	add	r5, r1, #1	@ tmp914, i,
	add	r1, r5, #1	@ i, tmp914,
	add	r0, r2, #4	@ tmp915, ivtmp.1418,
	bcc	.L315	@,
	mov	r5, r9	@ pBs, pBs
.L385:
	movw	sl, #44924	@ tmp479,
	mov	lr, r3, asl #3	@ tmp478, D.39491,
	ldr	r1, [r4, sl]	@ <variable>.CodecInfo.SliceByteOffset, <variable>.CodecInfo.SliceByteOffset
	add	sl, lr, #66	@ PrevHeaderBytes, tmp478,
	add	r3, sl, r1	@, PrevHeaderBytes, <variable>.CodecInfo.SliceByteOffset
	str	r3, [fp, #-348]	@, %sfp
	cmp	sl, #3145728	@ PrevHeaderBytes,
	cmplt	r3, #3145728	@,,
	movlt	r9, #0	@, tmp489
	movge	r9, #1	@, tmp489
	bge	.L310	@,
	ldr	r1, [fp, #-348]	@, %sfp
	cmp	r1, #73	@,
	ble	.L310	@,
	movw	r0, #45956	@ tmp490,
	ldr	r2, [r4, r0]	@ <variable>.CodecInfo.BsLength, <variable>.CodecInfo.BsLength
	rsb	r2, r1, r2	@ D.39527,, <variable>.CodecInfo.BsLength
	cmp	r2, #0	@ D.39527,
	ble	.L310	@,
	movw	r0, #11360	@ tmp492,
	ldr	r3, [fp, #-348]	@, %sfp
	ldr	lr, [r4, r0]	@ <variable>.CodecInfo.BsVirAddr, <variable>.CodecInfo.BsVirAddr
	mov	r0, r5	@, pBs
	sub	ip, fp, #92	@,,
	str	ip, [fp, #-344]	@, %sfp
	add	r1, r3, lr	@,, <variable>.CodecInfo.BsVirAddr
	bl	BsInit	@
	ldr	r1, [fp, #-316]	@, %sfp
	ldr	ip, .L417	@ tmp497,
	sub	r2, fp, #44	@,,
	str	r8, [fp, #-284]	@ tmp890, TmpPictureHeader.Rv8ParsePicParam.m_pSizes
	add	lr, r2, r1, asl #2	@, tmp501,,,
	str	r1, [fp, #-280]	@, TmpPictureHeader.Rv8ParsePicParam.m_numSizes
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp918,,,,
	ldr	r8, [fp, #-344]	@ tmp496, %sfp
	stmia	r8!, {r0, r1, r2, r3}	@ tmp496,,,,
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp919,,,,
	ldr	ip, [ip, #0]	@ C.460, C.460
	stmia	r8!, {r0, r1, r2, r3}	@ tmp496,,,,
	mov	r0, r5	@, pBs
	str	ip, [r8, #0]	@ C.460, size
	mov	r1, r7	@, tmp898
	ldr	ip, [lr, #-48]	@ tmp503, size
	str	ip, [fp, #-288]	@ tmp503, TmpPictureHeader.Rv8ParsePicParam.m_pctszSize
	bl	Real8_CB_GetPictureHeader	@
	cmp	r0, #1	@,
	bne	.L402	@,
	movw	r2, #11372	@ tmp507,
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ <variable>.CodecInfo.Imgbuf_allocated, <variable>.CodecInfo.Imgbuf_allocated
	cmp	r1, #0	@ <variable>.CodecInfo.Imgbuf_allocated,
	bne	.L317	@,
	movw	r8, #:lower16:g_event_report	@ tmp509,
	movt	r8, #:upper16:g_event_report	@ tmp509,
	ldr	ip, [r8, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L318	@,
	movw	r8, #44824	@ tmp511,
	movw	r1, #44820	@ tmp513,
	ldrh	r2, [r4, r8]	@, <variable>.CodecInfo.PictureHeader.pic_width_in_mb
	movw	r9, #:lower16:80296	@ tmp518,
	ldrh	r3, [fp, #-200]	@, TmpPictureHeader.pic_width_in_mb
	movt	r9, #:upper16:80296	@ tmp518,
	ldrh	lr, [fp, #-204]	@, TmpPictureHeader.pic_height_in_mb
	strh	r2, [fp, #-92]	@ movhi	@, para
	sub	r2, fp, #92	@,,
	ldrh	r0, [r4, r1]	@, <variable>.CodecInfo.PictureHeader.pic_height_in_mb
	mov	r1, #2	@,
	strh	r3, [fp, #-88]	@ movhi	@, para
	mov	r3, #8	@,
	strh	lr, [fp, #-86]	@ movhi	@, para
	strh	r0, [fp, #-90]	@ movhi	@, para
	ldr	r0, [r4, r9]	@, <variable>.ChanID
	blx	ip	@ g_event_report
.L318:
	movw	r8, #:lower16:80296	@ tmp521,
	movt	r8, #:upper16:80296	@ tmp521,
	movw	r3, #46088	@ tmp522,
	mov	r2, #1	@,
	ldr	r1, [r4, r3]	@, <variable>.CodecInfo.BwdFsID
	add	r9, r4, #46080	@ D.39551, pCtx,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	add	r9, r9, #56	@ D.39551, D.39551,
	str	r3, [fp, #-332]	@,
	bl	FSP_ClearLogicFs	@
	movw	lr, #46084	@,
	mov	r2, #1	@,
	ldr	r1, [r4, lr]	@, <variable>.CodecInfo.FwdFsID
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	movw	r0, #46084	@,
	mov	r1, #0	@ tmp526,
	str	r1, [r4, r0]	@ tmp526, <variable>.CodecInfo.FwdFsID
	ldr	ip, [fp, #-332]	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	str	r1, [r4, ip]	@ tmp526, <variable>.CodecInfo.BwdFsID
	str	r1, [fp, #-336]	@,
	str	ip, [fp, #-332]	@,
	bl	FSP_GetNullLogicFs	@
	movw	r2, #46084	@,
	movw	r1, #11375	@ tmp532,
	str	r0, [r4, r2]	@ D.39550, <variable>.CodecInfo.FwdFsID
	ldr	r3, [fp, #-336]	@,
	strb	r3, [r4, r1]	@ tmp526, <variable>.CodecInfo.RefNum
	mov	r1, r9	@, D.39551
	ldr	ip, [fp, #-332]	@,
	str	r0, [r4, ip]	@ D.39550, <variable>.CodecInfo.BwdFsID
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearNotInVoQueue	@
	ldr	r2, [fp, #-200]	@ prephitmp.1394, TmpPictureHeader.pic_width_in_mb
	cmp	r2, #512	@ prephitmp.1394,
	ldrhi	r3, [fp, #-204]	@ prephitmp.1457, TmpPictureHeader.pic_height_in_mb
	bhi	.L320	@,
	ldr	r3, [fp, #-204]	@ prephitmp.1457, TmpPictureHeader.pic_height_in_mb
	cmp	r3, #512	@ prephitmp.1457,
	bhi	.L320	@,
	ldr	r1, [r4, #0]	@ D.39558, <variable>.pstExtraData
	ldr	r8, [r1, #788]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r8, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L322	@,
	ldr	ip, [r1, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	ip, #25	@ <variable>.eCapLevel,
	beq	.L403	@,
.L322:
	movw	r2, #:lower16:80296	@ tmp542,
	movt	r2, #:upper16:80296	@ tmp542,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	beq	.L324	@,
.L389:
	ldr	r2, [fp, #-200]	@ prephitmp.1394, TmpPictureHeader.pic_width_in_mb
	ldr	r3, [fp, #-204]	@ prephitmp.1457, TmpPictureHeader.pic_height_in_mb
.L323:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC15	@,
	movt	r1, #:upper16:.LC15	@,
	bl	dprint_vfmw	@
	mov	r0, #6	@,
	mov	r1, r4	@, pCtx
	mov	r2, r7	@, tmp898
	bl	Real8_ArrangeVHBMem	@
	subs	r8, r0, #0	@ D.39569,
	beq	.L404	@,
.L317:
	mov	r1, r7	@, tmp898
	mov	r2, #140	@,
	mov	r0, r6	@, pPictureHeader
	bl	memcpy	@
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r3, #11370	@ tmp550,
	mov	r0, r4	@, pCtx
	ldr	r7, [ip, #8]	@ <variable>.s32DecMode, <variable>.s32DecMode
	strb	r7, [r4, r3]	@ <variable>.s32DecMode, <variable>.CodecInfo.UsedDecMode
	bl	Real8_GetImageBuffer	@
	subs	r7, r0, #0	@ D.39575,
	beq	.L405	@,
	movw	r1, #:lower16:80296	@,
	movt	r1, #:upper16:80296	@,
	movw	r9, #46092	@ tmp557,
	str	r1, [fp, #-320]	@, %sfp
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	r1, [r4, r9]	@, <variable>.CodecInfo.CurFsID
	str	r9, [fp, #-332]	@,
	bl	FSP_GetFsImagePtr	@
	ldr	ip, [fp, #-332]	@,
	subs	r7, r0, #0	@ pImg,
	beq	.L326	@,
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	mov	r0, #29	@,
	movw	r1, #:lower16:.LC18	@,
	movt	r1, #:upper16:.LC18	@,
	ldrd	r2, [r3, #56]	@ <variable>.pts, <variable>.pstExtraData,
	strd	r2, [r7, #8]	@ <variable>.pts, pImg,
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldrd	r2, [r3, #72]	@ <variable>.Usertag, <variable>.pstExtraData,
	strd	r2, [r7, #16]	@ <variable>.Usertag, pImg,
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldrd	r2, [r3, #88]	@ <variable>.DispTime, <variable>.pstExtraData,
	strd	r2, [r7, #24]	@ <variable>.DispTime, pImg,
	mvn	r2, #0	@ tmp573,
	ldr	r8, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	lr, [r8, #104]	@ <variable>.DispEnableFlag, <variable>.DispEnableFlag
	str	lr, [r7, #68]	@ <variable>.DispEnableFlag, <variable>.DispEnableFlag
	ldr	r9, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r9, #108]	@ <variable>.DispFrameDistance, <variable>.DispFrameDistance
	str	r3, [r7, #72]	@ <variable>.DispFrameDistance, <variable>.DispFrameDistance
	ldr	r8, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	lr, [r8, #112]	@ <variable>.DistanceBeforeFirstFrame, <variable>.DistanceBeforeFirstFrame
	str	lr, [r7, #76]	@ <variable>.DistanceBeforeFirstFrame, <variable>.DistanceBeforeFirstFrame
	sub	lr, fp, #320	@,,
	ldr	r9, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r9, #128]	@ <variable>.GopNum, <variable>.GopNum
	str	r3, [r7, #80]	@ <variable>.GopNum, <variable>.GopNum
	mvn	r3, #0	@,
	ldr	r8, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	strd	r2, [r8, #56]	@ tmp573, <variable>.pstExtraData,
	ldrd	r8, [r7, #16]	@, pImg,
	strd	r8, [lr, #4]	@,,
	ldrd	r2, [r7, #8]	@ <variable>.PTS, pImg,
	str	ip, [fp, #-332]	@,
	strd	r8, [sp]	@,
	bl	dprint_vfmw	@
	movw	r0, #44808	@ tmp577,
	ldr	ip, [fp, #-332]	@,
	ldr	r3, [r4, r0]	@ D.39594, <variable>.CodecInfo.PictureHeader.PicCodType
	cmp	r3, #2	@ D.39594,
	beq	.L406	@,
	cmp	r3, #1	@ D.39594,
	beq	.L407	@,
	movw	r7, #11375	@ tmp582,
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ <variable>.CodecInfo.RefNum, <variable>.CodecInfo.RefNum
	cmp	r3, #0	@ <variable>.CodecInfo.RefNum,
	addeq	r3, r3, #1	@ iftmp.483, iftmp.483,
	bne	.L330	@,
.L331:
	movw	r8, #46084	@ tmp586,
	movw	r7, #46088	@ tmp587,
	ldr	r2, [r4, r8]	@ prephitmp.1392, <variable>.CodecInfo.FwdFsID
	movw	r0, #11375	@ tmp584,
	ldr	r1, [r4, r7]	@ <variable>.CodecInfo.BwdFsID, <variable>.CodecInfo.BwdFsID
	strb	r3, [r4, r0]	@ iftmp.483, <variable>.CodecInfo.RefNum
	cmp	r2, r1	@ prephitmp.1392, <variable>.CodecInfo.BwdFsID
	beq	.L332	@,
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC19	@,
	movt	r1, #:upper16:.LC19	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:80296	@ tmp590,
	movt	r3, #:upper16:80296	@ tmp590,
	mov	r2, #0	@,
	ldr	r1, [r4, r8]	@, <variable>.CodecInfo.FwdFsID
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldr	r2, [r4, r7]	@ prephitmp.1392, <variable>.CodecInfo.BwdFsID
.L332:
	movw	r8, #46092	@ tmp595,
	movw	r7, #:lower16:80296	@ tmp597,
	ldr	ip, [r4, r8]	@ <variable>.CodecInfo.CurFsID, <variable>.CodecInfo.CurFsID
	movt	r7, #:upper16:80296	@ tmp597,
	movw	lr, #46084	@ tmp593,
	movw	r1, #46088	@ tmp594,
	str	r2, [r4, lr]	@ prephitmp.1392, <variable>.CodecInfo.FwdFsID
	mov	r2, #1	@,
	str	ip, [r4, r1]	@ <variable>.CodecInfo.CurFsID, <variable>.CodecInfo.BwdFsID
	mov	r1, ip	@, <variable>.CodecInfo.CurFsID
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	str	lr, [fp, #-336]	@,
	bl	FSP_SetRef	@
	ldr	r2, [fp, #-336]	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [r4, r2]	@, <variable>.CodecInfo.FwdFsID
	bl	FSP_RemovePmv	@
	movw	r1, #:lower16:.LC20	@,
	ldr	r2, [r4, r8]	@, <variable>.CodecInfo.CurFsID
	movt	r1, #:upper16:.LC20	@,
	mov	r0, #13	@,
	bl	dprint_vfmw	@
.L333:
	movw	r7, #11370	@ tmp607,
	ldrb	r2, [r4, r7]	@ zero_extendqisi2	@ <variable>.CodecInfo.UsedDecMode, <variable>.CodecInfo.UsedDecMode
	cmp	r2, #4	@ <variable>.CodecInfo.UsedDecMode,
	bne	.L334	@,
	movw	ip, #44808	@ tmp609,
	ldr	r3, [r4, ip]	@ prephitmp.1390, <variable>.CodecInfo.PictureHeader.PicCodType
	cmp	r3, #0	@ prephitmp.1390,
	bne	.L335	@,
.L390:
	movw	r9, #46100	@ tmp617,
	str	r3, [r4, r9]	@ prephitmp.1390, <variable>.CodecInfo.PPicFound
.L334:
	movw	r8, #:lower16:80296	@ tmp619,
	movt	r8, #:upper16:80296	@ tmp619,
	movw	r0, #46092	@ tmp620,
	ldr	r1, [r4, r0]	@, <variable>.CodecInfo.CurFsID
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	movw	r3, #46084	@ tmp622,
	ldr	r1, [r4, r3]	@, <variable>.CodecInfo.FwdFsID
	mov	r7, r0	@ pCur,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	mov	r9, r0	@ pFwd,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	movw	r8, #46088	@ tmp624,
	ldr	r1, [r4, r8]	@, <variable>.CodecInfo.BwdFsID
	bl	FSP_GetLogicFs	@
	cmp	r7, #0	@ pCur,
	cmpne	r9, #0	@, pFwd,
	mov	r8, r0	@ pBwd,
	beq	.L337	@,
	cmp	r0, #0	@ pBwd,
	beq	.L337	@,
	ldr	r3, [r7, #520]	@ D.39636, <variable>.pstDecodeFs
	cmp	r3, #0	@ D.39636,
	beq	.L339	@,
	ldr	lr, [r7, #528]	@ <variable>.pstTfOutFs, <variable>.pstTfOutFs
	cmp	lr, #0	@ <variable>.pstTfOutFs,
	beq	.L339	@,
	ldr	r2, [r7, #524]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	cmp	r2, #0	@ <variable>.pstDispOutFs,
	beq	.L339	@,
	ldr	r2, [r0, #520]	@ D.39643, <variable>.pstDecodeFs
	movw	r1, #:lower16:.LC23	@,
	movt	r1, #:upper16:.LC23	@,
	cmp	r2, #0	@ D.39643,
	ldrne	lr, [r2, #12]	@ iftmp.487, <variable>.PhyAddr
	ldreq	lr, [r3, #12]	@ iftmp.487, <variable>.PhyAddr
	str	lr, [r4, #56]	@ iftmp.487, <variable>.Rv8DecParam.BwdRefPhyAddr
	ldr	r0, [r9, #520]	@ D.39650, <variable>.pstDecodeFs
	cmp	r0, #0	@ D.39650,
	ldreq	r0, [r7, #520]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	ip, [r0, #12]	@ iftmp.488, <variable>.PhyAddr
	mov	r0, #13	@,
	str	ip, [r4, #60]	@ iftmp.488, <variable>.Rv8DecParam.FwdRefPhyAddr
	ldr	r3, [r7, #520]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	r2, [r3, #12]	@ D.39655, <variable>.PhyAddr
	str	r2, [r4, #64]	@ D.39655, <variable>.Rv8DecParam.CurPicPhyAddr
	ldr	r3, [r7, #532]	@, <variable>.PmvAddr
	str	r3, [fp, #-328]	@, %sfp
	str	r3, [r4, #80]	@, <variable>.Rv8DecParam.CurrPmvPhyAddr
	ldr	r3, [r8, #532]	@, <variable>.PmvAddr
	str	r3, [fp, #-320]	@, %sfp
	str	r3, [r4, #84]	@, <variable>.Rv8DecParam.ColPmvPhyAddr
	ldr	r3, [r7, #524]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	ldr	r3, [r3, #12]	@ D.39661, <variable>.PhyAddr
	stmia	sp, {ip, lr}	@ phole stm
	str	r3, [r4, #68]	@ D.39661, <variable>.Rv8DecParam.DispFramePhyAddr
	ldr	ip, [fp, #-328]	@, %sfp
	ldr	lr, [fp, #-320]	@, %sfp
	str	ip, [sp, #8]	@,
	str	lr, [sp, #12]	@,
	bl	dprint_vfmw	@
	ldr	ip, [r7, #524]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	movw	r1, #44808	@ tmp647,
	ldr	r2, [r4, r1]	@ <variable>.CodecInfo.PictureHeader.PicCodType, <variable>.CodecInfo.PictureHeader.PicCodType
	ldr	r3, [ip, #20]	@ <variable>.Stride, <variable>.Stride
	cmp	r2, #2	@ <variable>.CodecInfo.PictureHeader.PicCodType,
	str	r3, [r4, #72]	@ <variable>.Stride, <variable>.Rv8DecParam.DDRStride
	beq	.L408	@,
.L345:
	movw	r9, #44836	@ tmp669,
	movw	ip, #44848	@ tmp671,
	ldr	r3, [r4, r9]	@ <variable>.CodecInfo.PictureHeader.TR, <variable>.CodecInfo.PictureHeader.TR
	movw	r1, #44824	@ tmp674,
	sub	lr, r1, #4	@ tmp676, tmp676,
	movw	r2, #44808	@ tmp672,
	str	r3, [r7, #540]	@ <variable>.CodecInfo.PictureHeader.TR, <variable>.TR
	movw	r7, #46008	@ tmp678,
	ldr	r0, [r4, ip]	@, <variable>.CodecInfo.PictureHeader.PQUANT
	add	r8, r7, #4	@ tmp680, tmp680,
	movw	r3, #44912	@ tmp682,
	movw	ip, #44916	@ tmp684,
	ldr	r9, [r4, r2]	@ D.39973, <variable>.CodecInfo.PictureHeader.PicCodType
	str	r0, [fp, #-316]	@, %sfp
	ldr	r0, [r4, r1]	@ <variable>.CodecInfo.PictureHeader.pic_width_in_mb, <variable>.CodecInfo.PictureHeader.pic_width_in_mb
	cmp	r9, #2	@ D.39973,
	ldr	r1, [r4, lr]	@ <variable>.CodecInfo.PictureHeader.pic_height_in_mb, <variable>.CodecInfo.PictureHeader.pic_height_in_mb
	ldr	lr, [r4, r7]	@ <variable>.CodecInfo.Ratio0, <variable>.CodecInfo.Ratio0
	ldr	r7, [r4, r8]	@ <variable>.CodecInfo.Ratio1, <variable>.CodecInfo.Ratio1
	ldr	r8, [r4, ip]	@ <variable>.CodecInfo.PrevPicMb0QP, <variable>.CodecInfo.PrevPicMb0QP
	ldr	ip, [r4, r3]	@ <variable>.CodecInfo.PrevPicQP, <variable>.CodecInfo.PrevPicQP
	str	r0, [r4, #12]	@ <variable>.CodecInfo.PictureHeader.pic_width_in_mb, <variable>.Rv8DecParam.PicWidthInMb
	mov	r0, r5	@, pBs
	str	r7, [r4, #28]	@ <variable>.CodecInfo.Ratio1, <variable>.Rv8DecParam.Ratio1
	str	ip, [r4, #36]	@ <variable>.CodecInfo.PrevPicQP, <variable>.Rv8DecParam.PrevPicQP
	str	r1, [r4, #16]	@ <variable>.CodecInfo.PictureHeader.pic_height_in_mb, <variable>.Rv8DecParam.PicHeightInMb
	str	lr, [r4, #24]	@ <variable>.CodecInfo.Ratio0, <variable>.Rv8DecParam.Ratio0
	str	r8, [r4, #40]	@ <variable>.CodecInfo.PrevPicMb0QP, <variable>.Rv8DecParam.PrevPicMb0QP
	strb	r9, [r4, #20]	@ D.39973, <variable>.Rv8DecParam.PicCodingType
	ldr	r8, [fp, #-316]	@, %sfp
	strne	r8, [r4, r3]	@, <variable>.CodecInfo.PrevPicQP
	str	r8, [r4, #32]	@, <variable>.Rv8DecParam.PQUANT
	bl	BsPos	@
	movw	ip, #44888	@ tmp687,
	add	r2, ip, #32	@ tmp690, tmp690,
	ldr	r7, [r4, r2]	@ <variable>.CodecInfo.TotalSliceNum, <variable>.CodecInfo.TotalSliceNum
	ands	r0, r0, #-2147483641	@ tmp688,,
	submi	r0, r0, #1	@ tmp922, tmp688,
	mvnmi	r0, r0, asl #29	@ tmp923, tmp922,
	mvnmi	r0, r0, lsr #29	@ tmp923, tmp923,
	addmi	r0, r0, #1	@ tmp688, tmp923,
	cmp	r7, #1	@ <variable>.CodecInfo.TotalSliceNum,
	str	r0, [r4, ip]	@ tmp688, <variable>.CodecInfo.SliceHeader.bit_offset_0
	beq	.L409	@,
	movw	ip, #44928	@ tmp700,
	sub	r1, ip, #4	@ tmp701, tmp701,
	ldr	r7, [r4, ip]	@ <variable>.CodecInfo.SliceByteOffset, <variable>.CodecInfo.SliceByteOffset
	mov	r0, r5	@, pBs
	ldr	r3, [r4, r1]	@ <variable>.CodecInfo.SliceByteOffset, <variable>.CodecInfo.SliceByteOffset
.L392:
	rsb	lr, r3, r7	@ tmp702, <variable>.CodecInfo.SliceByteOffset, <variable>.CodecInfo.SliceByteOffset
	movw	r7, #44892	@ tmp705,
	mov	r9, lr, asl #3	@ D.39713, tmp702,
	bl	BsPos	@
	rsb	r0, r0, r9	@ tmp706,, D.39713
	str	r0, [r4, r7]	@ tmp706, <variable>.CodecInfo.SliceHeader.bit_len_0
	movw	r7, #45952	@ tmp707,
	ldr	r1, [fp, #-348]	@, %sfp
	ldr	r3, [r4, r7]	@ <variable>.CodecInfo.BsPhyAddr, <variable>.CodecInfo.BsPhyAddr
	mov	r0, r5	@, pBs
	add	r9, r1, r3	@ D.39719,, <variable>.CodecInfo.BsPhyAddr
	bl	BsPos	@
	movw	r2, #44852	@ tmp721,
	movw	r3, #44920	@ tmp736,
	ldr	ip, [r4, r2]	@, <variable>.CodecInfo.PictureHeader.OSVQUANT
	movw	r2, #44844	@ tmp723,
	movw	r1, #44888	@ tmp727,
	str	ip, [r4, #116]	@, <variable>.osvquant
	ldr	ip, [r4, r3]	@, <variable>.CodecInfo.TotalSliceNum
	movw	r3, #44868	@ tmp720,
	add	r8, r0, #7	@ tmp711, D.39720,
	cmp	r0, #0	@ D.39720,
	movlt	r0, r8	@ D.39720, tmp711
	ldr	r8, [r4, r2]	@ D.39725, <variable>.CodecInfo.PictureHeader.Deblocking_Filter_Passthrough
	movw	r2, #44892	@ tmp729,
	cmp	ip, #1	@,
	ldr	ip, [r4, r2]	@, <variable>.CodecInfo.SliceHeader.bit_len_0
	add	r2, r3, #4	@ tmp722, tmp722,
	str	ip, [r4, #104]	@, <variable>.StreamLength
	add	ip, r9, r0, asr #3	@, D.39723, D.39719, D.39720,
	ldr	r0, [fp, #-316]	@, %sfp
	str	r0, [r4, r3]	@, <variable>.CodecInfo.SliceHeader.SliceQP
	movw	r0, #44876	@ tmp724,
	ldr	r9, [r4, #116]	@, <variable>.osvquant
	add	r3, r0, #4	@ tmp725, tmp725,
	str	r8, [r4, r0]	@ D.39725, <variable>.CodecInfo.SliceHeader.dblk_filter_passthrough
	str	r9, [r4, r2]	@, <variable>.CodecInfo.SliceHeader.osvquant
	mov	r2, #0	@ tmp715,
	str	r2, [r4, r3]	@ tmp715, <variable>.CodecInfo.SliceHeader.first_mb_in_slice
	movw	r3, #44896	@,
	str	ip, [r4, #88]	@ D.39723, <variable>.StreamPhyAddr
	mov	r9, #1	@ tmp735,
	ldr	r0, [r4, r1]	@, <variable>.CodecInfo.SliceHeader.bit_offset_0
	movw	r1, #44900	@,
	str	r8, [r4, #112]	@ D.39725, <variable>.dblk_filter_passthrough
	movw	r8, #44904	@,
	str	r2, [r4, #124]	@ tmp715, <variable>.first_mb_in_slice
	str	r0, [r4, #96]	@, <variable>.StreamBitOffset
	str	r2, [r4, r8]	@ tmp715, <variable>.CodecInfo.SliceHeader.bit_len_1
	add	r8, r3, #12	@,,
	str	ip, [r4, r3]	@ D.39723, <variable>.CodecInfo.SliceHeader.bit_stream_addr_0
	str	r2, [r4, r1]	@ tmp715, <variable>.CodecInfo.SliceHeader.bit_offset_1
	str	r2, [r4, r8]	@ tmp715, <variable>.CodecInfo.SliceHeader.bit_stream_addr_1
	str	r2, [r4, #92]	@ tmp715, <variable>.StreamPhyAddr
	str	r2, [r4, #100]	@ tmp715, <variable>.StreamBitOffset
	str	r2, [r4, #108]	@ tmp715, <variable>.StreamLength
	ldr	r0, [fp, #-316]	@, %sfp
	str	r9, [r4, #44]	@ tmp735, <variable>.Rv8DecParam.TotalSliceNum
	str	r0, [r4, #120]	@, <variable>.sliceqp
	bls	.L355	@,
	movw	ip, #44928	@ tmp738,
	ldr	r8, [r4, ip]	@ <variable>.CodecInfo.SliceByteOffset, <variable>.CodecInfo.SliceByteOffset
	add	r8, sl, r8	@ PrevOffsetBytes.1474, PrevHeaderBytes, <variable>.CodecInfo.SliceByteOffset
	cmp	r8, #3145728	@ PrevOffsetBytes.1474,
	bge	.L357	@,
	cmp	r8, #73	@ PrevOffsetBytes.1474,
	ble	.L357	@,
	movw	r1, #45956	@ tmp741,
	ldr	r2, [r4, r1]	@ <variable>.CodecInfo.BsLength, <variable>.CodecInfo.BsLength
	rsb	r2, r8, r2	@ temp.1559, PrevOffsetBytes.1474, <variable>.CodecInfo.BsLength
	cmp	r2, #0	@ temp.1559,
	strgt	r9, [fp, #-320]	@ i.1477, %sfp
	bgt	.L360	@,
	b	.L357	@
.L361:
	movw	r2, #44920	@,
	add	r9, r9, #1	@ i.1477, i.1477,
	ldr	r0, [r4, r2]	@ <variable>.CodecInfo.TotalSliceNum, <variable>.CodecInfo.TotalSliceNum
	cmp	r0, r9	@ <variable>.CodecInfo.TotalSliceNum, i.1477
	bls	.L355	@,
	ldr	r0, [fp, #-324]	@, %sfp
	ldr	r3, [r0, #4]	@ tmp743, <variable>.CodecInfo.SliceByteOffset
	add	r8, sl, r3	@ PrevOffsetBytes.1474, PrevHeaderBytes, tmp743
	cmp	r8, #3145728	@ PrevOffsetBytes.1474,
	bge	.L357	@,
	cmp	r8, #73	@ PrevOffsetBytes.1474,
	ble	.L357	@,
	ldr	r1, [fp, #-324]	@, %sfp
	movw	ip, #45956	@ tmp747,
	add	r2, r1, #4	@,,
	str	r2, [fp, #-324]	@, %sfp
	ldr	lr, [r4, ip]	@ <variable>.CodecInfo.BsLength, <variable>.CodecInfo.BsLength
	rsb	r2, r8, lr	@ temp.1559, PrevOffsetBytes.1474, <variable>.CodecInfo.BsLength
	cmp	r2, #0	@ temp.1559,
	ble	.L357	@,
.L360:
	movw	r1, #11360	@ tmp751,
	mov	r0, r5	@, pBs
	ldr	lr, [r4, r1]	@ <variable>.CodecInfo.BsVirAddr, <variable>.CodecInfo.BsVirAddr
	add	r1, r8, lr	@, PrevOffsetBytes.1474, <variable>.CodecInfo.BsVirAddr
	bl	BsInit	@
	mov	r0, r5	@, pBs
	mov	r1, #0	@,
	sub	r2, fp, #48	@,,
	sub	r3, fp, #52	@,,
	sub	ip, fp, #56	@,,
	str	r6, [sp, #4]	@ pPictureHeader,
	str	ip, [sp, #0]	@,
	bl	Real8_CB_GetSliceHeader	@
	cmp	r0, #1	@ found_ssc,
	bne	.L361	@,
	movw	r3, #44824	@,
	ldr	r2, [fp, #-48]	@, iSliceMBA
	ldr	r7, [r4, r3]	@ <variable>.CodecInfo.PictureHeader.pic_width_in_mb, <variable>.CodecInfo.PictureHeader.pic_width_in_mb
	cmp	r7, #0	@ <variable>.CodecInfo.PictureHeader.pic_width_in_mb,
	str	r2, [fp, #-328]	@, %sfp
	beq	.L410	@,
	ldr	r3, [fp, #-56]	@ iSQUANT.496, iSQUANT
	mov	r0, r5	@, pBs
	ldr	lr, [fp, #-316]	@, %sfp
	cmp	r3, #0	@ iSQUANT.496,
	movge	lr, r3	@, iSQUANT.496
	str	lr, [fp, #-316]	@, %sfp
	bl	BsPos	@
	movw	r2, #44920	@,
	ldr	r3, [r4, r2]	@ <variable>.CodecInfo.TotalSliceNum, <variable>.CodecInfo.TotalSliceNum
	movw	ip, #44888	@,
	ands	r1, r0, #-2147483641	@ tmp762,,
	sub	r0, r3, #1	@ D.39516, <variable>.CodecInfo.TotalSliceNum,
	submi	r1, r1, #1	@ tmp924, tmp762,
	mvnmi	r1, r1, asl #29	@ tmp925, tmp924,
	mvnmi	r1, r1, lsr #29	@ tmp925, tmp925,
	addmi	r1, r1, #1	@ tmp762, tmp925,
	cmp	r0, r9	@ D.39516, i.1477
	str	r1, [r4, ip]	@ tmp762, <variable>.CodecInfo.SliceHeader.bit_offset_0
	beq	.L411	@,
	cmp	r9, #254	@ i.1477,
	bhi	.L412	@,
	ldr	r3, [fp, #-324]	@, %sfp
	mov	r0, r5	@, pBs
	ldr	lr, [fp, #-324]	@, %sfp
	ldr	r2, [r3, #4]	@ tmp782, <variable>.CodecInfo.SliceByteOffset
	ldr	r3, [lr, #0]	@ tmp783, <variable>.CodecInfo.SliceByteOffset
.L393:
	rsb	lr, r3, r2	@ tmp781, tmp783, tmp782
	mov	r7, lr, asl #3	@ D.39755, tmp781,
	bl	BsPos	@
	movw	ip, #44892	@ tmp784,
	rsb	r0, r0, r7	@ tmp785,, D.39755
	movw	r7, #45952	@,
	ldr	r1, [r4, r7]	@ <variable>.CodecInfo.BsPhyAddr, <variable>.CodecInfo.BsPhyAddr
	mov	r7, #0	@ tmp794,
	str	r0, [r4, ip]	@ tmp785, <variable>.CodecInfo.SliceHeader.bit_len_0
	mov	r0, r5	@, pBs
	add	r2, r8, r1	@, PrevOffsetBytes.1474, <variable>.CodecInfo.BsPhyAddr
	str	r2, [fp, #-348]	@, %sfp
	bl	BsPos	@
	ldr	r8, [fp, #-320]	@, %sfp
	movw	ip, #44852	@ tmp800,
	sub	r1, ip, #8	@ tmp802, tmp802,
	mov	r3, #44	@ tmp807,
	mla	r3, r3, r8, r4	@ tmp808, tmp807,, pCtx
	ldr	r8, [r4, ip]	@ temp.1533, <variable>.CodecInfo.PictureHeader.OSVQUANT
	ldr	ip, [r4, r1]	@ temp.1534, <variable>.CodecInfo.PictureHeader.Deblocking_Filter_Passthrough
	ldr	r1, [fp, #-316]	@, %sfp
	add	r2, r0, #7	@ tmp790, D.39759,
	cmp	r0, r7	@ D.39759,
	movlt	r0, r2	@ D.39759, tmp790
	movw	r2, #44868	@ tmp799,
	str	r1, [r4, r2]	@, <variable>.CodecInfo.SliceHeader.SliceQP
	add	r2, r2, #4	@ tmp801, tmp801,
	str	r8, [r4, r2]	@ temp.1533, <variable>.CodecInfo.SliceHeader.osvquant
	ldr	r1, [fp, #-348]	@, %sfp
	add	r2, r1, r0, asr #3	@, D.39762,, D.39759,
	movw	r0, #44876	@ tmp803,
	str	ip, [r4, r0]	@ temp.1534, <variable>.CodecInfo.SliceHeader.dblk_filter_passthrough
	add	r1, r0, #4	@ tmp804, tmp804,
	ldr	r0, [fp, #-328]	@, %sfp
	str	r0, [r4, r1]	@, <variable>.CodecInfo.SliceHeader.first_mb_in_slice
	ldr	r0, [fp, #-320]	@, %sfp
	add	r1, r0, #1	@,,
	movw	r0, #44896	@,
	str	r1, [fp, #-320]	@, %sfp
	cmp	r1, #131	@,
	str	r2, [r4, r0]	@ D.39762, <variable>.CodecInfo.SliceHeader.bit_stream_addr_0
	add	r0, r0, #8	@,,
	movw	r1, #44900	@,
	str	r7, [r4, r1]	@ tmp794, <variable>.CodecInfo.SliceHeader.bit_offset_1
	add	r1, r1, #8	@,,
	str	r7, [r4, r0]	@ tmp794, <variable>.CodecInfo.SliceHeader.bit_len_1
	sub	r0, r0, #16	@,,
	str	r7, [r4, r1]	@ tmp794, <variable>.CodecInfo.SliceHeader.bit_stream_addr_1
	str	r2, [r3, #88]	@ D.39762, <variable>.StreamPhyAddr
	movw	r2, #44892	@ tmp822,
	ldr	r1, [r4, r0]	@ <variable>.CodecInfo.SliceHeader.bit_offset_0, <variable>.CodecInfo.SliceHeader.bit_offset_0
	str	r1, [r3, #96]	@ <variable>.CodecInfo.SliceHeader.bit_offset_0, <variable>.StreamBitOffset
	ldr	r1, [fp, #-328]	@, %sfp
	ldr	r0, [r4, r2]	@ <variable>.CodecInfo.SliceHeader.bit_len_0, <variable>.CodecInfo.SliceHeader.bit_len_0
	str	ip, [r3, #112]	@ temp.1534, <variable>.dblk_filter_passthrough
	str	r1, [r3, #124]	@, <variable>.first_mb_in_slice
	str	r0, [r3, #104]	@ <variable>.CodecInfo.SliceHeader.bit_len_0, <variable>.StreamLength
	str	r8, [r3, #116]	@ temp.1533, <variable>.osvquant
	str	r7, [r3, #92]	@ tmp794, <variable>.StreamPhyAddr
	str	r7, [r3, #100]	@ tmp794, <variable>.StreamBitOffset
	str	r7, [r3, #108]	@ tmp794, <variable>.StreamLength
	ldr	ip, [fp, #-316]	@, %sfp
	str	ip, [r3, #120]	@, <variable>.sliceqp
	ldr	r1, [fp, #-320]	@, %sfp
	str	r1, [r4, #44]	@, <variable>.Rv8DecParam.TotalSliceNum
	ble	.L361	@,
	mov	r0, r4	@, pCtx
	bl	Real8_ModifySliceMsg	@
	cmp	r0, #1	@,
	bne	.L395	@,
	ldr	r8, [fp, #-304]	@, %sfp
	cmp	r8, #0	@,
	str	r8, [r4, #4]	@, <variable>.pRv8DecParam
	beq	.L413	@,
	ldr	r3, [r4, #0]	@ temp.1538, <variable>.pstExtraData
	ldr	r2, [r3, #896]	@ D.39775, <variable>.stDisParams.s32Mode
	cmp	r2, #1	@ D.39775,
	beq	.L414	@,
	cmp	r2, #2	@ D.39775,
	bne	.L361	@,
	ldr	r0, [r3, #900]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	cmp	r0, #0	@ <variable>.stDisParams.s32DisNums,
	ble	.L361	@,
	ldr	r3, [fp, #-304]	@, %sfp
	ldrb	r1, [r3, #12]	@ zero_extendqisi2	@ <variable>.PicCodingType, <variable>.PicCodingType
	cmp	r1, #2	@ <variable>.PicCodingType,
	bne	.L361	@,
	movw	r1, #:lower16:80296	@ tmp875,
	movt	r1, #:upper16:80296	@ tmp875,
	movw	lr, #46092	@ tmp876,
	mov	r2, r7	@, tmp794
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	str	r7, [r4, #4]	@ tmp794, <variable>.pRv8DecParam
	ldr	r1, [r4, lr]	@, <variable>.CodecInfo.CurFsID
	bl	FSP_SetDisplay	@
	ldr	ip, [r4, #0]	@ temp.1544, <variable>.pstExtraData
	mov	r0, #8	@,
	mov	r1, r4	@, pCtx
	ldr	r3, [ip, #900]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	sub	r2, r3, #1	@ tmp878, <variable>.stDisParams.s32DisNums,
	str	r2, [ip, #900]	@ tmp878, <variable>.stDisParams.s32DisNums
	bl	ReleasePacket	@
	mov	r0, r7	@ D.39434, tmp794
	b	.L307	@
.L401:
	cmp	r1, sl	@ i, pretmp.1386
	bcs	.L385	@,
	ldr	r9, [fp, #-324]	@, %sfp
	mov	r1, #1	@ i,
	ldr	lr, [fp, #-320]	@, %sfp
	ldr	ip, [r9, #0]	@ D.39512, <variable>.CodecInfo.SliceByteOffset
	add	r2, lr, #132	@ ivtmp.1418,,
	ldr	r0, [r9, #-4]	@ D.39507, <variable>.CodecInfo.SliceByteOffset
	cmp	ip, r0	@ D.39512, D.39507
	bgt	.L388	@,
	b	.L310	@
.L402:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC13	@,
	movt	r1, #:upper16:.LC13	@,
	bl	dprint_vfmw	@
	mov	r0, r9	@ D.39434, tmp489
	b	.L307	@
.L320:
	mov	r0, #18	@,
	movw	r1, #:lower16:.LC14	@,
	movt	r1, #:upper16:.LC14	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.39434,
	b	.L307	@
.L405:
	movw	lr, #45984	@ tmp555,
	movw	r1, #:lower16:.LC17	@,
	ldr	r2, [r4, lr]	@, <variable>.CodecInfo.FrmCnt
	movt	r1, #:upper16:.LC17	@,
	bl	dprint_vfmw	@
	mov	r0, r7	@ D.39434, D.39575
	b	.L307	@
.L335:
	cmp	r3, #2	@ prephitmp.1390,
	beq	.L415	@,
	cmp	r3, #1	@ prephitmp.1390,
	bne	.L334	@,
	b	.L390	@
.L407:
	movw	ip, #11375	@ tmp580,
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ <variable>.CodecInfo.RefNum, <variable>.CodecInfo.RefNum
	cmp	r2, #0	@ <variable>.CodecInfo.RefNum,
	beq	.L310	@,
.L330:
	mov	r3, #2	@ iftmp.483,
	b	.L331	@
.L339:
	movw	ip, #:lower16:80296	@ tmp638,
	movt	ip, #:upper16:80296	@ tmp638,
	movw	r1, #46092	@ tmp639,
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	ldr	r1, [r4, r1]	@, <variable>.CodecInfo.CurFsID
	bl	FSP_ClearLogicFs	@
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC22	@,
	movt	r1, #:upper16:.LC22	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.39434,
	b	.L307	@
.L337:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC21	@,
	ldr	r2, .L417+4	@,
	movt	r1, #:upper16:.LC21	@,
	movw	r3, #1915	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.39434,
	b	.L307	@
.L403:
	movw	r0, #11372	@ tmp540,
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CodecInfo.Imgbuf_allocated, <variable>.CodecInfo.Imgbuf_allocated
	cmp	r1, #0	@ <variable>.CodecInfo.Imgbuf_allocated,
	bne	.L323	@,
.L324:
	mov	r0, r9	@, D.39551
	bl	ResetVoQueue	@
	b	.L389	@
.L406:
	movw	r3, #11375	@ tmp603,
	ldrb	r0, [r4, r3]	@ zero_extendqisi2	@ <variable>.CodecInfo.RefNum, <variable>.CodecInfo.RefNum
	cmp	r0, #1	@ <variable>.CodecInfo.RefNum,
	bhi	.L333	@,
	ldr	lr, [fp, #-320]	@, %sfp
	mov	r2, #1	@,
	ldr	r1, [r4, ip]	@, <variable>.CodecInfo.CurFsID
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	mov	r0, #0	@ D.39434,
	b	.L307	@
.L404:
	add	r0, r0, #1	@,,
	movw	r1, #:lower16:.LC16	@,
	movt	r1, #:upper16:.LC16	@,
	bl	dprint_vfmw	@
	mov	r0, r8	@ D.39434, D.39569
	b	.L307	@
.L357:
	movw	r3, #:lower16:80296	@ tmp749,
	movt	r3, #:upper16:80296	@ tmp749,
	movw	r0, #46092	@ tmp750,
	mov	r2, #1	@,
	ldr	r1, [r4, r0]	@, <variable>.CodecInfo.CurFsID
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	mov	r0, #0	@ D.39434,
	b	.L307	@
.L409:
	movw	lr, #45956	@ tmp692,
	movw	r7, #44924	@ tmp695,
	ldr	r8, [r4, lr]	@ <variable>.CodecInfo.BsLength, <variable>.CodecInfo.BsLength
	mov	r0, r5	@, pBs
	ldr	r3, [r4, r7]	@ <variable>.CodecInfo.SliceByteOffset, <variable>.CodecInfo.SliceByteOffset
	rsb	r7, sl, r8	@ tmp693, PrevHeaderBytes, <variable>.CodecInfo.BsLength
	b	.L392	@
.L408:
	movw	lr, #44836	@ tmp649,
	ldr	r2, [r9, #540]	@ D.39676, <variable>.TR
	ldr	r1, [r4, lr]	@ <variable>.CodecInfo.PictureHeader.TR, <variable>.CodecInfo.PictureHeader.TR
	ldr	r9, [r8, #540]	@ <variable>.TR, <variable>.TR
	subs	r3, r1, r2	@ trb, <variable>.CodecInfo.PictureHeader.TR, D.39676
	rsb	r8, r2, r9	@ trd, D.39676, <variable>.TR
	movwmi	r2, #44832	@ tmp652,
	ldrmi	r2, [r4, r2]	@ <variable>.CodecInfo.PictureHeader.m_uTRWrap, <variable>.CodecInfo.PictureHeader.m_uTRWrap
	addmi	r3, r3, r2	@ trb, trb, <variable>.CodecInfo.PictureHeader.m_uTRWrap
	cmp	r8, #0	@ trd,
	movwlt	r2, #44832	@ tmp654,
	ldrlt	r2, [r4, r2]	@ <variable>.CodecInfo.PictureHeader.m_uTRWrap, <variable>.CodecInfo.PictureHeader.m_uTRWrap
	addlt	r8, r8, r2	@ trd, trd, <variable>.CodecInfo.PictureHeader.m_uTRWrap
	cmp	r3, r8	@ trb, trd
	movgt	r3, #0	@ trb,
	cmp	r8, #0	@ trd,
	movle	r0, #0	@ prephitmp.1557,
	movle	r2, r0	@ prephitmp.1388, prephitmp.1557
	ble	.L350	@,
	mov	r1, r8	@, trd
	mov	r0, r3, asl #14	@, trb,
	str	r3, [fp, #-336]	@,
	bl	__aeabi_idiv	@
	ldr	r3, [fp, #-336]	@,
	mov	r1, r8	@, trd
	mov	ip, r0	@ prephitmp.1388,
	rsb	r0, r3, r8	@ tmp660, trb, trd
	str	ip, [fp, #-332]	@,
	mov	r0, r0, asl #14	@, tmp660,
	bl	__aeabi_idiv	@
	ldr	r3, [fp, #-336]	@,
	ldr	r2, [fp, #-332]	@,
.L350:
	movw	r1, #46004	@ tmp666,
	add	r9, r1, #4	@ tmp667, tmp667,
	str	r8, [r4, r1]	@ trd, <variable>.CodecInfo.trd
	add	r8, r9, #4	@ tmp668, tmp668,
	movw	lr, #46000	@ tmp665,
	str	r2, [r4, r9]	@ prephitmp.1388, <variable>.CodecInfo.Ratio0
	str	r3, [r4, lr]	@ trb, <variable>.CodecInfo.trb
	str	r0, [r4, r8]	@ prephitmp.1557, <variable>.CodecInfo.Ratio1
	b	.L345	@
.L411:
	add	r2, r3, #11200	@ tmp769, <variable>.CodecInfo.TotalSliceNum,
	movw	r0, #45956	@ tmp766,
	add	ip, r2, #29	@ tmp769, tmp769,
	ldr	r1, [r4, r0]	@ <variable>.CodecInfo.BsLength, <variable>.CodecInfo.BsLength
	mov	r0, r5	@, pBs
	add	r7, r4, ip, asl #2	@, tmp773, pCtx, tmp769,
	rsb	r2, sl, r1	@ tmp767, PrevHeaderBytes, <variable>.CodecInfo.BsLength
	ldr	r3, [r7, #4]	@ tmp776, <variable>.CodecInfo.SliceByteOffset
	b	.L393	@
.L355:
	ldr	r5, [r4, #4]	@ <variable>.pRv8DecParam, <variable>.pRv8DecParam
	mov	r6, #1	@ tmp881,
	str	r6, [r4, #48]	@ tmp881, <variable>.Rv8DecParam.FstSlcGrp
	cmp	r5, #0	@ <variable>.pRv8DecParam,
	beq	.L416	@,
.L372:
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r1, #11352	@ tmp885,
	mov	r0, #1	@ D.39434,
	ldr	lr, [r2, #684]	@ <variable>.s32Compress_en, <variable>.s32Compress_en
	str	lr, [r4, r1]	@ <variable>.s32Compress_en, <variable>.Rv8DecParam.Compress_en
	b	.L307	@
.L410:
	movw	r3, #:lower16:80296	@ tmp759,
	movt	r3, #:upper16:80296	@ tmp759,
	mov	r2, r0	@, found_ssc
.L394:
	movw	r1, #46092	@ tmp863,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	ldr	r1, [r4, r1]	@, <variable>.CodecInfo.CurFsID
	bl	FSP_ClearLogicFs	@
	mov	r0, r7	@ D.39434, tmp794
	b	.L307	@
.L416:
	mov	r0, r4	@, pCtx
	bl	Real8_ModifySliceMsg	@
	cmp	r0, r6	@,
	ldreq	r2, [fp, #-304]	@, %sfp
	streq	r2, [r4, #4]	@, <variable>.pRv8DecParam
	beq	.L372	@,
	movw	ip, #:lower16:80296	@ tmp883,
	movt	ip, #:upper16:80296	@ tmp883,
	movw	r3, #46092	@ tmp884,
	mov	r2, r6	@, tmp881
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	ldr	r1, [r4, r3]	@, <variable>.CodecInfo.CurFsID
	bl	FSP_ClearLogicFs	@
	mov	r0, r5	@ D.39434, <variable>.pRv8DecParam
	b	.L307	@
.L415:
	movw	r1, #46100	@ tmp613,
	ldr	r7, [r4, r1]	@ <variable>.CodecInfo.PPicFound, <variable>.CodecInfo.PPicFound
	cmp	r7, #0	@ <variable>.CodecInfo.PPicFound,
	bne	.L334	@,
.L395:
	movw	r3, #:lower16:80296	@ tmp862,
	mov	r2, #1	@,
	movt	r3, #:upper16:80296	@ tmp862,
	b	.L394	@
.L412:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC24	@,
	movw	r2, #2066	@,
	movt	r1, #:upper16:.LC24	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.39434,
	b	.L307	@
.L326:
	ldr	r9, [fp, #-320]	@, %sfp
	mov	r2, #1	@,
	ldr	r1, [r4, ip]	@, <variable>.CodecInfo.CurFsID
	ldr	r0, [r4, r9]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	mov	r0, r7	@ D.39434, pImg
	b	.L307	@
.L414:
	ldr	r2, [fp, #-304]	@, %sfp
	ldrb	r3, [r2, #12]	@ zero_extendqisi2	@ <variable>.PicCodingType, <variable>.PicCodingType
	cmp	r3, #2	@ <variable>.PicCodingType,
	bne	.L361	@,
	movw	lr, #:lower16:80296	@ tmp870,
	movt	lr, #:upper16:80296	@ tmp870,
	movw	ip, #46092	@ tmp871,
	mov	r2, r7	@, tmp794
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	ldr	r1, [r4, ip]	@, <variable>.CodecInfo.CurFsID
	str	r7, [r4, #4]	@ tmp794, <variable>.pRv8DecParam
	bl	FSP_SetDisplay	@
	mov	r0, #8	@,
	mov	r1, r4	@, pCtx
	bl	ReleasePacket	@
	mov	r0, r7	@ D.39434, tmp794
	b	.L307	@
.L413:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC25	@,
	ldr	r2, .L417+4	@,
	movt	r1, #:upper16:.LC25	@,
	movw	r3, #2097	@,
	bl	dprint_vfmw	@
	ldr	r0, [fp, #-304]	@ D.39434, %sfp
	b	.L307	@
.L418:
	.align	2
.L417:
	.word	.LANCHOR0+24
	.word	.LANCHOR0+528
	.fnend
	.size	REAL8DEC_Decode, .-REAL8DEC_Decode
	.section	.rodata
	.align	2
.LANCHOR0 = . + 0
	.type	MBA_FieldWidth, %object
	.size	MBA_FieldWidth, 24
MBA_FieldWidth:
	.word	6
	.word	7
	.word	9
	.word	11
	.word	13
	.word	14
	.type	C.460.38886, %object
	.size	C.460.38886, 36
C.460.38886:
	.word	0
	.word	1
	.word	1
	.word	2
	.word	2
	.word	3
	.word	3
	.word	3
	.word	3
	.type	gs_VLCDecodeTable, %object
	.size	gs_VLCDecodeTable, 256
gs_VLCDecodeTable:
	.byte	-128
	.byte	-127
	.byte	112
	.byte	112
	.byte	-126
	.byte	-125
	.byte	113
	.byte	113
	.byte	80
	.byte	80
	.byte	80
	.byte	80
	.byte	80
	.byte	80
	.byte	80
	.byte	80
	.byte	-124
	.byte	-123
	.byte	114
	.byte	114
	.byte	-122
	.byte	-121
	.byte	115
	.byte	115
	.byte	81
	.byte	81
	.byte	81
	.byte	81
	.byte	81
	.byte	81
	.byte	81
	.byte	81
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	48
	.byte	-120
	.byte	-119
	.byte	116
	.byte	116
	.byte	-118
	.byte	-117
	.byte	117
	.byte	117
	.byte	82
	.byte	82
	.byte	82
	.byte	82
	.byte	82
	.byte	82
	.byte	82
	.byte	82
	.byte	-116
	.byte	-115
	.byte	118
	.byte	118
	.byte	-114
	.byte	-113
	.byte	119
	.byte	119
	.byte	83
	.byte	83
	.byte	83
	.byte	83
	.byte	83
	.byte	83
	.byte	83
	.byte	83
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	49
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.byte	16
	.type	s_RVVersionEncodingToMinorVersion, %object
	.size	s_RVVersionEncodingToMinorVersion, 32
s_RVVersionEncodingToMinorVersion:
	.word	2
	.word	9999
	.word	9999
	.word	9999
	.word	9999
	.word	9999
	.word	9999
	.word	9999
	.type	GetBitsMask, %object
	.size	GetBitsMask, 100
GetBitsMask:
	.word	0
	.word	1
	.word	3
	.word	7
	.word	15
	.word	31
	.word	63
	.word	127
	.word	255
	.word	511
	.word	1023
	.word	2047
	.word	4095
	.word	8191
	.word	16383
	.word	32767
	.word	65535
	.word	131071
	.word	262143
	.word	524287
	.word	1048575
	.word	2097151
	.word	4194303
	.word	8388607
	.word	16777215
	.type	C.450.38811, %object
	.size	C.450.38811, 32
C.450.38811:
	.word	160
	.word	176
	.word	240
	.word	320
	.word	352
	.word	640
	.word	704
	.word	0
	.type	C.451.38812, %object
	.size	C.451.38812, 32
C.451.38812:
	.word	120
	.word	132
	.word	144
	.word	240
	.word	288
	.word	480
	.word	0
	.word	0
	.type	C.452.38813, %object
	.size	C.452.38813, 16
C.452.38813:
	.word	180
	.word	360
	.word	576
	.word	0
	.type	__func__.39421, %object
	.size	__func__.39421, 16
__func__.39421:
	.ascii	"REAL8DEC_Decode\000"
	.section	.rodata.str1.4,"aMS",%progbits,1
	.align	2
.LC0:
	.ascii	"Decoding quits at frm %d\012\000"
	.space	2
.LC1:
	.ascii	"-1 == VCTRL_GetChanIDByCtx() Err! \012\000"
.LC2:
	.ascii	"ErrRatio = %d\012\000"
	.space	1
.LC3:
	.ascii	"DEBUG: DEC over\012\000"
	.space	3
.LC4:
	.ascii	"insert buf %d ref %d\012\000"
	.space	2
.LC5:
	.ascii	"image size abnormal (%dx%d) in MB\012\000"
	.space	1
.LC6:
	.ascii	"real8 actual frame size(%dx%d) exeed max config(%dx"
	.ascii	"%d)\012\000"
.LC7:
	.ascii	"partition fs memory fail!\012\000"
	.space	1
.LC8:
	.ascii	"get frame store fail!\012\000"
	.space	1
.LC9:
	.ascii	"line: %d, pImage is NULL!\012\000"
	.space	1
.LC10:
	.ascii	"get image buffer ok: LogicFsID = %d\012\000"
	.space	3
.LC11:
	.ascii	"decode %p, disp %p, tf %p\012\000"
	.space	1
.LC12:
	.ascii	"ERROR: frm %d, Invalid packet pointer!\012\000"
.LC13:
	.ascii	"Real8_CB_GetPictureHeader Error!\012\000"
	.space	2
.LC14:
	.ascii	"pic width/height to large,MbWidth = %d, MbHeight = "
	.ascii	"%d\000"
	.space	2
.LC15:
	.ascii	"new seq size %d * %d\012\000"
	.space	2
.LC16:
	.ascii	"Real8_ArrangeVHBMem err\012\000"
	.space	3
.LC17:
	.ascii	"Fatal Error: frm%d, get image buffer failed\012\000"
	.space	3
.LC18:
	.ascii	"dec_pts: %lld Usertag = %lld\012\000"
	.space	2
.LC19:
	.ascii	"---------- unref %d\012\000"
	.space	3
.LC20:
	.ascii	"++++++++++ ref %d\012\000"
	.space	1
.LC21:
	.ascii	"%s %d unknow error!!\012\000"
	.space	2
.LC22:
	.ascii	"CurFsID abnormal!\012\000"
	.space	1
.LC23:
	.ascii	"dec addr: cur,cur2d,fwd,bwd,currpmv,colpmv = %p,%p,"
	.ascii	"%p,%p,%p,%p\012\000"
.LC24:
	.ascii	"line:%d! i > (RV8_MAX_SLC_PARAM_NUM - 2)\012\000"
	.space	2
.LC25:
	.ascii	"%s %d NULL == pCtx->pRv8DecParam!!\012\000"
	.ident	"GCC: (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) 4.4.1"
	.section	.note.GNU-stack,"",%progbits
