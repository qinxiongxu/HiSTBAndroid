	.arch armv7-a
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 2
	.eabi_attribute 18, 4
	.file	"syntax.c"
@ GNU C (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) version 4.4.1 (arm-hisiv200-linux-gnueabi)
@	compiled by GNU C version 4.1.1 20061011 (Red Hat 4.1.1-30), GMP version 4.3.1, MPFR version 2.4.2.
@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
@ options passed:  -nostdinc
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include
@ -Iarch/arm/include/generated
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include
@ -Iinclude
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include/uapi
@ -Iarch/arm/include/generated/uapi
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/uapi
@ -Iinclude/generated/uapi
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0
@ -Idrivers/msp/vfmw/vfmw_v4.0
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/mach-hi3798mx/include
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/include
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/drv/include
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/scene/stb
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/osal/linux_kernel
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/softlib
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/syntax
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiSCDV200
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV300R001
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/product/Hi3798MV100
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common_test/vdecko
@ -imultilib armv7a_soft -iprefix
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/
@ -isysroot /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../target
@ -D__KERNEL__ -D__LINUX_ARM_ARCH__=7 -Uarm -DCHIP_TYPE_hi3796mv100
@ -DSDK_VERSION=HiSTBAndroidV600R001C00SPC064_v2016061301 -DHI_MCE_SUPPORT
@ -DHI_GPIOI2C_SUPPORT -DHI_LOG_SUPPORT=1 -DHI_LOG_LEVEL=4
@ -DHI_PROC_SUPPORT=1 -DHI_HDMI_SUPPORT_1_4 -DHI_KEYLED_SUPPORT
@ -DHI_HDCP_SUPPORT -DHI_SCI_SUPPORT -DHI_PVR_SUPPORT -DHI_VI_SUPPORT
@ -DHI_VENC_SUPPORT -DHI_AENC_SUPPORT -DHI_PQ_V3_0 -DENV_ARMLINUX_KERNEL
@ -DDNR_DISABLE -DSCD_MP4_SLICE_ENABLE -DSUPPORT_JPEG_444
@ -DVFMW_EXTRA_TYPE_DEFINE -DPRODUCT_STB -D__VFMW_REGISTER_ISR__
@ -DQ_MATRIX_FIXED -DVFMW_VDH_V300R001_SUPPORT -DCFG_SCD_TIME_OUT=2000
@ -DCFG_VDH_TIME_OUT=500 -DVFMW_H264_SUPPORT -DVFMW_HEVC_SUPPORT
@ -DVFMW_MVC_SUPPORT -DVFMW_MPEG2_SUPPORT -DVFMW_MPEG4_SUPPORT
@ -DVFMW_AVS_SUPPORT -DVFMW_VC1_SUPPORT -DVFMW_BPD_H_SUPPORT
@ -DVFMW_REAL8_SUPPORT -DVFMW_REAL9_SUPPORT -DVFMW_VP6_SUPPORT
@ -DVFMW_VP8_SUPPORT -DVFMW_DIVX3_SUPPORT -DVFMW_H263_SUPPORT
@ -DVFMW_JPEG_SUPPORT -DVFMW_RAW_SUPPORT -DVFMW_USER_SUPPORT
@ -DCFG_MAX_CHAN_NUM=16 -DVFMW_DPRINT_SUPPORT -DVFMW_SCD_LOWDLY_SUPPORT
@ -DVFMW_AVSPLUS_SUPPORT -DVFMW_MODULE_LOWDLY_SUPPORT
@ -DVFMW_SYSTEM_REG_DISABLE -DHI_VDEC_SVDEC_BUILTIN -DKBUILD_STR(s)=#s
@ -DKBUILD_BASENAME=KBUILD_STR(syntax) -DKBUILD_MODNAME=KBUILD_STR(hi_vfmw)
@ -isystem
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/include
@ -include
@ /home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/linux/kconfig.h
@ -MD drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/.syntax.o.d
@ /home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/syntax.c
@ -mlittle-endian -mapcs -mno-sched-prolog -mabi=aapcs-linux
@ -mno-thumb-interwork -marm -march=armv7-a -msoft-float -auxbase-strip
@ drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/syntax.o -O2 -Wall
@ -Wundef -Wstrict-prototypes -Wno-trigraphs
@ -Werror-implicit-function-declaration -Wno-format-security
@ -Wframe-larger-than=1024 -Wdeclaration-after-statement -Wno-pointer-sign
@ -p -fno-strict-aliasing -fno-common -fno-delete-null-pointer-checks
@ -fno-dwarf2-cfi-asm -funwind-tables -fno-stack-protector
@ -fno-omit-frame-pointer -fno-optimize-sibling-calls -fno-strict-overflow
@ -fconserve-stack -fno-pic -fverbose-asm
@ options enabled:  -falign-loops -fargument-alias -fauto-inc-dec
@ -fbranch-count-reg -fcaller-saves -fcprop-registers -fcrossjumping
@ -fcse-follow-jumps -fdefer-pop -fearly-inlining
@ -feliminate-unused-debug-types -fexpensive-optimizations
@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm
@ -fguess-branch-probability -fident -fif-conversion -fif-conversion2
@ -findirect-inlining -finline -finline-functions-called-once
@ -finline-small-functions -fipa-cp -fipa-pure-const -fipa-reference
@ -fira-share-save-slots -fira-share-spill-slots -fivopts
@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
@ -fmerge-debug-strings -fmove-loop-invariants -foptimize-register-move
@ -fpeephole -fpeephole2 -fprofile -fpromote-loop-indices
@ -freg-struct-return -fregmove -frename-registers -freorder-blocks
@ -freorder-functions -frerun-cse-after-loop -fsched-interblock
@ -fsched-spec -fsched-stalled-insns-dep -fschedule-insns -fschedule-insns2
@ -fsection-anchors -fsigned-zeros -fsplit-ivs-in-unroller
@ -fsplit-wide-types -fthread-jumps -ftoplevel-reorder -ftrapping-math
@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-copy-prop
@ -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
@ -ftree-dse -ftree-fre -ftree-loop-im -ftree-loop-ivcanon
@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-pre -ftree-reassoc
@ -ftree-scev-cprop -ftree-sink -ftree-sra -ftree-switch-conversion
@ -ftree-ter -ftree-vect-loop-version -ftree-vrp -funit-at-a-time
@ -funroll-loops -funwind-tables -fverbose-asm -fweb
@ -fzero-initialized-in-bss -mapcs-frame -mglibc -mlittle-endian

@ Compiler executable checksum: fa59e0bd179ef45b3a3c3e6f3383fdac

	.text
	.align	2
	.global	ProduceTimeStamp
	.type	ProduceTimeStamp, %function
ProduceTimeStamp:
	.fnstart
.LFB1532:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #18	@ eVidStd,
	ldrd	r4, [r1, #8]	@ ThisFramePts, p_image,
	beq	.L2	@,
	mov	r3, #328	@ tmp140,
	mov	r8, r4	@ tmp141, ThisFramePts
	ldrd	r6, [r0, r3]	@ D.38702, pstVoQue, tmp140
	mov	r9, r5	@, ThisFramePts
	subs	r8, r8, r6	@ tmp141, tmp141, D.38702
	sbc	r9, r9, r7	@ tmp141, tmp141, D.38702
	cmp	r9, #0	@ tmp141,
	cmpeq	r8, #5	@ tmp141,
	bhi	.L3	@,
	mvn	r8, #0	@ tmp142,
	mvn	r9, #0	@,
	cmp	r7, r9	@ D.38702, tmp142
	cmpeq	r6, r8	@ D.38702, tmp142
	beq	.L3	@,
	sub	r3, r2, #8	@ tmp146, eVidStd,
	cmp	r3, #1	@ tmp146,
	movhi	r1, r9	@ InferedPTS,
	movhi	r0, r8	@ InferedPTS, tmp154
	ldmhifd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}	@
.L5:
	mvn	r4, #0	@ tmp147,
	mvn	r5, #0	@,
	mov	r0, r4	@ InferedPTS, tmp155
	strd	r4, [r1]	@ tmp147, <variable>.SrcPts
	mov	r1, r5	@ InferedPTS,
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}	@
.L3:
	sub	r2, r2, #8	@ tmp143, eVidStd,
	cmp	r2, #1	@ tmp143,
	bls	.L9	@,
.L2:
	mov	r1, r5	@ InferedPTS,
	mov	r0, r4	@ InferedPTS, tmp156
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}	@
.L9:
	ldr	ip, [r1, #160]	@ <variable>.format, <variable>.format
	and	r0, ip, #3	@ tmp144, <variable>.format,
	cmp	r0, #2	@ tmp144,
	bne	.L2	@,
	b	.L5	@
	.fnend
	.size	ProduceTimeStamp, .-ProduceTimeStamp
	.align	2
	.global	GetQueueImgNum
	.type	GetQueueImgNum, %function
GetQueueImgNum:
	.fnstart
.LFB1534:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrh	r3, [r0, #6]	@ D.38880, <variable>.head
	ldrh	ip, [r0, #4]	@ D.38881, <variable>.history
	ldrh	r0, [r0, #8]	@ D.38889, <variable>.tail
	cmp	r3, ip	@ D.38880, D.38881
	addcc	r4, r3, #64	@ tmp142, D.38880,
	rsbcs	ip, ip, r3	@ ReadNum, D.38881, D.38880
	rsbcc	ip, ip, r4	@ ReadNum, D.38881, tmp142
	cmp	r3, r0	@ D.38880, D.38889
	addhi	r0, r0, #64	@ tmp143, D.38889,
	str	ip, [r1, #0]	@ ReadNum,* pReadImgNum
	rsb	r3, r3, r0	@ NewNum, D.38880, tmp143
	str	r3, [r2, #0]	@ NewNum,* pNewImgNum
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	GetQueueImgNum, .-GetQueueImgNum
	.align	2
	.global	OpenUsdPool_WithMem
	.type	OpenUsdPool_WithMem, %function
OpenUsdPool_WithMem:
	.fnstart
.LFB1545:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:.LANCHOR0	@ tmp172,
	movt	r3, #:upper16:.LANCHOR0	@ tmp172,
	ldr	ip, [r3, r0, asl #2]	@ D.40149, pstVdecUsdPool
	cmp	ip, #0	@ D.40149,
	beq	.L24	@,
.L18:
	mov	r1, #0	@ tmp174,
	mov	r3, ip	@ ivtmp.643, D.40149
	mov	r2, r1	@ i, tmp174
	mov	r0, r1	@ tmp178, i
	str	r1, [ip, #0]	@ tmp174, <variable>.s32AccessIdx
.L20:
	add	r2, r2, #2	@ i, i,
	add	ip, r3, #1072	@ tmp180, ivtmp.643,
	cmp	r2, #192	@ i,
	str	r0, [r3, #1044]	@ tmp178, <variable>.from
	str	r0, [r3, #1040]	@ tmp178, <variable>.dnr_used_flag
	add	r3, r3, #2144	@ ivtmp.643, ivtmp.643,
	str	r0, [ip, #1040]	@ tmp178, <variable>.dnr_used_flag
	str	r0, [ip, #1044]	@ tmp178, <variable>.from
	bne	.L20	@,
	ldmfd	sp, {fp, sp, pc}	@
.L24:
	cmp	r1, #0	@ D.40149,
	str	r1, [r3, r0, asl #2]	@ D.40149, pstVdecUsdPool
	mov	ip, r1	@ D.40149, Viraddr
	mvneq	r0, #0	@ ret,
	ldmeqfd	sp, {fp, sp, pc}	@
	b	.L18	@
	.fnend
	.size	OpenUsdPool_WithMem, .-OpenUsdPool_WithMem
	.align	2
	.global	CloseUsdPool_WithMem
	.type	CloseUsdPool_WithMem, %function
CloseUsdPool_WithMem:
	.fnstart
.LFB1546:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:.LANCHOR0	@ tmp134,
	movt	r3, #:upper16:.LANCHOR0	@ tmp134,
	ldr	r2, [r3, r0, asl #2]	@ tmp135, pstVdecUsdPool
	cmp	r2, #0	@ tmp135,
	movne	r2, #0	@ tmp137,
	strne	r2, [r3, r0, asl #2]	@ tmp137, pstVdecUsdPool
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	CloseUsdPool_WithMem, .-CloseUsdPool_WithMem
	.align	2
	.global	InitUsdPool
	.type	InitUsdPool, %function
InitUsdPool:
	.fnstart
.LFB1547:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:.LANCHOR0	@ tmp139,
	movt	r3, #:upper16:.LANCHOR0	@ tmp139,
	ldr	r1, [r3, r0, asl #2]	@ D.39979, pstVdecUsdPool
	cmp	r1, #0	@ D.39979,
	mvneq	r0, #0	@ D.39983,
	ldmeqfd	sp, {fp, sp, pc}	@
	mov	r0, #0	@ tmp140,
	mov	r3, r1	@ ivtmp.700, D.39979
	mov	r2, r0	@ i, tmp140
	str	r0, [r1, #0]	@ tmp140, <variable>.s32AccessIdx
.L31:
	add	r2, r2, #2	@ i, i,
	add	r1, r3, #1072	@ tmp145, ivtmp.700,
	cmp	r2, #192	@ i,
	str	r0, [r3, #1044]	@ tmp144, <variable>.from
	str	r0, [r3, #1040]	@ tmp144, <variable>.dnr_used_flag
	add	r3, r3, #2144	@ ivtmp.700, ivtmp.700,
	str	r0, [r1, #1040]	@ tmp144, <variable>.dnr_used_flag
	str	r0, [r1, #1044]	@ tmp144, <variable>.from
	bne	.L31	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	InitUsdPool, .-InitUsdPool
	.align	2
	.global	GetUsd
	.type	GetUsd, %function
GetUsd:
	.fnstart
.LFB1548:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:.LANCHOR0	@ tmp141,
	movt	r3, #:upper16:.LANCHOR0	@ tmp141,
	ldr	r0, [r3, r0, asl #2]	@ D.39994, pstVdecUsdPool
	cmp	r0, #0	@ D.39994,
	bne	.L46	@,
.L36:
	mov	r0, #0	@ pstUsrDat,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L46:
	mov	r2, r0	@ ivtmp.733, D.39994
	mov	r3, #0	@ i,
	b	.L39	@
.L37:
	ldr	r2, [r1, #1044]	@ <variable>.from, <variable>.from
	add	r3, r3, #1	@ i, i,
	cmp	r2, #0	@ <variable>.from,
	mov	ip, r3	@ tmp203, i
	bne	.L42	@,
	ldr	r2, [r1, #1040]	@ <variable>.dnr_used_flag, <variable>.dnr_used_flag
	cmp	r2, #0	@ <variable>.dnr_used_flag,
	beq	.L45	@,
.L42:
	add	r3, ip, #1	@ i, tmp203,
	add	r2, r1, #1072	@ ivtmp.733, tmp204,
	cmp	r3, #192	@ i,
	beq	.L36	@,
.L39:
	ldr	ip, [r2, #1044]	@ <variable>.from, <variable>.from
	add	r1, r2, #1072	@ tmp204, ivtmp.733,
	cmp	ip, #0	@ <variable>.from,
	bne	.L37	@,
	ldr	r2, [r2, #1040]	@ <variable>.dnr_used_flag, <variable>.dnr_used_flag
	cmp	r2, #0	@ <variable>.dnr_used_flag,
	bne	.L37	@,
.L45:
	mov	r1, #1072	@ tmp150,
	mov	r5, #134	@ tmp145,
	mla	ip, r3, r1, r1	@ tmp179, i, tmp150, tmp150
	mul	r4, r5, r3	@ tmp144, tmp145, i
	mla	r3, r1, r3, r0	@ tmp151, tmp150, i, D.39994
	add	r5, ip, r0	@ tmp181, tmp179, D.39994
	add	r4, r4, #1	@ tmp146, tmp144,
	movw	r1, #1064	@ tmp154,
	strb	r2, [ip, r0]	@ <variable>.dnr_used_flag, <variable>.IsRegistered
	strh	r2, [r5, #4]	@ movhi	@ <variable>.dnr_used_flag, <variable>.itu_t_t35_provider_code
	add	r0, r0, r4, asl #3	@, pstUsrDat, D.39994, tmp146,
	strb	r2, [r5, #1]	@ <variable>.dnr_used_flag, <variable>.itu_t_t35_country_code
	mov	r4, #0	@ tmp159,
	strb	r2, [r5, #2]	@ <variable>.dnr_used_flag, <variable>.itu_t_t35_country_code_extension_byte
	mov	r5, #0	@,
	str	r2, [r3, #1048]	@ <variable>.dnr_used_flag, <variable>.seq_cnt
	strd	r4, [r3, r1]	@ tmp159, tmp151, tmp154
	str	r2, [r3, #1040]	@ <variable>.dnr_used_flag, <variable>.dnr_used_flag
	str	r2, [r3, #1056]	@ <variable>.dnr_used_flag, <variable>.data_size
	str	r2, [r3, #1052]	@ <variable>.dnr_used_flag, <variable>.seq_img_cnt
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	GetUsd, .-GetUsd
	.align	2
	.global	FreeUsdByDec
	.type	FreeUsdByDec, %function
FreeUsdByDec:
	.fnstart
.LFB1549:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pUsrdat
	movne	r3, #0	@ tmp135,
	strne	r3, [r1, #1036]	@ tmp135, <variable>.from
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	FreeUsdByDec, .-FreeUsdByDec
	.align	2
	.global	MarkUsdByDnr
	.type	MarkUsdByDnr, %function
MarkUsdByDnr:
	.fnstart
.LFB1550:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pUsrdat
	movne	r3, #1	@ tmp135,
	strne	r3, [r1, #1032]	@ tmp135, <variable>.dnr_used_flag
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MarkUsdByDnr, .-MarkUsdByDnr
	.align	2
	.global	UnMarkUsdByDnr
	.type	UnMarkUsdByDnr, %function
UnMarkUsdByDnr:
	.fnstart
.LFB1551:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pUsrdat
	movne	r3, #0	@ tmp135,
	strne	r3, [r1, #1032]	@ tmp135, <variable>.dnr_used_flag
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	UnMarkUsdByDnr, .-UnMarkUsdByDnr
	.align	2
	.global	GetVoLastImageID
	.type	GetVoLastImageID, %function
GetVoLastImageID:
	.fnstart
.LFB1555:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r0, [r0, #296]	@ D.40085, <variable>.SideInfo.LastImageIdPlus2
	cmp	r0, #1	@ D.40085,
	mvnls	r0, #0	@,,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	GetVoLastImageID, .-GetVoLastImageID
	.align	2
	.global	IsMain10Profile
	.type	IsMain10Profile, %function
IsMain10Profile:
	.fnstart
.LFB1556:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:4321216	@ tmp140,
	movt	r3, #:upper16:4321216	@ tmp140,
	ldr	r2, [r0, r3]	@ D.40095, <variable>.general_profile_idc
	cmp	r2, #1	@ D.40095,
	beq	.L60	@,
	movw	ip, #:lower16:4321220	@ tmp141,
	movt	ip, #:upper16:4321220	@ tmp141,
	ldr	r1, [r0, ip]	@ <variable>.general_profile_compatibility_flag_1, <variable>.general_profile_compatibility_flag_1
	cmp	r1, #1	@ <variable>.general_profile_compatibility_flag_1,
	beq	.L60	@,
	cmp	r2, #2	@ D.40095,
	beq	.L67	@,
	movw	r3, #:lower16:4321224	@ tmp143,
	movt	r3, #:upper16:4321224	@ tmp143,
	ldr	r2, [r0, r3]	@ <variable>.general_profile_compatibility_flag_2, <variable>.general_profile_compatibility_flag_2
	cmp	r2, #1	@ <variable>.general_profile_compatibility_flag_2,
	movne	r3, #0	@, flag.854
	moveq	r3, #1	@, flag.854
	mov	r0, r3	@ flag.855, flag.854
	orr	r0, r0, r3	@ flag, flag.855, flag.854
	ldmfd	sp, {fp, sp, pc}	@
.L60:
	mov	r0, #0	@ flag,
	ldmfd	sp, {fp, sp, pc}	@
.L67:
	movw	r1, #:lower16:4321224	@ tmp147,
	movt	r1, #:upper16:4321224	@ tmp147,
	mov	r3, #1	@ flag.854,
	ldr	r0, [r0, r1]	@ <variable>.general_profile_compatibility_flag_2, <variable>.general_profile_compatibility_flag_2
	cmp	r0, r3	@ <variable>.general_profile_compatibility_flag_2,
	movne	r0, #0	@, flag.855
	moveq	r0, #1	@, flag.855
	orr	r0, r0, r3	@ flag, flag.855, flag.854
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	IsMain10Profile, .-IsMain10Profile
	.align	2
	.global	SetAspectRatio
	.type	SetAspectRatio, %function
SetAspectRatio:
	.fnstart
.LFB1554:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r3, r0	@ pImg, pImg
	cmp	r1, #5	@ Code,
	ldrls	pc, [pc, r1, asl #2]	@ Code
	b	.L69	@
.L76:
	.word	.L70
	.word	.L71
	.word	.L72
	.word	.L73
	.word	.L74
	.word	.L75
.L75:
	mov	ip, #0	@ tmp145,
	mov	r1, #2	@ tmp146,
	str	ip, [r0, #60]	@ tmp145, <variable>.u32AspectWidth
	str	r1, [r0, #64]	@ tmp146, <variable>.u32AspectHeight
	ldmfd	sp, {fp, sp, pc}	@
.L69:
	mov	r2, r1	@, Code
	mov	lr, #0	@ tmp147,
	mov	r0, #1	@ tmp148,
	str	lr, [r3, #60]	@ tmp147, <variable>.u32AspectWidth
	str	r0, [r3, #64]	@ tmp148, <variable>.u32AspectHeight
	movw	r1, #:lower16:.LC0	@,
	movt	r1, #:upper16:.LC0	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {fp, sp, pc}	@
.L70:
	mov	r0, #0	@ tmp135,
	mov	r2, #1	@ tmp136,
	str	r0, [r3, #60]	@ tmp135, <variable>.u32AspectWidth
	str	r2, [r3, #64]	@ tmp136, <variable>.u32AspectHeight
	ldmfd	sp, {fp, sp, pc}	@
.L71:
	mov	ip, #4	@ tmp137,
	mov	r1, #3	@ tmp138,
	str	ip, [r0, #60]	@ tmp137, <variable>.u32AspectWidth
	str	r1, [r0, #64]	@ tmp138, <variable>.u32AspectHeight
	ldmfd	sp, {fp, sp, pc}	@
.L72:
	mov	r0, #16	@ tmp139,
	mov	r2, #9	@ tmp140,
	str	r0, [r3, #60]	@ tmp139, <variable>.u32AspectWidth
	str	r2, [r3, #64]	@ tmp140, <variable>.u32AspectHeight
	ldmfd	sp, {fp, sp, pc}	@
.L73:
	mov	ip, #221	@ tmp141,
	mov	r1, #100	@ tmp142,
	str	ip, [r0, #60]	@ tmp141, <variable>.u32AspectWidth
	str	r1, [r0, #64]	@ tmp142, <variable>.u32AspectHeight
	ldmfd	sp, {fp, sp, pc}	@
.L74:
	mov	r0, #235	@ tmp143,
	mov	r2, #100	@ tmp144,
	str	r0, [r3, #60]	@ tmp143, <variable>.u32AspectWidth
	str	r2, [r3, #64]	@ tmp144, <variable>.u32AspectHeight
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	SetAspectRatio, .-SetAspectRatio
	.align	2
	.global	IsVoQueueEmpty
	.type	IsVoQueueEmpty, %function
IsVoQueueEmpty:
	.fnstart
.LFB1553:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r0, #0	@ pstVoQue, pstVoQue
	beq	.L84	@,
	ldrh	r2, [r4, #6]	@ D.40058, <variable>.head
	ldrh	r3, [r4, #8]	@ <variable>.tail, <variable>.tail
	cmp	r3, r2	@ <variable>.tail, D.40058
	movne	r0, #0	@ D.40057,
	ldmnefd	sp, {r3, r4, fp, sp, pc}	@
	ldrh	r0, [r4, #4]	@ <variable>.history, <variable>.history
	cmp	r0, r3	@ <variable>.history, <variable>.tail
	movne	r0, #0	@, D.40057
	moveq	r0, #1	@, D.40057
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L84:
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LANCHOR1	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LANCHOR1	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@ D.40057, pstVoQue
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	IsVoQueueEmpty, .-IsVoQueueEmpty
	.align	2
	.global	IsImageInVoQueue
	.type	IsImageInVoQueue, %function
IsImageInVoQueue:
	.fnstart
.LFB1552:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ p_image
	beq	.L94	@,
	ldrh	r3, [r0, #4]	@ i, <variable>.history
	ldrh	r4, [r0, #8]	@ D.40040, <variable>.tail
	and	r3, r3, #63	@ i.925, i,
	cmp	r4, r3	@ D.40040, i.925
	bne	.L92	@,
	b	.L88	@
.L89:
	cmp	r3, r4	@ i.925, D.40040
	beq	.L88	@,
.L92:
	add	r2, r0, r3, asl #2	@, tmp146, pstVoQue, i.925,
	add	ip, r3, #1	@ i.926, i.925,
	and	r3, ip, #63	@ i.925, i.926,
	ldr	r2, [r2, #12]	@ D.40043, <variable>.image_ptr
	cmp	r2, #0	@ D.40043,
	beq	.L89	@,
	ldr	ip, [r2, #196]	@ <variable>.image_id, <variable>.image_id
	ldr	r2, [r1, #196]	@ <variable>.image_id, <variable>.image_id
	cmp	ip, r2	@ <variable>.image_id, <variable>.image_id
	bne	.L89	@,
	mov	r0, #0	@ D.40037,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L88:
	mvn	r0, #0	@ D.40037,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L94:
	mov	r0, r1	@, p_image
	movw	r1, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC2	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40037,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	IsImageInVoQueue, .-IsImageInVoQueue
	.align	2
	.global	PrintVoQueue
	.type	PrintVoQueue, %function
PrintVoQueue:
	.fnstart
.LFB1529:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pstVoQue, pstVoQue
	ldrh	ip, [r4, #8]	@ <variable>.tail, <variable>.tail
	movw	r1, #:lower16:.LC3	@,
	ldrh	r3, [r0, #4]	@ <variable>.history, <variable>.history
	movt	r1, #:upper16:.LC3	@,
	ldrh	r2, [r0, #6]	@ <variable>.head, <variable>.head
	mov	r0, #1	@,
	str	ip, [sp, #0]	@ <variable>.tail,
	bl	dprint_vfmw	@
	ldrh	r5, [r4, #4]	@ i, <variable>.history
	ldrh	r3, [r4, #8]	@ <variable>.tail, <variable>.tail
	and	r5, r5, #63	@ i.957, i,
	cmp	r3, r5	@ <variable>.tail, i.957
	bne	.L101	@,
	b	.L97	@
.L98:
	add	r2, r4, r5, asl #2	@, tmp149, pstVoQue, i.957,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC5	@,
	movt	r1, #:upper16:.LC5	@,
	ldr	lr, [r2, #12]	@ tmp146, <variable>.image_ptr
	ldr	r2, [lr, #196]	@, <variable>.image_id
	bl	dprint_vfmw	@
	add	r1, r5, #1	@ i.956, i.957,
	ldrh	r0, [r4, #8]	@ <variable>.tail, <variable>.tail
	and	r5, r1, #63	@ i.957, i.956,
	cmp	r0, r5	@ <variable>.tail, i.957
	beq	.L97	@,
.L101:
	tst	r5, #7	@ i.957,
	bne	.L98	@,
	movw	r1, #:lower16:.LC4	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC4	@,
	bl	dprint_vfmw	@
	b	.L98	@
.L97:
	movw	r1, #:lower16:.LC4	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC4	@,
	bl	dprint_vfmw	@
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
	.fnend
	.size	PrintVoQueue, .-PrintVoQueue
	.align	2
	.global	InitVoQueue
	.type	InitVoQueue, %function
InitVoQueue:
	.fnstart
.LFB1528:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC6	@,
	mov	r4, r0	@ pstVoQue, pstVoQue
	movt	r1, #:upper16:.LC6	@,
	mov	r0, #12	@,
	bl	dprint_vfmw	@
	mov	r2, #0	@ tmp139,
	mvn	r3, #0	@ tmp147,
	mov	r0, #64	@ movhi	@,
	str	r2, [r4, #316]	@ tmp139, <variable>.SideInfo.SeqImgCnt
	strh	r0, [r4, #0]	@ movhi	@, <variable>.max_queue_size
	mov	r0, #1	@,
	strh	r2, [r4, #2]	@ movhi	@ tmp139, <variable>.queue_size
	str	r3, [r4, #280]	@ tmp147, <variable>.SideInfo.OldSeqCnt
	strh	r2, [r4, #4]	@ movhi	@ tmp139, <variable>.history
	strh	r2, [r4, #6]	@ movhi	@ tmp139, <variable>.head
	strh	r2, [r4, #8]	@ movhi	@ tmp139, <variable>.tail
	str	r2, [r4, #344]	@ tmp139, <variable>.ResetMagicWord
	str	r3, [r4, #272]	@ tmp147, <variable>.SideInfo.OldAspectRatio
	str	r3, [r4, #292]	@ tmp147, <variable>.SideInfo.OldDispCenter
	str	r3, [r4, #288]	@ tmp147, <variable>.SideInfo.OldDispSize
	str	r3, [r4, #284]	@ tmp147, <variable>.SideInfo.OldFrameRate
	str	r3, [r4, #276]	@ tmp147, <variable>.SideInfo.OldScanType
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	InitVoQueue, .-InitVoQueue
	.align	2
	.global	CloseUsdPool
	.type	CloseUsdPool, %function
CloseUsdPool:
	.fnstart
.LFB1544:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:.LANCHOR0	@ tmp135,
	movt	r4, #:upper16:.LANCHOR0	@ tmp135,
	mov	r5, r0	@ ChanID, ChanID
	ldr	r0, [r4, r0, asl #2]	@ D.39948, pstVdecUsdPool
	cmp	r0, #0	@ D.39948,
	ldmeqfd	sp, {r4, r5, fp, sp, pc}	@
	bl	OSAL_FreeVirMem	@
	mov	r3, #0	@ tmp137,
	str	r3, [r4, r5, asl #2]	@ tmp137, pstVdecUsdPool
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	CloseUsdPool, .-CloseUsdPool
	.align	2
	.global	OpenUsdPool
	.type	OpenUsdPool, %function
OpenUsdPool:
	.fnstart
.LFB1543:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:.LANCHOR0	@ tmp140,
	movt	r4, #:upper16:.LANCHOR0	@ tmp140,
	mov	r5, r0	@ ChanID, ChanID
	ldr	r0, [r4, r0, asl #2]	@ D.40155, pstVdecUsdPool
	cmp	r0, #0	@ D.40155,
	beq	.L115	@,
.L109:
	mov	r1, #0	@ tmp143,
	mov	r3, r0	@ ivtmp.1038, D.40155
	str	r1, [r0, #0]	@ tmp143, <variable>.s32AccessIdx
	mov	r2, r1	@ i, tmp143
	mov	r0, r1	@ tmp147, i
.L111:
	add	r2, r2, #2	@ i, i,
	add	ip, r3, #1072	@ tmp149, ivtmp.1038,
	cmp	r2, #192	@ i,
	str	r0, [r3, #1044]	@ tmp147, <variable>.from
	str	r0, [r3, #1040]	@ tmp147, <variable>.dnr_used_flag
	add	r3, r3, #2144	@ ivtmp.1038, ivtmp.1038,
	str	r0, [ip, #1040]	@ tmp147, <variable>.dnr_used_flag
	str	r0, [ip, #1044]	@ tmp147, <variable>.from
	bne	.L111	@,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L115:
	movw	r0, #:lower16:205832	@,
	movt	r0, #:upper16:205832	@,
	bl	OSAL_AllocVirMem	@
	cmp	r0, #0	@ D.40155,
	str	r0, [r4, r5, asl #2]	@ D.40155, pstVdecUsdPool
	mvneq	r0, #0	@ ret,
	ldmeqfd	sp, {r4, r5, fp, sp, pc}	@
	b	.L109	@
	.fnend
	.size	OpenUsdPool, .-OpenUsdPool
	.align	2
	.global	IsNewpicSeg
	.type	IsNewpicSeg, %function
IsNewpicSeg:
	.fnstart
.LFB1542:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #2	@ VidStd,
	ldr	r4, [r2, #0]	@ pu8, <variable>.VirAddr
	beq	.L151	@,
.L117:
	ldrb	r2, [r4, #0]	@ zero_extendqisi2	@ D.39852,* pu8
	cmp	r2, #0	@ D.39852,
	bne	.L152	@,
	ldrb	r3, [r4, #1]	@ zero_extendqisi2	@ prephitmp.1056,
	cmp	r3, #0	@ prephitmp.1056,
	ldrneb	ip, [r4, #2]	@ zero_extendqisi2	@ prephitmp.1060,
	bne	.L120	@,
	ldrb	ip, [r4, #2]	@ zero_extendqisi2	@ prephitmp.1060,
	cmp	ip, #1	@ prephitmp.1060,
	beq	.L122	@,
.L120:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC7	@,
	movt	r1, #:upper16:.LC7	@,
	str	ip, [sp, #0]	@ prephitmp.1060,
	bl	dprint_vfmw	@
	mvn	r3, #0	@ ret,
.L123:
	mov	r0, r3	@, ret
	sub	sp, fp, #16
	ldmfd	sp, {r4, fp, sp, pc}
.L151:
	ldrb	r3, [r2, #72]	@ zero_extendqisi2	@ tmp156,
	tst	r3, #1	@ tmp156,
	movne	r3, #1	@ IsShortHead,
	beq	.L117	@,
.L118:
	ldrb	r2, [r4, #3]	@ zero_extendqisi2	@ tmp213,
	add	ip, r2, #75	@ tmp171, tmp213,
	uxtb	r1, ip	@ tmp173, tmp171
	cmp	r2, #179	@ tmp213,
	cmpne	r1, #1	@, tmp173,
	bls	.L137	@,
	cmp	r2, #176	@ tmp213,
	beq	.L137	@,
	cmp	r2, #254	@ tmp213,
	beq	.L137	@,
	cmp	r2, #47	@ tmp213,
	bls	.L137	@,
.L138:
	cmp	r3, #1	@ IsShortHead,
	mvnne	r3, #0	@ ret,
	beq	.L139	@,
.L140:
	cmp	r2, #182	@ tmp213,
	bne	.L123	@,
.L148:
	mov	r2, #0	@ tmp211,
.L149:
	str	r2, [r0, #0]	@ tmp211,* pNewPicDetector
	b	.L123	@
.L122:
	cmp	r1, #16	@ VidStd,
	ldrls	pc, [pc, r1, asl #2]	@ VidStd
	b	.L124	@
.L132:
	.word	.L125
	.word	.L126
	.word	.L127
	.word	.L128
	.word	.L124
	.word	.L124
	.word	.L129
	.word	.L124
	.word	.L124
	.word	.L124
	.word	.L124
	.word	.L124
	.word	.L124
	.word	.L124
	.word	.L124
	.word	.L130
	.word	.L131
.L125:
	mov	r1, r4	@, pu8
	bl	H264_IsNewPicNal	@
	cmp	r0, #0	@,
	beq	.L133	@,
.L124:
	mvn	r3, #0	@ ret,
	b	.L123	@
.L131:
	mov	r1, r4	@, pu8
	bl	HEVC_IsNewPicNal	@
	cmp	r0, #0	@,
	bne	.L124	@,
.L133:
	mov	r3, #0	@ ret,
	b	.L123	@
.L130:
	mov	r1, r4	@, pu8
	bl	MVC_IsNewPicNal	@
	cmp	r0, #0	@,
	bne	.L124	@,
	mov	r3, #0	@ ret,
	b	.L123	@
.L129:
	ldrb	r2, [r4, #3]	@ zero_extendqisi2	@ tmp215,
	cmp	r2, #176	@ tmp215,
	cmpne	r2, #179	@, tmp215,
	beq	.L141	@,
	cmp	r2, #182	@ tmp215,
	beq	.L141	@,
	cmp	r2, #183	@ tmp215,
	beq	.L141	@,
.L142:
	mvn	r3, #0	@ ret,
.L143:
	cmp	r2, #179	@ tmp215,
	cmpne	r2, #182	@, tmp215,
	bne	.L123	@,
	mov	r2, #0	@ tmp211,
	b	.L149	@
.L128:
	ldrb	r2, [r4, #3]	@ zero_extendqisi2	@ prephitmp.1076,
	cmp	r2, #0	@ prephitmp.1076,
	cmpne	r2, #179	@, prephitmp.1076,
	beq	.L134	@,
	cmp	r2, #184	@ prephitmp.1076,
	beq	.L134	@,
	cmp	r2, #183	@ prephitmp.1076,
	bne	.L124	@,
.L134:
	ldr	r3, [r0, #0]	@ tmp168,* pNewPicDetector
	cmp	r3, #0	@ tmp168,
	moveq	r2, #1	@ tmp169,
	streq	r2, [r0, #0]	@ tmp169,* pNewPicDetector
	ldreqb	r2, [r4, #3]	@ zero_extendqisi2	@ prephitmp.1076,
	mvnne	r3, #0	@ ret,
	cmp	r2, #0	@ prephitmp.1076,
	streq	r2, [r0, #0]	@ tmp211,* pNewPicDetector
	b	.L123	@
.L126:
	ldrb	r2, [r4, #3]	@ zero_extendqisi2	@ tmp216,
	cmp	r2, #10	@ tmp216,
	cmpne	r2, #12	@, tmp216,
	beq	.L144	@,
	cmp	r2, #13	@ tmp216,
	beq	.L144	@,
	cmp	r2, #14	@ tmp216,
	beq	.L144	@,
	cmp	r2, #15	@ tmp216,
	bne	.L124	@,
.L144:
	ldr	r3, [r0, #0]	@ tmp208,* pNewPicDetector
	cmp	r3, #0	@ tmp208,
	moveq	r2, #1	@ tmp209,
	streq	r2, [r0, #0]	@ tmp209,* pNewPicDetector
	ldreqb	r2, [r4, #3]	@ zero_extendqisi2	@ tmp216,
	mvnne	r3, #0	@ ret,
	cmp	r2, #13	@ tmp216,
	bne	.L123	@,
	b	.L148	@
.L127:
	mov	r3, #0	@ IsShortHead,
	b	.L118	@
.L141:
	ldr	r3, [r0, #0]	@ tmp191,* pNewPicDetector
	cmp	r3, #0	@ tmp191,
	bne	.L142	@,
	mov	r2, #1	@ tmp192,
	str	r2, [r0, #0]	@ tmp192,* pNewPicDetector
	ldrb	r2, [r4, #3]	@ zero_extendqisi2	@ tmp215,
	b	.L143	@
.L137:
	ldr	r1, [r0, #0]	@ tmp180,* pNewPicDetector
	cmp	r1, #0	@ tmp180,
	bne	.L138	@,
.L139:
	mov	r3, #1	@ tmp181,
	str	r3, [r0, #0]	@ tmp181,* pNewPicDetector
	mov	r3, #0	@ ret,
	ldrb	r2, [r4, #3]	@ zero_extendqisi2	@ tmp213,
	b	.L140	@
.L152:
	ldrb	ip, [r4, #2]	@ zero_extendqisi2	@ prephitmp.1060,
	ldrb	r3, [r4, #1]	@ zero_extendqisi2	@ prephitmp.1056,
	b	.L120	@
	.fnend
	.size	IsNewpicSeg, .-IsNewpicSeg
	.align	2
	.global	ReleasePacket
	.type	ReleasePacket, %function
ReleasePacket:
	.fnstart
.LFB1540:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	sub	r3, r0, #2	@ tmp147, VidStd,
	mov	r4, r1	@ pCtx, pCtx
	cmp	r3, #11	@ tmp147,
	ldrls	pc, [pc, r3, asl #2]	@ tmp147
	b	.L154	@
.L161:
	.word	.L155
	.word	.L154
	.word	.L154
	.word	.L156
	.word	.L154
	.word	.L154
	.word	.L157
	.word	.L158
	.word	.L159
	.word	.L159
	.word	.L159
	.word	.L160
.L160:
	ldr	r5, [r1, #0]	@ D.39704, <variable>.pstExtraData
	movw	lr, #8520	@ tmp175,
	ldr	r0, [r1, lr]	@, <variable>.ChanID
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	ldrb	r1, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r1, #1	@ <variable>.IsLastSeg,
	beq	.L169	@,
	movw	r1, #:lower16:.LC8	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC8	@,
	bl	dprint_vfmw	@
.L169:
	add	r0, r5, #224	@, D.39715,
	mov	r1, #160	@,
	bl	__memzero	@
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L154:
	mov	r2, r0	@, VidStd
	movw	r1, #:lower16:.LC10	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC10	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L155:
	movw	r1, #22060	@ tmp148,
	ldr	r5, [r4, r1]	@ D.39660, <variable>.pstExtraData
	ldrb	r0, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r0, #1	@ <variable>.IsLastSeg,
	beq	.L171	@,
	movw	r6, #22960	@ tmp153,
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r1, [r5, #324]	@, <variable>.StreamID
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	add	r0, r5, #224	@, D.39715,
	mov	r1, #160	@,
	bl	__memzero	@
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L156:
	ldr	r5, [r1, #0]	@ D.39694, <variable>.pstExtraData
	ldrb	r0, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r0, #1	@ <variable>.IsLastSeg,
	bne	.L169	@,
	movw	ip, #:lower16:67968	@ tmp171,
	movt	ip, #:upper16:67968	@ tmp171,
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	ldr	r0, [r4, ip]	@,
	bl	SM_ReleaseStreamSeg	@
	b	.L169	@
.L157:
	ldr	r5, [r1, #0]	@ D.39674, <variable>.pstExtraData
	ldrb	ip, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	ip, #1	@ <variable>.IsLastSeg,
	bne	.L169	@,
	movw	lr, #:lower16:80296	@ tmp161,
	movt	lr, #:upper16:80296	@ tmp161,
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	ldr	r0, [r4, lr]	@,
	bl	SM_ReleaseStreamSeg	@
	b	.L169	@
.L158:
	ldr	r5, [r1, #0]	@ D.39684, <variable>.pstExtraData
	ldrb	r3, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r3, #1	@ <variable>.IsLastSeg,
	bne	.L169	@,
	movw	r2, #:lower16:80280	@ tmp166,
	movt	r2, #:upper16:80280	@ tmp166,
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	ldr	r0, [r4, r2]	@,
	bl	SM_ReleaseStreamSeg	@
	b	.L169	@
.L159:
	ldr	r5, [r1, #0]	@ D.39715, <variable>.pstExtraData
	movw	r2, #13000	@ tmp181,
	ldr	r0, [r1, r2]	@, <variable>.ChanID
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	ldrb	r3, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r3, #1	@ <variable>.IsLastSeg,
	beq	.L169	@,
	movw	r1, #:lower16:.LC9	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC9	@,
	bl	dprint_vfmw	@
	b	.L169	@
.L171:
	movw	r2, #22960	@ tmp150,
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	ldr	r0, [r4, r2]	@,
	bl	SM_ReleaseStreamSeg	@
	b	.L169	@
	.fnend
	.size	ReleasePacket, .-ReleasePacket
	.align	2
	.global	ReleaseCurPic
	.type	ReleaseCurPic, %function
ReleaseCurPic:
	.fnstart
.LFB1541:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r1	@ pCtx, pCtx
	cmp	r0, #16	@ VidStd,
	ldrls	pc, [pc, r0, asl #2]	@ VidStd
	b	.L173	@
.L186:
	.word	.L174
	.word	.L175
	.word	.L176
	.word	.L177
	.word	.L173
	.word	.L178
	.word	.L179
	.word	.L173
	.word	.L180
	.word	.L181
	.word	.L182
	.word	.L182
	.word	.L182
	.word	.L183
	.word	.L173
	.word	.L184
	.word	.L185
.L185:
	mov	r0, r1	@, pCtx
	bl	HEVC_ClearCurrPic	@
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L173:
	mov	r2, r0	@, VidStd
	movw	r1, #:lower16:.LC10	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC10	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L174:
	mov	r0, r1	@, pCtx
	bl	H264_ClearCurrPic	@
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L175:
	movw	r3, #:lower16:114368	@ tmp164,
	movt	r3, #:upper16:114368	@ tmp164,
	add	r2, r1, #77824	@, pCtx,
	add	r0, r2, #424	@,,
	ldr	r1, [r1, r3]	@, <variable>.ChanID
	bl	VC1_ClearCurPic	@
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L176:
	mov	r0, r1	@, pCtx
	bl	MP4_ClearCurPic	@
	mov	r0, r4	@, pCtx
	bl	MP4_Clean_HeadPacket	@
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L177:
	mov	r0, r1	@, pCtx
	bl	MP2_ClearCurPic	@
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L178:
	ldr	r5, [r1, #0]	@ D.39791, <variable>.pstExtraData
	ldrb	r1, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r1, #1	@ <variable>.IsLastSeg,
	beq	.L194	@,
.L192:
	add	r0, r5, #224	@, D.39815,
	mov	r1, #160	@,
	bl	__memzero	@
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L179:
	mov	r0, r1	@, pCtx
	bl	AVS_ClearCurPic	@
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L180:
	ldr	r5, [r1, #0]	@ D.39769, <variable>.pstExtraData
	ldrb	r3, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r3, #1	@ <variable>.IsLastSeg,
	bne	.L192	@,
	movw	r2, #:lower16:80296	@ tmp148,
	movt	r2, #:upper16:80296	@ tmp148,
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	ldr	r0, [r4, r2]	@,
	bl	SM_ReleaseStreamSeg	@
	b	.L192	@
.L181:
	ldr	r5, [r1, #0]	@ D.39781, <variable>.pstExtraData
	ldrb	r0, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r0, #1	@ <variable>.IsLastSeg,
	bne	.L192	@,
	movw	ip, #:lower16:80280	@ tmp153,
	movt	ip, #:upper16:80280	@ tmp153,
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	ldr	r0, [r4, ip]	@,
	bl	SM_ReleaseStreamSeg	@
	b	.L192	@
.L182:
	ldr	r5, [r1, #0]	@ D.39815, <variable>.pstExtraData
	movw	lr, #13000	@ tmp172,
	ldr	r0, [r1, lr]	@, <variable>.ChanID
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	ldrb	r1, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r1, #1	@ <variable>.IsLastSeg,
	beq	.L192	@,
	movw	r1, #:lower16:.LC9	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC9	@,
	bl	dprint_vfmw	@
	b	.L192	@
.L183:
	ldr	r5, [r1, #0]	@ D.39804, <variable>.pstExtraData
	movw	ip, #8520	@ tmp166,
	ldr	r0, [r1, ip]	@, <variable>.ChanID
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	ldrb	r0, [r5, #229]	@ zero_extendqisi2	@ <variable>.IsLastSeg, <variable>.IsLastSeg
	cmp	r0, #1	@ <variable>.IsLastSeg,
	beq	.L192	@,
	movw	r1, #:lower16:.LC8	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC8	@,
	bl	dprint_vfmw	@
	b	.L192	@
.L184:
	mov	r0, r1	@, pCtx
	bl	MVC_ClearCurrPic	@
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L194:
	movw	lr, #:lower16:67968	@ tmp158,
	movt	lr, #:upper16:67968	@ tmp158,
	ldr	r1, [r5, #244]	@, <variable>.StreamID
	ldr	r0, [r4, lr]	@,
	bl	SM_ReleaseStreamSeg	@
	b	.L192	@
	.fnend
	.size	ReleaseCurPic, .-ReleaseCurPic
	.align	2
	.global	SegMan
	.type	SegMan, %function
SegMan:
	.fnstart
.LFB1539:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r1, #0	@ pSegMan, pSegMan
	mov	r6, r0	@ ChanID, ChanID
	beq	.L196	@,
	ldr	r3, [r4, #8]	@ <variable>.CurrSeg.VirAddr, <variable>.CurrSeg.VirAddr
	cmp	r3, #0	@ <variable>.CurrSeg.VirAddr,
	beq	.L196	@,
	movw	r3, #:lower16:s_pstVfmwChan	@ tmp230,
	movt	r3, #:upper16:s_pstVfmwChan	@ tmp230,
	ldr	r2, [r3, r0, asl #2]	@ D.39549, s_pstVfmwChan
	ldr	r1, [r2, #1424]	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r1, #1	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn,
	beq	.L209	@,
.L199:
	ldrb	r5, [r4, #13]	@ zero_extendqisi2	@ D.39558, <variable>.CurrSeg.IsLastSeg
	mov	r2, #0	@ tmp159,
	strb	r2, [r4, #408]	@ tmp159, <variable>.u32SCDWrapAround
	cmp	r5, #1	@ D.39558,
	beq	.L210	@,
	cmp	r5, #0	@ D.39558,
	beq	.L211	@,
.L202:
	mvn	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L211:
	add	r8, r4, #88	@ temp.1175, pSegMan,
	add	r7, r4, #168	@ __p, pSegMan,
	add	r1, r4, #8	@, pSegMan,
	mov	r2, #80	@,
	mov	r0, r8	@, temp.1175
	bl	memcpy	@
	mov	r1, #80	@,
	mov	r0, r7	@, __p
	bl	__memzero	@
	ldrb	r1, [r4, #2]	@ zero_extendqisi2	@ <variable>.ConvolutionPacketNum, <variable>.ConvolutionPacketNum
	add	r3, r1, #1	@ tmp176, <variable>.ConvolutionPacketNum,
	uxtb	ip, r3	@ D.39576, tmp176
	strb	ip, [r4, #2]	@ D.39576, <variable>.ConvolutionPacketNum
	cmp	ip, #1	@ D.39576,
	bls	.L202	@,
	ldr	r1, [r4, #108]	@, <variable>.StreamID
	mov	r0, r6	@, ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r1, [r4, #188]	@, <variable>.StreamID
	mov	r0, r6	@, ChanID
	bl	SM_ReleaseStreamSeg	@
	mov	r0, r8	@, temp.1175
	mov	r1, #80	@,
	bl	__memzero	@
	mov	r0, r7	@, __p
	mov	r1, #80	@,
	bl	__memzero	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC12	@,
	movt	r1, #:upper16:.LC12	@,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:g_event_report	@ tmp181,
	movt	r2, #:upper16:g_event_report	@ tmp181,
	ldr	ip, [r2, #0]	@ g_event_report.525, g_event_report
	cmp	ip, #0	@ g_event_report.525,
	beq	.L203	@,
	mov	r2, r5	@, D.39558
	mov	r0, r6	@, ChanID
	mov	r1, #113	@,
	mov	r3, r5	@, tmp2
	blx	ip	@ g_event_report.525
.L203:
	mov	lr, #0	@ tmp182,
	mvn	r0, #0	@ ret,
	strb	lr, [r4, #2]	@ tmp182, <variable>.ConvolutionPacketNum
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L209:
	ldr	r2, [r2, #1464]	@ <variable>.stSynExtraData.s32WaitFsFlag, <variable>.stSynExtraData.s32WaitFsFlag
	cmp	r2, #1	@ <variable>.stSynExtraData.s32WaitFsFlag,
	bne	.L199	@,
	ldrb	r0, [r4, #408]	@ zero_extendqisi2	@ <variable>.u32SCDWrapAround, <variable>.u32SCDWrapAround
	cmp	r0, #1	@ <variable>.u32SCDWrapAround,
	bne	.L199	@,
	add	r0, r4, #88	@, pSegMan,
	add	r1, r4, #248	@, pSegMan,
	mov	r2, #160	@,
	bl	memcpy	@
	mov	r0, #0	@ tmp157,
	strb	r0, [r4, #408]	@ tmp157, <variable>.u32SCDWrapAround
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L210:
	ldrb	r5, [r4, #2]	@ zero_extendqisi2	@ D.39560, <variable>.ConvolutionPacketNum
	cmp	r5, r2	@ D.39560,
	beq	.L212	@,
	cmp	r5, #1	@ D.39560,
	bne	.L202	@,
	ldr	r1, [r3, r6, asl #2]	@ tmp185, s_pstVfmwChan
	movw	ip, #:lower16:1047552	@ tmp232,
	ldr	r0, [r4, #104]	@ <variable>.LenInByte, <variable>.LenInByte
	movt	ip, #:upper16:1047552	@ tmp232,
	ldr	r3, [r1, #552]	@ <variable>.eVidStd, <variable>.eVidStd
	cmp	r3, #6	@ <variable>.eVidStd,
	movne	ip, #1024	@ s32MinBottomSegLen,
	cmp	ip, r0	@ s32MinBottomSegLen, <variable>.LenInByte
	ble	.L206	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC13	@,
	movt	r1, #:upper16:.LC13	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #104]	@ D.39608, <variable>.LenInByte
	ldr	r0, [r4, #8]	@ <variable>.CurrSeg.VirAddr, <variable>.CurrSeg.VirAddr
	ldr	r1, [r4, #88]	@, <variable>.VirAddr
	mov	r2, r3	@, D.39608
	rsb	r0, r3, r0	@, D.39608, <variable>.CurrSeg.VirAddr
	bl	memcpy	@
	ldr	r3, [r4, #104]	@ <variable>.LenInByte, <variable>.LenInByte
	ldr	r1, [r4, #8]	@ <variable>.CurrSeg.VirAddr, <variable>.CurrSeg.VirAddr
	mov	r0, r6	@, ChanID
	ldr	r2, [r4, #20]	@ <variable>.CurrSeg.PhyAddr, <variable>.CurrSeg.PhyAddr
	ldr	ip, [r4, #24]	@ <variable>.CurrSeg.LenInByte, <variable>.CurrSeg.LenInByte
	rsb	r1, r3, r1	@ tmp200, <variable>.LenInByte, <variable>.CurrSeg.VirAddr
	rsb	r2, r3, r2	@ tmp203, <variable>.LenInByte, <variable>.CurrSeg.PhyAddr
	strb	r5, [r4, #93]	@ D.39560, <variable>.IsLastSeg
	add	r3, r3, ip	@ tmp206, <variable>.LenInByte, <variable>.CurrSeg.LenInByte
	str	r1, [r4, #88]	@ tmp200, <variable>.VirAddr
	str	r2, [r4, #100]	@ tmp203, <variable>.PhyAddr
	ldr	r1, [r4, #108]	@, <variable>.StreamID
	str	r3, [r4, #104]	@ tmp206, <variable>.LenInByte
	bl	SM_ReleaseStreamSeg	@
	ldr	r5, [r4, #28]	@ <variable>.CurrSeg.StreamID, <variable>.CurrSeg.StreamID
	add	r0, r4, #168	@, pSegMan,
	mov	r1, #80	@,
	str	r5, [r4, #108]	@ <variable>.CurrSeg.StreamID, <variable>.StreamID
	bl	__memzero	@
.L207:
	mov	r5, #0	@ tmp221,
	mov	lr, #1	@ tmp223,
	add	r1, r4, #88	@, pSegMan,
	strb	r5, [r4, #2]	@ tmp221, <variable>.ConvolutionPacketNum
	strb	lr, [r4, #408]	@ tmp223, <variable>.u32SCDWrapAround
	add	r0, r4, #248	@, pSegMan,
	mov	r2, #160	@,
	bl	memcpy	@
	mov	r0, r5	@ ret, tmp221
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L212:
	add	r1, r4, #8	@, pSegMan,
	mov	r2, #80	@,
	add	r0, r4, #88	@, pSegMan,
	bl	memcpy	@
	add	r0, r4, #168	@, pSegMan,
	mov	r1, #80	@,
	bl	__memzero	@
	strb	r5, [r4, #2]	@ D.39560, <variable>.ConvolutionPacketNum
	mov	r0, r5	@ ret, D.39560
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L206:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC14	@,
	movt	r1, #:upper16:.LC14	@,
	bl	dprint_vfmw	@
	add	r0, r4, #168	@, pSegMan,
	add	r1, r4, #8	@, pSegMan,
	mov	r2, #80	@,
	bl	memcpy	@
	b	.L207	@
.L196:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC11	@,
	movt	r1, #:upper16:.LC11	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	SegMan, .-SegMan
	.align	2
	.global	DecodeStream
	.type	DecodeStream, %function
DecodeStream:
	.fnstart
.LFB1538:
	@ args = 0, pretend = 0, frame = 96
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #100
	sub	sp, sp, #100	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pSegMan, pSegMan
	mov	r5, r2	@ pstCtx, pstCtx
	cmp	r1, #16	@ VideoStandard,
	ldrls	pc, [pc, r1, asl #2]	@ VideoStandard
	b	.L261	@
.L228:
	.word	.L215
	.word	.L216
	.word	.L217
	.word	.L218
	.word	.L219
	.word	.L220
	.word	.L221
	.word	.L261
	.word	.L222
	.word	.L223
	.word	.L224
	.word	.L224
	.word	.L224
	.word	.L225
	.word	.L219
	.word	.L226
	.word	.L227
.L216:
	ldrb	r2, [r0, #13]	@ zero_extendqisi2	@, <variable>.CurrSeg.IsLastSeg
	movw	r1, #:lower16:.LC15	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC15	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, #20]	@, <variable>.CurrSeg.PhyAddr
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC16	@,
	movt	r1, #:upper16:.LC16	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, #24]	@, <variable>.CurrSeg.LenInByte
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC17	@,
	movt	r1, #:upper16:.LC17	@,
	bl	dprint_vfmw	@
	ldr	r3, [r5, #0]	@ D.39270, <variable>.pstExtraData
	ldr	r2, [r3, #556]	@ D.39271, <variable>.StdExt.Vc1Ext.IsAdvProfile
	cmp	r2, #1	@ D.39271,
	bhi	.L274	@,
	ldr	r0, [r3, #560]	@ <variable>.StdExt.Vc1Ext.CodecVersion, <variable>.StdExt.Vc1Ext.CodecVersion
	cmp	r0, #8	@ <variable>.StdExt.Vc1Ext.CodecVersion,
	bgt	.L275	@,
	movw	lr, #:lower16:81344	@ tmp269,
	movt	lr, #:upper16:81344	@ tmp269,
	uxtb	r2, r2	@ D.39280, D.39271
	movw	ip, #:lower16:81346	@ tmp271,
	strb	r2, [r5, lr]	@ D.39280, <variable>.CodecInfo.PreParseInfo.IsAdvProfile
	movt	ip, #:upper16:81346	@ tmp271,
	ldr	r3, [r3, #560]	@ <variable>.StdExt.Vc1Ext.CodecVersion, <variable>.StdExt.Vc1Ext.CodecVersion
	cmp	r2, #1	@ D.39280,
	strb	r3, [r5, ip]	@ <variable>.StdExt.Vc1Ext.CodecVersion, <variable>.CodecInfo.PreParseInfo.CodecVersion
	beq	.L276	@,
	ldrb	r0, [r4, #14]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsStreamEnd, <variable>.CurrSeg.IsStreamEnd
	cmp	r0, #1	@ <variable>.CurrSeg.IsStreamEnd,
	movweq	r6, #:lower16:114368	@ tmp292,
	movteq	r6, #:upper16:114368	@ tmp292,
	beq	.L262	@,
	add	r6, r4, #88	@ D.39317, pSegMan,
	add	r1, r4, #8	@, pSegMan,
	mov	r2, #80	@,
	mov	r0, r6	@, D.39317
	bl	memcpy	@
	add	r0, r4, #168	@, pSegMan,
	mov	r1, #80	@,
	bl	__memzero	@
	ldr	r3, [r4, #104]	@ <variable>.LenInByte, <variable>.LenInByte
	cmp	r3, #15	@ <variable>.LenInByte,
	bgt	.L242	@,
	movw	r6, #:lower16:114368	@ tmp305,
	movw	r1, #:lower16:.LC20	@,
	movt	r6, #:upper16:114368	@ tmp305,
	movt	r1, #:upper16:.LC20	@,
	mov	r0, #0	@,
.L268:
	bl	dprint_vfmw	@
	ldr	r1, [r4, #108]	@, <variable>.StreamID
	ldr	r0, [r5, r6]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	movw	r1, #:lower16:g_event_report	@ tmp324,
	movt	r1, #:upper16:g_event_report	@ tmp324,
	ldr	ip, [r1, #0]	@ g_event_report.1252, g_event_report
	cmp	ip, #0	@ g_event_report.1252,
	beq	.L261	@,
	mov	r2, #0	@,
	ldr	r0, [r5, r6]	@,
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.1252
.L261:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L227:
	ldrb	r3, [r4, #15]	@ zero_extendqisi2	@ <variable>.CurrSeg.DspCheckPicOverFlag, <variable>.CurrSeg.DspCheckPicOverFlag
	sub	r1, fp, #108	@,,
	ldrd	r8, [r0, #32]	@ <variable>.CurrSeg.Pts, pSegMan,
	mov	r0, r2	@, pstCtx
	ldr	r7, [r4, #8]	@ <variable>.CurrSeg.VirAddr, <variable>.CurrSeg.VirAddr
	ldr	r6, [r4, #20]	@ <variable>.CurrSeg.PhyAddr, <variable>.CurrSeg.PhyAddr
	ldr	lr, [r4, #24]	@ <variable>.CurrSeg.LenInByte, <variable>.CurrSeg.LenInByte
	ldrb	ip, [r4, #13]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsLastSeg, <variable>.CurrSeg.IsLastSeg
	ldr	r2, [r4, #28]	@ <variable>.CurrSeg.StreamID, <variable>.CurrSeg.StreamID
	strb	r3, [fp, #-107]	@ <variable>.CurrSeg.DspCheckPicOverFlag, HevcPack.pack_is_pic_over_flag
	strd	r8, [fp, #-84]	@ <variable>.CurrSeg.Pts,,
	str	r7, [fp, #-104]	@ <variable>.CurrSeg.VirAddr, HevcPack.p_stream
	str	r6, [fp, #-100]	@ <variable>.CurrSeg.PhyAddr, HevcPack.strm_phy_addr
	str	lr, [fp, #-96]	@ <variable>.CurrSeg.LenInByte, HevcPack.stream_len
	strb	ip, [fp, #-108]	@ <variable>.CurrSeg.IsLastSeg, HevcPack.last_pack_in_nal
	str	r2, [fp, #-92]	@ <variable>.CurrSeg.StreamID, HevcPack.StreamID
	bl	HEVCDEC_DecodePacket	@
	cmn	r0, #2	@,
	moveq	r3, #1	@ tmp233,
	movne	r3, #0	@ tmp235,
	strb	r3, [r4, #1]	@ tmp235, <variable>.IsCurrSegWaitDec
	movw	r3, #:lower16:1960192	@ tmp237,
	movt	r3, #:upper16:1960192	@ tmp237,
	ldr	r4, [r5, r3]	@ <variable>.pHevcDecParam, <variable>.pHevcDecParam
	cmp	r4, #0	@ <variable>.pHevcDecParam,
	bne	.L261	@,
	ldrb	r0, [r5, #6]	@ zero_extendqisi2	@ <variable>.IsStreamEndFlag, <variable>.IsStreamEndFlag
	cmp	r0, #1	@ <variable>.IsStreamEndFlag,
	bne	.L261	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	VCTRL_OutputLastFrame	@
	strb	r4, [r5, #6]	@ <variable>.pHevcDecParam, <variable>.IsStreamEndFlag
	b	.L261	@
.L215:
	ldrb	r3, [r4, #16]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsFrameLastSegFlag, <variable>.CurrSeg.IsFrameLastSegFlag
	mov	r0, r2	@, pstCtx
	ldr	sl, [r4, #8]	@ <variable>.CurrSeg.VirAddr, <variable>.CurrSeg.VirAddr
	sub	r1, fp, #76	@,,
	ldr	r7, [r4, #20]	@ <variable>.CurrSeg.PhyAddr, <variable>.CurrSeg.PhyAddr
	ldr	r6, [r4, #24]	@ <variable>.CurrSeg.LenInByte, <variable>.CurrSeg.LenInByte
	ldrb	lr, [r4, #13]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsLastSeg, <variable>.CurrSeg.IsLastSeg
	ldr	ip, [r4, #28]	@ <variable>.CurrSeg.StreamID, <variable>.CurrSeg.StreamID
	ldrb	r2, [r4, #15]	@ zero_extendqisi2	@ <variable>.CurrSeg.DspCheckPicOverFlag, <variable>.CurrSeg.DspCheckPicOverFlag
	ldrd	r8, [r4, #32]	@, pSegMan,
	strb	r3, [fp, #-75]	@ <variable>.CurrSeg.IsFrameLastSegFlag, H264Pack.IsFrameLastSegFlag
	str	sl, [fp, #-72]	@ <variable>.CurrSeg.VirAddr, H264Pack.p_stream
	strd	r8, [fp, #-52]	@,,
	str	r7, [fp, #-68]	@ <variable>.CurrSeg.PhyAddr, H264Pack.strm_phy_addr
	str	r6, [fp, #-64]	@ <variable>.CurrSeg.LenInByte, H264Pack.stream_len
	strb	lr, [fp, #-76]	@ <variable>.CurrSeg.IsLastSeg, H264Pack.last_pack_in_nal
	str	ip, [fp, #-60]	@ <variable>.CurrSeg.StreamID, H264Pack.StreamID
	strb	r2, [fp, #-74]	@ <variable>.CurrSeg.DspCheckPicOverFlag, H264Pack.pack_is_pic_over_flag
	bl	H264DEC_DecodePacket	@
	cmn	r0, #2	@,
	moveq	r3, #1	@ tmp211,
	movne	r3, #0	@ tmp213,
	strb	r3, [r4, #1]	@ tmp213, <variable>.IsCurrSegWaitDec
	ldr	r4, [r5, #360]	@ <variable>.pH264DecParam, <variable>.pH264DecParam
	cmp	r4, #0	@ <variable>.pH264DecParam,
	bne	.L261	@,
	movw	r6, #13560	@ tmp216,
	ldrb	r0, [r5, r6]	@ zero_extendqisi2	@ <variable>.IsStreamEndFlag, <variable>.IsStreamEndFlag
	cmp	r0, #1	@ <variable>.IsStreamEndFlag,
	bne	.L261	@,
	movw	r1, #57560	@ tmp218,
	ldr	r0, [r5, r1]	@,
	bl	VCTRL_OutputLastFrame	@
	strb	r4, [r5, r6]	@ <variable>.pH264DecParam,
	b	.L261	@
.L217:
	movw	lr, #22960	@ tmp350,
	mov	r0, r2	@, pstCtx
	ldr	r6, [r2, lr]	@ ChanID.1261, <variable>.ChanID
	bl	MP4_GetPacketState	@
	cmp	r0, #3	@,
	beq	.L277	@,
.L248:
	movw	lr, #22960	@ tmp356,
	mov	r1, r4	@, pSegMan
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	bl	SegMan	@
	cmp	r0, #0	@,
	beq	.L278	@,
.L250:
	ldr	r4, [r5, #1036]	@ <variable>.pMp4DecParam, <variable>.pMp4DecParam
	cmp	r4, #0	@ <variable>.pMp4DecParam,
	bne	.L261	@,
	movw	r6, #56808	@ tmp360,
	ldrb	r0, [r5, r6]	@ zero_extendqisi2	@ <variable>.IsStreamEndFlag, <variable>.IsStreamEndFlag
	cmp	r0, #1	@ <variable>.IsStreamEndFlag,
	bne	.L261	@,
	movw	ip, #22960	@ tmp362,
	ldr	r0, [r5, ip]	@,
	bl	VCTRL_OutputLastFrame	@
	strb	r4, [r5, r6]	@ <variable>.pMp4DecParam,
	b	.L261	@
.L218:
	movw	r3, #:lower16:114672	@ tmp327,
	movt	r3, #:upper16:114672	@ tmp327,
	mov	r0, r2	@, pstCtx
	ldr	r6, [r2, r3]	@ ChanID.1254, <variable>.ChanID
	bl	MP2_GetPacketState	@
	cmp	r0, #2	@,
	beq	.L279	@,
.L244:
	movw	ip, #:lower16:114672	@ tmp333,
	movt	ip, #:upper16:114672	@ tmp333,
	mov	r1, r4	@, pSegMan
	ldr	r0, [r5, ip]	@, <variable>.ChanID
	bl	SegMan	@
	subs	r6, r0, #0	@ ret.1258,
	beq	.L280	@,
.L246:
	ldr	r4, [r5, #4]	@ <variable>.pMp2DecParam, <variable>.pMp2DecParam
	cmp	r4, #0	@ <variable>.pMp2DecParam,
	bne	.L261	@,
	movw	r6, #:lower16:114690	@ tmp343,
	movt	r6, #:upper16:114690	@ tmp343,
	ldrb	r0, [r5, r6]	@ zero_extendqisi2	@ <variable>.IsStreamEndFlag, <variable>.IsStreamEndFlag
	cmp	r0, #1	@ <variable>.IsStreamEndFlag,
	bne	.L261	@,
	movw	r2, #:lower16:114672	@ tmp345,
	movt	r2, #:upper16:114672	@ tmp345,
	ldr	r0, [r5, r2]	@,
	bl	VCTRL_OutputLastFrame	@
	strb	r4, [r5, r6]	@ <variable>.pMp2DecParam,
	b	.L261	@
.L219:
	add	r6, r0, #88	@ tmp481, pSegMan,
	mov	lr, #1	@ tmp479,
	add	r1, r0, #8	@, pSegMan,
	strb	lr, [r0, #1]	@ tmp479, <variable>.IsCurrSegWaitDec
	mov	r2, #80	@,
	mov	r0, r6	@, tmp481
	bl	memcpy	@
	movw	r3, #:lower16:g_SdecFunc	@ tmp487,
	movt	r3, #:upper16:g_SdecFunc	@ tmp487,
	ldr	r3, [r3, #12]	@ D.39510, g_SdecFunc.pfun_iMediaSoftDEC_Decode
	cmp	r3, #0	@ D.39510,
	beq	.L260	@,
	mov	r1, r6	@, tmp481
	mov	r0, r5	@, pstCtx
	blx	r3	@ D.39510
	cmn	r0, #2	@,
	beq	.L261	@,
.L260:
	ldr	r0, [r5, #0]	@, <variable>.ChanID
	ldr	r1, [r4, #28]	@, <variable>.CurrSeg.StreamID
	bl	SM_ReleaseStreamSeg	@
	mov	r2, #0	@ tmp491,
	strb	r2, [r4, #1]	@ tmp491, <variable>.IsCurrSegWaitDec
	b	.L261	@
.L220:
	ldrb	lr, [r0, #14]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsStreamEnd, <variable>.CurrSeg.IsStreamEnd
	cmp	lr, #1	@ <variable>.CurrSeg.IsStreamEnd,
	movweq	r6, #:lower16:67968	@ tmp423,
	movteq	r6, #:upper16:67968	@ tmp423,
	beq	.L262	@,
	add	r6, r0, #88	@ temp.1300, pSegMan,
	mov	r2, #80	@,
	add	r1, r0, #8	@, pSegMan,
	mov	r0, r6	@, temp.1300
	bl	memcpy	@
	add	r0, r4, #168	@, pSegMan,
	mov	r1, #80	@,
	bl	__memzero	@
	mov	r0, r5	@, pstCtx
	mov	r1, r6	@, temp.1300
	bl	DIVX3DEC_Decode	@
	ldr	r8, [r5, #4]	@ <variable>.pDivx3DecParam, <variable>.pDivx3DecParam
	cmp	r8, #0	@ <variable>.pDivx3DecParam,
	bne	.L261	@,
	movw	r7, #:lower16:67968	@ tmp435,
	movt	r7, #:upper16:67968	@ tmp435,
.L270:
	mov	r0, r6	@, temp.1300
	mov	r1, #160	@,
	bl	__memzero	@
	ldr	r1, [r4, #28]	@, <variable>.CurrSeg.StreamID
	ldr	r0, [r5, r7]	@,
	bl	SM_ReleaseStreamSeg	@
	movw	r2, #:lower16:g_event_report	@ tmp438,
	movt	r2, #:upper16:g_event_report	@ tmp438,
	ldr	ip, [r2, #0]	@ g_event_report.1306, g_event_report
	cmp	ip, #0	@ g_event_report.1306,
	beq	.L261	@,
	mov	r2, r8	@, <variable>.pDivx3DecParam
	ldr	r0, [r5, r7]	@,
	mov	r1, #113	@,
	mov	r3, r8	@, tmp2
	blx	ip	@ g_event_report.1306
	b	.L261	@
.L221:
	movw	r1, #16608	@ tmp367,
	mov	r0, r2	@, pstCtx
	ldr	r6, [r2, r1]	@ ChanID.1268, <variable>.ChanID
	bl	AVS_GetPacketState	@
	cmp	r0, #0	@,
	bne	.L251	@,
	movw	r3, #:lower16:s_pstVfmwChan	@ tmp368,
	movt	r3, #:upper16:s_pstVfmwChan	@ tmp368,
	ldr	r3, [r3, r6, asl #2]	@ temp.1269, s_pstVfmwChan
	ldr	r2, [r3, #1424]	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r2, #1	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn,
	bne	.L252	@,
	ldr	lr, [r3, #1464]	@ <variable>.stSynExtraData.s32WaitFsFlag, <variable>.stSynExtraData.s32WaitFsFlag
	cmp	lr, #0	@ <variable>.stSynExtraData.s32WaitFsFlag,
	bne	.L251	@,
.L252:
	add	ip, r5, #16384	@, pstCtx,
	mov	r0, r5	@, pstCtx
	add	r1, ip, #64	@,,
	bl	AVSDEC_Decode	@
.L251:
	movw	r2, #16608	@ tmp373,
	mov	r1, r4	@, pSegMan
	ldr	r0, [r5, r2]	@, <variable>.ChanID
	bl	SegMan	@
	cmp	r0, #0	@,
	beq	.L281	@,
.L253:
	ldr	r4, [r5, #4]	@ <variable>.pAvsDecParam, <variable>.pAvsDecParam
	cmp	r4, #0	@ <variable>.pAvsDecParam,
	bne	.L261	@,
	movw	r6, #17124	@ tmp377,
	ldrb	r0, [r5, r6]	@ zero_extendqisi2	@ <variable>.IsStreamEndFlag, <variable>.IsStreamEndFlag
	cmp	r0, #1	@ <variable>.IsStreamEndFlag,
	bne	.L261	@,
	movw	r1, #16608	@ tmp379,
	ldr	r0, [r5, r1]	@,
	bl	VCTRL_OutputLastFrame	@
	strb	r4, [r5, r6]	@ <variable>.pAvsDecParam,
	b	.L261	@
.L222:
	ldrb	r6, [r0, #14]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsStreamEnd, <variable>.CurrSeg.IsStreamEnd
	cmp	r6, #1	@ <variable>.CurrSeg.IsStreamEnd,
	beq	.L282	@,
	add	r6, r0, #88	@ temp.1278, pSegMan,
	mov	r2, #80	@,
	add	r1, r0, #8	@, pSegMan,
	mov	r0, r6	@, temp.1278
	bl	memcpy	@
	add	r0, r4, #168	@, pSegMan,
	mov	r1, #80	@,
	bl	__memzero	@
	mov	r0, r5	@, pstCtx
	mov	r1, r6	@, temp.1278
	bl	REAL8DEC_Decode	@
	ldr	r8, [r5, #4]	@ <variable>.pRv8DecParam, <variable>.pRv8DecParam
	cmp	r8, #0	@ <variable>.pRv8DecParam,
	movweq	r7, #:lower16:80296	@ tmp397,
	movteq	r7, #:upper16:80296	@ tmp397,
	bne	.L261	@,
	b	.L270	@
.L223:
	ldrb	r3, [r0, #14]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsStreamEnd, <variable>.CurrSeg.IsStreamEnd
	cmp	r3, #1	@ <variable>.CurrSeg.IsStreamEnd,
	movweq	r6, #:lower16:80280	@ tmp404,
	movteq	r6, #:upper16:80280	@ tmp404,
	beq	.L262	@,
	add	r6, r0, #88	@ temp.1289, pSegMan,
	mov	r2, #80	@,
	add	r1, r0, #8	@, pSegMan,
	mov	r0, r6	@, temp.1289
	bl	memcpy	@
	add	r0, r4, #168	@, pSegMan,
	mov	r1, #80	@,
	bl	__memzero	@
	mov	r0, r5	@, pstCtx
	mov	r1, r6	@, temp.1289
	bl	REAL9DEC_Decode	@
	ldr	r8, [r5, #4]	@ <variable>.pRv9DecParam, <variable>.pRv9DecParam
	cmp	r8, #0	@ <variable>.pRv9DecParam,
	movweq	r7, #:lower16:80280	@ tmp416,
	movteq	r7, #:upper16:80280	@ tmp416,
	bne	.L261	@,
	b	.L270	@
.L224:
	ldrb	r0, [r0, #14]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsStreamEnd, <variable>.CurrSeg.IsStreamEnd
	cmp	r0, #1	@ <variable>.CurrSeg.IsStreamEnd,
	movweq	r6, #13000	@ tmp461,
	beq	.L262	@,
	add	r6, r4, #88	@ temp.1322, pSegMan,
	mov	r2, #80	@,
	add	r1, r4, #8	@, pSegMan,
	mov	r0, r6	@, temp.1322
	bl	memcpy	@
	add	r0, r4, #168	@, pSegMan,
	mov	r1, #80	@,
	bl	__memzero	@
	mov	r0, r5	@, pstCtx
	mov	r1, r6	@, temp.1322
	bl	VP6DEC_Decode	@
	ldr	r7, [r5, #4]	@ <variable>.pVp6DecParam, <variable>.pVp6DecParam
	cmp	r7, #0	@ <variable>.pVp6DecParam,
	bne	.L261	@,
	mov	r0, r6	@, temp.1322
	mov	r1, #160	@,
	movw	r6, #13000	@ tmp473,
.L273:
	bl	__memzero	@
	ldr	r1, [r4, #28]	@, <variable>.CurrSeg.StreamID
	ldr	r0, [r5, r6]	@,
	bl	SM_ReleaseStreamSeg	@
	movw	r1, #:lower16:g_event_report	@ tmp476,
	movt	r1, #:upper16:g_event_report	@ tmp476,
	ldr	ip, [r1, #0]	@ g_event_report.1328, g_event_report
	cmp	ip, #0	@ g_event_report.1328,
	beq	.L261	@,
	mov	r2, r7	@, <variable>.pVp6DecParam
	ldr	r0, [r5, r6]	@,
	mov	r1, #113	@,
	mov	r3, r7	@, tmp2
	blx	ip	@ g_event_report.1328
	b	.L261	@
.L225:
	ldrb	ip, [r0, #14]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsStreamEnd, <variable>.CurrSeg.IsStreamEnd
	cmp	ip, #1	@ <variable>.CurrSeg.IsStreamEnd,
	movweq	r6, #8520	@ tmp442,
	beq	.L262	@,
	add	r6, r0, #88	@ temp.1311, pSegMan,
	mov	r2, #80	@,
	add	r1, r0, #8	@, pSegMan,
	mov	r0, r6	@, temp.1311
	bl	memcpy	@
	add	r0, r4, #168	@, pSegMan,
	mov	r1, #80	@,
	bl	__memzero	@
	mov	r1, r6	@, temp.1311
	mov	r0, r5	@, pstCtx
	bl	VP8DEC_Decode	@
	ldr	r7, [r5, #4]	@ <variable>.pVp8DecParam, <variable>.pVp8DecParam
	cmp	r7, #0	@ <variable>.pVp8DecParam,
	moveq	r0, r6	@, temp.1311
	moveq	r1, #160	@,
	movweq	r6, #8520	@ tmp454,
	bne	.L261	@,
	b	.L273	@
.L226:
	ldr	r3, [r4, #28]	@ <variable>.CurrSeg.StreamID, <variable>.CurrSeg.StreamID
	sub	r1, fp, #140	@,,
	ldrd	r8, [r0, #32]	@ <variable>.CurrSeg.Pts, pSegMan,
	mov	r0, r2	@, pstCtx
	ldr	r6, [r4, #8]	@ <variable>.CurrSeg.VirAddr, <variable>.CurrSeg.VirAddr
	ldr	lr, [r4, #20]	@ <variable>.CurrSeg.PhyAddr, <variable>.CurrSeg.PhyAddr
	ldr	ip, [r4, #24]	@ <variable>.CurrSeg.LenInByte, <variable>.CurrSeg.LenInByte
	ldrb	r2, [r4, #13]	@ zero_extendqisi2	@ <variable>.CurrSeg.IsLastSeg, <variable>.CurrSeg.IsLastSeg
	str	r3, [fp, #-124]	@ <variable>.CurrSeg.StreamID, MvcPack.StreamID
	strd	r8, [fp, #-116]	@ <variable>.CurrSeg.Pts,,
	str	r6, [fp, #-136]	@ <variable>.CurrSeg.VirAddr, MvcPack.p_stream
	str	lr, [fp, #-132]	@ <variable>.CurrSeg.PhyAddr, MvcPack.strm_phy_addr
	str	ip, [fp, #-128]	@ <variable>.CurrSeg.LenInByte, MvcPack.stream_len
	strb	r2, [fp, #-140]	@ <variable>.CurrSeg.IsLastSeg, MvcPack.last_pack_in_nal
	bl	MVC_DEC_DecodePacket	@
	cmn	r0, #2	@,
	moveq	r3, #1	@ tmp251,
	movne	r3, #0	@ tmp253,
	strb	r3, [r4, #1]	@ tmp253, <variable>.IsCurrSegWaitDec
	ldr	r4, [r5, #228]	@ <variable>.pMvcDecParam, <variable>.pMvcDecParam
	cmp	r4, #0	@ <variable>.pMvcDecParam,
	bne	.L261	@,
	ldrb	r1, [r5, #1]	@ zero_extendqisi2	@ <variable>.IsStreamEndFlag, <variable>.IsStreamEndFlag
	cmp	r1, #1	@ <variable>.IsStreamEndFlag,
	bne	.L261	@,
	ldr	r0, [r5, #120]	@, <variable>.ChanID
	bl	VCTRL_OutputLastFrame	@
	strb	r4, [r5, #1]	@ <variable>.pMvcDecParam, <variable>.IsStreamEndFlag
	b	.L261	@
.L282:
	movw	r6, #:lower16:80296	@ tmp385,
	movt	r6, #:upper16:80296	@ tmp385,
.L262:
	ldr	r0, [r5, r6]	@,
	bl	VCTRL_OutputLastFrame	@
	ldr	r0, [r5, r6]	@,
	ldr	r1, [r4, #28]	@, <variable>.CurrSeg.StreamID
	bl	SM_ReleaseStreamSeg	@
	b	.L261	@
.L274:
	movw	r1, #:lower16:.LC18	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC18	@,
	bl	dprint_vfmw	@
	b	.L261	@
.L281:
	add	r1, r4, #88	@, pSegMan,
	mov	r0, r5	@, pstCtx
	bl	AVSDEC_Decode	@
	b	.L253	@
.L280:
	add	r1, r4, #88	@, pSegMan,
	mov	r0, r5	@, pstCtx
	bl	MPEG2DEC_Decode	@
	movw	r3, #:lower16:114689	@ tmp336,
	movt	r3, #:upper16:114689	@ tmp336,
	ldrb	r1, [r5, r3]	@ zero_extendqisi2	@ <variable>.IsWaitToReRange, <variable>.IsWaitToReRange
	cmp	r1, #1	@ <variable>.IsWaitToReRange,
	strneb	r6, [r4, #1]	@ ret.1258, <variable>.IsCurrSegWaitDec
	streqb	r1, [r4, #1]	@ <variable>.IsWaitToReRange, <variable>.IsCurrSegWaitDec
	b	.L246	@
.L278:
	add	r1, r4, #88	@, pSegMan,
	mov	r0, r5	@, pstCtx
	bl	MPEG4DEC_Decode	@
	b	.L250	@
.L279:
	movw	r0, #:lower16:s_pstVfmwChan	@ tmp328,
	movt	r0, #:upper16:s_pstVfmwChan	@ tmp328,
	ldr	r3, [r0, r6, asl #2]	@ temp.1255, s_pstVfmwChan
	ldr	r6, [r3, #1424]	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r6, #1	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn,
	bne	.L245	@,
	ldr	r2, [r3, #1464]	@ <variable>.stSynExtraData.s32WaitFsFlag, <variable>.stSynExtraData.s32WaitFsFlag
	cmp	r2, #0	@ <variable>.stSynExtraData.s32WaitFsFlag,
	bne	.L244	@,
.L245:
	add	lr, r5, #79872	@, pstCtx,
	mov	r0, r5	@, pstCtx
	add	r1, lr, #96	@,,
	bl	MPEG2DEC_Decode	@
	b	.L244	@
.L277:
	movw	r1, #:lower16:s_pstVfmwChan	@ tmp351,
	movt	r1, #:upper16:s_pstVfmwChan	@ tmp351,
	ldr	r3, [r1, r6, asl #2]	@ temp.1262, s_pstVfmwChan
	ldr	ip, [r3, #1424]	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	ip, #1	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn,
	bne	.L249	@,
	ldr	r3, [r3, #1464]	@ <variable>.stSynExtraData.s32WaitFsFlag, <variable>.stSynExtraData.s32WaitFsFlag
	cmp	r3, #0	@ <variable>.stSynExtraData.s32WaitFsFlag,
	bne	.L248	@,
.L249:
	add	r2, r5, #15680	@, pstCtx,
	mov	r0, r5	@, pstCtx
	add	r1, r2, #24	@,,
	bl	MPEG4DEC_Decode	@
	b	.L248	@
.L242:
	add	r2, r5, #80896	@, pstCtx,
	ldr	r0, [r4, #88]	@, <variable>.VirAddr
	add	r2, r2, #448	@,,
	mov	r1, #16	@,
	bl	Vc1SMPSeqHdr	@
	cmp	r0, #0	@,
	beq	.L283	@,
	movw	r6, #:lower16:114368	@ tmp321,
	movw	r1, #:lower16:.LC21	@,
	movt	r6, #:upper16:114368	@ tmp321,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC21	@,
	b	.L268	@
.L275:
	movw	r1, #:lower16:.LC19	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC19	@,
	bl	dprint_vfmw	@
	b	.L261	@
.L276:
	movw	r1, #:lower16:114368	@ tmp276,
	movt	r1, #:upper16:114368	@ tmp276,
	mov	r0, r5	@, pstCtx
	ldr	r6, [r5, r1]	@ ChanID, <variable>.ChanID
	bl	VC1_GetPacketState	@
	cmp	r0, #2	@,
	beq	.L284	@,
.L238:
	movw	lr, #:lower16:114368	@ tmp282,
	movt	lr, #:upper16:114368	@ tmp282,
	mov	r1, r4	@, pSegMan
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	bl	SegMan	@
	cmp	r0, #0	@,
	beq	.L285	@,
.L240:
	ldr	r4, [r5, #4]	@ <variable>.pVc1DecParam, <variable>.pVc1DecParam
	cmp	r4, #0	@ <variable>.pVc1DecParam,
	bne	.L261	@,
	movw	r6, #:lower16:78255	@ tmp285,
	movt	r6, #:upper16:78255	@ tmp285,
	ldrb	r1, [r5, r6]	@ zero_extendqisi2	@ <variable>.CodecInfo.IsStreamEndFlag, <variable>.CodecInfo.IsStreamEndFlag
	cmp	r1, #1	@ <variable>.CodecInfo.IsStreamEndFlag,
	bne	.L261	@,
	movw	ip, #:lower16:114368	@ tmp287,
	movt	ip, #:upper16:114368	@ tmp287,
	ldr	r0, [r5, ip]	@,
	bl	VCTRL_OutputLastFrame	@
	strb	r4, [r5, r6]	@ <variable>.pVc1DecParam,
	b	.L261	@
.L283:
	ldr	ip, [r4, #104]	@ <variable>.LenInByte, <variable>.LenInByte
	mov	r1, r6	@, D.39317
	ldr	r2, [r4, #88]	@ <variable>.VirAddr, <variable>.VirAddr
	mov	r0, r5	@, pstCtx
	ldr	r3, [r4, #100]	@ <variable>.PhyAddr, <variable>.PhyAddr
	sub	lr, ip, #16	@ tmp315, <variable>.LenInByte,
	add	ip, r2, #16	@ tmp317, <variable>.VirAddr,
	str	lr, [r4, #104]	@ tmp315, <variable>.LenInByte
	str	ip, [r4, #88]	@ tmp317, <variable>.VirAddr
	add	lr, r3, #16	@ tmp319, <variable>.PhyAddr,
	str	lr, [r4, #100]	@ tmp319, <variable>.PhyAddr
	bl	VC1DEC_Decode	@
	mov	r0, r6	@, D.39317
	mov	r1, #160	@,
	bl	__memzero	@
	b	.L261	@
.L285:
	add	r4, r4, #88	@ D.39301, pSegMan,
	mov	r0, r5	@, pstCtx
	mov	r1, r4	@, D.39301
	bl	VC1DEC_Decode	@
	mov	r0, r4	@, D.39301
	mov	r1, #160	@,
	bl	__memzero	@
	b	.L240	@
.L284:
	movw	ip, #:lower16:s_pstVfmwChan	@ tmp277,
	movt	ip, #:upper16:s_pstVfmwChan	@ tmp277,
	ldr	r3, [ip, r6, asl #2]	@ D.39291, s_pstVfmwChan
	ldr	r0, [r3, #1424]	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r0, #1	@ <variable>.stSynExtraData.stChanOption.u32DynamicFrameStoreAllocEn,
	bne	.L239	@,
	ldr	r3, [r3, #1464]	@ <variable>.stSynExtraData.s32WaitFsFlag, <variable>.stSynExtraData.s32WaitFsFlag
	cmp	r3, #0	@ <variable>.stSynExtraData.s32WaitFsFlag,
	bne	.L238	@,
.L239:
	add	r2, r5, #77824	@, pstCtx,
	mov	r0, r5	@, pstCtx
	add	r1, r2, #264	@,,
	bl	VC1DEC_Decode	@
	b	.L238	@
	.fnend
	.size	DecodeStream, .-DecodeStream
	.align	2
	.global	SYNTAX_ReturnImage
	.type	SYNTAX_ReturnImage, %function
SYNTAX_ReturnImage:
	.fnstart
.LFB1537:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #0]	@ <variable>.eVidStd, <variable>.eVidStd
	cmp	r3, #18	@ <variable>.eVidStd,
	ldrls	pc, [pc, r3, asl #2]	@ <variable>.eVidStd
	b	.L287	@
.L302:
	.word	.L301
	.word	.L289
	.word	.L290
	.word	.L291
	.word	.L292
	.word	.L293
	.word	.L294
	.word	.L287
	.word	.L295
	.word	.L296
	.word	.L297
	.word	.L297
	.word	.L297
	.word	.L298
	.word	.L292
	.word	.L299
	.word	.L300
	.word	.L287
	.word	.L301
.L301:
	add	r4, r0, #16	@ pstVoQue, pSynCtx,
.L304:
	ldr	r0, .L306	@,
	bl	OSAL_SpinLockIRQ	@
	ldrh	r2, [r4, #6]	@ <variable>.head, <variable>.head
	ldr	r0, .L306	@,
	sub	r1, r2, #1	@ tmp153, <variable>.head,
	and	r3, r1, #63	@ tmp155, tmp153,
	strh	r3, [r4, #6]	@ movhi	@ tmp155, <variable>.head
	bl	OSAL_SpinUnLockIRQ	@
	mov	r0, #1	@ D.39148,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L289:
	add	lr, r0, #113664	@ pstVoQue, pSynCtx,
	add	r4, lr, #360	@ pstVoQue, pstVoQue,
	b	.L304	@
.L290:
	add	r2, r0, #22528	@ pstVoQue, pSynCtx,
	add	r4, r2, #88	@ pstVoQue, pstVoQue,
	b	.L304	@
.L291:
	add	r1, r0, #79872	@ pstVoQue, pSynCtx,
	add	r4, r1, #648	@ pstVoQue, pstVoQue,
	b	.L304	@
.L292:
	add	lr, r0, #25856	@ pstVoQue, pSynCtx,
	add	r4, lr, #16	@ pstVoQue, pstVoQue,
	b	.L304	@
.L293:
	add	r1, r0, #33792	@ pstVoQue, pSynCtx,
	add	r4, r1, #24	@ pstVoQue, pstVoQue,
	b	.L304	@
.L294:
	add	ip, r0, #16064	@ pstVoQue, pSynCtx,
	add	r4, ip, #32	@ pstVoQue, pstVoQue,
	b	.L304	@
.L295:
	add	r3, r0, #46080	@ pstVoQue, pSynCtx,
	add	r4, r3, #64	@ pstVoQue, pstVoQue,
	b	.L304	@
.L296:
	add	r4, r0, #46080	@ pstVoQue, pSynCtx,
	add	r4, r4, #48	@ pstVoQue, pstVoQue,
	b	.L304	@
.L297:
	add	ip, r0, #12608	@ pstVoQue, pSynCtx,
	add	r4, ip, #48	@ pstVoQue, pstVoQue,
	b	.L304	@
.L298:
	add	r2, r0, #8128	@ pstVoQue, pSynCtx,
	add	r4, r2, #48	@ pstVoQue, pstVoQue,
	b	.L304	@
.L299:
	add	r4, r0, #592	@ pstVoQue, pSynCtx,
	b	.L304	@
.L300:
	movw	r4, #:lower16:2132744	@ pstVoQue,
	movt	r4, #:upper16:2132744	@ pstVoQue,
	add	r4, r0, r4	@ pstVoQue, pSynCtx, pstVoQue
	b	.L304	@
.L287:
	mvn	r0, #1	@ D.39148,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L307:
	.align	2
.L306:
	.word	.LANCHOR0+64
	.fnend
	.size	SYNTAX_ReturnImage, .-SYNTAX_ReturnImage
	.align	2
	.global	SYNTAX_ReceiveImage
	.type	SYNTAX_ReceiveImage, %function
SYNTAX_ReceiveImage:
	.fnstart
.LFB1535:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pSynCtx,
	cmpne	r1, #0	@, p_image,
	mov	r4, r1	@ p_image, p_image
	bne	.L330	@,
.L309:
	mvn	r5, #1	@ ret,
.L328:
	mov	r0, r5	@, ret
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L330:
	ldr	r3, [r0, #0]	@ <variable>.eVidStd, <variable>.eVidStd
	cmp	r3, #18	@ <variable>.eVidStd,
	ldrls	pc, [pc, r3, asl #2]	@ <variable>.eVidStd
	b	.L309	@
.L324:
	.word	.L323
	.word	.L311
	.word	.L312
	.word	.L313
	.word	.L314
	.word	.L315
	.word	.L316
	.word	.L309
	.word	.L317
	.word	.L318
	.word	.L319
	.word	.L319
	.word	.L319
	.word	.L320
	.word	.L314
	.word	.L321
	.word	.L322
	.word	.L309
	.word	.L323
.L323:
	add	r6, r0, #16	@ pstVoQue, pSynCtx,
.L325:
	ldr	r0, .L331	@,
	bl	OSAL_SpinLockIRQ	@
	ldrh	r3, [r6, #6]	@ D.38927, <variable>.head
	ldrh	r0, [r6, #8]	@ <variable>.tail, <variable>.tail
	cmp	r0, r3	@ <variable>.tail, D.38927
	mvneq	r5, #2	@ ret,
	beq	.L327	@,
	add	lr, r6, r3, asl #2	@, tmp164, pstVoQue, D.38927,
	mov	r2, #504	@,
	mov	r0, r4	@, p_image
	mov	r5, #1	@ ret,
	ldr	r1, [lr, #12]	@, <variable>.image_ptr
	bl	memcpy	@
	ldrh	ip, [r6, #8]	@ <variable>.tail, <variable>.tail
	ldrh	r2, [r6, #4]	@ <variable>.history, <variable>.history
	mov	r0, #12	@,
	ldrh	r3, [r6, #6]	@ <variable>.head, <variable>.head
	movw	r1, #:lower16:.LC22	@,
	str	ip, [sp, #0]	@ <variable>.tail,
	movt	r1, #:upper16:.LC22	@,
	ldr	ip, [r4, #196]	@ <variable>.image_id, <variable>.image_id
	str	ip, [sp, #4]	@ <variable>.image_id,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #196]	@ <variable>.image_id, <variable>.image_id
	ldr	r0, [r6, #344]	@ <variable>.ResetMagicWord, <variable>.ResetMagicWord
	add	ip, r3, r0	@ tmp178, <variable>.image_id, <variable>.ResetMagicWord
	str	ip, [r4, #196]	@ tmp178, <variable>.image_id
	ldrh	r2, [r6, #6]	@ <variable>.head, <variable>.head
	add	r1, r2, r5	@ tmp181, <variable>.head,
	and	r3, r1, #63	@ tmp183, tmp181,
	strh	r3, [r6, #6]	@ movhi	@ tmp183, <variable>.head
.L327:
	ldr	r0, .L331	@,
	bl	OSAL_SpinUnLockIRQ	@
	b	.L328	@
.L322:
	movw	r6, #:lower16:2132744	@ pstVoQue,
	movt	r6, #:upper16:2132744	@ pstVoQue,
	add	r6, r0, r6	@ pstVoQue, pSynCtx, pstVoQue
	b	.L325	@
.L321:
	add	r6, r0, #592	@ pstVoQue, pSynCtx,
	b	.L325	@
.L320:
	add	r2, r0, #8128	@ pstVoQue, pSynCtx,
	add	r6, r2, #48	@ pstVoQue, pstVoQue,
	b	.L325	@
.L319:
	add	ip, r0, #12608	@ pstVoQue, pSynCtx,
	add	r6, ip, #48	@ pstVoQue, pstVoQue,
	b	.L325	@
.L318:
	add	r6, r0, #46080	@ pstVoQue, pSynCtx,
	add	r6, r6, #48	@ pstVoQue, pstVoQue,
	b	.L325	@
.L317:
	add	r3, r0, #46080	@ pstVoQue, pSynCtx,
	add	r6, r3, #64	@ pstVoQue, pstVoQue,
	b	.L325	@
.L316:
	add	ip, r0, #16064	@ pstVoQue, pSynCtx,
	add	r6, ip, #32	@ pstVoQue, pstVoQue,
	b	.L325	@
.L315:
	add	r1, r0, #33792	@ pstVoQue, pSynCtx,
	add	r6, r1, #24	@ pstVoQue, pstVoQue,
	b	.L325	@
.L314:
	add	lr, r0, #25856	@ pstVoQue, pSynCtx,
	add	r6, lr, #16	@ pstVoQue, pstVoQue,
	b	.L325	@
.L313:
	add	r1, r0, #79872	@ pstVoQue, pSynCtx,
	add	r6, r1, #648	@ pstVoQue, pstVoQue,
	b	.L325	@
.L312:
	add	r2, r0, #22528	@ pstVoQue, pSynCtx,
	add	r6, r2, #88	@ pstVoQue, pstVoQue,
	b	.L325	@
.L311:
	add	lr, r0, #113664	@ pstVoQue, pSynCtx,
	add	r6, lr, #360	@ pstVoQue, pstVoQue,
	b	.L325	@
.L332:
	.align	2
.L331:
	.word	.LANCHOR0+64
	.fnend
	.size	SYNTAX_ReceiveImage, .-SYNTAX_ReceiveImage
	.align	2
	.global	ResetVoQueue
	.type	ResetVoQueue, %function
ResetVoQueue:
	.fnstart
.LFB1530:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pstVoQue, pstVoQue
	ldr	r0, .L339	@,
	bl	OSAL_SpinLockIRQ	@
	ldrh	r2, [r4, #6]	@ D.38633, <variable>.head
	ldrh	r3, [r4, #4]	@ D.38634, <variable>.history
	cmp	r2, r3	@ D.38633, D.38634
	ldrneh	ip, [r4, #8]	@ prephitmp.1400, <variable>.tail
	beq	.L338	@,
.L335:
	movw	r1, #:lower16:.LC23	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC23	@,
	str	ip, [sp, #0]	@ prephitmp.1400,
	bl	dprint_vfmw	@
.L336:
	ldr	r7, [r4, #344]	@ <variable>.ResetMagicWord, <variable>.ResetMagicWord
	mov	r0, #328	@ tmp159,
	mov	r1, #336	@ tmp162,
	mov	r3, #0	@ tmp143,
	mvn	r2, #0	@ tmp152,
	add	r6, r7, #100	@ tmp151, <variable>.ResetMagicWord,
	mov	ip, #64	@ movhi	@,
	str	r6, [r4, #344]	@ tmp151, <variable>.ResetMagicWord
	mvn	r7, #0	@,
	mvn	r6, #0	@ tmp160,
	strh	ip, [r4, #0]	@ movhi	@, <variable>.max_queue_size
	strd	r6, [r4, r0]	@ tmp160, pstVoQue, tmp159
	mov	r6, #0	@ tmp163,
	mov	r7, #0	@,
	str	r3, [r4, #324]	@ tmp143, <variable>.SideInfo.PrevNumFramesBtwPTS
	strh	r3, [r4, #2]	@ movhi	@ tmp143, <variable>.queue_size
	str	r2, [r4, #280]	@ tmp152, <variable>.SideInfo.OldSeqCnt
	strd	r6, [r4, r1]	@ tmp163, pstVoQue, tmp162
	strh	r3, [r4, #4]	@ movhi	@ tmp143, <variable>.history
	strh	r3, [r4, #6]	@ movhi	@ tmp143, <variable>.head
	strh	r3, [r4, #8]	@ movhi	@ tmp143, <variable>.tail
	str	r2, [r4, #272]	@ tmp152, <variable>.SideInfo.OldAspectRatio
	str	r2, [r4, #292]	@ tmp152, <variable>.SideInfo.OldDispCenter
	str	r2, [r4, #288]	@ tmp152, <variable>.SideInfo.OldDispSize
	str	r2, [r4, #284]	@ tmp152, <variable>.SideInfo.OldFrameRate
	str	r2, [r4, #276]	@ tmp152, <variable>.SideInfo.OldScanType
	str	r3, [r4, #316]	@ tmp143, <variable>.SideInfo.SeqImgCnt
	ldr	r0, .L339	@,
	bl	OSAL_SpinUnLockIRQ	@
	sub	sp, fp, #24
	ldmfd	sp, {r4, r6, r7, fp, sp, pc}
.L338:
	ldrh	ip, [r4, #8]	@ prephitmp.1400, <variable>.tail
	cmp	r2, ip	@ D.38633, prephitmp.1400
	bne	.L335	@,
	b	.L336	@
.L340:
	.align	2
.L339:
	.word	.LANCHOR0+64
	.fnend
	.size	ResetVoQueue, .-ResetVoQueue
	.align	2
	.global	SYNTAX_ReleaseImage
	.type	SYNTAX_ReleaseImage, %function
SYNTAX_ReleaseImage:
	.fnstart
.LFB1536:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r1, #0	@ p_image, p_image
	mov	r5, r0	@ pSynCtx, pSynCtx
	beq	.L405	@,
	ldr	r3, [r0, #0]	@ <variable>.eVidStd, <variable>.eVidStd
	cmp	r3, #18	@ <variable>.eVidStd,
	ldrls	pc, [pc, r3, asl #2]	@ <variable>.eVidStd
	b	.L344	@
.L359:
	.word	.L358
	.word	.L346
	.word	.L347
	.word	.L348
	.word	.L349
	.word	.L350
	.word	.L351
	.word	.L344
	.word	.L352
	.word	.L353
	.word	.L354
	.word	.L354
	.word	.L354
	.word	.L355
	.word	.L349
	.word	.L356
	.word	.L357
	.word	.L344
	.word	.L358
.L358:
	add	r7, r0, #16	@ pstVoQue, pSynCtx,
.L360:
	ldr	r0, .L407	@,
	bl	OSAL_SpinLockIRQ	@
	ldr	r2, [r4, #196]	@ <variable>.image_id, <variable>.image_id
	ldr	ip, [r7, #344]	@ <variable>.ResetMagicWord, <variable>.ResetMagicWord
	rsb	r2, ip, r2	@ prephitmp.1427, <variable>.ResetMagicWord, <variable>.image_id
	str	r2, [r4, #196]	@ prephitmp.1427, <variable>.image_id
	ldrh	r6, [r7, #4]	@ i.1439, <variable>.history
	ldrh	r3, [r7, #6]	@ <variable>.head, <variable>.head
	and	r6, r6, #63	@ i, i.1439,
	cmp	r3, r6	@ <variable>.head, i
	bne	.L391	@,
	b	.L388	@
.L365:
	add	r6, r6, #1	@ i.1465, i,
	and	r6, r6, #63	@ i, i.1465,
	cmp	r3, r6	@ <variable>.head, i
	beq	.L406	@,
.L391:
	add	r8, r6, #2	@ tmp219, i,
	add	lr, r7, r8, asl #2	@, tmp177, pstVoQue, tmp219,
	ldr	r2, [lr, #4]	@ D.39009, <variable>.image_ptr
	cmp	r2, #0	@ D.39009,
	beq	.L363	@,
	ldr	r1, [r2, #196]	@ <variable>.image_id, <variable>.image_id
	ldr	r0, [r4, #196]	@ <variable>.image_id, <variable>.image_id
	cmp	r0, r1	@ <variable>.image_id, <variable>.image_id
	bne	.L365	@,
	mov	sl, #1	@ SameImageFlag,
.L366:
	ldrh	lr, [r7, #4]	@ temp.1441, <variable>.history
	b	.L389	@
.L369:
	mov	r6, r2	@ i, j
.L389:
	cmp	r6, #0	@ i,
	sub	r2, r6, #1	@ j, i,
	add	r0, r7, r8, asl #2	@, tmp185, pstVoQue, tmp219,
	moveq	r2, #63	@ j,
	add	r1, r2, #2	@ tmp187, j,
	cmp	lr, r6	@ temp.1441, i
	add	ip, r7, r1, asl #2	@, tmp190, pstVoQue, tmp187,
	mov	r8, r1	@ tmp219, tmp187
	ldr	r1, [ip, #4]	@ tmp192, <variable>.image_ptr
	str	r1, [r0, #4]	@ tmp192, <variable>.image_ptr
	bne	.L369	@,
	cmp	sl, #1	@ SameImageFlag,
	add	lr, lr, #1	@ tmp193, temp.1441,
	and	r2, lr, #63	@ D.39002, tmp193,
	strh	r2, [r7, #4]	@ movhi	@ D.39002, <variable>.history
	bne	.L365	@,
	ldrh	lr, [r7, #8]	@ <variable>.tail, <variable>.tail
	mov	r0, #12	@,
	movw	r1, #:lower16:.LC27	@,
	movt	r1, #:upper16:.LC27	@,
	str	lr, [sp, #0]	@ <variable>.tail,
	ldr	ip, [r4, #196]	@ <variable>.image_id, <variable>.image_id
	str	ip, [sp, #4]	@ <variable>.image_id,
	bl	dprint_vfmw	@
	ldr	r3, [r5, #0]	@ <variable>.eVidStd, <variable>.eVidStd
	cmp	r3, #18	@ <variable>.eVidStd,
	ldrls	pc, [pc, r3, asl #2]	@ <variable>.eVidStd
	b	.L370	@
.L385:
	.word	.L371
	.word	.L372
	.word	.L373
	.word	.L374
	.word	.L375
	.word	.L376
	.word	.L377
	.word	.L370
	.word	.L378
	.word	.L379
	.word	.L380
	.word	.L380
	.word	.L380
	.word	.L381
	.word	.L375
	.word	.L382
	.word	.L383
	.word	.L370
	.word	.L384
.L346:
	add	r6, r0, #113664	@ pstVoQue, pSynCtx,
	add	r7, r6, #360	@ pstVoQue, pstVoQue,
	b	.L360	@
.L347:
	add	r1, r0, #22528	@ pstVoQue, pSynCtx,
	add	r7, r1, #88	@ pstVoQue, pstVoQue,
	b	.L360	@
.L348:
	add	r0, r0, #79872	@ pstVoQue, pSynCtx,
	add	r7, r0, #648	@ pstVoQue, pstVoQue,
	b	.L360	@
.L349:
	add	r1, r0, #25856	@ pstVoQue, pSynCtx,
	add	r7, r1, #16	@ pstVoQue, pstVoQue,
	b	.L360	@
.L350:
	add	r3, r0, #33792	@ pstVoQue, pSynCtx,
	add	r7, r3, #24	@ pstVoQue, pstVoQue,
	b	.L360	@
.L351:
	add	r2, r0, #16064	@ pstVoQue, pSynCtx,
	add	r7, r2, #32	@ pstVoQue, pstVoQue,
	b	.L360	@
.L352:
	add	ip, r0, #46080	@ pstVoQue, pSynCtx,
	add	r7, ip, #64	@ pstVoQue, pstVoQue,
	b	.L360	@
.L353:
	add	lr, r0, #46080	@ pstVoQue, pSynCtx,
	add	r7, lr, #48	@ pstVoQue, pstVoQue,
	b	.L360	@
.L354:
	add	r0, r0, #12608	@ pstVoQue, pSynCtx,
	add	r7, r0, #48	@ pstVoQue, pstVoQue,
	b	.L360	@
.L355:
	add	r7, r0, #8128	@ pstVoQue, pSynCtx,
	add	r7, r7, #48	@ pstVoQue, pstVoQue,
	b	.L360	@
.L356:
	add	r7, r0, #592	@ pstVoQue, pSynCtx,
	b	.L360	@
.L357:
	movw	r7, #:lower16:2132744	@ pstVoQue,
	movt	r7, #:upper16:2132744	@ pstVoQue,
	add	r7, r0, r7	@ pstVoQue, pSynCtx, pstVoQue
	b	.L360	@
.L344:
	mvn	r4, #1	@ ret,
.L343:
	mov	r0, r4	@, ret
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
.L363:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC26	@,
	mov	r2, r6	@, i
	movt	r1, #:upper16:.LC26	@,
	bl	dprint_vfmw	@
	mov	sl, #2	@ SameImageFlag,
	ldrh	r3, [r7, #6]	@ <variable>.head, <variable>.head
	b	.L366	@
.L406:
	ldr	r2, [r4, #196]	@ prephitmp.1427, <variable>.image_id
.L388:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC25	@,
	movt	r1, #:upper16:.LC25	@,
	mvn	r4, #1	@ ret,
	bl	dprint_vfmw	@
.L362:
	ldr	r0, .L407	@,
	bl	OSAL_SpinUnLockIRQ	@
	b	.L343	@
.L405:
	mov	r0, r4	@, p_image
	movw	r1, #:lower16:.LC24	@,
	movt	r1, #:upper16:.LC24	@,
	mvn	r4, #1	@ ret,
	bl	dprint_vfmw	@
	b	.L343	@
.L384:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	USERDEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	beq	.L362	@,
.L387:
	mvn	r4, #19	@ ret,
	b	.L362	@
.L383:
	add	r0, r5, #8	@, pSynCtx,
	ldr	r1, [r4, #196]	@, <variable>.image_id
	bl	HEVC_DECRecycleImage	@
	cmp	r0, #0	@,
	bne	.L387	@,
	mov	r4, #1	@ ret,
	b	.L362	@
.L382:
	add	r0, r5, #8	@, pSynCtx,
	ldr	r1, [r4, #196]	@, <variable>.image_id
	bl	MVC_DEC_RecycleImage	@
	cmp	r0, #0	@,
	bne	.L387	@,
	mov	r4, #1	@ ret,
	b	.L362	@
.L381:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	VP8DEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	mvnne	r4, #19	@ ret,
	b	.L362	@
.L380:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	VP6DEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	mvnne	r4, #19	@ ret,
	b	.L362	@
.L379:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	REAL9DEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	mvnne	r4, #19	@ ret,
	b	.L362	@
.L378:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	REAL8DEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	mvnne	r4, #19	@ ret,
	b	.L362	@
.L377:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	AVSDEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	mvnne	r4, #19	@ ret,
	b	.L362	@
.L376:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	DIVX3DEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	mvnne	r4, #19	@ ret,
	b	.L362	@
.L375:
	movw	r2, #:lower16:g_SdecFunc	@ tmp211,
	movt	r2, #:upper16:g_SdecFunc	@ tmp211,
	ldr	r3, [r2, #16]	@ D.39108, g_SdecFunc.pfun_iMediaSoftDEC_RecycleImage
	cmp	r3, #0	@ D.39108,
	beq	.L387	@,
	add	r0, r5, #8	@, pSynCtx,
	ldr	r1, [r4, #196]	@, <variable>.image_id
	blx	r3	@ D.39108
	cmp	r0, #0	@,
	bne	.L387	@,
	mov	r4, #1	@ ret,
	b	.L362	@
.L374:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	MPEG2DEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	mvnne	r4, #19	@ ret,
	b	.L362	@
.L373:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	MPEG4DEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	mvnne	r4, #19	@ ret,
	b	.L362	@
.L372:
	ldr	r1, [r4, #196]	@, <variable>.image_id
	add	r0, r5, #8	@, pSynCtx,
	bl	VC1DEC_RecycleImage	@
	cmp	r0, #1	@ ret,
	mov	r4, r0	@ ret,
	mvnne	r4, #19	@ ret,
	b	.L362	@
.L371:
	add	r0, r5, #8	@, pSynCtx,
	ldr	r1, [r4, #196]	@, <variable>.image_id
	bl	H264DEC_RecycleImage	@
	cmp	r0, #0	@,
	bne	.L387	@,
	mov	r4, #1	@ ret,
	b	.L362	@
.L370:
	mvn	r4, #1	@ ret,
	b	.L362	@
.L408:
	.align	2
.L407:
	.word	.LANCHOR0+64
	.fnend
	.size	SYNTAX_ReleaseImage, .-SYNTAX_ReleaseImage
	.align	2
	.global	ReturnImageToSyntax
	.type	ReturnImageToSyntax, %function
ReturnImageToSyntax:
	.fnstart
.LFB1531:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #18	@ eVidStd,
	ldrls	pc, [pc, r0, asl #2]	@ eVidStd
	b	.L426	@
.L425:
	.word	.L411
	.word	.L412
	.word	.L413
	.word	.L414
	.word	.L415
	.word	.L416
	.word	.L417
	.word	.L426
	.word	.L418
	.word	.L419
	.word	.L420
	.word	.L420
	.word	.L420
	.word	.L421
	.word	.L415
	.word	.L422
	.word	.L423
	.word	.L426
	.word	.L424
.L424:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	USERDEC_RecycleImage	@
.L426:
	ldmfd	sp, {fp, sp, pc}	@
.L411:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	H264DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L412:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	VC1DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L413:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	MPEG4DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L414:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	MPEG2DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L415:
	movw	r3, #:lower16:g_SdecFunc	@ tmp150,
	movt	r3, #:upper16:g_SdecFunc	@ tmp150,
	ldr	r3, [r3, #16]	@ D.38681, g_SdecFunc.pfun_iMediaSoftDEC_RecycleImage
	cmp	r3, #0	@ D.38681,
	ldmeqfd	sp, {fp, sp, pc}	@
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	blx	r3	@ D.38681
	ldmfd	sp, {fp, sp, pc}	@
.L416:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	DIVX3DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L417:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	AVSDEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L418:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	REAL8DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L419:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	REAL9DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L420:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	VP6DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L421:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	VP8DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L422:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	MVC_DEC_RecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
.L423:
	mov	r0, r1	@, pCtx
	ldr	r1, [r2, #196]	@, <variable>.image_id
	bl	HEVC_DECRecycleImage	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	ReturnImageToSyntax, .-ReturnImageToSyntax
	.global	__aeabi_uidiv
	.align	2
	.global	InsertImgToVoQueue
	.type	InsertImgToVoQueue, %function
InsertImgToVoQueue:
	.fnstart
.LFB1533:
	@ args = 4, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #44
	sub	sp, sp, #44	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [fp, #4]	@ p_image, p_image
	str	r0, [fp, #-56]	@ ChanID, %sfp
	mov	sl, r1	@ eVidStd, eVidStd
	cmp	r4, #0	@ p_image,
	mov	r9, r2	@ pCtx, pCtx
	mov	r5, r3	@ pstVoQue, pstVoQue
	beq	.L462	@,
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC28	@,
	movw	r6, #:lower16:.LANCHOR0	@ tmp316,
	movt	r1, #:upper16:.LC28	@,
	movt	r6, #:upper16:.LANCHOR0	@ tmp316,
	bl	dprint_vfmw	@
	add	r0, r6, #64	@, tmp316,
	bl	OSAL_SpinLockIRQ	@
	ldrh	r7, [r5, #4]	@ i, <variable>.history
	ldrh	r1, [r5, #8]	@ <variable>.tail, <variable>.tail
	and	r7, r7, #63	@ i.1540, i,
	cmp	r1, r7	@ <variable>.tail, i.1540
	beq	.L430	@,
	mov	r8, #1000	@ tmp325,
	b	.L457	@
.L431:
	add	ip, r7, #1	@ i.1539, i.1540,
	and	r7, ip, #63	@ i.1540, i.1539,
	cmp	r1, r7	@ <variable>.tail, i.1540
	beq	.L430	@,
.L457:
	add	r0, r5, r7, asl #2	@, tmp175, pstVoQue, i.1540,
	ldr	r3, [r4, #196]	@ <variable>.image_id, <variable>.image_id
	ldr	r2, [r0, #12]	@ tmp172, <variable>.image_ptr
	ldr	r2, [r2, #196]	@ D.38748, <variable>.image_id
	cmp	r2, r3	@ D.38748, <variable>.image_id
	bne	.L431	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC29	@,
	movt	r1, #:upper16:.LC29	@,
	bl	dprint_vfmw	@
	str	r8, [r4, #200]	@ tmp325, <variable>.error_level
	add	ip, r7, #1	@ i.1539, i.1540,
	ldrh	r1, [r5, #8]	@ <variable>.tail, <variable>.tail
	and	r7, ip, #63	@ i.1540, i.1539,
	cmp	r1, r7	@ <variable>.tail, i.1540
	bne	.L457	@,
.L430:
	ldr	r2, [r4, #200]	@ D.38755, <variable>.error_level
	cmp	r2, #100	@ D.38755,
	bhi	.L463	@,
	ldr	r3, [r4, #164]	@ prephitmp.1528, <variable>.image_width
	cmp	r3, #31	@ prephitmp.1528,
	ldrls	ip, [r4, #168]	@ prephitmp.1575, <variable>.image_height
	bhi	.L464	@,
.L434:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC30	@,
	movt	r1, #:upper16:.LC30	@,
	str	ip, [sp, #0]	@ prephitmp.1575,
	bl	dprint_vfmw	@
	ldr	r1, [r4, #200]	@ <variable>.error_level, <variable>.error_level
	cmp	r1, #1000	@ <variable>.error_level,
	beq	.L437	@,
	mov	r0, sl	@, eVidStd
	mov	r1, r9	@, pCtx
	mov	r2, r4	@, p_image
	bl	ReturnImageToSyntax	@
.L437:
	ldr	r0, .L468	@,
	bl	OSAL_SpinUnLockIRQ	@
	mov	r0, #1	@ D.38740,
.L429:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L464:
	ldr	ip, [r4, #168]	@ prephitmp.1575, <variable>.image_height
	cmp	ip, #31	@ prephitmp.1575,
	bls	.L434	@,
	ldrd	r8, [r4, #8]	@ <variable>.PTS, p_image,
	mov	r2, sl	@, eVidStd
	mov	r0, r5	@, pstVoQue
	mov	r1, r4	@, p_image
	strd	r8, [r4]	@ <variable>.PTS, <variable>.SrcPts
	bl	ProduceTimeStamp	@
	ldrd	r2, [r4, #16]	@, p_image,
	strd	r2, [fp, #-68]	@,,
	ldrd	r2, [r4]	@, <variable>.SrcPts
	mov	r8, r0	@ D.38764,
	mov	r9, r1	@ D.38764,
	strd	r8, [r4, #8]	@ D.38764, p_image,
	mov	r0, #29	@,
	strd	r8, [sp]	@ D.38764,
	movw	r1, #:lower16:.LC31	@,
	ldrd	r8, [fp, #-68]	@,,
	movt	r1, #:upper16:.LC31	@,
	strd	r8, [sp, #8]	@,,
	bl	dprint_vfmw	@
	ldr	r7, [r4, #172]	@ <variable>.disp_width, <variable>.disp_width
	cmp	r7, #0	@ <variable>.disp_width,
	beq	.L440	@,
	ldr	r8, [r4, #176]	@ <variable>.disp_height, <variable>.disp_height
	cmp	r8, #0	@ <variable>.disp_height,
	bne	.L465	@,
.L440:
	ldr	r3, [r4, #164]	@ <variable>.image_width, <variable>.image_width
	ldr	r0, [r4, #168]	@ <variable>.image_height, <variable>.image_height
	mov	lr, r3, lsr #1	@ tmp205, <variable>.image_width,
	str	r3, [r4, #172]	@ <variable>.image_width, <variable>.disp_width
	mov	sl, r0, lsr #1	@ tmp207, <variable>.image_height,
	str	r0, [r4, #176]	@ <variable>.image_height, <variable>.disp_height
	str	lr, [r4, #180]	@ tmp205, <variable>.disp_center_x
	str	sl, [r4, #184]	@ tmp207, <variable>.disp_center_y
.L441:
	str	r3, [r5, #300]	@ <variable>.image_width, <variable>.SideInfo.ImageWidth
	ldr	ip, [r4, #168]	@ <variable>.image_height, <variable>.image_height
	ldr	r8, [r5, #280]	@ <variable>.SideInfo.OldSeqCnt, <variable>.SideInfo.OldSeqCnt
	str	ip, [r5, #304]	@ <variable>.image_height, <variable>.SideInfo.ImageHeight
	ldr	r1, [r4, #160]	@ <variable>.format, <variable>.format
	ubfx	lr, r1, #5, #3	@ tmp214, <variable>.format,,
	str	lr, [r5, #308]	@ tmp214, <variable>.SideInfo.VideoFormat
	ldr	r3, [r4, #160]	@ <variable>.format, <variable>.format
	str	r3, [r5, #312]	@ <variable>.format, <variable>.SideInfo.ImageFormat
	ldr	ip, [r4, #180]	@ <variable>.disp_center_x, <variable>.disp_center_x
	ldrh	r2, [r4, #184]	@ tmp223, <variable>.disp_center_y
	ldr	r7, [r4, #160]	@ temp.1548, <variable>.format
	ldr	lr, [r4, #204]	@ D.38795, <variable>.seq_cnt
	orr	r1, r2, ip, asl #16	@,, tmp223, <variable>.disp_center_x,
	ldr	sl, [r4, #176]	@ <variable>.disp_height, <variable>.disp_height
	ldrh	r0, [r4, #172]	@ tmp218, <variable>.disp_width
	cmp	lr, r8	@ D.38795, <variable>.SideInfo.OldSeqCnt
	str	r1, [fp, #-68]	@, %sfp
	ubfx	r8, r7, #8, #2	@ ScanType, temp.1548,,
	ldr	r3, [r5, #316]	@ D.38799, <variable>.SideInfo.SeqImgCnt
	ubfx	r7, r7, #14, #3	@ AspectRatio, temp.1548,,
	strne	lr, [r5, #320]	@ D.38795, <variable>.SideInfo.SeqCnt
	orr	sl, r0, sl, asl #16	@, dsize, tmp218, <variable>.disp_height,
	add	ip, r3, #1	@ tmp229, D.38799,
	str	r3, [r4, #208]	@ D.38799, <variable>.seq_img_cnt
	ldr	r3, [r5, #272]	@ D.38801, <variable>.SideInfo.OldAspectRatio
	str	ip, [r5, #316]	@ tmp229, <variable>.SideInfo.SeqImgCnt
	cmp	r3, r7	@ D.38801, AspectRatio
	movweq	r9, #:lower16:g_event_report	@ tmp318,
	movteq	r9, #:upper16:g_event_report	@ tmp318,
	beq	.L443	@,
	movw	r9, #:lower16:g_event_report	@ tmp318,
	movt	r9, #:upper16:g_event_report	@ tmp318,
	ldr	ip, [r9, #0]	@ g_event_report.459, g_event_report
	cmp	ip, #0	@ g_event_report.459,
	beq	.L444	@,
	strb	r3, [fp, #-52]	@ D.38801, para
	mov	r1, #7	@,
	ldr	r0, [fp, #-56]	@, %sfp
	sub	r2, fp, #52	@,,
	strb	r7, [fp, #-51]	@ AspectRatio, para
	mov	r3, #2	@,
	blx	ip	@ g_event_report.459
.L444:
	str	r7, [r5, #272]	@ AspectRatio, <variable>.SideInfo.OldAspectRatio
.L443:
	ldr	r2, [r5, #276]	@ <variable>.SideInfo.OldScanType, <variable>.SideInfo.OldScanType
	cmp	r2, r8	@ <variable>.SideInfo.OldScanType, ScanType
	beq	.L445	@,
	ldr	ip, [r9, #0]	@ g_event_report.1552, g_event_report
	cmp	ip, #0	@ g_event_report.1552,
	beq	.L446	@,
	sub	r2, fp, #44	@ tmp237,,
	ldr	r0, [fp, #-56]	@, %sfp
	mov	r1, #4	@,
	mov	r3, #1	@,
	strb	r8, [r2, #-8]!	@ ScanType, para
	blx	ip	@ g_event_report.1552
.L446:
	str	r8, [r5, #276]	@ ScanType, <variable>.SideInfo.OldScanType
.L445:
	ldr	r7, [r5, #288]	@ <variable>.SideInfo.OldDispSize, <variable>.SideInfo.OldDispSize
	cmp	r7, sl	@ <variable>.SideInfo.OldDispSize, dsize
	beq	.L466	@,
.L447:
	str	sl, [r5, #288]	@ dsize, <variable>.SideInfo.OldDispSize
	ldr	sl, [fp, #-68]	@, %sfp
	str	sl, [r5, #292]	@, <variable>.SideInfo.OldDispCenter
	ldr	ip, [r9, #0]	@ g_event_report.1553, g_event_report
	cmp	ip, #0	@ g_event_report.1553,
	beq	.L448	@,
	ldrh	r2, [r4, #172]	@, <variable>.disp_width
	ldr	r0, [fp, #-56]	@, %sfp
	strh	r2, [fp, #-52]	@ movhi	@, para
	sub	r2, fp, #52	@,,
	ldrh	r1, [r4, #176]	@, <variable>.disp_height
	strh	r1, [fp, #-50]	@ movhi	@, para
	mov	r1, #1	@,
	ldrh	lr, [r4, #180]	@, <variable>.disp_center_x
	strh	lr, [fp, #-48]	@ movhi	@, para
	ldrh	r3, [r4, #184]	@, <variable>.disp_center_y
	strh	r3, [fp, #-46]	@ movhi	@, para
	mov	r3, #8	@,
	blx	ip	@ g_event_report.1553
.L448:
	ldr	sl, [r4, #104]	@ <variable>.luma_phy_addr, <variable>.luma_phy_addr
	mov	r0, #12	@,
	ldr	r3, [r4, #108]	@ <variable>.chrom_phy_addr, <variable>.chrom_phy_addr
	movw	r1, #:lower16:.LC32	@,
	ldr	r2, [r4, #192]	@ <variable>.image_stride, <variable>.image_stride
	movt	r1, #:upper16:.LC32	@,
	str	sl, [r4, #88]	@ <variable>.luma_phy_addr, <variable>.top_luma_phy_addr
	str	r3, [r4, #92]	@ <variable>.chrom_phy_addr, <variable>.top_chrom_phy_addr
	add	r8, r2, r3	@ tmp256, <variable>.image_stride, <variable>.chrom_phy_addr
	add	r7, r2, sl	@ tmp252, <variable>.image_stride, <variable>.luma_phy_addr
	str	r8, [r4, #100]	@ tmp256, <variable>.btm_chrom_phy_addr
	str	r7, [r4, #96]	@ tmp252, <variable>.btm_luma_phy_addr
	movw	sl, #:lower16:g_VfmwChanStat	@ tmp248,
	ldrh	ip, [r5, #8]	@ <variable>.tail, <variable>.tail
	movt	sl, #:upper16:g_VfmwChanStat	@ tmp248,
	ldr	lr, [r4, #196]	@ <variable>.image_id, <variable>.image_id
	movw	r7, #:lower16:g_LowDelaySeqIndex	@ tmp276,
	ldr	r8, [fp, #-56]	@, %sfp
	movt	r7, #:upper16:g_LowDelaySeqIndex	@ tmp276,
	ldrh	r2, [r5, #4]	@ <variable>.history, <variable>.history
	ldrh	r3, [r5, #6]	@ <variable>.head, <variable>.head
	str	ip, [sp, #0]	@ <variable>.tail,
	mov	ip, #300	@ tmp247,
	str	lr, [sp, #4]	@ <variable>.image_id,
	mul	lr, ip, r8	@, tmp247,
	str	lr, [fp, #-68]	@, %sfp
	bl	dprint_vfmw	@
	ldrh	r3, [r5, #8]	@ <variable>.tail, <variable>.tail
	mov	r1, #5	@,
	ldr	r0, [fp, #-56]	@, %sfp
	add	r2, r3, #1	@ tmp270, <variable>.tail,
	add	ip, r5, r3, asl #2	@, tmp266, pstVoQue, <variable>.tail,
	and	r8, r2, #63	@ tmp272, tmp270,
	strh	r8, [r5, #8]	@ movhi	@ tmp272, <variable>.tail
	ldr	r2, [fp, #-68]	@, %sfp
	str	r4, [ip, #12]	@ p_image, <variable>.image_ptr
	ldr	r3, [r4, #148]	@ <variable>.is_fld_save, <variable>.is_fld_save
	add	r8, sl, r2	@ pVfmwChanStat, tmp248,
	str	r3, [r8, #20]	@ <variable>.is_fld_save, <variable>.u32IsFieldFlag
	ldr	lr, [r4, #196]	@ <variable>.image_id, <variable>.image_id
	add	r2, lr, #2	@ tmp275, <variable>.image_id,
	str	r2, [r5, #296]	@ tmp275, <variable>.SideInfo.LastImageIdPlus2
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r2, [r7, ip, asl #2]	@, g_LowDelaySeqIndex
	bl	VDEC_Lowdelay_Event_Time	@
	ldr	lr, [fp, #-56]	@, %sfp
	ldr	r0, .L468	@,
	ldr	r3, [r7, lr, asl #2]	@ tmp280, g_LowDelaySeqIndex
	add	ip, r3, #1	@ tmp281, tmp280,
	str	ip, [r7, lr, asl #2]	@ tmp281, g_LowDelaySeqIndex
	bl	OSAL_SpinUnLockIRQ	@
	ldr	ip, [r9, #0]	@ g_event_report.1570, g_event_report
	cmp	ip, #0	@ g_event_report.1570,
	beq	.L449	@,
	mov	r2, r4	@, p_image
	ldr	r0, [fp, #-56]	@, %sfp
	mov	r1, #5	@,
	mov	r3, #504	@,
	blx	ip	@ g_event_report.1570
.L449:
	mov	r0, #8	@,
	bl	CHECK_REC_POS_ENABLE	@
	cmp	r0, #0	@,
	bne	.L467	@,
.L450:
	ldr	r0, [r8, #4]	@ <variable>.u32FrImgNum, <variable>.u32FrImgNum
	add	r4, r0, #1	@ tmp305, <variable>.u32FrImgNum,
	str	r4, [r8, #4]	@ tmp305, <variable>.u32FrImgNum
	bl	OSAL_GetTimeInMs	@
	ldr	r1, [fp, #-68]	@, %sfp
	ldr	r3, [sl, r1]	@ <variable>.u32FrBeginTime, <variable>.u32FrBeginTime
	rsb	r1, r3, r0	@ Period, <variable>.u32FrBeginTime, CurTime.1571
	mov	r4, r0	@ CurTime.1571,
	cmp	r1, #1000	@ Period,
	movcc	r0, #1	@ D.38740,
	bcc	.L429	@,
	ldr	r3, [r8, #4]	@ temp.1572, <variable>.u32FrImgNum
	cmp	r3, #0	@ temp.1572,
	beq	.L452	@,
	movw	ip, #10000	@ tmp309,
	mul	r0, ip, r3	@, tmp309, temp.1572
	bl	__aeabi_uidiv	@
	str	r0, [r8, #8]	@, <variable>.u32FrFrameRate
.L452:
	ldr	lr, [fp, #-68]	@, %sfp
	mov	r2, #0	@ tmp313,
	mov	r0, #1	@ D.38740,
	str	r2, [r8, #4]	@ tmp313, <variable>.u32FrImgNum
	str	r4, [sl, lr]	@ CurTime.1571, <variable>.u32FrBeginTime
	b	.L429	@
.L463:
	ldr	r3, [r4, #164]	@ prephitmp.1528, <variable>.image_width
	ldr	ip, [r4, #168]	@ prephitmp.1575, <variable>.image_height
	b	.L434	@
.L465:
	cmp	sl, #15	@ eVidStd,
	cmpne	sl, #0	@, eVidStd,
	beq	.L461	@,
	cmp	sl, #16	@ eVidStd,
	bne	.L440	@,
.L461:
	ldr	r3, [r4, #164]	@ <variable>.image_width, <variable>.image_width
	b	.L441	@
.L467:
	bl	OSAL_GetTimeInMs	@
	ldr	r2, [fp, #-56]	@, %sfp
	movw	ip, #:lower16:g_TraceFramePeriod	@ tmp292,
	movt	ip, #:upper16:g_TraceFramePeriod	@ tmp292,
	add	r6, r6, r2, asl #2	@, tmp288, tmp316,,
	ldr	r1, [r6, #76]	@ tmp291, last_rec_pos_time
	mov	r3, r0	@ CurTime,
	ldr	r0, [ip, #0]	@ g_TraceFramePeriod, g_TraceFramePeriod
	rsb	r4, r1, r3	@ tmp290, tmp291, CurTime
	cmp	r4, r0	@ tmp290, g_TraceFramePeriod
	bls	.L450	@,
	ldr	r9, [fp, #-56]	@, %sfp
	movw	r1, #541	@,
	ldr	r0, .L468+4	@,
	str	r3, [r6, #76]	@ CurTime, last_rec_pos_time
	mov	lr, r9, asl #24	@ tmp302,,
	add	r2, lr, #524288	@, tmp302,
	bl	DBG_AddTrace	@
	b	.L450	@
.L466:
	ldr	r0, [r5, #292]	@ <variable>.SideInfo.OldDispCenter, <variable>.SideInfo.OldDispCenter
	ldr	r8, [fp, #-68]	@, %sfp
	cmp	r0, r8	@ <variable>.SideInfo.OldDispCenter,
	bne	.L447	@,
	b	.L448	@
.L462:
	mov	r0, r4	@, p_image
	movw	r1, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC2	@,
	bl	dprint_vfmw	@
	mvn	r0, #1	@ D.38740,
	b	.L429	@
.L469:
	.align	2
.L468:
	.word	.LANCHOR0+64
	.word	.LANCHOR1+16
	.fnend
	.size	InsertImgToVoQueue, .-InsertImgToVoQueue
	.global	g_DnrEnable
	.global	pstVdecUsdPool
	.global	g_SpinLock
	.global	g_SpinLockIrq_Destroy
	.section	.rodata
	.align	2
.LANCHOR1 = . + 0
	.type	__func__.40053, %object
	.size	__func__.40053, 15
__func__.40053:
	.ascii	"IsVoQueueEmpty\000"
	.space	1
	.type	__func__.38734, %object
	.size	__func__.38734, 19
__func__.38734:
	.ascii	"InsertImgToVoQueue\000"
	.section	.rodata.str1.4,"aMS",%progbits,1
	.align	2
.LC0:
	.ascii	"WARNNING: aspect ration (%d) is not expected!\012\000"
	.space	1
.LC1:
	.ascii	"%s pstVoQue NULL\012\000"
	.space	2
.LC2:
	.ascii	"image point NULL\012\000"
	.space	2
.LC3:
	.ascii	"VoQueue state: head(%d) history(%d) tail(%d)\000"
	.space	3
.LC4:
	.ascii	"\012\000"
	.space	2
.LC5:
	.ascii	"%d \000"
.LC6:
	.ascii	"Initializing VO queue\012\000"
	.space	1
.LC7:
	.ascii	"pu8[0] = %x,pu8[1] = %x, pu8[2] = %x\012\000"
	.space	2
.LC8:
	.ascii	"ERROR: VFMW_VP8 one packet stream, but IsLastSeg =="
	.ascii	" 0\012\000"
	.space	1
.LC9:
	.ascii	"ERROR: VFMW_VP6 one packet stream, but IsLastSeg =="
	.ascii	" 0\012\000"
	.space	1
.LC10:
	.ascii	"VidStd=%d Error!\012\000"
	.space	2
.LC11:
	.ascii	"pSegMan error!\012\000"
.LC12:
	.ascii	"More than two packet!!!ERROR!!!\012\000"
	.space	3
.LC13:
	.ascii	"*****************copy packets tobe one*************"
	.ascii	"****\012\000"
	.space	3
.LC14:
	.ascii	"*****************two packet*****************\012\000"
	.space	2
.LC15:
	.ascii	"pSegMan->CurrSeg.IsLastSeg=%d\012\000"
	.space	1
.LC16:
	.ascii	"pSegMan->CurrSeg.PhyAddr=%#x\012\000"
	.space	2
.LC17:
	.ascii	"pSegMan->CurrSeg.LenInByte=%#x\012\000"
.LC18:
	.ascii	"ERROR: Wrong PreParseInfo about Vc1 IsAdvProfile!\012"
	.ascii	"\000"
	.space	1
.LC19:
	.ascii	"ERROR: Wrong PreParseInfo about Vc1 CodecVersion!\012"
	.ascii	"\000"
	.space	1
.LC20:
	.ascii	"LENTH ERROR: VC1 S/MP BS is wrong!\012\000"
.LC21:
	.ascii	"SYNTAX ERROR: VC1 S/MP BS is wrong!\012\000"
	.space	3
.LC22:
	.ascii	"Queue=(%02d,%02d,%02d) - F%d\012\000"
	.space	2
.LC23:
	.ascii	"ResetVoQueue but queue not empty: head(%d) history("
	.ascii	"%d) tail(%d)\012\000"
	.space	3
.LC24:
	.ascii	"SYNTAX_ReleaseImage p_image is null\012\000"
	.space	3
.LC25:
	.ascii	"Image %d not found in vo queue.\012\000"
	.space	3
.LC26:
	.ascii	"image[%d] null\012\000"
.LC27:
	.ascii	"Queue=(%02d,%02d,%02d) x F%d\012\000"
	.space	2
.LC28:
	.ascii	"call InsertVOQueue\012\000"
.LC29:
	.ascii	"FATAL: p_image(id=%d) has already in the VoQueue!\012"
	.ascii	"\000"
	.space	1
.LC30:
	.ascii	"error=%d,W=%d,H=%d,not acceptable!\012\000"
.LC31:
	.ascii	"out_pts: %lld -> %lld Usertag %lld\012\000"
.LC32:
	.ascii	"Queue=(%02d,%02d,%02d) + F%d\012\000"
	.bss
	.align	2
.LANCHOR0 = . + 0
	.type	pstVdecUsdPool, %object
	.size	pstVdecUsdPool, 64
pstVdecUsdPool:
	.space	64
	.type	g_SpinLock, %object
	.size	g_SpinLock, 12
g_SpinLock:
	.space	12
	.type	last_rec_pos_time.38726, %object
	.size	last_rec_pos_time.38726, 64
last_rec_pos_time.38726:
	.space	64
	.type	g_DnrEnable, %object
	.size	g_DnrEnable, 4
g_DnrEnable:
	.space	4
	.type	g_SpinLockIrq_Destroy, %object
	.size	g_SpinLockIrq_Destroy, 12
g_SpinLockIrq_Destroy:
	.space	12
	.ident	"GCC: (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) 4.4.1"
	.section	.note.GNU-stack,"",%progbits
