	.arch armv7-a
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 2
	.eabi_attribute 18, 4
	.file	"hevc.c"
@ GNU C (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) version 4.4.1 (arm-hisiv200-linux-gnueabi)
@	compiled by GNU C version 4.1.1 20061011 (Red Hat 4.1.1-30), GMP version 4.3.1, MPFR version 2.4.2.
@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
@ options passed:  -nostdinc
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include
@ -Iarch/arm/include/generated
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include
@ -Iinclude
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include/uapi
@ -Iarch/arm/include/generated/uapi
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/uapi
@ -Iinclude/generated/uapi
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0
@ -Idrivers/msp/vfmw/vfmw_v4.0
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/mach-hi3798mx/include
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/include
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/drv/include
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/scene/stb
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/osal/linux_kernel
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/softlib
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/syntax
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiSCDV200
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV300R001
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/product/Hi3798MV100
@ -I/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common_test/vdecko
@ -imultilib armv7a_soft -iprefix
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/
@ -isysroot /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../target
@ -D__KERNEL__ -D__LINUX_ARM_ARCH__=7 -Uarm -DCHIP_TYPE_hi3796mv100
@ -DSDK_VERSION=HiSTBAndroidV600R001C00SPC064_v2016061301 -DHI_MCE_SUPPORT
@ -DHI_GPIOI2C_SUPPORT -DHI_LOG_SUPPORT=1 -DHI_LOG_LEVEL=4
@ -DHI_PROC_SUPPORT=1 -DHI_HDMI_SUPPORT_1_4 -DHI_KEYLED_SUPPORT
@ -DHI_HDCP_SUPPORT -DHI_SCI_SUPPORT -DHI_PVR_SUPPORT -DHI_VI_SUPPORT
@ -DHI_VENC_SUPPORT -DHI_AENC_SUPPORT -DHI_PQ_V3_0 -DENV_ARMLINUX_KERNEL
@ -DDNR_DISABLE -DSCD_MP4_SLICE_ENABLE -DSUPPORT_JPEG_444
@ -DVFMW_EXTRA_TYPE_DEFINE -DPRODUCT_STB -D__VFMW_REGISTER_ISR__
@ -DQ_MATRIX_FIXED -DVFMW_VDH_V300R001_SUPPORT -DCFG_SCD_TIME_OUT=2000
@ -DCFG_VDH_TIME_OUT=500 -DVFMW_H264_SUPPORT -DVFMW_HEVC_SUPPORT
@ -DVFMW_MVC_SUPPORT -DVFMW_MPEG2_SUPPORT -DVFMW_MPEG4_SUPPORT
@ -DVFMW_AVS_SUPPORT -DVFMW_VC1_SUPPORT -DVFMW_BPD_H_SUPPORT
@ -DVFMW_REAL8_SUPPORT -DVFMW_REAL9_SUPPORT -DVFMW_VP6_SUPPORT
@ -DVFMW_VP8_SUPPORT -DVFMW_DIVX3_SUPPORT -DVFMW_H263_SUPPORT
@ -DVFMW_JPEG_SUPPORT -DVFMW_RAW_SUPPORT -DVFMW_USER_SUPPORT
@ -DCFG_MAX_CHAN_NUM=16 -DVFMW_DPRINT_SUPPORT -DVFMW_SCD_LOWDLY_SUPPORT
@ -DVFMW_AVSPLUS_SUPPORT -DVFMW_MODULE_LOWDLY_SUPPORT
@ -DVFMW_SYSTEM_REG_DISABLE -DHI_VDEC_SVDEC_BUILTIN -DKBUILD_STR(s)=#s
@ -DKBUILD_BASENAME=KBUILD_STR(hevc) -DKBUILD_MODNAME=KBUILD_STR(hi_vfmw)
@ -isystem
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/include
@ -include
@ /home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/linux/kconfig.h
@ -MD drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/.hevc.o.d
@ /home/tangxiaodi/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC064/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/hevc.c
@ -mlittle-endian -mapcs -mno-sched-prolog -mabi=aapcs-linux
@ -mno-thumb-interwork -marm -march=armv7-a -msoft-float -auxbase-strip
@ drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/hevc.o -O2 -Wall
@ -Wundef -Wstrict-prototypes -Wno-trigraphs
@ -Werror-implicit-function-declaration -Wno-format-security
@ -Wframe-larger-than=1024 -Wdeclaration-after-statement -Wno-pointer-sign
@ -p -fno-strict-aliasing -fno-common -fno-delete-null-pointer-checks
@ -fno-dwarf2-cfi-asm -funwind-tables -fno-stack-protector
@ -fno-omit-frame-pointer -fno-optimize-sibling-calls -fno-strict-overflow
@ -fconserve-stack -fno-pic -fverbose-asm
@ options enabled:  -falign-loops -fargument-alias -fauto-inc-dec
@ -fbranch-count-reg -fcaller-saves -fcprop-registers -fcrossjumping
@ -fcse-follow-jumps -fdefer-pop -fearly-inlining
@ -feliminate-unused-debug-types -fexpensive-optimizations
@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm
@ -fguess-branch-probability -fident -fif-conversion -fif-conversion2
@ -findirect-inlining -finline -finline-functions-called-once
@ -finline-small-functions -fipa-cp -fipa-pure-const -fipa-reference
@ -fira-share-save-slots -fira-share-spill-slots -fivopts
@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
@ -fmerge-debug-strings -fmove-loop-invariants -foptimize-register-move
@ -fpeephole -fpeephole2 -fprofile -fpromote-loop-indices
@ -freg-struct-return -fregmove -frename-registers -freorder-blocks
@ -freorder-functions -frerun-cse-after-loop -fsched-interblock
@ -fsched-spec -fsched-stalled-insns-dep -fschedule-insns -fschedule-insns2
@ -fsection-anchors -fsigned-zeros -fsplit-ivs-in-unroller
@ -fsplit-wide-types -fthread-jumps -ftoplevel-reorder -ftrapping-math
@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-copy-prop
@ -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
@ -ftree-dse -ftree-fre -ftree-loop-im -ftree-loop-ivcanon
@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-pre -ftree-reassoc
@ -ftree-scev-cprop -ftree-sink -ftree-sra -ftree-switch-conversion
@ -ftree-ter -ftree-vect-loop-version -ftree-vrp -funit-at-a-time
@ -funroll-loops -funwind-tables -fverbose-asm -fweb
@ -fzero-initialized-in-bss -mapcs-frame -mglibc -mlittle-endian

@ Compiler executable checksum: fa59e0bd179ef45b3a3c3e6f3383fdac

	.global	__aeabi_uidiv
	.text
	.align	2
	.global	HEVC_InitSigLastScan
	.type	HEVC_InitSigLastScan, %function
HEVC_InitSigLastScan:
	.fnstart
.LFB1529:
	@ args = 16, pretend = 0, frame = 120
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #124
	sub	sp, sp, #124	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [fp, #8]	@ iWidth, iWidth
	mov	sl, r0	@ pHevcCtx, pHevcCtx
	str	r2, [fp, #-64]	@ pBuffH, %sfp
	cmp	r4, #15	@ iWidth,
	str	r3, [fp, #-156]	@ pBuffV, %sfp
	ldr	r9, [fp, #4]	@ pBuffD, pBuffD
	ldr	r6, [fp, #12]	@ iHeight, iHeight
	bgt	.L2	@,
	cmp	r4, #8	@ iWidth,
	addeq	r0, r0, #300	@, pHevcCtx,
	streq	r0, [fp, #-60]	@, %sfp
	moveq	r8, #64	@ uiNumScanPos,
	beq	.L4	@,
	mul	r8, r4, r4	@ uiNumScanPos, iWidth, iWidth
	cmp	r8, #0	@ uiNumScanPos,
	beq	.L5	@,
	str	r9, [fp, #-60]	@ pBuffD, %sfp
.L4:
	mov	r7, #0	@ uiScanLine,
	rsb	r5, r4, #1	@ D.48670, iWidth,
	mov	r0, r7	@ uiNextScanPos.1138, uiScanLine
	mov	r3, r7	@ iPrimDim.1134, uiScanLine
.L6:
	cmp	r4, r7	@ iWidth, uiScanLine
	movgt	r2, #0	@ iScndDim.1135,
	bgt	.L11	@,
	rsb	r1, r4, r3	@ tmp401, iWidth, iPrimDim.1134
	sub	r3, r3, #1	@ iPrimDim.1134, iPrimDim.1134,
	cmp	r4, r3	@ iWidth, iPrimDim.1134
	and	r1, r1, #1	@ tmp402, tmp401,
	mov	r2, #1	@ iScndDim.1135,
	bgt	.L11	@,
	cmp	r1, #0	@ tmp402,
	beq	.L7	@,
	sub	r3, r3, #1	@ iPrimDim.1134, iPrimDim.1134,
	mov	r2, #2	@ iScndDim.1135,
	cmp	r4, r3	@ iWidth, iPrimDim.1134
	bgt	.L11	@,
.L7:
	sub	r3, r3, #2	@ iPrimDim.1134, iPrimDim.1134,
	add	r2, r2, #2	@ iScndDim.1135, iScndDim.1135,
	cmp	r4, r3	@ iWidth, iPrimDim.1134
	ble	.L7	@,
.L11:
	cmp	r3, #0	@ iPrimDim.1134,
	cmpge	r4, r2	@, iWidth, iScndDim.1135
	ble	.L8	@,
	mla	ip, r4, r3, r2	@, iWidth, iPrimDim.1134, iScndDim.1135
	ldr	r1, [fp, #-60]	@, %sfp
	str	ip, [fp, #-48]	@, %sfp
	add	ip, r1, r0, asl #2	@, ivtmp.1113,, uiNextScanPos.1138,
	ldr	r1, [fp, #-48]	@ ivtmp.1111, %sfp
.L9:
	add	r2, r2, #1	@ iScndDim.1135, iScndDim.1135,
	sub	r3, r3, #1	@ iPrimDim.1134, iPrimDim.1134,
	cmp	r3, #0	@ iPrimDim.1134,
	cmpge	r4, r2	@, iWidth, iScndDim.1135
	str	r1, [ip], #4	@ ivtmp.1111,
	add	r0, r0, #1	@ uiNextScanPos.1138, uiNextScanPos.1138,
	add	r1, r1, r5	@ ivtmp.1111, ivtmp.1111, D.48670
	bgt	.L9	@,
.L8:
	cmp	r8, r0	@ uiNumScanPos, uiNextScanPos.1138
	bls	.L5	@,
	add	r7, r7, #1	@ uiScanLine, uiScanLine,
	mov	r3, r7	@ iPrimDim.1134, uiScanLine
	b	.L6	@
.L2:
	mov	r0, r4, asr #2	@, iWidth,
	str	r0, [fp, #-60]	@, %sfp
	ldr	r5, [fp, #-60]	@, %sfp
	add	r2, r0, sl	@ tmp280,, pHevcCtx
	ldrsb	r2, [r2, #8]	@ tmp282, <variable>.aucConvertToBit
	mul	r3, r5, r5	@ uiNumBlks,,
	cmp	r3, #0	@ uiNumBlks,
	beq	.L13	@,
	add	r7, sl, r2, asl #16	@, tmp287, pHevcCtx, tmp282,
	movw	r5, #:lower16:1443980	@,
	movt	r5, #:upper16:1443980	@,
	mov	r3, r3, asl #4	@, uiNumBlks,
	add	r6, r7, r5	@, tmp287,
	rsb	r5, r4, #1	@ D.48605, iWidth,
	str	r6, [fp, #-48]	@, %sfp
	mov	r6, #0	@ ivtmp.1082,
	str	r3, [fp, #-56]	@, %sfp
	str	sl, [fp, #-52]	@ pHevcCtx, %sfp
.L20:
	cmp	r4, #32	@ iWidth,
	ldr	lr, [fp, #-48]	@, %sfp
	ldr	r1, [fp, #-60]	@, %sfp
	ldreq	ip, [fp, #-52]	@, %sfp
	ldr	r8, [lr, #0]	@ initBlkPos, <variable>.auiSigLastScan
	ldreq	r8, [ip, #300]	@ initBlkPos, <variable>.sigLastScanCG32x32
	mov	r0, r8	@, initBlkPos
	bl	__aeabi_uidiv	@
	ldr	sl, [fp, #-60]	@, %sfp
	mla	r1, r4, r0, r8	@ tmp292, iWidth, tmp290, initBlkPos
	mov	r8, #0	@ uiScanLine.1127,
	mov	ip, r8	@ uiNextScanPos, uiScanLine.1127
	mov	r2, r8	@ iScndDim, uiScanLine.1127
	mov	r3, r8	@ iPrimDim, uiScanLine.1127
	mls	r0, sl, r0, r1	@ tmp294,, tmp290, tmp292
	mov	sl, r0, asl #2	@ offsetD, tmp294,
.L69:
	cmp	r2, #3	@ iScndDim,
	movgt	r7, #0	@, tmp303
	movle	r7, #1	@, tmp303
	cmp	r3, #0	@ iPrimDim,
	movlt	r7, #0	@, tmp303,
	cmp	r7, #0	@ tmp303,
	beq	.L16	@,
	mla	r1, r4, r3, r2	@ tmp305, iWidth, iPrimDim, iScndDim
	add	r0, ip, r6	@ tmp306, uiNextScanPos, ivtmp.1082
	add	r0, r9, r0, asl #2	@, ivtmp.1070, pBuffD, tmp306,
	add	r1, r1, sl	@ ivtmp.1068, tmp305, offsetD
.L17:
	add	r2, r2, #1	@ iScndDim, iScndDim,
	sub	r3, r3, #1	@ iPrimDim, iPrimDim,
	cmp	r2, #3	@ iScndDim,
	movgt	lr, #0	@, tmp316
	movle	lr, #1	@, tmp316
	cmp	r3, #0	@ iPrimDim,
	str	r1, [r0], #4	@ ivtmp.1068,
	add	ip, ip, #1	@ uiNextScanPos, uiNextScanPos,
	movlt	lr, #0	@, tmp316,
	cmp	lr, #0	@ tmp316,
	add	r1, r1, r5	@ ivtmp.1068, ivtmp.1068, D.48605
	bne	.L17	@,
.L16:
	cmp	ip, #15	@ uiNextScanPos,
	bhi	.L18	@,
	add	r8, r8, #1	@ uiScanLine.1127, uiScanLine.1127,
	cmp	r8, #3	@ uiScanLine.1127,
	movle	r3, r8	@ iPrimDim, uiScanLine.1127
	movle	r2, #0	@ iScndDim,
	subgt	r2, r8, #3	@ iScndDim, uiScanLine.1127,
	movgt	r3, #3	@ iPrimDim,
	b	.L69	@
.L18:
	ldr	r3, [fp, #-56]	@, %sfp
	add	r6, r6, #16	@ ivtmp.1082, ivtmp.1082,
	ldr	r1, [fp, #-48]	@, %sfp
	ldr	r2, [fp, #-52]	@, %sfp
	cmp	r6, r3	@ ivtmp.1082,
	add	r7, r1, #4	@,,
	str	r7, [fp, #-48]	@, %sfp
	add	r7, r2, #4	@,,
	str	r7, [fp, #-52]	@, %sfp
	bne	.L20	@,
.L13:
	ldr	ip, [fp, #-60]	@, %sfp
	cmp	ip, #0	@,
	ble	.L35	@,
	mov	r7, #3	@ tmp319,
	mov	sl, ip, asl #6	@,,
	mul	r3, r7, r4	@, tmp319, iWidth
	ldr	r7, [fp, #-64]	@ ivtmp.1054, %sfp
	add	r0, r4, #1	@ tmp318, iWidth,
	mov	r5, r4, asl #1	@, iWidth,
	mov	r2, #0	@,
	mov	r9, r4, asl #2	@ D.48577, iWidth,
	mov	r8, r0, asl #1	@, tmp318,
	mov	r6, #0	@,
	str	r5, [fp, #-124]	@, %sfp
	str	r3, [fp, #-120]	@, %sfp
	ldr	ip, [fp, #-120]	@, %sfp
	str	r2, [fp, #-84]	@, %sfp
	str	r8, [fp, #-140]	@, %sfp
	str	sl, [fp, #-152]	@, %sfp
	str	r5, [fp, #-132]	@, %sfp
	str	r5, [fp, #-116]	@, %sfp
	str	r6, [fp, #-144]	@, %sfp
	str	ip, [fp, #-92]	@, %sfp
	str	r9, [fp, #-136]	@ D.48577, %sfp
	str	r4, [fp, #-148]	@ iWidth, %sfp
.L25:
	ldr	r1, [fp, #-84]	@, %sfp
	mov	r9, #1	@ blkX,
	ldr	sl, [fp, #-148]	@, %sfp
	ldr	r4, [fp, #-60]	@, %sfp
	add	r6, r1, #2	@ ivtmp.1019,,
	add	r5, r1, sl	@ ivtmp.1023,,
	str	r6, [r7, #8]	@ ivtmp.1019,
	str	r1, [r7, #0]	@,* ivtmp.1054
	add	r8, r1, r9	@ tmp437,,
	str	r5, [r7, #16]	@ ivtmp.1023,
	add	r2, r1, #3	@ tmp439,,
	str	r8, [r7, #4]	@ tmp437,
	sub	r3, r4, #1	@ tmp379,,
	str	r2, [r7, #12]	@ tmp439,
	add	ip, r5, r9	@ tmp440, ivtmp.1023,
	add	r0, r5, #2	@ tmp441, ivtmp.1023,
	str	ip, [r7, #20]	@ tmp440,
	str	r0, [r7, #24]	@ tmp441,
	cmp	r9, r4	@ blkX,
	add	r4, r5, #3	@ tmp442, ivtmp.1023,
	str	r4, [r7, #28]	@ tmp442,
	ldr	r4, [fp, #-116]	@, %sfp
	and	r3, r3, r9	@ tmp381, tmp379,
	add	r6, r4, r9	@ tmp443,,
	add	r8, r4, #3	@ tmp444,,
	str	r6, [r7, #36]	@ tmp443,
	str	r8, [r7, #44]	@ tmp444,
	ldr	r8, [fp, #-92]	@, %sfp
	add	r2, r8, r9	@ tmp445,,
	add	ip, r8, #2	@ tmp446,,
	str	r2, [r7, #52]	@ tmp445,
	add	r0, r8, #3	@ tmp447,,
	str	ip, [r7, #56]	@ tmp446,
	add	r2, r7, #68	@, ivtmp.1054,
	str	r0, [r7, #60]	@ tmp447,
	str	sl, [fp, #-128]	@, %sfp
	str	r4, [r7, #32]	@,
	add	r4, r1, #4	@ ivtmp.1169,,
	ldr	r6, [fp, #-140]	@, %sfp
	str	r8, [r7, #48]	@,
	str	r6, [r7, #40]	@,
	mov	r6, #64	@ ivtmp.1016,
	ldr	ip, [fp, #-84]	@, %sfp
	ldr	r1, [fp, #-140]	@, %sfp
	str	r2, [fp, #-56]	@, %sfp
	add	r0, ip, #6	@,,
	ldr	r8, [fp, #-116]	@, %sfp
	add	sl, r1, #4	@,,
	ldr	r2, [fp, #-92]	@, %sfp
	str	r0, [fp, #-52]	@, %sfp
	add	ip, r8, #4	@ ivtmp.1160,,
	add	r0, r5, #4	@ ivtmp.1023, ivtmp.1023,
	str	sl, [fp, #-48]	@, %sfp
	add	r1, r2, #4	@ ivtmp.1155,,
	beq	.L70	@,
	cmp	r3, #0	@ tmp381,
	beq	.L79	@,
	ldr	r3, [fp, #-60]	@, %sfp
	mov	r9, #2	@ blkX,
	add	r8, r5, #7	@ tmp517, ivtmp.1023,
	cmp	r9, r3	@ blkX,
	mov	r3, r7	@ D.48510, ivtmp.1054
	str	r4, [r3, r6]!	@ ivtmp.1169,
	add	r4, r4, #4	@ ivtmp.1169, ivtmp.1169,
	ldr	sl, [fp, #-56]	@, %sfp
	ldr	r6, [fp, #-84]	@, %sfp
	add	r2, r6, #5	@ tmp512,,
	str	r2, [sl, #0]	@ tmp512,
	ldr	sl, [fp, #-52]	@, %sfp
	add	r2, r6, #7	@ tmp514,,
	str	r8, [r3, #28]	@ tmp517,
	add	r8, r5, #5	@ tmp515, ivtmp.1023,
	str	r2, [r3, #12]	@ tmp514,
	add	r5, r5, #6	@ tmp516, ivtmp.1023,
	str	sl, [r3, #8]	@,
	str	r8, [r3, #20]	@ tmp515,
	ldr	r6, [fp, #-116]	@, %sfp
	str	r5, [r3, #24]	@ tmp516,
	add	sl, r6, #5	@ tmp518,,
	str	sl, [r3, #36]	@ tmp518,
	ldr	sl, [fp, #-92]	@, %sfp
	add	r8, r6, #7	@ tmp519,,
	str	r8, [r3, #44]	@ tmp519,
	add	r8, r7, #132	@, ivtmp.1054,
	add	r2, sl, #5	@ tmp520,,
	add	r5, sl, #6	@ tmp521,,
	str	r2, [r3, #52]	@ tmp520,
	add	r6, sl, #7	@ tmp522,,
	str	r5, [r3, #56]	@ tmp521,
	str	r6, [r3, #60]	@ tmp522,
	mov	r6, #128	@ ivtmp.1016,
	str	r8, [fp, #-56]	@, %sfp
	str	r0, [r3, #16]	@ ivtmp.1023,
	add	r0, r0, #4	@ ivtmp.1023, ivtmp.1023,
	str	ip, [r3, #32]	@ ivtmp.1160,
	add	ip, ip, #4	@ ivtmp.1160, ivtmp.1160,
	ldr	sl, [fp, #-48]	@, %sfp
	add	r2, sl, #4	@,,
	str	sl, [r3, #40]	@,
	str	r2, [fp, #-48]	@, %sfp
	str	r1, [r3, #48]	@ ivtmp.1155,
	add	r1, r1, #4	@ ivtmp.1155, ivtmp.1155,
	ldr	r5, [fp, #-84]	@, %sfp
	add	r8, r5, #10	@,,
	str	r8, [fp, #-52]	@, %sfp
	beq	.L70	@,
.L79:
	str	r7, [fp, #-88]	@ ivtmp.1054, %sfp
.L26:
	ldr	r2, [fp, #-52]	@, %sfp
	add	r9, r9, #2	@ blkX, blkX,
	ldr	r5, [fp, #-48]	@, %sfp
	add	r8, r6, #64	@ tmp384, ivtmp.1016,
	add	sl, r2, #4	@,,
	ldr	r2, [fp, #-88]	@ D.48510, %sfp
	add	r3, r5, #4	@,,
	ldr	r5, [fp, #-56]	@ tmp385, %sfp
	ldr	r7, [fp, #-60]	@, %sfp
	str	sl, [fp, #-64]	@, %sfp
	add	sl, r4, #4	@ tmp383, ivtmp.1169,
	str	r3, [fp, #-76]	@, %sfp
	cmp	r9, r7	@ blkX,
	mov	r3, r2	@ D.48510, D.48510
	add	r7, r0, #4	@, ivtmp.1023,
	str	r7, [fp, #-68]	@, %sfp
	add	r7, ip, #4	@, ivtmp.1160,
	str	r7, [fp, #-72]	@, %sfp
	add	r7, r1, #4	@, ivtmp.1155,
	str	r7, [fp, #-80]	@, %sfp
	add	r7, r4, #7	@, ivtmp.1169,
	str	r4, [r2, r6]!	@ ivtmp.1169,
	add	r6, r0, #7	@, ivtmp.1023,
	str	r7, [fp, #-96]	@, %sfp
	add	r7, ip, #7	@, ivtmp.1160,
	str	r6, [fp, #-104]	@, %sfp
	add	r6, r1, #7	@, ivtmp.1155,
	str	r7, [fp, #-108]	@, %sfp
	add	r7, r4, #1	@ tmp320, ivtmp.1169,
	str	r6, [fp, #-112]	@, %sfp
	add	r6, r8, #64	@ ivtmp.1016, tmp384,
	str	r7, [r5], #64	@ tmp320,
	ldr	r7, [fp, #-52]	@, %sfp
	str	r7, [r2, #8]	@,
	ldr	r7, [fp, #-64]	@, %sfp
	add	r7, r7, #4	@,,
	str	r7, [fp, #-52]	@, %sfp
	str	r0, [r2, #16]	@ ivtmp.1023,
	add	r7, r4, #3	@ tmp321, ivtmp.1169,
	add	r4, r4, #5	@, ivtmp.1169,
	str	r7, [r2, #12]	@ tmp321,
	add	r7, r0, #1	@ tmp322, ivtmp.1023,
	str	r7, [r2, #20]	@ tmp322,
	add	r7, r0, #2	@ tmp323, ivtmp.1023,
	str	r7, [r2, #24]	@ tmp323,
	add	r7, r0, #3	@ tmp324, ivtmp.1023,
	str	r7, [r2, #28]	@ tmp324,
	add	r7, ip, #1	@ tmp325, ivtmp.1160,
	str	r7, [r2, #36]	@ tmp325,
	add	r7, ip, #3	@ tmp326, ivtmp.1160,
	str	r7, [r2, #44]	@ tmp326,
	add	r7, r1, #1	@ tmp327, ivtmp.1155,
	str	r7, [r2, #52]	@ tmp327,
	add	r7, r1, #2	@ tmp328, ivtmp.1155,
	str	r7, [r2, #56]	@ tmp328,
	add	r7, r1, #3	@ tmp329, ivtmp.1155,
	str	r7, [r2, #60]	@ tmp329,
	str	r4, [fp, #-160]	@, %sfp
	add	r4, sl, #4	@ ivtmp.1169, tmp383,
	str	ip, [r2, #32]	@ ivtmp.1160,
	ldr	r7, [fp, #-48]	@, %sfp
	str	r7, [r2, #40]	@,
	ldr	r7, [fp, #-76]	@, %sfp
	add	r7, r7, #4	@,,
	str	r7, [fp, #-48]	@, %sfp
	str	r1, [r2, #48]	@ ivtmp.1155,
	add	r2, r0, #5	@, ivtmp.1023,
	str	r2, [fp, #-100]	@, %sfp
	add	r2, r0, #6	@ tmp421, ivtmp.1023,
	str	sl, [r3, r8]!	@ tmp383,
	ldr	r7, [fp, #-56]	@, %sfp
	ldr	r0, [fp, #-160]	@, %sfp
	str	r0, [r7, #64]	@,
	add	r7, r5, #64	@, tmp385,
	ldr	r8, [fp, #-112]	@, %sfp
	ldr	sl, [fp, #-68]	@, %sfp
	str	r8, [r3, #60]	@,
	add	r0, sl, #4	@ ivtmp.1023,,
	ldr	sl, [fp, #-96]	@, %sfp
	str	r7, [fp, #-56]	@, %sfp
	add	r7, ip, #5	@ tmp423, ivtmp.1160,
	str	sl, [r3, #12]	@,
	ldr	ip, [fp, #-100]	@, %sfp
	str	ip, [r3, #20]	@,
	ldr	r5, [fp, #-72]	@, %sfp
	str	r2, [r3, #24]	@ tmp421,
	ldr	r8, [fp, #-104]	@, %sfp
	add	ip, r5, #4	@ ivtmp.1160,,
	str	r7, [r3, #36]	@ tmp423,
	add	r5, r1, #5	@ tmp425, ivtmp.1155,
	str	r8, [r3, #28]	@,
	add	r8, r1, #6	@ tmp426, ivtmp.1155,
	ldr	sl, [fp, #-108]	@, %sfp
	ldr	r2, [fp, #-80]	@, %sfp
	str	r5, [r3, #52]	@ tmp425,
	str	sl, [r3, #44]	@,
	add	r1, r2, #4	@ ivtmp.1155,,
	str	r8, [r3, #56]	@ tmp426,
	ldr	r7, [fp, #-64]	@, %sfp
	str	r7, [r3, #8]	@,
	ldr	r2, [fp, #-68]	@, %sfp
	str	r2, [r3, #16]	@,
	ldr	r8, [fp, #-72]	@, %sfp
	str	r8, [r3, #32]	@,
	ldr	sl, [fp, #-76]	@, %sfp
	str	sl, [r3, #40]	@,
	ldr	r5, [fp, #-80]	@, %sfp
	str	r5, [r3, #48]	@,
	bne	.L26	@,
	ldr	r7, [fp, #-88]	@ ivtmp.1054, %sfp
.L70:
	ldr	r8, [fp, #-144]	@, %sfp
	ldr	ip, [fp, #-84]	@, %sfp
	add	r2, r8, #1	@,,
	ldr	sl, [fp, #-60]	@, %sfp
	ldr	r8, [fp, #-136]	@, %sfp
	ldr	r3, [fp, #-116]	@, %sfp
	cmp	r2, sl	@,
	add	r1, ip, r8	@,,
	ldr	r4, [fp, #-140]	@, %sfp
	ldr	ip, [fp, #-92]	@, %sfp
	add	r6, r3, r8	@,,
	ldr	r5, [fp, #-152]	@, %sfp
	add	r0, r4, r8	@,,
	str	r1, [fp, #-84]	@, %sfp
	add	r1, ip, r8	@,,
	str	r2, [fp, #-144]	@, %sfp
	add	r7, r7, r5	@ ivtmp.1054, ivtmp.1054,
	str	r6, [fp, #-116]	@, %sfp
	str	r0, [fp, #-140]	@, %sfp
	str	r1, [fp, #-92]	@, %sfp
	bne	.L25	@,
	ldr	ip, [fp, #-148]	@ iWidth, %sfp
	mov	r0, #3	@ tmp330,
	ldr	r1, [fp, #-136]	@ D.48577, %sfp
	mov	r5, #2	@,
	ldr	r6, [fp, #-156]	@ ivtmp.1004, %sfp
	mov	r7, #0	@,
	mul	sl, r0, ip	@, tmp330, iWidth
	str	r5, [fp, #-100]	@, %sfp
	str	r7, [fp, #-96]	@, %sfp
	str	sl, [fp, #-104]	@, %sfp
.L28:
	ldr	r2, [fp, #-96]	@, %sfp
	mov	r5, #1	@,
	ldr	r0, [fp, #-60]	@, %sfp
	str	r5, [fp, #-64]	@, %sfp
	mov	r4, r2, asl #2	@ ivtmp.960,,
	str	r4, [r6, #0]	@ ivtmp.960,* ivtmp.1004
	ldr	r7, [fp, #-128]	@, %sfp
	cmp	r5, r0	@,
	sub	r8, r0, #1	@ tmp374,,
	and	r8, r8, r5	@ tmp376, tmp374,
	add	r5, r4, r1	@ ivtmp.960, ivtmp.960, D.48577
	str	r7, [r6, #4]	@,
	ldr	r3, [fp, #-132]	@, %sfp
	str	r3, [r6, #8]	@,
	add	r3, r7, #2	@,,
	ldr	sl, [fp, #-120]	@, %sfp
	str	r3, [fp, #-80]	@, %sfp
	str	sl, [r6, #12]	@,
	ldr	r0, [fp, #-100]	@, %sfp
	ldr	ip, [fp, #-124]	@, %sfp
	add	r2, ip, #2	@,,
	str	r2, [fp, #-76]	@, %sfp
	str	r0, [r6, #32]	@,
	add	ip, r4, #1	@ tmp477, ivtmp.960,
	ldr	r7, [fp, #-104]	@, %sfp
	add	sl, r7, #2	@,,
	str	sl, [fp, #-72]	@, %sfp
	str	r3, [r6, #36]	@,
	add	r3, r4, #3	@ tmp484, ivtmp.960,
	str	ip, [r6, #16]	@ tmp477,
	ldr	sl, [fp, #-128]	@, %sfp
	add	r2, sl, #1	@ tmp478,,
	str	r2, [r6, #20]	@ tmp478,
	ldr	ip, [fp, #-132]	@, %sfp
	add	r4, sl, #3	@ tmp485,,
	mov	sl, #64	@,
	add	r0, ip, #1	@ tmp479,,
	str	r0, [r6, #24]	@ tmp479,
	ldr	r0, [fp, #-120]	@, %sfp
	add	r2, ip, #3	@ tmp486,,
	str	r3, [r6, #48]	@ tmp484,
	str	r2, [r6, #56]	@ tmp486,
	add	r7, r0, #1	@ tmp480,,
	str	r4, [r6, #52]	@ tmp485,
	str	r7, [r6, #28]	@ tmp480,
	add	r7, r0, #3	@ tmp487,,
	str	r7, [r6, #60]	@ tmp487,
	mov	r7, r1	@ ivtmp.961, D.48577
	ldr	r3, [fp, #-76]	@, %sfp
	str	r3, [r6, #40]	@,
	ldr	r4, [fp, #-72]	@, %sfp
	str	sl, [fp, #-88]	@, %sfp
	str	r4, [r6, #44]	@,
	ldr	ip, [fp, #-128]	@, %sfp
	ldr	r0, [fp, #-132]	@, %sfp
	ldr	r2, [fp, #-120]	@, %sfp
	add	r4, ip, r1	@ ivtmp.1146,, D.48577
	ldr	r3, [fp, #-100]	@, %sfp
	add	ip, r0, r1	@ ivtmp.1148,, D.48577
	add	r0, r2, r1	@ ivtmp.1153,, D.48577
	add	sl, r3, r1	@,, D.48577
	str	sl, [fp, #-56]	@, %sfp
	beq	.L71	@,
	cmp	r8, #0	@ tmp376,
	beq	.L77	@,
	ldr	r7, [fp, #-60]	@, %sfp
	mov	r3, #2	@,
	ldr	sl, [fp, #-88]	@, %sfp
	add	r2, r5, #1	@ tmp501, ivtmp.960,
	str	r3, [fp, #-64]	@, %sfp
	cmp	r3, r7	@,
	mov	r3, r6	@ D.48350, ivtmp.1004
	add	r7, r4, #1	@ tmp502, ivtmp.1146,
	str	r5, [r3, sl]!	@ ivtmp.960,
	add	sl, ip, #1	@ tmp503, ivtmp.1148,
	str	r2, [r3, #16]	@ tmp501,
	add	r2, r5, #3	@ tmp508, ivtmp.960,
	str	r7, [r3, #20]	@ tmp502,
	add	r7, r0, #1	@ tmp504, ivtmp.1153,
	str	sl, [r3, #24]	@ tmp503,
	add	sl, r4, #3	@ tmp509, ivtmp.1146,
	str	r7, [r3, #28]	@ tmp504,
	add	r7, r0, #3	@ tmp511, ivtmp.1153,
	str	r2, [r3, #48]	@ tmp508,
	add	r2, ip, #3	@ tmp510, ivtmp.1148,
	str	sl, [r3, #52]	@ tmp509,
	add	r5, r5, r1	@ ivtmp.960, ivtmp.960, D.48577
	str	r2, [r3, #56]	@ tmp510,
	str	r7, [r3, #60]	@ tmp511,
	ldr	sl, [fp, #-80]	@, %sfp
	add	r2, sl, r1	@ tmp505,, D.48577
	str	r2, [r3, #36]	@ tmp505,
	ldr	r7, [fp, #-76]	@, %sfp
	add	sl, r7, r1	@ tmp506,, D.48577
	str	sl, [r3, #40]	@ tmp506,
	ldr	r2, [fp, #-72]	@, %sfp
	str	r4, [r3, #4]	@ ivtmp.1146,
	add	r4, r4, r1	@ ivtmp.1146, ivtmp.1146, D.48577
	str	ip, [r3, #8]	@ ivtmp.1148,
	add	r7, r2, r1	@ tmp507,, D.48577
	str	r0, [r3, #12]	@ ivtmp.1153,
	add	ip, ip, r1	@ ivtmp.1148, ivtmp.1148, D.48577
	str	r7, [r3, #44]	@ tmp507,
	add	r0, r0, r1	@ ivtmp.1153, ivtmp.1153, D.48577
	ldr	sl, [fp, #-56]	@, %sfp
	mov	r7, r1, asl #1	@ ivtmp.961, D.48577,
	add	r2, sl, r1	@,, D.48577
	str	sl, [r3, #32]	@,
	mov	sl, #128	@,
	str	r2, [fp, #-56]	@, %sfp
	str	sl, [fp, #-88]	@, %sfp
	beq	.L71	@,
.L77:
	str	r6, [fp, #-84]	@ ivtmp.1004, %sfp
.L29:
	ldr	r2, [fp, #-64]	@, %sfp
	add	r3, ip, r1	@, ivtmp.1148, D.48577
	ldr	sl, [fp, #-88]	@, %sfp
	add	r9, r2, #2	@,,
	ldr	r2, [fp, #-56]	@, %sfp
	str	r3, [fp, #-48]	@, %sfp
	add	r8, sl, #64	@,,
	add	r3, r2, r1	@,, D.48577
	add	sl, r0, r1	@, ivtmp.1153, D.48577
	ldr	r2, [fp, #-84]	@ D.48350, %sfp
	str	sl, [fp, #-52]	@, %sfp
	ldr	sl, [fp, #-88]	@, %sfp
	str	r8, [fp, #-92]	@, %sfp
	add	r8, r7, r1	@ ivtmp.961, ivtmp.961, D.48577
	ldr	r6, [fp, #-60]	@, %sfp
	str	r3, [fp, #-68]	@, %sfp
	mov	r3, r2	@ D.48350, D.48350
	str	r9, [fp, #-64]	@, %sfp
	cmp	r9, r6	@,
	str	r5, [r2, sl]!	@ ivtmp.960,
	add	r6, r5, r1	@ ivtmp.960, ivtmp.960, D.48577
	ldr	sl, [fp, #-92]	@, %sfp
	add	r9, r4, r1	@ ivtmp.1146, ivtmp.1146, D.48577
	add	sl, sl, #64	@,,
	str	sl, [fp, #-88]	@, %sfp
	str	r4, [r2, #4]	@ ivtmp.1146,
	add	sl, r5, #1	@ tmp331, ivtmp.960,
	str	ip, [r2, #8]	@ ivtmp.1148,
	add	r5, r5, #3	@ tmp341, ivtmp.960,
	str	sl, [r2, #16]	@ tmp331,
	add	sl, r4, #1	@ tmp332, ivtmp.1146,
	str	sl, [r2, #20]	@ tmp332,
	add	sl, ip, #1	@ tmp333, ivtmp.1148,
	str	sl, [r2, #24]	@ tmp333,
	add	sl, r0, #1	@ tmp334, ivtmp.1153,
	str	sl, [r2, #28]	@ tmp334,
	add	r4, r4, #3	@ tmp342, ivtmp.1146,
	ldr	sl, [fp, #-80]	@, %sfp
	add	ip, ip, #3	@ tmp343, ivtmp.1148,
	add	sl, sl, r7	@,, ivtmp.961
	str	sl, [r2, #36]	@,
	ldr	sl, [fp, #-76]	@, %sfp
	add	sl, sl, r7	@,, ivtmp.961
	str	sl, [r2, #40]	@,
	ldr	sl, [fp, #-72]	@, %sfp
	str	r0, [r2, #12]	@ ivtmp.1153,
	add	r0, r0, #3	@ tmp344, ivtmp.1153,
	str	r5, [r2, #48]	@ tmp341,
	add	r7, sl, r7	@ tmp340,, ivtmp.961
	str	r7, [r2, #44]	@ tmp340,
	add	r5, r6, r1	@ ivtmp.960, ivtmp.960, D.48577
	ldr	sl, [fp, #-56]	@, %sfp
	add	r7, r8, r1	@ ivtmp.961, ivtmp.961, D.48577
	str	sl, [r2, #32]	@,
	ldr	sl, [fp, #-68]	@, %sfp
	add	sl, sl, r1	@,, D.48577
	str	sl, [fp, #-56]	@, %sfp
	str	r4, [r2, #52]	@ tmp342,
	add	r4, r9, r1	@ ivtmp.1146, ivtmp.1146, D.48577
	str	ip, [r2, #56]	@ tmp343,
	ldr	sl, [fp, #-48]	@, %sfp
	str	r0, [r2, #60]	@ tmp344,
	ldr	r2, [fp, #-92]	@, %sfp
	add	ip, sl, r1	@ ivtmp.1148,, D.48577
	ldr	sl, [fp, #-52]	@, %sfp
	str	r6, [r3, r2]!	@ ivtmp.960,
	add	r0, sl, r1	@ ivtmp.1153,, D.48577
	str	r9, [r3, #4]	@ ivtmp.1146,
	add	sl, r6, #1	@ tmp457, ivtmp.960,
	add	r2, r9, #1	@ tmp458, ivtmp.1146,
	str	sl, [r3, #16]	@ tmp457,
	str	r2, [r3, #20]	@ tmp458,
	add	r6, r6, #3	@ tmp464, ivtmp.960,
	ldr	sl, [fp, #-48]	@, %sfp
	add	r9, r9, #3	@ tmp465, ivtmp.1146,
	add	r2, sl, #1	@ tmp459,,
	str	r2, [r3, #24]	@ tmp459,
	ldr	sl, [fp, #-52]	@, %sfp
	add	r2, sl, #1	@ tmp460,,
	str	r2, [r3, #28]	@ tmp460,
	ldr	sl, [fp, #-80]	@, %sfp
	add	r2, sl, r8	@ tmp461,, ivtmp.961
	str	r2, [r3, #36]	@ tmp461,
	ldr	sl, [fp, #-76]	@, %sfp
	add	r2, sl, r8	@ tmp462,, ivtmp.961
	str	r2, [r3, #40]	@ tmp462,
	ldr	r2, [fp, #-72]	@, %sfp
	str	r6, [r3, #48]	@ tmp464,
	str	r9, [r3, #52]	@ tmp465,
	add	r8, r2, r8	@ tmp463,, ivtmp.961
	str	r8, [r3, #44]	@ tmp463,
	ldr	r6, [fp, #-48]	@, %sfp
	add	sl, r6, #3	@ tmp466,,
	str	sl, [r3, #56]	@ tmp466,
	ldr	sl, [fp, #-52]	@, %sfp
	str	r6, [r3, #8]	@,
	add	r2, sl, #3	@ tmp467,,
	str	r2, [r3, #60]	@ tmp467,
	str	sl, [r3, #12]	@,
	ldr	r2, [fp, #-68]	@, %sfp
	str	r2, [r3, #32]	@,
	bne	.L29	@,
	ldr	r6, [fp, #-84]	@ ivtmp.1004, %sfp
.L71:
	ldr	r0, [fp, #-96]	@, %sfp
	ldr	r2, [fp, #-128]	@, %sfp
	add	r3, r0, #1	@,,
	ldr	r5, [fp, #-120]	@, %sfp
	add	r7, r2, #4	@,,
	ldr	r0, [fp, #-100]	@, %sfp
	str	r7, [fp, #-128]	@, %sfp
	add	ip, r5, #4	@,,
	ldr	r7, [fp, #-60]	@, %sfp
	add	r2, r0, #4	@,,
	ldr	r5, [fp, #-124]	@, %sfp
	ldr	sl, [fp, #-132]	@, %sfp
	cmp	r3, r7	@,
	ldr	r0, [fp, #-104]	@, %sfp
	str	r3, [fp, #-96]	@, %sfp
	add	sl, sl, #4	@,,
	ldr	r3, [fp, #-152]	@, %sfp
	str	ip, [fp, #-120]	@, %sfp
	add	ip, r5, #4	@,,
	str	sl, [fp, #-132]	@, %sfp
	add	r5, r0, #4	@,,
	str	r2, [fp, #-100]	@, %sfp
	add	r6, r6, r3	@ ivtmp.1004, ivtmp.1004,
	str	ip, [fp, #-124]	@, %sfp
	str	r5, [fp, #-104]	@, %sfp
	bne	.L28	@,
.L35:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L5:
	cmp	r4, #4	@ iWidth,
	bgt	.L2	@,
	cmp	r4, #2	@ iWidth,
	bgt	.L21	@,
	cmp	r6, #0	@ iHeight,
	ble	.L22	@,
	ldr	sl, [fp, #-64]	@ pBuffH, %sfp
	mov	r0, #0	@ ivtmp.1102,
	mov	r8, r0	@ iY.1132, ivtmp.1102
	mov	r7, r0	@ uiCnt, ivtmp.1102
.L23:
	cmp	r4, #0	@ iWidth,
	ble	.L31	@,
	mov	r3, #1	@ iX.1131,
	cmp	r3, r4	@ iX.1131, iWidth
	sub	r1, r4, #1	@ tmp396, iWidth,
	add	r2, sl, r7, asl #2	@, ivtmp.1098, pBuffH, uiCnt,
	and	ip, r1, r3	@ tmp398, tmp396,
	str	r0, [sl, r7, asl #2]	@ ivtmp.1102,* pBuffH
	add	r1, r2, #4	@ ivtmp.1098, ivtmp.1098,
	beq	.L72	@,
	cmp	ip, #0	@ tmp398,
	beq	.L30	@,
	add	ip, r0, r3	@ tmp523, ivtmp.1102, iX.1131
	mov	r3, #2	@ iX.1131,
	cmp	r3, r4	@ iX.1131, iWidth
	str	ip, [r2, #4]	@ tmp523,
	add	r1, r1, #4	@ ivtmp.1098, ivtmp.1098,
	beq	.L72	@,
.L30:
	add	ip, r3, #1	@ tmp399, iX.1131,
	add	r5, r0, r3	@ tmp345, ivtmp.1102, iX.1131
	add	r3, ip, #1	@ iX.1131, tmp399,
	mov	r2, r1	@ tmp400, ivtmp.1098
	cmp	r3, r4	@ iX.1131, iWidth
	str	r5, [r2], #4	@ tmp345,
	add	ip, r0, ip	@ tmp490, ivtmp.1102, tmp399
	str	ip, [r1, #4]	@ tmp490,
	add	r1, r2, #4	@ ivtmp.1098, tmp400,
	bne	.L30	@,
.L72:
	add	r7, r7, r4	@ uiCnt, uiCnt, iWidth
.L31:
	add	r8, r8, #1	@ iY.1132, iY.1132,
	add	r0, r0, r4	@ ivtmp.1102, ivtmp.1102, iWidth
	cmp	r8, r6	@ iY.1132, iHeight
	bne	.L23	@,
.L22:
	cmp	r4, #0	@ iWidth,
	movgt	r5, #0	@ iX,
	ldrgt	r8, [fp, #-156]	@ pBuffV, %sfp
	movgt	r7, r5	@ uiCnt.1137, iX
	ble	.L35	@,
.L32:
	cmp	r6, #0	@ iHeight,
	ble	.L34	@,
	mov	r1, #1	@ iY,
	cmp	r1, r6	@ iY, iHeight
	sub	r0, r6, #1	@ tmp391, iHeight,
	add	r3, r8, r7, asl #2	@, ivtmp.1089, pBuffV, uiCnt.1137,
	and	ip, r0, r1	@ tmp393, tmp391,
	str	r5, [r8, r7, asl #2]	@ iX,* pBuffV
	add	r2, r5, r4	@ ivtmp.1087, iX, iWidth
	add	r0, r3, #4	@ ivtmp.1089, ivtmp.1089,
	beq	.L73	@,
	cmp	ip, #0	@ tmp393,
	beq	.L33	@,
	mov	r1, #2	@ iY,
	cmp	r1, r6	@ iY, iHeight
	str	r2, [r3, #4]	@ ivtmp.1087,
	add	r0, r0, #4	@ ivtmp.1089, ivtmp.1089,
	add	r2, r2, r4	@ ivtmp.1087, ivtmp.1087, iWidth
	beq	.L73	@,
.L33:
	add	r1, r1, #2	@ iY, iY,
	add	ip, r2, r4	@ ivtmp.1087, ivtmp.1087, iWidth
	cmp	r1, r6	@ iY, iHeight
	mov	r3, r0	@ tmp395, ivtmp.1089
	str	r2, [r3], #4	@ ivtmp.1087,
	add	r2, ip, r4	@ ivtmp.1087, ivtmp.1087, iWidth
	str	ip, [r0, #4]	@ ivtmp.1087,
	add	r0, r3, #4	@ ivtmp.1089, tmp395,
	bne	.L33	@,
.L73:
	add	r7, r7, r6	@ uiCnt.1137, uiCnt.1137, iHeight
.L34:
	add	r5, r5, #1	@ iX, iX,
	cmp	r5, r4	@ iX, iWidth
	bne	.L32	@,
	b	.L35	@
.L21:
	mov	sl, r4, asr #2	@, iWidth,
	str	sl, [fp, #-60]	@, %sfp
	b	.L13	@
	.fnend
	.size	HEVC_InitSigLastScan, .-HEVC_InitSigLastScan
	.align	2
	.global	HEVC_InitScalingOrderTable
	.type	HEVC_InitScalingOrderTable, %function
HEVC_InitScalingOrderTable:
	.fnstart
.LFB1528:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #16
	sub	sp, sp, #16	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r1, #0	@ i,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	mov	r3, r0	@ ivtmp.1214, pHevcCtx
	mvn	r2, #0	@ tmp225,
.L84:
	add	r1, r1, #3	@ i, i,
	add	r0, r3, #1	@ tmp227, ivtmp.1214,
	cmp	r1, #129	@ i,
	strb	r2, [r3, #8]	@ tmp225, <variable>.aucConvertToBit
	strb	r2, [r0, #9]	@ tmp225, <variable>.aucConvertToBit
	add	r3, r3, #3	@ ivtmp.1214, ivtmp.1214,
	strb	r2, [r0, #8]	@ tmp225, <variable>.aucConvertToBit
	bne	.L84	@,
	add	r1, r5, #2176	@ D.38555, pHevcCtx,
	mov	r6, #2	@ tmp170,
	add	r4, r1, #12	@ D.38555, D.38555,
	strb	r6, [r5, #24]	@ tmp170, <variable>.aucConvertToBit
	mov	r7, #4	@ tmp174,
	mov	ip, #0	@ tmp166,
	strb	r7, [r5, #72]	@ tmp174, <variable>.aucConvertToBit
	mov	r8, #1	@ tmp168,
	strb	ip, [r5, #12]	@ tmp166, <variable>.aucConvertToBit
	mov	sl, #3	@ tmp172,
	strb	r8, [r5, #16]	@ tmp168, <variable>.aucConvertToBit
	mov	r0, r5	@, pHevcCtx
	strb	sl, [r5, #40]	@ tmp172, <variable>.aucConvertToBit
	mov	r1, r4	@, D.38555
	add	r2, r4, #458752	@, D.38555,
	add	r3, r4, #917504	@, D.38555,
	add	lr, r4, #1376256	@ tmp179, D.38555,
	str	ip, [sp, #12]	@ tmp166,
	str	lr, [sp, #0]	@ tmp179,
	str	r6, [sp, #4]	@ tmp170,
	str	r6, [sp, #8]	@ tmp170,
	bl	HEVC_InitSigLastScan	@
	mov	r0, r5	@, pHevcCtx
	add	r1, r4, #65536	@, D.38555,
	add	r2, r4, #524288	@, D.38555,
	add	r3, r4, #983040	@, D.38555,
	add	ip, r4, #1441792	@ tmp186, D.38555,
	str	r8, [sp, #12]	@ tmp168,
	str	ip, [sp, #0]	@ tmp186,
	str	r7, [sp, #4]	@ tmp174,
	str	r7, [sp, #8]	@ tmp174,
	bl	HEVC_InitSigLastScan	@
	mov	r0, r5	@, pHevcCtx
	add	r1, r4, #131072	@, D.38555,
	add	r2, r4, #589824	@, D.38555,
	add	r3, r4, #1048576	@, D.38555,
	mov	ip, #8	@ tmp194,
	add	lr, r4, #1507328	@ tmp193, D.38555,
	str	ip, [sp, #8]	@ tmp194,
	str	lr, [sp, #0]	@ tmp193,
	str	ip, [sp, #4]	@ tmp194,
	str	r6, [sp, #12]	@ tmp170,
	bl	HEVC_InitSigLastScan	@
	mov	r0, r5	@, pHevcCtx
	add	r1, r4, #196608	@, D.38555,
	add	r2, r4, #655360	@, D.38555,
	add	r3, r4, #1114112	@, D.38555,
	mov	ip, #16	@ tmp201,
	add	lr, r4, #1572864	@ tmp200, D.38555,
	str	ip, [sp, #8]	@ tmp201,
	str	lr, [sp, #0]	@ tmp200,
	str	ip, [sp, #4]	@ tmp201,
	str	sl, [sp, #12]	@ tmp172,
	bl	HEVC_InitSigLastScan	@
	mov	r0, r5	@, pHevcCtx
	add	r1, r4, #262144	@, D.38555,
	add	r2, r4, #720896	@, D.38555,
	add	r3, r4, #1179648	@, D.38555,
	add	lr, r4, #1638400	@ tmp207, D.38555,
	mov	ip, #32	@ tmp208,
	str	lr, [sp, #0]	@ tmp207,
	str	ip, [sp, #8]	@ tmp208,
	str	ip, [sp, #4]	@ tmp208,
	str	r7, [sp, #12]	@ tmp174,
	bl	HEVC_InitSigLastScan	@
	mov	r0, r5	@, pHevcCtx
	add	r1, r4, #327680	@, D.38555,
	add	r2, r4, #786432	@, D.38555,
	add	r3, r4, #1245184	@, D.38555,
	mov	ip, #64	@ tmp215,
	str	ip, [sp, #8]	@ tmp215,
	str	ip, [sp, #4]	@ tmp215,
	add	ip, r4, #1703936	@ tmp214, D.38555,
	str	ip, [sp, #0]	@ tmp214,
	mov	ip, #5	@ tmp217,
	str	ip, [sp, #12]	@ tmp217,
	bl	HEVC_InitSigLastScan	@
	add	r3, r4, #1310720	@, D.38555,
	add	r1, r4, #393216	@, D.38555,
	add	r2, r4, #851968	@, D.38555,
	mov	r0, r5	@, pHevcCtx
	mov	ip, #128	@ tmp222,
	add	r4, r4, #1769472	@ tmp221, D.38555,
	str	ip, [sp, #8]	@ tmp222,
	str	ip, [sp, #4]	@ tmp222,
	mov	ip, #6	@ tmp224,
	str	r4, [sp, #0]	@ tmp221,
	str	ip, [sp, #12]	@ tmp224,
	bl	HEVC_InitSigLastScan	@
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
	.fnend
	.size	HEVC_InitScalingOrderTable, .-HEVC_InitScalingOrderTable
	.align	2
	.global	HEVC_IsSliceUnit
	.type	HEVC_IsSliceUnit, %function
HEVC_IsSliceUnit:
	.fnstart
.LFB1536:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #3	@ nal_unit_type,
	cmpne	r0, #1	@, nal_unit_type,
	bls	.L90	@,
	cmp	r0, #2	@ nal_unit_type,
	cmpne	r0, #5	@, nal_unit_type,
	beq	.L90	@,
	cmp	r0, #4	@ nal_unit_type,
	cmpne	r0, #16	@, nal_unit_type,
	beq	.L90	@,
	cmp	r0, #17	@ nal_unit_type,
	cmpne	r0, #18	@, nal_unit_type,
	beq	.L90	@,
	cmp	r0, #19	@ nal_unit_type,
	cmpne	r0, #20	@, nal_unit_type,
	beq	.L90	@,
	cmp	r0, #21	@ nal_unit_type,
	cmpne	r0, #6	@, nal_unit_type,
	beq	.L90	@,
	cmp	r0, #7	@ nal_unit_type,
	cmpne	r0, #8	@, nal_unit_type,
	beq	.L90	@,
	cmp	r0, #9	@ nal_unit_type,
	movne	r0, #0	@, prephitmp.1251
	moveq	r0, #1	@, prephitmp.1251
	ldmfd	sp, {fp, sp, pc}	@
.L90:
	mov	r0, #1	@ prephitmp.1251,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_IsSliceUnit, .-HEVC_IsSliceUnit
	.align	2
	.global	HEVC_IsIUnit
	.type	HEVC_IsIUnit, %function
HEVC_IsIUnit:
	.fnstart
.LFB1537:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	sub	r0, r0, #16	@ tmp136, nal_unit_type,
	cmp	r0, #5	@ tmp136,
	movhi	r0, #0	@,
	movls	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_IsIUnit, .-HEVC_IsIUnit
	.align	2
	.global	HEVC_IsNonRefPic
	.type	HEVC_IsNonRefPic, %function
HEVC_IsNonRefPic:
	.fnstart
.LFB1538:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ nal_unit_type,
	cmpne	r0, #2	@, nal_unit_type,
	beq	.L96	@,
	cmp	r0, #4	@ nal_unit_type,
	cmpne	r0, #6	@, nal_unit_type,
	beq	.L96	@,
	cmp	r0, #8	@ nal_unit_type,
	cmpne	r0, #10	@, nal_unit_type,
	beq	.L96	@,
	cmp	r0, #12	@ nal_unit_type,
	cmpne	r0, #14	@, nal_unit_type,
	movne	r0, #0	@, D.38999
	moveq	r0, #1	@, D.38999
	ldmfd	sp, {fp, sp, pc}	@
.L96:
	mov	r0, #1	@ D.38999,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_IsNonRefPic, .-HEVC_IsNonRefPic
	.align	2
	.global	HEVC_IsFlushUnit
	.type	HEVC_IsFlushUnit, %function
HEVC_IsFlushUnit:
	.fnstart
.LFB1539:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	sub	r0, r0, #16	@ tmp136, nal_unit_type,
	cmp	r0, #4	@ tmp136,
	movhi	r0, #0	@,
	movls	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_IsFlushUnit, .-HEVC_IsFlushUnit
	.align	2
	.global	HEVC_IsPVRFlushPic
	.type	HEVC_IsPVRFlushPic, %function
HEVC_IsPVRFlushPic:
	.fnstart
.LFB1540:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:2124820	@ tmp137,
	movt	r1, #:upper16:2124820	@ tmp137,
	ldr	r3, [r0, r1]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #0	@ <variable>.CurrPic.pic_type,
	bne	.L102	@,
	movw	ip, #:lower16:1960188	@ tmp139,
	movt	ip, #:upper16:1960188	@ tmp139,
	ldr	r3, [r0, ip]	@ D.39033, <variable>.pstExtraData
	ldr	r2, [r3, #716]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	r2, #1	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	beq	.L105	@,
.L102:
	mov	r0, #0	@ D.39027,
	ldmfd	sp, {fp, sp, pc}	@
.L105:
	ldr	r0, [r3, #712]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	r0, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L102	@,
	ldr	r1, [r3, #720]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	r1, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L102	@,
	ldr	r2, [r3, #692]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r3, r2, #1024	@ tmp143, <variable>.s32FastForwardBackwardSpeed,
	cmp	r3, #2048	@ tmp143,
	movls	r0, #0	@, D.39027
	movhi	r0, #1	@, D.39027
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_IsPVRFlushPic, .-HEVC_IsPVRFlushPic
	.align	2
	.global	HEVC_PicTypeStatistic
	.type	HEVC_PicTypeStatistic, %function
HEVC_PicTypeStatistic:
	.fnstart
.LFB1577:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2125432	@ tmp136,
	movt	r3, #:upper16:2125432	@ tmp136,
	ldr	r3, [r0, r3]	@ D.41676, <variable>.CurrSlice.nal_unit_type
	sub	r2, r3, #16	@ tmp137, D.41676,
	cmp	r2, #5	@ tmp137,
	bls	.L107	@,
	movw	r3, #:lower16:2124812	@ tmp138,
	movt	r3, #:upper16:2124812	@ tmp138,
	ldr	ip, [r0, r3]	@ pretmp.1364, <variable>.CurrPic.nal_unit_type
	sub	r1, ip, #16	@ tmp139, pretmp.1364,
	cmp	r1, #5	@ tmp139,
	ldmlsfd	sp, {fp, sp, pc}	@
	movw	r3, #:lower16:2125420	@ tmp143,
	movt	r3, #:upper16:2125420	@ tmp143,
	ldr	r3, [r0, r3]	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L111	@,
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L112	@,
	cmp	r3, #0	@ <variable>.CurrSlice.slice_type,
	movweq	r3, #:lower16:2124820	@ tmp145,
	movteq	r3, #:upper16:2124820	@ tmp145,
	moveq	r2, #2	@ tmp146,
	streq	r2, [r0, r3]	@ tmp146, <variable>.CurrPic.pic_type
	ldmfd	sp, {fp, sp, pc}	@
.L107:
	movw	ip, #:lower16:2124812	@ tmp140,
	movw	r2, #:lower16:2124820	@ tmp141,
	movt	ip, #:upper16:2124812	@ tmp140,
	movt	r2, #:upper16:2124820	@ tmp141,
	mov	r1, #0	@ tmp142,
	str	r3, [r0, ip]	@ D.41676, <variable>.CurrPic.nal_unit_type
	str	r1, [r0, r2]	@ tmp142, <variable>.CurrPic.pic_type
	ldmfd	sp, {fp, sp, pc}	@
.L111:
	movw	r2, #:lower16:2124820	@ tmp147,
	movt	r2, #:upper16:2124820	@ tmp147,
	ldr	r1, [r0, r2]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r1, #2	@ <variable>.CurrPic.pic_type,
	strne	r3, [r0, r2]	@ <variable>.CurrSlice.slice_type, <variable>.CurrPic.pic_type
	ldmfd	sp, {fp, sp, pc}	@
.L112:
	movw	r3, #:lower16:2124820	@ tmp151,
	movt	r3, #:upper16:2124820	@ tmp151,
	ldr	r2, [r0, r3]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	sub	ip, r2, #1	@ tmp152, <variable>.CurrPic.pic_type,
	cmp	ip, #1	@ tmp152,
	movhi	ip, #0	@ tmp155,
	strhi	ip, [r0, r3]	@ tmp155, <variable>.CurrPic.pic_type
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_PicTypeStatistic, .-HEVC_PicTypeStatistic
	.align	2
	.global	HEVC_IsReferenceNalu
	.type	HEVC_IsReferenceNalu, %function
HEVC_IsReferenceNalu:
	.fnstart
.LFB1579:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2125432	@ tmp137,
	movt	r3, #:upper16:2125432	@ tmp137,
	ldr	r0, [r0, r3]	@ D.41795, <variable>.CurrSlice.nal_unit_type
	cmp	r0, #15	@ D.41795,
	bhi	.L115	@,
	tst	r0, #1	@ D.41795,
	movne	r0, #1	@ prephitmp.1392,
	ldmnefd	sp, {fp, sp, pc}	@
.L115:
	sub	r0, r0, #16	@ tmp139, D.41795,
	cmp	r0, #7	@ tmp139,
	movhi	r0, #0	@, prephitmp.1392
	movls	r0, #1	@, prephitmp.1392
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_IsReferenceNalu, .-HEVC_IsReferenceNalu
	.align	2
	.global	HEVC_WriteQmatrix_4x4
	.type	HEVC_WriteQmatrix_4x4, %function
HEVC_WriteQmatrix_4x4:
	.fnstart
.LFB1581:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r1, r1, r0, asl #6	@, tmp138, pHevcCtx, matrixId,
	add	r3, r1, #560	@ tmp160, tmp138,
	add	ip, r1, #564	@ tmp145, tmp138,
	add	r0, r1, #552	@ tmp139, tmp138,
	add	r1, r1, #556	@ tmp152, tmp138,
	ldr	r7, [ip, #4]	@ tmp147, <variable>.qmatrix
	ldr	r5, [r3, #4]	@ tmp162, <variable>.qmatrix
	ldrb	r6, [r0, #4]	@ zero_extendqisi2	@ tmp140, <variable>.qmatrix
	ldrb	r4, [r1, #4]	@ zero_extendqisi2	@ tmp153, <variable>.qmatrix
	orr	r6, r6, r7, asl #24	@, tmp148, tmp140, tmp147,
	mov	r7, r5, asl #24	@ tmp164, tmp162,
	orr	r4, r6, r4, asl #16	@, tmp156, tmp148, tmp153,
	orr	r6, r4, r7, lsr #16	@, tmp165, tmp156, tmp164,
	str	r6, [r2, #0]	@ tmp165,* Qmatrix
	ldr	r5, [r3, #4]	@ tmp178, <variable>.qmatrix
	ldrb	r7, [r0, #5]	@ zero_extendqisi2	@ tmp172, <variable>.qmatrix
	ldrb	r6, [ip, #5]	@ zero_extendqisi2	@ tmp186, <variable>.qmatrix
	and	r4, r5, #65280	@ tmp177, tmp178,
	ldrb	r5, [r1, #5]	@ zero_extendqisi2	@ tmp195, <variable>.qmatrix
	orr	r4, r7, r4	@ tmp179, tmp172, tmp177
	orr	r7, r4, r6, asl #24	@, tmp188, tmp179, tmp186,
	orr	r6, r7, r5, asl #16	@, tmp197, tmp188, tmp195,
	str	r6, [r2, #4]	@ tmp197,
	ldr	r5, [r1, #4]	@ tmp210, <variable>.qmatrix
	ldrb	r7, [r0, #6]	@ zero_extendqisi2	@ tmp204, <variable>.qmatrix
	ldrb	r6, [ip, #6]	@ zero_extendqisi2	@ tmp218, <variable>.qmatrix
	and	r4, r5, #16711680	@ tmp209, tmp210,
	ldrb	r5, [r3, #6]	@ zero_extendqisi2	@ tmp227, <variable>.qmatrix
	orr	r4, r7, r4	@ tmp211, tmp204, tmp209
	orr	r4, r4, r6, asl #24	@, tmp220, tmp211, tmp218,
	orr	r4, r4, r5, asl #8	@, tmp229, tmp220, tmp227,
	str	r4, [r2, #8]	@ tmp229,
	ldr	ip, [ip, #4]	@ tmp241, <variable>.qmatrix
	ldrb	r4, [r0, #7]	@ zero_extendqisi2	@ tmp234, <variable>.qmatrix
	ldrb	r0, [r1, #7]	@ zero_extendqisi2	@ tmp247, <variable>.qmatrix
	and	ip, ip, #-16777216	@ tmp240, tmp241,
	ldrb	r1, [r3, #7]	@ zero_extendqisi2	@ tmp255, <variable>.qmatrix
	orr	r3, r4, ip	@ tmp242, tmp234, tmp240
	orr	ip, r3, r0, asl #16	@, tmp250, tmp242, tmp247,
	orr	r3, ip, r1, asl #8	@, tmp258, tmp250, tmp255,
	str	r3, [r2, #12]	@ tmp258,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	HEVC_WriteQmatrix_4x4, .-HEVC_WriteQmatrix_4x4
	.align	2
	.global	HEVC_WriteQmatrix_32x32
	.type	HEVC_WriteQmatrix_32x32, %function
HEVC_WriteQmatrix_32x32:
	.fnstart
.LFB1582:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r7, r0, #27	@ tmp143, matrixId,
	add	r8, r0, #18	@ tmp136, matrixId,
	add	r0, r1, r0, asl #6	@, tmp153, pHevcCtx, matrixId,
	add	r3, r1, r7, asl #6	@,, pHevcCtx, tmp143,
	add	r5, r0, #1728	@, tmp153,
	add	ip, r1, r8, asl #6	@, tmp139, pHevcCtx, tmp136,
	add	r1, r0, #1712	@ tmp154, tmp153,
	str	r3, [fp, #-68]	@, %sfp
	add	r4, ip, #552	@, tmp139,
	add	r1, r1, #8	@ tmp154, tmp154,
	str	r4, [fp, #-64]	@, %sfp
	ldr	r9, [r3, #4]	@ tmp149, <variable>.qmatrix
	add	r3, r0, #1744	@ tmp184, tmp153,
	str	r5, [fp, #-88]	@, %sfp
	add	r3, r3, #8	@ tmp184, tmp184,
	ldr	r7, [r0, #1716]	@ tmp164, <variable>.qmatrix
	ldr	sl, [fp, #-88]	@, %sfp
	ldrb	r8, [r4, #4]	@ zero_extendqisi2	@ tmp141, <variable>.qmatrix
	ldrb	r5, [r1, #4]	@ zero_extendqisi2	@ tmp155, <variable>.qmatrix
	add	r6, sl, #8	@,,
	str	r6, [fp, #-88]	@, %sfp
	orr	ip, r8, r9, asl #24	@, tmp150, tmp141, tmp149,
	mov	sl, r7, asl #24	@ tmp166, tmp164,
	ldr	r7, [fp, #-88]	@, %sfp
	orr	r4, ip, r5, asl #16	@, tmp158, tmp150, tmp155,
	add	ip, r0, #1696	@, tmp153,
	orr	r9, r4, sl, lsr #16	@, tmp167, tmp158, tmp166,
	str	r9, [r2, #0]	@ tmp167,* Qmatrix
	ldr	r5, [r0, #1764]	@ tmp179, <variable>.qmatrix
	add	r8, r0, #1728	@ tmp399, tmp153,
	ldr	sl, [r0, #1748]	@ tmp194, <variable>.qmatrix
	add	r6, r0, #1712	@ tmp414, tmp153,
	ldrb	r4, [r7, #4]	@ zero_extendqisi2	@ tmp172, <variable>.qmatrix
	add	r8, r8, #4	@ tmp399, tmp399,
	str	ip, [fp, #-56]	@, %sfp
	add	r6, r6, #4	@ tmp414, tmp414,
	ldrb	ip, [r3, #4]	@ zero_extendqisi2	@ tmp185, <variable>.qmatrix
	orr	r4, r4, r5, asl #24	@, tmp180, tmp172, tmp179,
	mov	r5, sl, asl #24	@ tmp196, tmp194,
	ldr	sl, [fp, #-56]	@, %sfp
	add	r7, r0, #1712	@ tmp406, tmp153,
	add	r9, sl, #12	@,,
	orr	sl, r4, ip, asl #16	@, tmp188, tmp180, tmp185,
	ldr	r4, [fp, #-64]	@, %sfp
	add	r7, r7, #12	@ tmp406, tmp406,
	str	r9, [fp, #-56]	@, %sfp
	orr	r9, sl, r5, lsr #16	@, tmp197, tmp188, tmp196,
	str	r9, [r2, #4]	@ tmp197,
	add	ip, r0, #1744	@ tmp444, tmp153,
	ldrb	r9, [r4, #5]	@ zero_extendqisi2	@ tmp205, <variable>.qmatrix
	add	r5, r0, #1760	@ tmp429, tmp153,
	ldr	r4, [fp, #-68]	@, %sfp
	add	r5, r5, #4	@ tmp429, tmp429,
	ldr	sl, [r0, #1716]	@ tmp211, <variable>.qmatrix
	add	ip, ip, #4	@ tmp444, tmp444,
	ldrb	r4, [r4, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r4, [fp, #-48]	@, %sfp
	and	r4, sl, #65280	@ tmp210, tmp211,
	ldrb	sl, [r1, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	orr	r9, r9, r4	@ tmp212, tmp205, tmp210
	ldr	r4, [fp, #-48]	@, %sfp
	str	sl, [fp, #-52]	@, %sfp
	add	sl, r0, #1728	@, tmp153,
	str	sl, [fp, #-60]	@, %sfp
	orr	r9, r9, r4, asl #24	@,, tmp212,,
	ldr	sl, [fp, #-52]	@, %sfp
	add	r4, r0, #1744	@ tmp436, tmp153,
	add	r4, r4, #12	@ tmp436, tmp436,
	orr	r9, r9, sl, asl #16	@,,,,
	str	r9, [r2, #8]	@,
	ldr	r9, [fp, #-60]	@, %sfp
	add	sl, r9, #12	@,,
	ldr	r9, [fp, #-88]	@, %sfp
	str	sl, [fp, #-60]	@, %sfp
	ldrb	sl, [r9, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	sl, [fp, #-80]	@, %sfp
	ldrb	r9, [r0, #1765]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-52]	@, %sfp
	ldr	sl, [r0, #1748]	@, <variable>.qmatrix
	and	sl, sl, #65280	@,,
	str	sl, [fp, #-48]	@, %sfp
	ldrb	r9, [r3, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-72]	@, %sfp
	ldr	r9, [fp, #-80]	@, %sfp
	orr	sl, r9, sl	@,,
	ldr	r9, [fp, #-52]	@, %sfp
	orr	sl, sl, r9, asl #24	@,,,,
	ldr	r9, [fp, #-72]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	orr	sl, sl, r9, asl #16	@,,,,
	str	sl, [r2, #12]	@,
	ldr	sl, [fp, #-64]	@, %sfp
	ldrb	r9, [sl, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	ldr	sl, [fp, #-68]	@, %sfp
	str	r9, [fp, #-80]	@, %sfp
	ldrb	r9, [sl, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-52]	@, %sfp
	ldr	sl, [r1, #4]	@, <variable>.qmatrix
	and	sl, sl, #16711680	@,,
	str	sl, [fp, #-48]	@, %sfp
	ldrb	r9, [r0, #1718]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-72]	@, %sfp
	ldr	r9, [fp, #-80]	@, %sfp
	orr	sl, r9, sl	@,,
	ldr	r9, [fp, #-52]	@, %sfp
	orr	sl, sl, r9, asl #24	@,,,,
	ldr	r9, [fp, #-72]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	orr	sl, sl, r9, asl #8	@,,,,
	ldr	r9, [fp, #-88]	@, %sfp
	str	sl, [r2, #16]	@,
	ldrb	sl, [r9, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	sl, [fp, #-80]	@, %sfp
	ldrb	r9, [r0, #1766]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-52]	@, %sfp
	ldr	sl, [r3, #4]	@, <variable>.qmatrix
	and	sl, sl, #16711680	@,,
	str	sl, [fp, #-48]	@, %sfp
	ldrb	r9, [r0, #1750]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-72]	@, %sfp
	ldr	r9, [fp, #-80]	@, %sfp
	orr	sl, r9, sl	@,,
	ldr	r9, [fp, #-52]	@, %sfp
	orr	sl, sl, r9, asl #24	@,,,,
	ldr	r9, [fp, #-72]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	orr	sl, sl, r9, asl #8	@,,,,
	str	sl, [r2, #20]	@,
	ldr	sl, [fp, #-68]	@, %sfp
	ldr	r9, [fp, #-64]	@, %sfp
	ldr	sl, [sl, #4]	@, <variable>.qmatrix
	str	sl, [fp, #-48]	@, %sfp
	and	sl, sl, #-16777216	@ tmp342,,
	ldrb	r1, [r1, #7]	@ zero_extendqisi2	@, <variable>.qmatrix
	ldrb	r9, [r9, #7]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r1, [fp, #-52]	@, %sfp
	orr	sl, r9, sl	@ tmp344,, tmp342
	ldr	r9, [fp, #-52]	@, %sfp
	ldrb	r1, [r0, #1719]	@ zero_extendqisi2	@, <variable>.qmatrix
	orr	sl, sl, r9, asl #16	@, tmp352, tmp344,,
	ldr	r9, [fp, #-88]	@, %sfp
	orr	sl, sl, r1, asl #8	@, tmp360, tmp352,,
	str	sl, [r2, #24]	@ tmp360,
	ldr	sl, [r0, #1764]	@ tmp372, <variable>.qmatrix
	ldrb	r1, [r9, #7]	@ zero_extendqisi2	@ tmp365, <variable>.qmatrix
	ldrb	r3, [r3, #7]	@ zero_extendqisi2	@ tmp378, <variable>.qmatrix
	and	sl, sl, #-16777216	@ tmp371, tmp372,
	ldrb	r9, [r0, #1751]	@ zero_extendqisi2	@ tmp386, <variable>.qmatrix
	orr	r1, r1, sl	@ tmp373, tmp365, tmp371
	orr	sl, r1, r3, asl #16	@, tmp381, tmp373, tmp378,
	ldr	r1, [fp, #-56]	@, %sfp
	orr	r0, sl, r9, asl #8	@, tmp389, tmp381, tmp386,
	str	r0, [r2, #28]	@ tmp389,
	ldr	sl, [r8, #4]	@ tmp401, <variable>.qmatrix
	ldr	r9, [r6, #4]	@ tmp416, <variable>.qmatrix
	ldrb	r3, [r1, #4]	@ zero_extendqisi2	@ tmp394, <variable>.qmatrix
	ldrb	r0, [r7, #4]	@ zero_extendqisi2	@ tmp407, <variable>.qmatrix
	orr	r1, r3, sl, asl #24	@, tmp402, tmp394, tmp401,
	mov	r3, r9, asl #24	@ tmp418, tmp416,
	orr	sl, r1, r0, asl #16	@, tmp410, tmp402, tmp407,
	orr	r9, sl, r3, lsr #16	@, tmp419, tmp410, tmp418,
	str	r9, [r2, #32]	@ tmp419,
	ldr	r9, [fp, #-60]	@, %sfp
	ldr	r1, [r5, #4]	@ tmp431, <variable>.qmatrix
	ldr	sl, [ip, #4]	@ tmp446, <variable>.qmatrix
	ldrb	r3, [r9, #4]	@ zero_extendqisi2	@ tmp424, <variable>.qmatrix
	ldrb	r0, [r4, #4]	@ zero_extendqisi2	@ tmp437, <variable>.qmatrix
	orr	r1, r3, r1, asl #24	@, tmp432, tmp424, tmp431,
	mov	r3, sl, asl #24	@ tmp448, tmp446,
	orr	sl, r1, r0, asl #16	@, tmp440, tmp432, tmp437,
	ldr	r1, [fp, #-56]	@, %sfp
	orr	r0, sl, r3, lsr #16	@, tmp449, tmp440, tmp448,
	str	r0, [r2, #36]	@ tmp449,
	ldr	r3, [r6, #4]	@ tmp462, <variable>.qmatrix
	ldrb	sl, [r1, #5]	@ zero_extendqisi2	@ tmp456, <variable>.qmatrix
	ldrb	r1, [r8, #5]	@ zero_extendqisi2	@ tmp470, <variable>.qmatrix
	and	r0, r3, #65280	@ tmp461, tmp462,
	ldrb	r3, [r7, #5]	@ zero_extendqisi2	@ tmp479, <variable>.qmatrix
	orr	r0, sl, r0	@ tmp463, tmp456, tmp461
	orr	r0, r0, r1, asl #24	@, tmp472, tmp463, tmp470,
	orr	r1, r0, r3, asl #16	@, tmp481, tmp472, tmp479,
	str	r1, [r2, #40]	@ tmp481,
	ldr	r3, [ip, #4]	@ tmp494, <variable>.qmatrix
	ldrb	sl, [r9, #5]	@ zero_extendqisi2	@ tmp488, <variable>.qmatrix
	ldrb	r1, [r5, #5]	@ zero_extendqisi2	@ tmp502, <variable>.qmatrix
	and	r0, r3, #65280	@ tmp493, tmp494,
	ldrb	r3, [r4, #5]	@ zero_extendqisi2	@ tmp511, <variable>.qmatrix
	orr	r0, sl, r0	@ tmp495, tmp488, tmp493
	orr	sl, r0, r1, asl #24	@, tmp504, tmp495, tmp502,
	orr	r1, sl, r3, asl #16	@, tmp513, tmp504, tmp511,
	ldr	r3, [fp, #-56]	@, %sfp
	str	r1, [r2, #44]	@ tmp513,
	ldr	r0, [r7, #4]	@ tmp526, <variable>.qmatrix
	ldrb	sl, [r3, #6]	@ zero_extendqisi2	@ tmp520, <variable>.qmatrix
	ldrb	r1, [r8, #6]	@ zero_extendqisi2	@ tmp534, <variable>.qmatrix
	and	r0, r0, #16711680	@ tmp525, tmp526,
	ldrb	r3, [r6, #6]	@ zero_extendqisi2	@ tmp543, <variable>.qmatrix
	orr	r0, sl, r0	@ tmp527, tmp520, tmp525
	orr	r0, r0, r1, asl #24	@, tmp536, tmp527, tmp534,
	orr	r1, r0, r3, asl #8	@, tmp545, tmp536, tmp543,
	str	r1, [r2, #48]	@ tmp545,
	ldr	r3, [r4, #4]	@ tmp558, <variable>.qmatrix
	ldrb	sl, [r9, #6]	@ zero_extendqisi2	@ tmp552, <variable>.qmatrix
	ldrb	r1, [r5, #6]	@ zero_extendqisi2	@ tmp566, <variable>.qmatrix
	and	r9, r3, #16711680	@ tmp557, tmp558,
	ldrb	r3, [ip, #6]	@ zero_extendqisi2	@ tmp575, <variable>.qmatrix
	orr	r0, sl, r9	@ tmp559, tmp552, tmp557
	orr	sl, r0, r1, asl #24	@, tmp568, tmp559, tmp566,
	orr	r9, sl, r3, asl #8	@, tmp577, tmp568, tmp575,
	str	r9, [r2, #52]	@ tmp577,
	ldr	r9, [fp, #-56]	@, %sfp
	ldr	r1, [r8, #4]	@ tmp589, <variable>.qmatrix
	ldrb	r0, [r7, #7]	@ zero_extendqisi2	@ tmp595, <variable>.qmatrix
	ldrb	r8, [r9, #7]	@ zero_extendqisi2	@ tmp582, <variable>.qmatrix
	and	r3, r1, #-16777216	@ tmp588, tmp589,
	ldrb	r1, [r6, #7]	@ zero_extendqisi2	@ tmp603, <variable>.qmatrix
	orr	sl, r8, r3	@ tmp590, tmp582, tmp588
	orr	r3, sl, r0, asl #16	@, tmp598, tmp590, tmp595,
	orr	sl, r3, r1, asl #8	@, tmp606, tmp598, tmp603,
	str	sl, [r2, #56]	@ tmp606,
	ldr	sl, [fp, #-60]	@, %sfp
	ldr	r1, [r5, #4]	@ tmp618, <variable>.qmatrix
	ldrb	r0, [r4, #7]	@ zero_extendqisi2	@ tmp624, <variable>.qmatrix
	ldrb	r5, [sl, #7]	@ zero_extendqisi2	@ tmp611, <variable>.qmatrix
	and	r3, r1, #-16777216	@ tmp617, tmp618,
	ldrb	r1, [ip, #7]	@ zero_extendqisi2	@ tmp632, <variable>.qmatrix
	orr	r3, r5, r3	@ tmp619, tmp611, tmp617
	orr	ip, r3, r0, asl #16	@, tmp627, tmp619, tmp624,
	orr	r3, ip, r1, asl #8	@, tmp635, tmp627, tmp632,
	str	r3, [r2, #60]	@ tmp635,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	HEVC_WriteQmatrix_32x32, .-HEVC_WriteQmatrix_32x32
	.align	2
	.global	HEVC_WriteQmatrix_8x8
	.type	HEVC_WriteQmatrix_8x8, %function
HEVC_WriteQmatrix_8x8:
	.fnstart
.LFB1583:
	@ args = 0, pretend = 0, frame = 56
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #60
	sub	sp, sp, #60	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r3, r1, r0, asl #6	@, tmp145, pHevcCtx, matrixId,
	add	r6, r3, #936	@, tmp139,
	str	r6, [fp, #-60]	@, %sfp
	add	r9, r3, #984	@ tmp146, tmp145,
	add	r8, r3, #968	@, tmp145,
	ldr	r7, [fp, #-60]	@, %sfp
	add	ip, r3, #952	@ tmp161, tmp145,
	str	r8, [fp, #-68]	@, %sfp
	add	r0, r0, #15	@ tmp188, matrixId,
	ldr	sl, [fp, #-68]	@, %sfp
	add	r4, r3, #992	@, tmp145,
	ldr	r5, [r9, #4]	@ tmp148, <variable>.qmatrix
	add	r1, r1, r0, asl #6	@, tmp191, pHevcCtx, tmp188,
	ldr	r8, [ip, #4]	@ tmp163, <variable>.qmatrix
	str	r4, [fp, #-76]	@, %sfp
	ldrb	r6, [r7, #4]	@ zero_extendqisi2	@ tmp141, <variable>.qmatrix
	ldrb	r0, [sl, #4]	@ zero_extendqisi2	@ tmp154, <variable>.qmatrix
	mov	r7, r8, asl #24	@ tmp165, tmp163,
	orr	r4, r6, r5, asl #24	@, tmp149, tmp141, tmp148,
	ldr	r5, [fp, #-76]	@, %sfp
	add	r8, r3, #976	@ tmp183, tmp145,
	add	sl, r3, #944	@, tmp145,
	orr	r0, r4, r0, asl #16	@, tmp157, tmp149, tmp154,
	str	sl, [fp, #-72]	@, %sfp
	orr	r4, r0, r7, lsr #16	@, tmp166, tmp157, tmp165,
	add	r6, r3, #988	@, tmp145,
	str	r4, [r2, #0]	@ tmp166,* Qmatrix
	add	r7, r3, #940	@, tmp145,
	str	r6, [fp, #-96]	@, %sfp
	add	r6, r3, #972	@ tmp406, tmp145,
	ldr	r4, [r5, #4]	@ tmp178, <variable>.qmatrix
	add	r5, r3, #956	@ tmp414, tmp145,
	str	r7, [fp, #-80]	@, %sfp
	ldrb	r0, [r8, #4]	@ zero_extendqisi2	@, <variable>.qmatrix
	ldrb	sl, [sl, #4]	@ zero_extendqisi2	@ tmp171, <variable>.qmatrix
	str	r0, [fp, #-48]	@, %sfp
	orr	r4, sl, r4, asl #24	@,, tmp171, tmp178,
	str	r4, [fp, #-56]	@, %sfp
	add	sl, r3, #948	@, tmp145,
	ldr	r7, [r1, #4]	@, <variable>.qmatrix
	add	r0, r3, #964	@ tmp444, tmp145,
	str	sl, [fp, #-64]	@, %sfp
	ldr	sl, [fp, #-56]	@, %sfp
	mov	r4, r7, asl #24	@,,
	ldr	r7, [fp, #-48]	@, %sfp
	str	r4, [fp, #-52]	@, %sfp
	add	r4, r3, #996	@ tmp429, tmp145,
	add	r3, r3, #980	@ tmp436, tmp145,
	orr	sl, sl, r7, asl #16	@,,,,
	ldr	r7, [fp, #-52]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	orr	sl, sl, r7, lsr #16	@,,,,
	ldr	r7, [fp, #-60]	@, %sfp
	str	sl, [r2, #4]	@,
	ldrb	sl, [r7, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	sl, [fp, #-88]	@, %sfp
	ldrb	r7, [r9, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r7, [fp, #-52]	@, %sfp
	ldr	sl, [ip, #4]	@, <variable>.qmatrix
	and	sl, sl, #65280	@,,
	str	sl, [fp, #-48]	@, %sfp
	ldr	r7, [fp, #-68]	@, %sfp
	ldrb	r7, [r7, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r7, [fp, #-56]	@, %sfp
	ldr	r7, [fp, #-88]	@, %sfp
	orr	sl, r7, sl	@,,
	ldr	r7, [fp, #-52]	@, %sfp
	orr	sl, sl, r7, asl #24	@,,,,
	ldr	r7, [fp, #-56]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	orr	sl, sl, r7, asl #16	@,,,,
	str	sl, [r2, #8]	@,
	ldr	sl, [fp, #-72]	@, %sfp
	ldrb	r7, [sl, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	ldr	sl, [fp, #-76]	@, %sfp
	str	r7, [fp, #-88]	@, %sfp
	ldrb	r7, [sl, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r7, [fp, #-52]	@, %sfp
	ldr	sl, [r1, #4]	@, <variable>.qmatrix
	and	sl, sl, #65280	@,,
	str	sl, [fp, #-48]	@, %sfp
	ldrb	r7, [r8, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r7, [fp, #-56]	@, %sfp
	ldr	r7, [fp, #-88]	@, %sfp
	orr	sl, r7, sl	@,,
	ldr	r7, [fp, #-52]	@, %sfp
	orr	sl, sl, r7, asl #24	@,,,,
	ldr	r7, [fp, #-56]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	orr	sl, sl, r7, asl #16	@,,,,
	str	sl, [r2, #12]	@,
	ldr	sl, [fp, #-68]	@, %sfp
	ldr	r7, [sl, #4]	@, <variable>.qmatrix
	ldr	sl, [fp, #-60]	@, %sfp
	str	r7, [fp, #-84]	@, %sfp
	ldrb	r7, [sl, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r7, [fp, #-88]	@, %sfp
	ldrb	sl, [r9, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	ldr	r7, [fp, #-84]	@, %sfp
	str	sl, [fp, #-52]	@, %sfp
	and	r7, r7, #16711680	@,,
	str	r7, [fp, #-48]	@, %sfp
	ldrb	sl, [ip, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	sl, [fp, #-56]	@, %sfp
	ldr	sl, [fp, #-88]	@, %sfp
	orr	r7, sl, r7	@,,
	ldr	sl, [fp, #-52]	@, %sfp
	orr	r7, r7, sl, asl #24	@,,,,
	ldr	sl, [fp, #-56]	@, %sfp
	str	r7, [fp, #-48]	@, %sfp
	orr	r7, r7, sl, asl #8	@,,,,
	str	r7, [r2, #16]	@,
	ldr	r7, [fp, #-72]	@, %sfp
	ldrb	sl, [r7, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	ldr	r7, [fp, #-76]	@, %sfp
	str	sl, [fp, #-88]	@, %sfp
	ldrb	sl, [r7, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	sl, [fp, #-52]	@, %sfp
	ldr	r7, [r8, #4]	@, <variable>.qmatrix
	and	r7, r7, #16711680	@,,
	str	r7, [fp, #-48]	@, %sfp
	ldrb	sl, [r1, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	sl, [fp, #-56]	@, %sfp
	ldr	sl, [fp, #-88]	@, %sfp
	orr	r7, sl, r7	@,,
	ldr	sl, [fp, #-52]	@, %sfp
	orr	r7, r7, sl, asl #24	@,,,,
	ldr	sl, [fp, #-56]	@, %sfp
	str	r7, [fp, #-48]	@, %sfp
	orr	r7, r7, sl, asl #8	@,,,,
	str	r7, [r2, #20]	@,
	ldr	r7, [fp, #-60]	@, %sfp
	ldr	sl, [r9, #4]	@ tmp342, <variable>.qmatrix
	ldr	r9, [fp, #-68]	@, %sfp
	ldrb	r7, [r7, #7]	@ zero_extendqisi2	@, <variable>.qmatrix
	and	sl, sl, #-16777216	@ tmp341, tmp342,
	ldrb	ip, [ip, #7]	@ zero_extendqisi2	@ tmp356, <variable>.qmatrix
	ldrb	r9, [r9, #7]	@ zero_extendqisi2	@, <variable>.qmatrix
	orr	sl, r7, sl	@ tmp343,, tmp341
	orr	r7, sl, r9, asl #16	@, tmp351, tmp343,,
	orr	sl, r7, ip, asl #8	@, tmp359, tmp351, tmp356,
	ldr	ip, [fp, #-76]	@, %sfp
	ldr	r7, [fp, #-72]	@, %sfp
	str	sl, [r2, #24]	@ tmp359,
	ldr	r9, [ip, #4]	@ tmp371, <variable>.qmatrix
	ldrb	sl, [r7, #7]	@ zero_extendqisi2	@ tmp364, <variable>.qmatrix
	ldrb	r8, [r8, #7]	@ zero_extendqisi2	@ tmp377, <variable>.qmatrix
	and	ip, r9, #-16777216	@ tmp370, tmp371,
	ldrb	r9, [r1, #7]	@ zero_extendqisi2	@ tmp386, <variable>.qmatrix
	orr	r7, sl, ip	@ tmp372, tmp364, tmp370
	orr	ip, r7, r8, asl #16	@, tmp380, tmp372, tmp377,
	orr	r1, ip, r9, asl #8	@, tmp389, tmp380, tmp386,
	str	r1, [r2, #28]	@ tmp389,
	ldr	r7, [fp, #-96]	@, %sfp
	ldr	r8, [fp, #-80]	@, %sfp
	ldr	ip, [r5, #4]	@ tmp416, <variable>.qmatrix
	ldr	sl, [r7, #4]	@ tmp401, <variable>.qmatrix
	ldrb	r9, [r8, #4]	@ zero_extendqisi2	@ tmp394, <variable>.qmatrix
	ldrb	r1, [r6, #4]	@ zero_extendqisi2	@ tmp407, <variable>.qmatrix
	orr	r7, r9, sl, asl #24	@, tmp402, tmp394, tmp401,
	mov	r9, ip, asl #24	@ tmp418, tmp416,
	orr	r8, r7, r1, asl #16	@, tmp410, tmp402, tmp407,
	orr	r7, r8, r9, lsr #16	@, tmp419, tmp410, tmp418,
	str	r7, [r2, #32]	@ tmp419,
	ldr	r7, [fp, #-64]	@, %sfp
	ldr	sl, [r4, #4]	@ tmp431, <variable>.qmatrix
	ldr	r9, [r0, #4]	@ tmp446, <variable>.qmatrix
	ldrb	ip, [r7, #4]	@ zero_extendqisi2	@ tmp424, <variable>.qmatrix
	ldrb	r1, [r3, #4]	@ zero_extendqisi2	@ tmp437, <variable>.qmatrix
	orr	r8, ip, sl, asl #24	@, tmp432, tmp424, tmp431,
	mov	ip, r9, asl #24	@ tmp448, tmp446,
	orr	sl, r8, r1, asl #16	@, tmp440, tmp432, tmp437,
	ldr	r1, [fp, #-96]	@, %sfp
	orr	r9, sl, ip, lsr #16	@, tmp449, tmp440, tmp448,
	str	r9, [r2, #36]	@ tmp449,
	ldr	r9, [fp, #-80]	@, %sfp
	ldr	r8, [r5, #4]	@ tmp462, <variable>.qmatrix
	ldrb	ip, [r1, #5]	@ zero_extendqisi2	@ tmp470, <variable>.qmatrix
	ldrb	sl, [r9, #5]	@ zero_extendqisi2	@ tmp456, <variable>.qmatrix
	and	r8, r8, #65280	@ tmp461, tmp462,
	ldrb	r1, [r6, #5]	@ zero_extendqisi2	@ tmp479, <variable>.qmatrix
	orr	r8, sl, r8	@ tmp463, tmp456, tmp461
	orr	r8, r8, ip, asl #24	@, tmp472, tmp463, tmp470,
	orr	ip, r8, r1, asl #16	@, tmp481, tmp472, tmp479,
	str	ip, [r2, #40]	@ tmp481,
	ldr	r1, [r0, #4]	@ tmp494, <variable>.qmatrix
	ldrb	ip, [r4, #5]	@ zero_extendqisi2	@ tmp502, <variable>.qmatrix
	ldrb	sl, [r7, #5]	@ zero_extendqisi2	@ tmp488, <variable>.qmatrix
	and	r8, r1, #65280	@ tmp493, tmp494,
	ldrb	r1, [r3, #5]	@ zero_extendqisi2	@ tmp511, <variable>.qmatrix
	orr	r7, sl, r8	@ tmp495, tmp488, tmp493
	orr	r8, r7, ip, asl #24	@, tmp504, tmp495, tmp502,
	orr	r7, r8, r1, asl #16	@, tmp513, tmp504, tmp511,
	str	r7, [r2, #44]	@ tmp513,
	ldr	r7, [fp, #-96]	@, %sfp
	ldr	r1, [r6, #4]	@ tmp526, <variable>.qmatrix
	ldrb	sl, [r9, #6]	@ zero_extendqisi2	@ tmp520, <variable>.qmatrix
	ldrb	ip, [r7, #6]	@ zero_extendqisi2	@ tmp534, <variable>.qmatrix
	and	r8, r1, #16711680	@ tmp525, tmp526,
	ldrb	r1, [r5, #6]	@ zero_extendqisi2	@ tmp543, <variable>.qmatrix
	orr	r9, sl, r8	@ tmp527, tmp520, tmp525
	orr	r8, r9, ip, asl #24	@, tmp536, tmp527, tmp534,
	orr	r9, r8, r1, asl #8	@, tmp545, tmp536, tmp543,
	str	r9, [r2, #48]	@ tmp545,
	ldr	r9, [fp, #-64]	@, %sfp
	ldr	r1, [r3, #4]	@ tmp558, <variable>.qmatrix
	ldrb	ip, [r4, #6]	@ zero_extendqisi2	@ tmp566, <variable>.qmatrix
	ldrb	sl, [r9, #6]	@ zero_extendqisi2	@ tmp552, <variable>.qmatrix
	and	r8, r1, #16711680	@ tmp557, tmp558,
	ldrb	r1, [r0, #6]	@ zero_extendqisi2	@ tmp575, <variable>.qmatrix
	orr	r8, sl, r8	@ tmp559, tmp552, tmp557
	orr	r8, r8, ip, asl #24	@, tmp568, tmp559, tmp566,
	orr	sl, r8, r1, asl #8	@, tmp577, tmp568, tmp575,
	str	sl, [r2, #52]	@ tmp577,
	ldr	sl, [fp, #-80]	@, %sfp
	ldr	ip, [r7, #4]	@ tmp589, <variable>.qmatrix
	ldrb	r6, [r6, #7]	@ zero_extendqisi2	@ tmp595, <variable>.qmatrix
	ldrb	r7, [sl, #7]	@ zero_extendqisi2	@ tmp582, <variable>.qmatrix
	and	r1, ip, #-16777216	@ tmp588, tmp589,
	ldrb	ip, [r5, #7]	@ zero_extendqisi2	@ tmp603, <variable>.qmatrix
	orr	r1, r7, r1	@ tmp590, tmp582, tmp588
	orr	r1, r1, r6, asl #16	@, tmp598, tmp590, tmp595,
	orr	r1, r1, ip, asl #8	@, tmp606, tmp598, tmp603,
	str	r1, [r2, #56]	@ tmp606,
	ldr	r1, [r4, #4]	@ tmp618, <variable>.qmatrix
	ldrb	ip, [r3, #7]	@ zero_extendqisi2	@ tmp624, <variable>.qmatrix
	ldrb	r4, [r9, #7]	@ zero_extendqisi2	@ tmp611, <variable>.qmatrix
	and	r3, r1, #-16777216	@ tmp617, tmp618,
	ldrb	r1, [r0, #7]	@ zero_extendqisi2	@ tmp632, <variable>.qmatrix
	orr	r3, r4, r3	@ tmp619, tmp611, tmp617
	orr	r0, r3, ip, asl #16	@, tmp627, tmp619, tmp624,
	orr	r3, r0, r1, asl #8	@, tmp635, tmp627, tmp632,
	str	r3, [r2, #60]	@ tmp635,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	HEVC_WriteQmatrix_8x8, .-HEVC_WriteQmatrix_8x8
	.align	2
	.global	HEVC_WriteQmatrix_16x16
	.type	HEVC_WriteQmatrix_16x16, %function
HEVC_WriteQmatrix_16x16:
	.fnstart
.LFB1584:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r7, r0, #21	@ tmp143, matrixId,
	add	r8, r0, #12	@ tmp136, matrixId,
	add	r0, r1, r0, asl #6	@, tmp153, pHevcCtx, matrixId,
	add	r3, r1, r7, asl #6	@,, pHevcCtx, tmp143,
	add	r5, r0, #1344	@, tmp153,
	add	ip, r1, r8, asl #6	@, tmp139, pHevcCtx, tmp136,
	add	r1, r0, #1328	@ tmp154, tmp153,
	str	r3, [fp, #-68]	@, %sfp
	add	r4, ip, #552	@, tmp139,
	add	r1, r1, #8	@ tmp154, tmp154,
	str	r4, [fp, #-64]	@, %sfp
	ldr	r9, [r3, #4]	@ tmp149, <variable>.qmatrix
	add	r3, r0, #1360	@ tmp184, tmp153,
	str	r5, [fp, #-88]	@, %sfp
	add	r3, r3, #8	@ tmp184, tmp184,
	ldr	r7, [r0, #1332]	@ tmp164, <variable>.qmatrix
	ldr	sl, [fp, #-88]	@, %sfp
	ldrb	r8, [r4, #4]	@ zero_extendqisi2	@ tmp141, <variable>.qmatrix
	ldrb	r5, [r1, #4]	@ zero_extendqisi2	@ tmp155, <variable>.qmatrix
	add	r6, sl, #8	@,,
	str	r6, [fp, #-88]	@, %sfp
	orr	ip, r8, r9, asl #24	@, tmp150, tmp141, tmp149,
	mov	sl, r7, asl #24	@ tmp166, tmp164,
	ldr	r7, [fp, #-88]	@, %sfp
	orr	r4, ip, r5, asl #16	@, tmp158, tmp150, tmp155,
	add	ip, r0, #1312	@, tmp153,
	orr	r9, r4, sl, lsr #16	@, tmp167, tmp158, tmp166,
	str	r9, [r2, #0]	@ tmp167,* Qmatrix
	ldr	r5, [r0, #1380]	@ tmp179, <variable>.qmatrix
	add	r8, r0, #1344	@ tmp399, tmp153,
	ldr	sl, [r0, #1364]	@ tmp194, <variable>.qmatrix
	add	r6, r0, #1328	@ tmp414, tmp153,
	ldrb	r4, [r7, #4]	@ zero_extendqisi2	@ tmp172, <variable>.qmatrix
	add	r8, r8, #4	@ tmp399, tmp399,
	str	ip, [fp, #-56]	@, %sfp
	add	r6, r6, #4	@ tmp414, tmp414,
	ldrb	ip, [r3, #4]	@ zero_extendqisi2	@ tmp185, <variable>.qmatrix
	orr	r4, r4, r5, asl #24	@, tmp180, tmp172, tmp179,
	mov	r5, sl, asl #24	@ tmp196, tmp194,
	ldr	sl, [fp, #-56]	@, %sfp
	add	r7, r0, #1328	@ tmp406, tmp153,
	add	r9, sl, #12	@,,
	orr	sl, r4, ip, asl #16	@, tmp188, tmp180, tmp185,
	ldr	r4, [fp, #-64]	@, %sfp
	add	r7, r7, #12	@ tmp406, tmp406,
	str	r9, [fp, #-56]	@, %sfp
	orr	r9, sl, r5, lsr #16	@, tmp197, tmp188, tmp196,
	str	r9, [r2, #4]	@ tmp197,
	add	ip, r0, #1360	@ tmp444, tmp153,
	ldrb	r9, [r4, #5]	@ zero_extendqisi2	@ tmp205, <variable>.qmatrix
	add	r5, r0, #1376	@ tmp429, tmp153,
	ldr	r4, [fp, #-68]	@, %sfp
	add	r5, r5, #4	@ tmp429, tmp429,
	ldr	sl, [r0, #1332]	@ tmp211, <variable>.qmatrix
	add	ip, ip, #4	@ tmp444, tmp444,
	ldrb	r4, [r4, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r4, [fp, #-48]	@, %sfp
	and	r4, sl, #65280	@ tmp210, tmp211,
	ldrb	sl, [r1, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	orr	r9, r9, r4	@ tmp212, tmp205, tmp210
	ldr	r4, [fp, #-48]	@, %sfp
	str	sl, [fp, #-52]	@, %sfp
	add	sl, r0, #1344	@, tmp153,
	str	sl, [fp, #-60]	@, %sfp
	orr	r9, r9, r4, asl #24	@,, tmp212,,
	ldr	sl, [fp, #-52]	@, %sfp
	add	r4, r0, #1360	@ tmp436, tmp153,
	add	r4, r4, #12	@ tmp436, tmp436,
	orr	r9, r9, sl, asl #16	@,,,,
	str	r9, [r2, #8]	@,
	ldr	r9, [fp, #-60]	@, %sfp
	add	sl, r9, #12	@,,
	ldr	r9, [fp, #-88]	@, %sfp
	str	sl, [fp, #-60]	@, %sfp
	ldrb	sl, [r9, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	sl, [fp, #-80]	@, %sfp
	ldrb	r9, [r0, #1381]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-52]	@, %sfp
	ldr	sl, [r0, #1364]	@, <variable>.qmatrix
	and	sl, sl, #65280	@,,
	str	sl, [fp, #-48]	@, %sfp
	ldrb	r9, [r3, #5]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-72]	@, %sfp
	ldr	r9, [fp, #-80]	@, %sfp
	orr	sl, r9, sl	@,,
	ldr	r9, [fp, #-52]	@, %sfp
	orr	sl, sl, r9, asl #24	@,,,,
	ldr	r9, [fp, #-72]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	orr	sl, sl, r9, asl #16	@,,,,
	str	sl, [r2, #12]	@,
	ldr	sl, [fp, #-64]	@, %sfp
	ldrb	r9, [sl, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	ldr	sl, [fp, #-68]	@, %sfp
	str	r9, [fp, #-80]	@, %sfp
	ldrb	r9, [sl, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-52]	@, %sfp
	ldr	sl, [r1, #4]	@, <variable>.qmatrix
	and	sl, sl, #16711680	@,,
	str	sl, [fp, #-48]	@, %sfp
	ldrb	r9, [r0, #1334]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-72]	@, %sfp
	ldr	r9, [fp, #-80]	@, %sfp
	orr	sl, r9, sl	@,,
	ldr	r9, [fp, #-52]	@, %sfp
	orr	sl, sl, r9, asl #24	@,,,,
	ldr	r9, [fp, #-72]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	orr	sl, sl, r9, asl #8	@,,,,
	ldr	r9, [fp, #-88]	@, %sfp
	str	sl, [r2, #16]	@,
	ldrb	sl, [r9, #6]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	sl, [fp, #-80]	@, %sfp
	ldrb	r9, [r0, #1382]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-52]	@, %sfp
	ldr	sl, [r3, #4]	@, <variable>.qmatrix
	and	sl, sl, #16711680	@,,
	str	sl, [fp, #-48]	@, %sfp
	ldrb	r9, [r0, #1366]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r9, [fp, #-72]	@, %sfp
	ldr	r9, [fp, #-80]	@, %sfp
	orr	sl, r9, sl	@,,
	ldr	r9, [fp, #-52]	@, %sfp
	orr	sl, sl, r9, asl #24	@,,,,
	ldr	r9, [fp, #-72]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	orr	sl, sl, r9, asl #8	@,,,,
	str	sl, [r2, #20]	@,
	ldr	sl, [fp, #-68]	@, %sfp
	ldr	r9, [fp, #-64]	@, %sfp
	ldr	sl, [sl, #4]	@, <variable>.qmatrix
	str	sl, [fp, #-48]	@, %sfp
	and	sl, sl, #-16777216	@ tmp342,,
	ldrb	r1, [r1, #7]	@ zero_extendqisi2	@, <variable>.qmatrix
	ldrb	r9, [r9, #7]	@ zero_extendqisi2	@, <variable>.qmatrix
	str	r1, [fp, #-52]	@, %sfp
	orr	sl, r9, sl	@ tmp344,, tmp342
	ldr	r9, [fp, #-52]	@, %sfp
	ldrb	r1, [r0, #1335]	@ zero_extendqisi2	@, <variable>.qmatrix
	orr	sl, sl, r9, asl #16	@, tmp352, tmp344,,
	ldr	r9, [fp, #-88]	@, %sfp
	orr	sl, sl, r1, asl #8	@, tmp360, tmp352,,
	str	sl, [r2, #24]	@ tmp360,
	ldr	sl, [r0, #1380]	@ tmp372, <variable>.qmatrix
	ldrb	r1, [r9, #7]	@ zero_extendqisi2	@ tmp365, <variable>.qmatrix
	ldrb	r3, [r3, #7]	@ zero_extendqisi2	@ tmp378, <variable>.qmatrix
	and	sl, sl, #-16777216	@ tmp371, tmp372,
	ldrb	r9, [r0, #1367]	@ zero_extendqisi2	@ tmp386, <variable>.qmatrix
	orr	r1, r1, sl	@ tmp373, tmp365, tmp371
	orr	sl, r1, r3, asl #16	@, tmp381, tmp373, tmp378,
	ldr	r1, [fp, #-56]	@, %sfp
	orr	r0, sl, r9, asl #8	@, tmp389, tmp381, tmp386,
	str	r0, [r2, #28]	@ tmp389,
	ldr	sl, [r8, #4]	@ tmp401, <variable>.qmatrix
	ldr	r9, [r6, #4]	@ tmp416, <variable>.qmatrix
	ldrb	r3, [r1, #4]	@ zero_extendqisi2	@ tmp394, <variable>.qmatrix
	ldrb	r0, [r7, #4]	@ zero_extendqisi2	@ tmp407, <variable>.qmatrix
	orr	r1, r3, sl, asl #24	@, tmp402, tmp394, tmp401,
	mov	r3, r9, asl #24	@ tmp418, tmp416,
	orr	sl, r1, r0, asl #16	@, tmp410, tmp402, tmp407,
	orr	r9, sl, r3, lsr #16	@, tmp419, tmp410, tmp418,
	str	r9, [r2, #32]	@ tmp419,
	ldr	r9, [fp, #-60]	@, %sfp
	ldr	r1, [r5, #4]	@ tmp431, <variable>.qmatrix
	ldr	sl, [ip, #4]	@ tmp446, <variable>.qmatrix
	ldrb	r3, [r9, #4]	@ zero_extendqisi2	@ tmp424, <variable>.qmatrix
	ldrb	r0, [r4, #4]	@ zero_extendqisi2	@ tmp437, <variable>.qmatrix
	orr	r1, r3, r1, asl #24	@, tmp432, tmp424, tmp431,
	mov	r3, sl, asl #24	@ tmp448, tmp446,
	orr	sl, r1, r0, asl #16	@, tmp440, tmp432, tmp437,
	ldr	r1, [fp, #-56]	@, %sfp
	orr	r0, sl, r3, lsr #16	@, tmp449, tmp440, tmp448,
	str	r0, [r2, #36]	@ tmp449,
	ldr	r3, [r6, #4]	@ tmp462, <variable>.qmatrix
	ldrb	sl, [r1, #5]	@ zero_extendqisi2	@ tmp456, <variable>.qmatrix
	ldrb	r1, [r8, #5]	@ zero_extendqisi2	@ tmp470, <variable>.qmatrix
	and	r0, r3, #65280	@ tmp461, tmp462,
	ldrb	r3, [r7, #5]	@ zero_extendqisi2	@ tmp479, <variable>.qmatrix
	orr	r0, sl, r0	@ tmp463, tmp456, tmp461
	orr	r0, r0, r1, asl #24	@, tmp472, tmp463, tmp470,
	orr	r1, r0, r3, asl #16	@, tmp481, tmp472, tmp479,
	str	r1, [r2, #40]	@ tmp481,
	ldr	r3, [ip, #4]	@ tmp494, <variable>.qmatrix
	ldrb	sl, [r9, #5]	@ zero_extendqisi2	@ tmp488, <variable>.qmatrix
	ldrb	r1, [r5, #5]	@ zero_extendqisi2	@ tmp502, <variable>.qmatrix
	and	r0, r3, #65280	@ tmp493, tmp494,
	ldrb	r3, [r4, #5]	@ zero_extendqisi2	@ tmp511, <variable>.qmatrix
	orr	r0, sl, r0	@ tmp495, tmp488, tmp493
	orr	sl, r0, r1, asl #24	@, tmp504, tmp495, tmp502,
	orr	r1, sl, r3, asl #16	@, tmp513, tmp504, tmp511,
	ldr	r3, [fp, #-56]	@, %sfp
	str	r1, [r2, #44]	@ tmp513,
	ldr	r0, [r7, #4]	@ tmp526, <variable>.qmatrix
	ldrb	sl, [r3, #6]	@ zero_extendqisi2	@ tmp520, <variable>.qmatrix
	ldrb	r1, [r8, #6]	@ zero_extendqisi2	@ tmp534, <variable>.qmatrix
	and	r0, r0, #16711680	@ tmp525, tmp526,
	ldrb	r3, [r6, #6]	@ zero_extendqisi2	@ tmp543, <variable>.qmatrix
	orr	r0, sl, r0	@ tmp527, tmp520, tmp525
	orr	r0, r0, r1, asl #24	@, tmp536, tmp527, tmp534,
	orr	r1, r0, r3, asl #8	@, tmp545, tmp536, tmp543,
	str	r1, [r2, #48]	@ tmp545,
	ldr	r3, [r4, #4]	@ tmp558, <variable>.qmatrix
	ldrb	sl, [r9, #6]	@ zero_extendqisi2	@ tmp552, <variable>.qmatrix
	ldrb	r1, [r5, #6]	@ zero_extendqisi2	@ tmp566, <variable>.qmatrix
	and	r9, r3, #16711680	@ tmp557, tmp558,
	ldrb	r3, [ip, #6]	@ zero_extendqisi2	@ tmp575, <variable>.qmatrix
	orr	r0, sl, r9	@ tmp559, tmp552, tmp557
	orr	sl, r0, r1, asl #24	@, tmp568, tmp559, tmp566,
	orr	r9, sl, r3, asl #8	@, tmp577, tmp568, tmp575,
	str	r9, [r2, #52]	@ tmp577,
	ldr	r9, [fp, #-56]	@, %sfp
	ldr	r1, [r8, #4]	@ tmp589, <variable>.qmatrix
	ldrb	r0, [r7, #7]	@ zero_extendqisi2	@ tmp595, <variable>.qmatrix
	ldrb	r8, [r9, #7]	@ zero_extendqisi2	@ tmp582, <variable>.qmatrix
	and	r3, r1, #-16777216	@ tmp588, tmp589,
	ldrb	r1, [r6, #7]	@ zero_extendqisi2	@ tmp603, <variable>.qmatrix
	orr	sl, r8, r3	@ tmp590, tmp582, tmp588
	orr	r3, sl, r0, asl #16	@, tmp598, tmp590, tmp595,
	orr	sl, r3, r1, asl #8	@, tmp606, tmp598, tmp603,
	str	sl, [r2, #56]	@ tmp606,
	ldr	sl, [fp, #-60]	@, %sfp
	ldr	r1, [r5, #4]	@ tmp618, <variable>.qmatrix
	ldrb	r0, [r4, #7]	@ zero_extendqisi2	@ tmp624, <variable>.qmatrix
	ldrb	r5, [sl, #7]	@ zero_extendqisi2	@ tmp611, <variable>.qmatrix
	and	r3, r1, #-16777216	@ tmp617, tmp618,
	ldrb	r1, [ip, #7]	@ zero_extendqisi2	@ tmp632, <variable>.qmatrix
	orr	r3, r5, r3	@ tmp619, tmp611, tmp617
	orr	ip, r3, r0, asl #16	@, tmp627, tmp619, tmp624,
	orr	r3, ip, r1, asl #8	@, tmp635, tmp627, tmp632,
	str	r3, [r2, #60]	@ tmp635,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	HEVC_WriteQmatrix_16x16, .-HEVC_WriteQmatrix_16x16
	.global	__aeabi_idivmod
	.global	__aeabi_idiv
	.align	2
	.global	HEVC_CtbRsAddrToTsAddr
	.type	HEVC_CtbRsAddrToTsAddr, %function
HEVC_CtbRsAddrToTsAddr:
	.fnstart
.LFB1585:
	@ args = 0, pretend = 0, frame = 560
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #564
	sub	sp, sp, #564	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:2117117	@ tmp185,
	movt	r2, #:upper16:2117117	@ tmp185,
	mov	r5, r1	@ CtbAddrRs, CtbAddrRs
	ldrb	r3, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPPS.tiles_enabled_flag, <variable>.CurrPPS.tiles_enabled_flag
	cmp	r3, #0	@ <variable>.CurrPPS.tiles_enabled_flag,
	moveq	r0, r1	@ CtbAddrTs, CtbAddrRs
	beq	.L128	@,
	movw	lr, #:lower16:2117176	@ tmp189,
	movt	lr, #:upper16:2117176	@ tmp189,
	movw	ip, #:lower16:2117172	@ tmp191,
	movt	ip, #:upper16:2117172	@ tmp191,
	ldr	r8, [r0, lr]	@ <variable>.CurrPPS.num_tile_rows, <variable>.CurrPPS.num_tile_rows
	movw	r1, #:lower16:2044448	@ tmp187,
	ldr	r9, [r0, ip]	@ <variable>.CurrPPS.num_tile_columns, <variable>.CurrPPS.num_tile_columns
	movt	r1, #:upper16:2044448	@ tmp187,
	subs	r4, r8, #1	@, <variable>.CurrPPS.num_tile_rows,
	movw	r6, #:lower16:2044524	@ tmp188,
	movw	r7, #:lower16:2117119	@ tmp193,
	movt	r6, #:upper16:2044524	@ tmp188,
	movt	r7, #:upper16:2117119	@ tmp193,
	str	r4, [fp, #-592]	@, %sfp
	sub	r9, r9, #1	@ D.43155, <variable>.CurrPPS.num_tile_columns,
	ldr	r3, [r0, r6]	@ D.43148, <variable>.CurrSPS.log2_ctb_sizeY
	ldr	r4, [r0, r1]	@ D.43145, <variable>.CurrSPS.pic_width_in_luma_samples
	ldrb	r6, [r0, r7]	@ zero_extendqisi2	@ D.43156, <variable>.CurrPPS.uniform_spacing_flag
	bmi	.L129	@,
	movw	r1, #:lower16:2117964	@ ivtmp.1767,
	movt	r1, #:upper16:2117964	@ ivtmp.1767,
	ldr	r8, [fp, #-592]	@, %sfp
	add	r1, r0, r1	@ ivtmp.1767, pHevcCtx, ivtmp.1767
	sub	r2, fp, #568	@ ivtmp.1771,,
	ldr	ip, [fp, #-592]	@, %sfp
	ldr	r7, [r1], #4	@ tmp196, <variable>.CurrPPS.row_bd
	cmp	r8, #1	@,
	mov	lr, #1	@ idx,
	and	r8, ip, #1	@ tmp262,,
	sub	r7, r7, #1	@ tmp197, tmp196,
	add	ip, r2, #4	@ ivtmp.1771, ivtmp.1771,
	str	r7, [r2, #12]	@ tmp197, pTileInfo.row_height_minus1
	blt	.L129	@,
	cmp	r8, #0	@ tmp262,
	beq	.L194	@,
	ldr	sl, [fp, #-592]	@, %sfp
	mov	lr, #2	@ idx,
	ldr	r8, [r1], #4	@ tmp302, <variable>.CurrPPS.row_bd
	cmp	sl, lr	@, idx
	sub	r2, r8, #1	@ tmp303, tmp302,
	str	r2, [ip, #12]	@ tmp303, pTileInfo.row_height_minus1
	add	ip, ip, #4	@ ivtmp.1771, ivtmp.1771,
	blt	.L129	@,
.L194:
	ldr	r8, [fp, #-592]	@ D.43153, %sfp
.L130:
	mov	r2, r1	@ tmp264, ivtmp.1767
	add	lr, lr, #2	@ idx, idx,
	ldr	sl, [r2], #4	@ tmp269, <variable>.CurrPPS.row_bd
	add	r7, ip, #4	@ tmp265, ivtmp.1771,
	cmp	r8, lr	@ D.43153, idx
	sub	sl, sl, #1	@ tmp270, tmp269,
	str	sl, [ip, #12]	@ tmp270, pTileInfo.row_height_minus1
	ldr	sl, [r1, #4]	@ tmp274, <variable>.CurrPPS.row_bd
	add	ip, r7, #4	@ ivtmp.1771, tmp265,
	add	r1, r2, #4	@ ivtmp.1767, tmp264,
	sub	r2, sl, #1	@ tmp275, tmp274,
	str	r2, [r7, #12]	@ tmp275, pTileInfo.row_height_minus1
	bge	.L130	@,
.L129:
	cmp	r9, #0	@ D.43155,
	blt	.L131	@,
	movw	ip, #:lower16:2117708	@ ivtmp.1760,
	movt	ip, #:upper16:2117708	@ ivtmp.1760,
	add	r1, r0, ip	@ ivtmp.1760, pHevcCtx, ivtmp.1760
	sub	r8, fp, #568	@ ivtmp.1764,,
	cmp	r9, #1	@ D.43155,
	and	r7, r9, #1	@ tmp257, D.43155,
	ldr	r2, [r1], #4	@ tmp200, <variable>.CurrPPS.column_bd
	add	r0, r8, #4	@ ivtmp.1764, ivtmp.1764,
	mov	ip, #1	@ idx.1777,
	sub	lr, r2, #1	@ tmp201, tmp200,
	str	lr, [r8, #268]	@ tmp201, pTileInfo.column_width_minus1
	blt	.L131	@,
	cmp	r7, #0	@ tmp257,
	beq	.L132	@,
	ldr	r7, [r1], #4	@ tmp300, <variable>.CurrPPS.column_bd
	mov	ip, #2	@ idx.1777,
	cmp	r9, ip	@ D.43155, idx.1777
	sub	r8, r7, #1	@ tmp301, tmp300,
	str	r8, [r0, #268]	@ tmp301, pTileInfo.column_width_minus1
	add	r0, r0, #4	@ ivtmp.1764, ivtmp.1764,
	blt	.L131	@,
.L132:
	mov	r2, r1	@ tmp259, ivtmp.1760
	add	ip, ip, #2	@ idx.1777, idx.1777,
	ldr	r7, [r2], #4	@ tmp279, <variable>.CurrPPS.column_bd
	add	lr, r0, #4	@ tmp260, ivtmp.1764,
	cmp	r9, ip	@ D.43155, idx.1777
	sub	r8, r7, #1	@ tmp280, tmp279,
	str	r8, [r0, #268]	@ tmp280, pTileInfo.column_width_minus1
	ldr	r7, [r1, #4]	@ tmp284, <variable>.CurrPPS.column_bd
	add	r0, lr, #4	@ ivtmp.1764, tmp260,
	add	r1, r2, #4	@ ivtmp.1760, tmp259,
	sub	r8, r7, #1	@ tmp285, tmp284,
	str	r8, [lr, #268]	@ tmp285, pTileInfo.column_width_minus1
	bge	.L132	@,
.L131:
	mov	r1, #1	@ tmp202,
	mov	r0, r4	@, D.43145
	mov	r8, r1, asl r3	@ ctb_size_y, tmp202,
	mov	r1, r8	@, ctb_size_y
	bl	__aeabi_idivmod	@
	mov	r0, r4	@, D.43145
	subs	r4, r1, #0	@ tmp210,,
	movne	r4, #1	@ tmp210
	mov	r1, r8	@, ctb_size_y
	bl	__aeabi_idiv	@
	add	r7, r4, r0	@ pic_width_in_ctb_y, tmp210,
	mov	r0, r5	@, CtbAddrRs
	mov	r1, r7	@, pic_width_in_ctb_y
	bl	__aeabi_idivmod	@
	mov	r0, r5	@, CtbAddrRs
	mov	r4, r1	@ AbsWidthInCtb,
	mov	r1, r7	@, pic_width_in_ctb_y
	bl	__aeabi_idiv	@
	cmp	r6, #0	@ D.43156,
	str	r0, [fp, #-576]	@, %sfp
	beq	.L197	@,
	ldr	r3, [fp, #-592]	@, %sfp
	cmp	r3, #0	@,
	blt	.L134	@,
	cmp	r9, #0	@ D.43155,
	mov	r1, #0	@,
	sub	r6, fp, #568	@,,
	str	r1, [fp, #-588]	@, %sfp
	str	r6, [fp, #-584]	@, %sfp
	mov	r8, r1	@ TileCtbAddrInTS, NextTileCtbAddrInTS
	str	r1, [fp, #-580]	@, %sfp
	mov	r7, r1	@ TileHeightInCtb, TileCtbAddrInTS
	mov	r2, r1	@ TileWidthInCtb, TileHeightInCtb
	mov	r6, r4	@ AbsWidthInCtb, AbsWidthInCtb
	blt	.L198	@,
.L143:
	ldr	r2, [fp, #-584]	@, %sfp
	tst	r9, #1	@ D.43155,
	ldr	sl, [fp, #-588]	@, %sfp
	mov	r3, #0	@ leftUpOfTilePosXInCtb,
	sub	ip, fp, #568	@ ivtmp.1742,,
	mov	r8, r1	@ NextTileCtbAddrInTS.1795, NextTileCtbAddrInTS
	ldr	r5, [r2, #12]	@ tmp229, pTileInfo.row_height_minus1
	mov	r4, r3	@ tile_x, leftUpOfTilePosXInCtb
	streq	r9, [fp, #-600]	@ D.43155, %sfp
	add	r7, r5, #1	@ TileHeightInCtb, tmp229,
	add	r5, sl, r7	@ leftUpOfTilePosYInCtb,, TileHeightInCtb
	beq	.L145	@,
	ldr	lr, [fp, #-300]	@ tmp296, pTileInfo.column_width_minus1
	add	r2, lr, #1	@ TileWidthInCtb, tmp296,
	cmp	r6, r2	@ AbsWidthInCtb, TileWidthInCtb
	mla	r1, r2, r7, r1	@ NextTileCtbAddrInTS, TileWidthInCtb, TileHeightInCtb, NextTileCtbAddrInTS
	mov	r0, r2	@ leftUpOfTilePosXInCtb.1779, TileWidthInCtb
	bge	.L159	@,
	ldr	r4, [fp, #-576]	@, %sfp
	mov	sl, r5	@ leftUpOfTilePosYInCtb, leftUpOfTilePosYInCtb
	cmp	r4, r5	@, leftUpOfTilePosYInCtb
	blt	.L154	@,
.L159:
	mov	r4, #1	@ tile_x,
	cmp	r9, r4	@ D.43155, tile_x
	sub	r3, fp, #568	@,,
	strge	r9, [fp, #-600]	@ D.43155, %sfp
	add	ip, r3, #4	@ ivtmp.1742,,
	movge	r8, r1	@ NextTileCtbAddrInTS.1795, NextTileCtbAddrInTS
	movge	r3, r0	@ leftUpOfTilePosXInCtb, leftUpOfTilePosXInCtb.1779
	bge	.L145	@,
	b	.L183	@
.L139:
	ldr	r9, [ip, #268]	@ tmp225, pTileInfo.column_width_minus1
	mov	r8, r1	@ NextTileCtbAddrInTS.1795, NextTileCtbAddrInTS
	add	r2, r9, #1	@ TileWidthInCtb, tmp225,
	add	r0, r3, r2	@ leftUpOfTilePosXInCtb.1779, leftUpOfTilePosXInCtb, TileWidthInCtb
	cmp	r6, r0	@ AbsWidthInCtb, leftUpOfTilePosXInCtb.1779
	mla	r1, r2, r7, r1	@ NextTileCtbAddrInTS, TileWidthInCtb, TileHeightInCtb, NextTileCtbAddrInTS
	bge	.L162	@,
	ldr	r9, [fp, #-576]	@, %sfp
	mov	sl, r5	@ leftUpOfTilePosYInCtb, leftUpOfTilePosYInCtb
	cmp	r9, r5	@, leftUpOfTilePosYInCtb
	blt	.L189	@,
.L162:
	add	r4, r4, #1	@ tile_x, tmp251,
	add	ip, ip, #4	@ ivtmp.1742, tmp250,
	mov	r3, r0	@ leftUpOfTilePosXInCtb, leftUpOfTilePosXInCtb.1779
	mov	r8, r1	@ NextTileCtbAddrInTS.1795, NextTileCtbAddrInTS
.L145:
	ldr	lr, [ip, #268]	@ tmp288, pTileInfo.column_width_minus1
	add	r4, r4, #1	@ tmp251, tile_x,
	add	ip, ip, #4	@ tmp250, ivtmp.1742,
	mov	sl, r5	@ leftUpOfTilePosYInCtb, leftUpOfTilePosYInCtb
	add	r2, lr, #1	@ TileWidthInCtb, tmp288,
	add	r0, r3, r2	@ leftUpOfTilePosXInCtb.1779, leftUpOfTilePosXInCtb, TileWidthInCtb
	cmp	r6, r0	@ AbsWidthInCtb, leftUpOfTilePosXInCtb.1779
	mla	r1, r2, r7, r1	@ NextTileCtbAddrInTS, TileWidthInCtb, TileHeightInCtb, NextTileCtbAddrInTS
	bge	.L137	@,
	ldr	r9, [fp, #-576]	@, %sfp
	cmp	r9, r5	@, leftUpOfTilePosYInCtb
	blt	.L189	@,
.L137:
	ldr	sl, [fp, #-600]	@, %sfp
	mov	r3, r0	@ leftUpOfTilePosXInCtb, leftUpOfTilePosXInCtb.1779
	cmp	sl, r4	@, tmp251
	bge	.L139	@,
	mov	r9, sl	@ D.43155,
.L183:
	add	ip, r0, r2	@ TileWidthInCtb.1793, leftUpOfTilePosXInCtb.1779, TileWidthInCtb
	mov	sl, r5	@ leftUpOfTilePosYInCtb, leftUpOfTilePosYInCtb
	cmp	r6, ip	@ AbsWidthInCtb, TileWidthInCtb.1793
	mov	r3, r0	@ leftUpOfTilePosXInCtb, leftUpOfTilePosXInCtb.1779
	blt	.L154	@,
.L140:
	ldr	r4, [fp, #-580]	@, %sfp
	ldr	lr, [fp, #-584]	@, %sfp
	add	ip, r4, #1	@,,
	ldr	r4, [fp, #-592]	@, %sfp
	add	r0, lr, #4	@,,
	str	ip, [fp, #-580]	@, %sfp
	cmp	r4, ip	@,
	str	r0, [fp, #-584]	@, %sfp
	blt	.L196	@,
	cmp	r9, #0	@ D.43155,
	str	sl, [fp, #-588]	@ leftUpOfTilePosYInCtb, %sfp
	bge	.L143	@,
.L198:
	ldr	r3, [fp, #-588]	@, %sfp
	mov	ip, r2	@ TileWidthInCtb.1793, TileWidthInCtb
	cmp	r6, ip	@ AbsWidthInCtb, TileWidthInCtb.1793
	add	sl, r3, r7	@ leftUpOfTilePosYInCtb,, TileHeightInCtb
	mov	r3, #0	@ leftUpOfTilePosXInCtb,
	bge	.L140	@,
.L154:
	ldr	ip, [fp, #-576]	@, %sfp
	cmp	ip, sl	@, leftUpOfTilePosYInCtb
	bge	.L140	@,
.L195:
	ldr	r0, [fp, #-588]	@, %sfp
	mov	r4, r6	@ AbsWidthInCtb, AbsWidthInCtb
	rsb	r1, r0, ip	@ tmp232,,
	mul	r2, r2, r1	@ prephitmp.1719, TileWidthInCtb.1783, tmp232
.L141:
	add	ip, r2, r8	@ tmp235, prephitmp.1719, TileCtbAddrInTS
	add	r2, ip, r4	@ tmp236, tmp235, AbsWidthInCtb
	rsb	r0, r3, r2	@ CtbAddrTs, leftUpOfTilePosXInCtb, tmp236
.L128:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L197:
	ldr	sl, [fp, #-592]	@, %sfp
	cmp	sl, #0	@,
	blt	.L134	@,
	cmp	r9, #0	@ D.43155,
	str	r6, [fp, #-588]	@ D.43156, %sfp
	str	r6, [fp, #-580]	@ D.43156, %sfp
	mov	r1, r6	@ NextTileCtbAddrInTS.1786, D.43156
	sub	r0, fp, #568	@,,
	mov	r8, r6	@ TileCtbAddrInTS, NextTileCtbAddrInTS.1786
	mov	r7, r6	@ TileHeightInCtb.1773, TileCtbAddrInTS
	mov	r2, r6	@ TileWidthInCtb.1783, TileHeightInCtb.1773
	str	r0, [fp, #-584]	@, %sfp
	mov	r6, r4	@ AbsWidthInCtb, AbsWidthInCtb
	blt	.L199	@,
.L151:
	ldr	r5, [fp, #-584]	@, %sfp
	tst	r9, #1	@ D.43155,
	ldr	sl, [fp, #-588]	@, %sfp
	mov	r3, #0	@ leftUpOfTilePosXInCtb,
	sub	ip, fp, #568	@ ivtmp.1752,,
	mov	r8, r1	@ NextTileCtbAddrInTS.1796, NextTileCtbAddrInTS.1786
	ldr	r7, [r5, #12]	@ tmp234, pTileInfo.row_height_minus1
	mov	r4, r3	@ tile_x.1790, leftUpOfTilePosXInCtb
	streq	r9, [fp, #-600]	@ D.43155, %sfp
	add	r7, r7, #1	@ TileHeightInCtb.1773, tmp234,
	add	r5, sl, r7	@ leftUpOfTilePosYInCtb.1788,, TileHeightInCtb.1773
	beq	.L153	@,
	ldr	r0, [fp, #-300]	@ tmp298, pTileInfo.column_width_minus1
	add	r2, r0, #1	@ TileWidthInCtb.1783, tmp298,
	cmp	r6, r2	@ AbsWidthInCtb, TileWidthInCtb.1783
	mla	r1, r7, r2, r1	@ NextTileCtbAddrInTS.1786, TileHeightInCtb.1773, TileWidthInCtb.1783, NextTileCtbAddrInTS.1786
	mov	r0, r2	@ leftUpOfTilePosXInCtb.1787, TileWidthInCtb.1783
	bge	.L164	@,
	ldr	sl, [fp, #-576]	@, %sfp
	cmp	sl, r5	@, leftUpOfTilePosYInCtb.1788
	mov	sl, r5	@ leftUpOfTilePosYInCtb.1788, leftUpOfTilePosYInCtb.1788
	blt	.L155	@,
.L164:
	mov	r4, #1	@ tile_x.1790,
	cmp	r9, r4	@ D.43155, tile_x.1790
	sub	r3, fp, #568	@,,
	strge	r9, [fp, #-600]	@ D.43155, %sfp
	add	ip, r3, #4	@ ivtmp.1752,,
	movge	r8, r1	@ NextTileCtbAddrInTS.1796, NextTileCtbAddrInTS.1786
	movge	r3, r0	@ leftUpOfTilePosXInCtb, leftUpOfTilePosXInCtb.1787
	bge	.L153	@,
	b	.L184	@
.L148:
	ldr	r8, [ip, #268]	@ tmp230, pTileInfo.column_width_minus1
	add	r2, r8, #1	@ TileWidthInCtb.1783, tmp230,
	mov	r8, r1	@ NextTileCtbAddrInTS.1796, NextTileCtbAddrInTS.1786
	add	r0, r3, r2	@ leftUpOfTilePosXInCtb.1787, leftUpOfTilePosXInCtb, TileWidthInCtb.1783
	cmp	r6, r0	@ AbsWidthInCtb, leftUpOfTilePosXInCtb.1787
	mla	r1, r7, r2, r1	@ NextTileCtbAddrInTS.1786, TileHeightInCtb.1773, TileWidthInCtb.1783, NextTileCtbAddrInTS.1786
	bge	.L167	@,
	ldr	lr, [fp, #-576]	@, %sfp
	mov	sl, r5	@ leftUpOfTilePosYInCtb.1788, leftUpOfTilePosYInCtb.1788
	cmp	lr, r5	@, leftUpOfTilePosYInCtb.1788
	blt	.L190	@,
.L167:
	add	r4, r4, #1	@ tile_x.1790, tmp254,
	add	ip, ip, #4	@ ivtmp.1752, tmp255,
	mov	r3, r0	@ leftUpOfTilePosXInCtb, leftUpOfTilePosXInCtb.1787
	mov	r8, r1	@ NextTileCtbAddrInTS.1796, NextTileCtbAddrInTS.1786
.L153:
	ldr	r9, [ip, #268]	@ tmp293, pTileInfo.column_width_minus1
	add	r4, r4, #1	@ tmp254, tile_x.1790,
	add	ip, ip, #4	@ tmp255, ivtmp.1752,
	mov	sl, r5	@ leftUpOfTilePosYInCtb.1788, leftUpOfTilePosYInCtb.1788
	add	r2, r9, #1	@ TileWidthInCtb.1783, tmp293,
	add	r0, r3, r2	@ leftUpOfTilePosXInCtb.1787, leftUpOfTilePosXInCtb, TileWidthInCtb.1783
	cmp	r6, r0	@ AbsWidthInCtb, leftUpOfTilePosXInCtb.1787
	mla	r1, r7, r2, r1	@ NextTileCtbAddrInTS.1786, TileHeightInCtb.1773, TileWidthInCtb.1783, NextTileCtbAddrInTS.1786
	bge	.L146	@,
	ldr	lr, [fp, #-576]	@, %sfp
	cmp	lr, r5	@, leftUpOfTilePosYInCtb.1788
	blt	.L190	@,
.L146:
	ldr	sl, [fp, #-600]	@, %sfp
	mov	r3, r0	@ leftUpOfTilePosXInCtb, leftUpOfTilePosXInCtb.1787
	cmp	sl, r4	@, tmp254
	bge	.L148	@,
	mov	r9, sl	@ D.43155,
.L184:
	add	ip, r0, r2	@ TileWidthInCtb.1781, leftUpOfTilePosXInCtb.1787, TileWidthInCtb.1783
	mov	sl, r5	@ leftUpOfTilePosYInCtb.1788, leftUpOfTilePosYInCtb.1788
	cmp	r6, ip	@ AbsWidthInCtb, TileWidthInCtb.1781
	mov	r3, r0	@ leftUpOfTilePosXInCtb, leftUpOfTilePosXInCtb.1787
	blt	.L155	@,
.L149:
	ldr	r4, [fp, #-580]	@, %sfp
	ldr	r0, [fp, #-584]	@, %sfp
	add	ip, r4, #1	@,,
	ldr	r4, [fp, #-592]	@, %sfp
	add	lr, r0, #4	@,,
	str	ip, [fp, #-580]	@, %sfp
	cmp	r4, ip	@,
	str	lr, [fp, #-584]	@, %sfp
	blt	.L196	@,
	cmp	r9, #0	@ D.43155,
	str	sl, [fp, #-588]	@ leftUpOfTilePosYInCtb.1788, %sfp
	bge	.L151	@,
.L199:
	ldr	r3, [fp, #-588]	@, %sfp
	mov	ip, r2	@ TileWidthInCtb.1781, TileWidthInCtb.1783
	cmp	r6, ip	@ AbsWidthInCtb, TileWidthInCtb.1781
	add	sl, r3, r7	@ leftUpOfTilePosYInCtb.1788,, TileHeightInCtb.1773
	mov	r3, #0	@ leftUpOfTilePosXInCtb,
	bge	.L149	@,
.L155:
	ldr	ip, [fp, #-576]	@, %sfp
	cmp	sl, ip	@ leftUpOfTilePosYInCtb.1788,
	ble	.L149	@,
	b	.L195	@
.L189:
	ldr	ip, [fp, #-576]	@, %sfp
	ldr	r9, [fp, #-600]	@ D.43155, %sfp
	cmp	ip, sl	@, leftUpOfTilePosYInCtb
	bge	.L140	@,
	b	.L195	@
.L190:
	ldr	ip, [fp, #-576]	@, %sfp
	ldr	r9, [fp, #-600]	@ D.43155, %sfp
	cmp	sl, ip	@ leftUpOfTilePosYInCtb.1788,
	ble	.L149	@,
	b	.L195	@
.L196:
	ldr	r1, [fp, #-576]	@, %sfp
	mov	r4, r6	@ AbsWidthInCtb, AbsWidthInCtb
	rsb	sl, sl, r1	@ tmp233, leftUpOfTilePosYInCtb.1788,
	mul	r2, r2, sl	@ prephitmp.1719, TileWidthInCtb.1783, tmp233
	b	.L141	@
.L134:
	mov	r2, #0	@ prephitmp.1719,
	mov	r3, r2	@ leftUpOfTilePosXInCtb, prephitmp.1719
	mov	r8, r2	@ TileCtbAddrInTS, prephitmp.1719
	b	.L141	@
	.fnend
	.size	HEVC_CtbRsAddrToTsAddr, .-HEVC_CtbRsAddrToTsAddr
	.align	2
	.global	HEVC_GetVirAddr
	.type	HEVC_GetVirAddr, %function
HEVC_GetVirAddr:
	.fnstart
.LFB1591:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r0, r1, r0, asl #2	@,, pbaHEVC_se_vir_addr, Dn,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_GetVirAddr, .-HEVC_GetVirAddr
	.align	2
	.global	HEVC_GetPhyAddr
	.type	HEVC_GetPhyAddr, %function
HEVC_GetPhyAddr:
	.fnstart
.LFB1592:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r0, r1, r0, asl #2	@,, base_phy_addr, Dn,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_GetPhyAddr, .-HEVC_GetPhyAddr
	.align	2
	.global	HEVC_CfgVDMReg
	.type	HEVC_CfgVDMReg, %function
HEVC_CfgVDMReg:
	.fnstart
.LFB1593:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:2124840	@ tmp148,
	movt	r4, #:upper16:2124840	@ tmp148,
	mov	r3, r0	@ pHevcCtx, pHevcCtx
	movw	r0, #:lower16:2124836	@ tmp146,
	movt	r0, #:upper16:2124836	@ tmp146,
	ldr	r5, [r3, r4]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	movw	r2, #:lower16:2134408	@ tmp145,
	ldr	r4, [r3, #200]	@ <variable>.NumSlicePara, <variable>.NumSlicePara
	movt	r2, #:upper16:2134408	@ tmp145,
	ldr	r1, [r3, r0]	@ <variable>.CurrPic.start_count, <variable>.CurrPic.start_count
	movw	ip, #:lower16:2134400	@ tmp147,
	movw	r0, #:lower16:2139516	@ tmp149,
	movt	ip, #:upper16:2134400	@ tmp147,
	movt	r0, #:upper16:2139516	@ tmp149,
	rsbs	r1, r1, #1	@ tmp138, <variable>.CurrPic.start_count
	movcc	r1, #0	@ tmp138
	str	r5, [r3, ip]	@ <variable>.CurrPic.stream_base_addr, <variable>.DecPicPara.stream_base_addr
	str	r4, [r3, r0]	@ <variable>.NumSlicePara, <variable>.DecPicPara.NumSlicePara
	mov	r0, #0	@,
	str	r1, [r3, r2]	@ tmp138, <variable>.DecPicPara.NewPicFlag
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_CfgVDMReg, .-HEVC_CfgVDMReg
	.align	2
	.global	HEVC_IsRefForCurrPic
	.type	HEVC_IsRefForCurrPic, %function
HEVC_IsRefForCurrPic:
	.fnstart
.LFB1594:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2125436	@ tmp150,
	movw	r1, #:lower16:1960184	@ tmp152,
	movt	r3, #:upper16:2125436	@ tmp150,
	movt	r1, #:upper16:1960184	@ tmp152,
	movw	r2, #:lower16:1960180	@ tmp158,
	ldr	ip, [r0, r3]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	r2, #:upper16:1960180	@ tmp158,
	ldr	r7, [r0, r1]	@ <variable>.pPPS, <variable>.pPPS
	movw	r4, #7704	@ tmp154,
	mov	r9, r0	@ pHevcCtx, pHevcCtx
	ldr	r0, [r0, r2]	@ <variable>.pSPS, <variable>.pSPS
	movw	r2, #:lower16:2128524	@ tmp168,
	movt	r2, #:upper16:2128524	@ tmp168,
	mla	r4, r4, ip, r7	@ tmp155, tmp154, <variable>.CurrSlice.pic_parameter_set_id, <variable>.pPPS
	ldr	r7, [r9, r2]	@, <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics
	movw	r3, #:lower16:2128520	@ tmp164,
	movw	r1, #:lower16:2128516	@ tmp165,
	movt	r3, #:upper16:2128520	@ tmp164,
	movt	r1, #:upper16:2128516	@ tmp165,
	ldr	ip, [r9, r3]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	ldr	r3, [r9, r1]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	movw	r1, #36364	@ tmp160,
	str	r7, [fp, #-48]	@, %sfp
	ldr	r7, [r4, #32]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	add	r3, ip, r3	@ D.43821, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	ldr	r2, [fp, #-48]	@, %sfp
	mla	ip, r1, r7, r0	@ tmp161, tmp160, <variable>.seq_parameter_set_id, <variable>.pSPS
	cmp	r3, r2	@ D.43821,
	mov	r7, #1	@ tmp162,
	ldr	r2, [ip, #128]	@ <variable>.max_pic_order_cnt_lsb, <variable>.max_pic_order_cnt_lsb
	mov	r7, r7, asl r2	@ PocCycle, tmp162,
	bcs	.L207	@,
	movw	ip, #:lower16:532180	@ tmp170,
	movt	ip, #:upper16:532180	@ tmp170,
	add	r4, r3, ip	@ tmp170, D.43821, tmp170
	movw	r6, #:lower16:2124816	@ tmp169,
	ldr	r0, [fp, #-48]	@, %sfp
	movt	r6, #:upper16:2124816	@ tmp169,
	add	r4, r9, r4, asl #2	@, ivtmp.1902, pHevcCtx, tmp170,
	mvn	r5, r3	@ tmp200, D.43821
	add	sl, r5, r0	@ tmp199, tmp200,
	ldr	r5, [r9, r6]	@ CurPoc.1905, <variable>.CurrPic.thispoc
	ldr	r6, [r4, #8]!	@ RefPoc, <variable>.CurrSlice.short_term_ref_pic_set.poc
	and	sl, sl, #1	@ tmp201, tmp199,
	ldr	r8, [r4, #-1864]	@ tmp174, <variable>.CurrSlice.CheckLTMSB
	cmp	r8, #0	@ tmp174,
	beq	.L222	@,
	mov	r8, r5	@ CurPoc, CurPoc.1905
.L237:
	cmp	r8, r6	@ CurPoc, RefPoc
	beq	.L238	@,
	ldr	r0, [fp, #-48]	@, %sfp
	add	r6, r3, #1	@ i, D.43821,
	add	r4, r4, #4	@ ivtmp.1902, ivtmp.1902,
	cmp	r0, r6	@, i
	bls	.L207	@,
	cmp	sl, #0	@ tmp201,
	beq	.L212	@,
	ldr	r2, [r4, #-1864]	@ tmp220, <variable>.CurrSlice.CheckLTMSB
	ldr	r8, [r4, #0]	@ RefPoc, <variable>.CurrSlice.short_term_ref_pic_set.poc
	cmp	r2, #0	@ tmp220,
	movne	sl, r5	@ CurPoc, CurPoc.1905
	bne	.L240	@,
	mov	r0, r5	@, CurPoc.1905
	mov	r1, r7	@, PocCycle
	str	r3, [fp, #-52]	@,
	bl	__aeabi_idivmod	@
	mov	r0, r8	@, RefPoc
	mov	sl, r1	@ CurPoc,
	mov	r1, r7	@, PocCycle
	bl	__aeabi_idivmod	@
	ldr	r3, [fp, #-52]	@,
	mov	r8, r1	@ RefPoc,
.L240:
	cmp	sl, r8	@ CurPoc, RefPoc
	beq	.L238	@,
	ldr	ip, [fp, #-48]	@, %sfp
	add	r6, r6, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.1902, ivtmp.1902,
	cmp	ip, r6	@, i
	bhi	.L212	@,
	b	.L207	@
.L229:
	str	r3, [fp, #-52]	@,
	bl	__aeabi_idivmod	@
	mov	r0, r4	@, RefPoc
	add	r6, r6, #1	@ i, tmp202,
	mov	r8, r1	@ CurPoc,
	mov	r1, r7	@, PocCycle
	bl	__aeabi_idivmod	@
	ldr	r3, [fp, #-52]	@,
	mov	r4, r1	@ RefPoc,
	cmp	r8, r4	@ CurPoc, RefPoc
	add	r4, sl, #4	@ ivtmp.1902, tmp203,
	beq	.L238	@,
.L242:
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r1, r6	@, i
	bls	.L207	@,
.L212:
	ldr	r8, [r4, #-1864]	@ tmp206, <variable>.CurrSlice.CheckLTMSB
	mov	r0, r5	@, CurPoc.1905
	mov	r1, r7	@, PocCycle
	mov	r2, r5	@ CurPoc, CurPoc.1905
	cmp	r8, #0	@ tmp206,
	ldr	r8, [r4, #0]	@ RefPoc, <variable>.CurrSlice.short_term_ref_pic_set.poc
	bne	.L209	@,
	str	r3, [fp, #-52]	@,
	bl	__aeabi_idivmod	@
	mov	r0, r8	@, RefPoc
	mov	r2, r1	@ CurPoc,
	mov	r1, r7	@, PocCycle
	str	r2, [fp, #-56]	@,
	bl	__aeabi_idivmod	@
	ldr	r3, [fp, #-52]	@,
	ldr	r2, [fp, #-56]	@,
	mov	r8, r1	@ RefPoc,
.L209:
	cmp	r2, r8	@ CurPoc, RefPoc
	add	sl, r4, #4	@ tmp203, ivtmp.1902,
	mov	r0, r5	@, CurPoc.1905
	mov	r1, r7	@, PocCycle
	beq	.L238	@,
	ldr	ip, [sl, #-1864]	@ tmp211, <variable>.CurrSlice.CheckLTMSB
	add	r6, r6, #1	@ tmp202, i,
	ldr	r4, [r4, #4]	@ RefPoc, <variable>.CurrSlice.short_term_ref_pic_set.poc
	cmp	ip, #0	@ tmp211,
	beq	.L229	@,
	mov	r8, r5	@ CurPoc, CurPoc.1905
	cmp	r8, r4	@ CurPoc, RefPoc
	add	r6, r6, #1	@ i, tmp202,
	add	r4, sl, #4	@ ivtmp.1902, tmp203,
	bne	.L242	@,
.L238:
	mov	r0, #1	@ is_reference,
	b	.L211	@
.L207:
	mov	r0, #0	@ is_reference,
.L211:
	cmp	r3, #0	@ D.43821,
	beq	.L213	@,
	movw	ip, #:lower16:2125408	@ tmp187,
	movw	r4, #:lower16:2128664	@ tmp188,
	movt	ip, #:upper16:2125408	@ tmp187,
	movt	r4, #:upper16:2128664	@ tmp188,
	movw	r2, #:lower16:2124816	@ tmp186,
	movt	r2, #:upper16:2124816	@ tmp186,
	ldr	r1, [r9, r4]	@ <variable>.CurrSlice.short_term_ref_pic_set.delta_poc, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	ldr	r5, [r9, ip]	@ D.43831, <variable>.CurrSlice.poc
	ldr	r4, [r9, r2]	@ D.43830, <variable>.CurrPic.thispoc
	add	r2, r5, r1	@ tmp189, D.43831, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	cmp	r4, r2	@ D.43830, tmp189
	beq	.L214	@,
	tst	r3, #1	@ D.43821,
	movw	r1, #:lower16:2128668	@ ivtmp.1896,
	movt	r1, #:upper16:2128668	@ ivtmp.1896,
	mov	ip, #0	@ i.1906,
	add	r2, r9, r1	@ ivtmp.1896, pHevcCtx, ivtmp.1896
	bne	.L215	@,
	ldr	r1, [r2], #4	@ tmp214, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	mov	ip, #1	@ i.1906,
	add	r1, r5, r1	@ D.43833, D.43831, tmp214
	cmp	r4, r1	@ D.43830, D.43833
	bne	.L215	@,
.L214:
	mov	r0, #1	@ is_reference,
.L213:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L216:
	ldr	r6, [r1], #4	@ tmp192, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	add	r6, r5, r6	@ D.43833, D.43831, tmp192
	cmp	r4, r6	@ D.43830, D.43833
	beq	.L214	@,
	ldr	r6, [r2, #4]	@ tmp216, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	add	r2, r1, #4	@ ivtmp.1896, tmp197,
	add	r1, r5, r6	@ D.43833, D.43831, tmp216
	cmp	r4, r1	@ D.43830, D.43833
	beq	.L214	@,
.L215:
	add	ip, ip, #1	@ tmp198, i.1906,
	mov	r1, r2	@ tmp197, ivtmp.1896
	cmp	r3, ip	@ D.43821, tmp198
	add	ip, ip, #1	@ i.1906, tmp198,
	bhi	.L216	@,
	b	.L213	@
.L222:
	mov	r0, r5	@, CurPoc.1905
	mov	r1, r7	@, PocCycle
	str	r3, [fp, #-52]	@,
	bl	__aeabi_idivmod	@
	mov	r0, r6	@, RefPoc
	mov	r8, r1	@ CurPoc,
	mov	r1, r7	@, PocCycle
	bl	__aeabi_idivmod	@
	ldr	r3, [fp, #-52]	@,
	mov	r6, r1	@ RefPoc,
	b	.L237	@
	.fnend
	.size	HEVC_IsRefForCurrPic, .-HEVC_IsRefForCurrPic
	.align	2
	.type	compare_pic_by_poc_asc, %function
compare_pic_by_poc_asc:
	.fnstart
.LFB1600:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #12]	@ D.44369, <variable>.poc
	ldr	r3, [r1, #12]	@ D.44372, <variable>.poc
	cmp	r2, r3	@ D.44369, D.44372
	mvnlt	r0, #0	@ D.44375,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.44375
	movgt	r0, #1	@, D.44375
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	compare_pic_by_poc_asc, .-compare_pic_by_poc_asc
	.align	2
	.global	HEVC_CheckThatAllRefPicsAreAvailable
	.type	HEVC_CheckThatAllRefPicsAreAvailable, %function
HEVC_CheckThatAllRefPicsAreAvailable:
	.fnstart
.LFB1609:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2125436	@ tmp161,
	movw	ip, #:lower16:1960184	@ tmp163,
	movt	r3, #:upper16:2125436	@ tmp161,
	movt	ip, #:upper16:1960184	@ tmp163,
	movw	r2, #:lower16:1960180	@ tmp169,
	ldr	r4, [r0, r3]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	r2, #:upper16:1960180	@ tmp169,
	ldr	r3, [r0, ip]	@ <variable>.pPPS, <variable>.pPPS
	mov	sl, r0	@ pHevcCtx, pHevcCtx
	ldr	ip, [sl, r2]	@ <variable>.pSPS, <variable>.pSPS
	movw	r2, #7704	@ tmp165,
	movw	r0, #:lower16:2128520	@ tmp175,
	movt	r0, #:upper16:2128520	@ tmp175,
	mla	r4, r2, r4, r3	@ tmp166, tmp165, <variable>.CurrSlice.pic_parameter_set_id, <variable>.pPPS
	movw	r3, #:lower16:2128524	@ tmp179,
	movt	r3, #:upper16:2128524	@ tmp179,
	movw	r2, #:lower16:2128516	@ tmp176,
	movt	r2, #:upper16:2128516	@ tmp176,
	ldr	r0, [sl, r0]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	ldr	r3, [sl, r3]	@, <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics
	ldr	r2, [sl, r2]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	str	r1, [fp, #-88]	@ piLostPoc, %sfp
	str	r3, [fp, #-72]	@, %sfp
	add	r2, r0, r2	@, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	ldr	r3, [r4, #32]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r0, [fp, #-72]	@, %sfp
	str	r2, [fp, #-68]	@, %sfp
	cmp	r2, r0	@,
	movw	r2, #36364	@ tmp171,
	mla	ip, r2, r3, ip	@ tmp172, tmp171, <variable>.seq_parameter_set_id, <variable>.pSPS
	mov	r2, #1	@ tmp173,
	movcs	r1, #0	@,
	ldr	r3, [ip, #128]	@ <variable>.max_pic_order_cnt_lsb, <variable>.max_pic_order_cnt_lsb
	strcs	r1, [fp, #-56]	@, %sfp
	mov	r3, r2, asl r3	@, tmp173,
	strcs	r1, [fp, #-80]	@, %sfp
	str	r3, [fp, #-48]	@, %sfp
	bcs	.L256	@,
	ldr	r1, [fp, #-68]	@, %sfp
	movw	r3, #:lower16:532164	@ tmp181,
	movt	r3, #:upper16:532164	@ tmp181,
	movw	r2, #:lower16:1960372	@ tmp180,
	add	ip, r1, r3	@ tmp181,, tmp181
	movt	r2, #:upper16:1960372	@ tmp180,
	mov	r0, #0	@,
	str	r0, [fp, #-64]	@, %sfp
	add	r8, sl, ip, asl #2	@, tmp184, pHevcCtx, tmp181,
	ldr	ip, [sl, r2]	@ pretmp.1954, <variable>.DPB.used_size
	movw	r1, #:lower16:1960392	@,
	ldr	r0, [fp, #-68]	@, %sfp
	movt	r1, #:upper16:1960392	@,
	str	sl, [fp, #-76]	@ pHevcCtx, %sfp
	add	r3, sl, r1	@, pHevcCtx,
	mov	sl, ip	@ pretmp.1954, pretmp.1954
	cmp	sl, #0	@ pretmp.1954,
	movw	r2, #:lower16:2125408	@,
	mov	r1, #0	@,
	movt	r2, #:upper16:2125408	@,
	add	r8, r8, #8	@ ivtmp.1988, tmp184,
	str	r3, [fp, #-60]	@, %sfp
	str	r2, [fp, #-84]	@, %sfp
	str	r0, [fp, #-52]	@, %sfp
	str	r1, [fp, #-80]	@, %sfp
	beq	.L257	@,
.L310:
	ldr	r6, [r8, #-1800]	@ pretmp.1957, <variable>.CurrSlice.CheckLTMSB
	mov	r0, #0	@,
	sub	r5, sl, #1	@ tmp250, pretmp.1954,
	str	r0, [fp, #-56]	@, %sfp
	cmp	r6, r0	@ pretmp.1957,
	and	r7, r5, #1	@ tmp252, tmp250,
	beq	.L276	@,
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r3, [ip, #0]	@ D.44725, <variable>.DPB.fs
	ldr	r2, [r3, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r2, #0	@ <variable>.frame.is_long_term,
	beq	.L277	@,
	ldr	r1, [r3, #12]	@ <variable>.poc, <variable>.poc
	ldr	r4, [r8, #64]	@ tmp295, <variable>.CurrSlice.short_term_ref_pic_set.poc
	cmp	r1, r4	@ <variable>.poc, tmp295
	beq	.L304	@,
.L277:
	mov	r5, #1	@ j,
	ldr	r2, [fp, #-60]	@, %sfp
	cmp	r5, sl	@ j, pretmp.1954
	add	r4, r2, #4	@ ivtmp.1982,,
	bcs	.L296	@,
	cmp	r7, #0	@ tmp252,
	beq	.L253	@,
	cmp	r6, #0	@ pretmp.1957,
	beq	.L280	@,
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r3, [ip, #4]	@ D.44725, <variable>.DPB.fs
	ldr	r2, [r3, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r2, #0	@ <variable>.frame.is_long_term,
	beq	.L281	@,
	ldr	r1, [r3, #12]	@ <variable>.poc, <variable>.poc
	ldr	r2, [r8, #64]	@ tmp307, <variable>.CurrSlice.short_term_ref_pic_set.poc
	cmp	r1, r2	@ <variable>.poc, tmp307
	beq	.L305	@,
.L281:
	add	r5, r5, #1	@ j, j,
	add	r4, r4, #4	@ ivtmp.1982, ivtmp.1982,
	cmp	r5, sl	@ j, pretmp.1954
	bcc	.L253	@,
	b	.L296	@
.L308:
	ldr	r3, [r4, #0]	@ D.44725, <variable>.DPB.fs
	ldr	r7, [r3, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r7, #0	@ <variable>.frame.is_long_term,
	beq	.L251	@,
	ldr	ip, [r3, #12]	@ <variable>.poc, <variable>.poc
	ldr	r2, [r8, #64]	@ tmp187, <variable>.CurrSlice.short_term_ref_pic_set.poc
	cmp	ip, r2	@ <variable>.poc, tmp187
	beq	.L306	@,
.L251:
	cmp	r6, #0	@ pretmp.1957,
	add	r5, r5, #1	@ tmp253, j,
	add	r7, r4, #4	@ tmp254, ivtmp.1982,
	beq	.L285	@,
.L309:
	ldr	r3, [r4, #4]	@ D.44725, <variable>.DPB.fs
	ldr	r1, [r3, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r1, #0	@ <variable>.frame.is_long_term,
	beq	.L286	@,
	ldr	r4, [r3, #12]	@ <variable>.poc, <variable>.poc
	ldr	r2, [r8, #64]	@ tmp319, <variable>.CurrSlice.short_term_ref_pic_set.poc
	cmp	r4, r2	@ <variable>.poc, tmp319
	beq	.L307	@,
.L286:
	add	r5, r5, #1	@ j, tmp253,
	add	r4, r7, #4	@ ivtmp.1982, tmp254,
	cmp	r5, sl	@ j, pretmp.1954
	bcs	.L296	@,
.L253:
	cmp	r6, #0	@ pretmp.1957,
	bne	.L308	@,
	ldr	r7, [r4, #0]	@ temp.1994, <variable>.DPB.fs
	ldr	r1, [r7, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r1, #0	@ <variable>.frame.is_long_term,
	beq	.L251	@,
	ldr	r0, [r7, #12]	@, <variable>.poc
	ldr	r1, [fp, #-48]	@, %sfp
	bl	__aeabi_idivmod	@
	ldr	r0, [r8, #64]	@, <variable>.CurrSlice.short_term_ref_pic_set.poc
	mov	r9, r1	@ tmp196,
	ldr	r1, [fp, #-48]	@, %sfp
	bl	__aeabi_idivmod	@
	cmp	r9, r1	@ tmp196,
	bne	.L251	@,
	ldrb	lr, [r7, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #0	@ <variable>.is_reference,
	beq	.L251	@,
.L252:
	cmp	r6, #0	@ pretmp.1957,
	mov	r7, #1	@,
	add	r5, r5, #1	@ tmp253, j,
	str	r7, [fp, #-56]	@, %sfp
	add	r7, r4, #4	@ tmp254, ivtmp.1982,
	bne	.L309	@,
.L285:
	ldr	r4, [r4, #4]	@ temp.1994, <variable>.DPB.fs
	ldr	ip, [r4, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	ip, #0	@ <variable>.frame.is_long_term,
	beq	.L286	@,
	ldr	r0, [r4, #12]	@, <variable>.poc
	ldr	r1, [fp, #-48]	@, %sfp
	bl	__aeabi_idivmod	@
	ldr	r0, [r8, #64]	@, <variable>.CurrSlice.short_term_ref_pic_set.poc
	mov	r9, r1	@ tmp312,
	ldr	r1, [fp, #-48]	@, %sfp
	bl	__aeabi_idivmod	@
	cmp	r9, r1	@ tmp312,
	bne	.L286	@,
	ldrb	lr, [r4, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #0	@ <variable>.is_reference,
	beq	.L286	@,
.L287:
	add	r5, r5, #1	@ j, tmp253,
	mov	r4, #1	@,
	cmp	r5, sl	@ j, pretmp.1954
	str	r4, [fp, #-56]	@, %sfp
	add	r4, r7, #4	@ ivtmp.1982, tmp254,
	bcc	.L253	@,
.L296:
	ldr	ip, [fp, #-56]	@, %sfp
	cmp	ip, #0	@,
	beq	.L257	@,
.L254:
	ldr	r1, [fp, #-52]	@, %sfp
	add	r8, r8, #4	@ ivtmp.1988, ivtmp.1988,
	ldr	ip, [fp, #-72]	@, %sfp
	add	r1, r1, #1	@,,
	ldr	r2, [fp, #-64]	@ iPocLost.2011, %sfp
	cmp	r1, ip	@,
	str	r1, [fp, #-52]	@, %sfp
	bcs	.L298	@,
.L311:
	cmp	sl, #0	@ pretmp.1954,
	str	r2, [fp, #-64]	@ iPocLost.2011, %sfp
	bne	.L310	@,
.L257:
	ldr	ip, [fp, #-76]	@, %sfp
	ldr	r0, [fp, #-84]	@, %sfp
	ldr	r1, [r8, #0]	@ tmp206, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	ldr	r3, [ip, #192]	@ <variable>.PocRandomAccess, <variable>.PocRandomAccess
	ldr	r2, [ip, r0]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	add	r2, r1, r2	@ iPocLost.2011, tmp206, <variable>.CurrSlice.poc
	cmp	r2, r3	@ iPocLost.2011, <variable>.PocRandomAccess
	blt	.L254	@,
	ldr	r3, [r8, #-64]	@ tmp209, <variable>.CurrSlice.short_term_ref_pic_set.used_flag
	cmp	r3, #0	@ tmp209,
	movne	r0, #1	@,
	strne	r0, [fp, #-80]	@, %sfp
	beq	.L254	@,
	ldr	r1, [fp, #-52]	@, %sfp
	add	r8, r8, #4	@ ivtmp.1988, ivtmp.1988,
	ldr	ip, [fp, #-72]	@, %sfp
	add	r1, r1, #1	@,,
	str	r1, [fp, #-52]	@, %sfp
	cmp	r1, ip	@,
	bcc	.L311	@,
.L298:
	ldr	sl, [fp, #-76]	@ pHevcCtx, %sfp
	str	r2, [fp, #-56]	@ iPocLost.2011, %sfp
.L256:
	ldr	r2, [fp, #-68]	@, %sfp
	cmp	r2, #0	@,
	beq	.L258	@,
	movw	r2, #:lower16:1960372	@ tmp211,
	movt	r2, #:upper16:1960372	@ tmp211,
	movw	r4, #:lower16:1960392	@ tmp233,
	movt	r4, #:upper16:1960392	@ tmp233,
	ldr	r1, [sl, r2]	@, <variable>.DPB.used_size
	movw	r0, #:lower16:2128600	@ ivtmp.1979,
	movt	r0, #:upper16:2128600	@ ivtmp.1979,
	add	r8, sl, r4	@ ivtmp.1971, pHevcCtx, ivtmp.1971
	add	r0, sl, r0	@ ivtmp.1979, pHevcCtx, ivtmp.1979
	mov	r2, #0	@,
	mov	r3, r1, asl #2	@ tmp232,,
	str	r1, [fp, #-52]	@, %sfp
	add	ip, r3, r4	@ tmp233, tmp232, tmp233
	movw	r4, #:lower16:2125408	@ tmp236,
	add	ip, ip, sl	@ D.49562, tmp233, pHevcCtx
	movt	r4, #:upper16:2125408	@ tmp236,
	str	r2, [fp, #-48]	@, %sfp
.L259:
	ldr	r2, [fp, #-52]	@, %sfp
	cmp	r2, #0	@,
	beq	.L263	@,
	ldr	r3, [r8, #0]	@ temp.2000, <variable>.DPB.fs
	rsb	r7, r8, ip	@ tmp246, ivtmp.1971, D.49562
	sub	r2, r7, #4	@ tmp247, tmp246,
	mov	r7, #0	@ isAvailable.1993,
	ubfx	r2, r2, #2, #1	@ tmp248, tmp247,,
	ldr	r1, [r3, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r1, r7	@ <variable>.frame.is_long_term,
	bne	.L269	@,
	ldr	r5, [r0, #64]	@ tmp266, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	ldr	r1, [sl, r4]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	ldr	r6, [r3, #12]	@ <variable>.poc, <variable>.poc
	add	r1, r5, r1	@ tmp268, tmp266, <variable>.CurrSlice.poc
	cmp	r6, r1	@ <variable>.poc, tmp268
	beq	.L312	@,
.L269:
	add	r3, r8, #4	@ ivtmp.1971, ivtmp.1971,
	cmp	r3, ip	@ ivtmp.1971, D.49562
	beq	.L295	@,
	cmp	r2, #0	@ tmp248,
	beq	.L300	@,
	ldr	r2, [r8, #4]	@ temp.2000, <variable>.DPB.fs
	ldr	r1, [r2, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r1, #0	@ <variable>.frame.is_long_term,
	bne	.L271	@,
	ldr	r5, [r0, #64]	@ tmp274, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	ldr	r1, [sl, r4]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	ldr	r6, [r2, #12]	@ <variable>.poc, <variable>.poc
	add	r1, r5, r1	@ tmp276, tmp274, <variable>.CurrSlice.poc
	cmp	r6, r1	@ <variable>.poc, tmp276
	beq	.L313	@,
.L271:
	add	r3, r3, #4	@ ivtmp.1971, ivtmp.1971,
	cmp	r3, ip	@ ivtmp.1971, D.49562
	beq	.L295	@,
.L300:
	mov	r9, r8	@ ivtmp.1971, ivtmp.1971
	b	.L261	@
.L260:
	ldr	r3, [r3, #4]	@ temp.2000, <variable>.DPB.fs
	ldr	r2, [r3, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r2, #0	@ <variable>.frame.is_long_term,
	bne	.L274	@,
	ldr	r6, [r0, #64]	@ tmp280, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	ldr	r5, [sl, r4]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	ldr	r2, [r3, #12]	@ <variable>.poc, <variable>.poc
	add	r5, r6, r5	@ tmp282, tmp280, <variable>.CurrSlice.poc
	cmp	r2, r5	@ <variable>.poc, tmp282
	beq	.L314	@,
.L274:
	add	r3, r1, #4	@ ivtmp.1971, tmp249,
	cmp	r3, ip	@ ivtmp.1971, D.49562
	beq	.L315	@,
.L261:
	ldr	r2, [r3, #0]	@ temp.2000, <variable>.DPB.fs
	add	r1, r3, #4	@ tmp249, ivtmp.1971,
	ldr	r5, [r2, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r5, #0	@ <variable>.frame.is_long_term,
	bne	.L260	@,
	ldr	r8, [r0, #64]	@ tmp216, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	ldr	r6, [sl, r4]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	ldr	r5, [r2, #12]	@ <variable>.poc, <variable>.poc
	add	r6, r8, r6	@ tmp215, tmp216, <variable>.CurrSlice.poc
	cmp	r5, r6	@ <variable>.poc, tmp215
	bne	.L260	@,
	ldrb	r2, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	movne	r7, #1	@ isAvailable.1993,
	b	.L260	@
.L307:
	ldrb	r3, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	bne	.L287	@,
	b	.L286	@
.L306:
	ldrb	r3, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	bne	.L252	@,
	b	.L251	@
.L276:
	ldr	r0, [fp, #-60]	@, %sfp
	ldr	r4, [r0, #0]	@ temp.1994, <variable>.DPB.fs
	ldr	r3, [r4, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r3, #0	@ <variable>.frame.is_long_term,
	beq	.L277	@,
	ldr	r0, [r4, #12]	@, <variable>.poc
	ldr	r1, [fp, #-48]	@, %sfp
	bl	__aeabi_idivmod	@
	ldr	r0, [r8, #64]	@, <variable>.CurrSlice.short_term_ref_pic_set.poc
	mov	r5, r1	@ tmp288,
	ldr	r1, [fp, #-48]	@, %sfp
	bl	__aeabi_idivmod	@
	cmp	r5, r1	@ tmp288,
	bne	.L277	@,
	ldrb	lr, [r4, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #0	@ <variable>.is_reference,
	beq	.L277	@,
.L278:
	mov	r4, #1	@,
	str	r4, [fp, #-56]	@, %sfp
	b	.L277	@
.L280:
	ldr	r0, [fp, #-60]	@, %sfp
	ldr	r9, [r0, #4]	@ temp.1994, <variable>.DPB.fs
	ldr	r1, [r9, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r1, #0	@ <variable>.frame.is_long_term,
	beq	.L281	@,
	ldr	r0, [r9, #12]	@, <variable>.poc
	ldr	r1, [fp, #-48]	@, %sfp
	bl	__aeabi_idivmod	@
	ldr	r0, [r8, #64]	@, <variable>.CurrSlice.short_term_ref_pic_set.poc
	mov	r7, r1	@ tmp300,
	ldr	r1, [fp, #-48]	@, %sfp
	bl	__aeabi_idivmod	@
	cmp	r7, r1	@ tmp300,
	bne	.L281	@,
	ldrb	lr, [r9, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #0	@ <variable>.is_reference,
	beq	.L281	@,
.L282:
	mov	ip, #1	@,
	str	ip, [fp, #-56]	@, %sfp
	b	.L281	@
.L315:
	mov	r8, r9	@ ivtmp.1971, ivtmp.1971
.L295:
	cmp	r7, #0	@ isAvailable.1993,
	beq	.L263	@,
.L262:
	ldr	r1, [fp, #-48]	@, %sfp
	add	r0, r0, #4	@ ivtmp.1979, ivtmp.1979,
	add	r3, r1, #1	@,,
	ldr	r1, [fp, #-68]	@, %sfp
	str	r3, [fp, #-48]	@, %sfp
	cmp	r1, r3	@,
	bhi	.L259	@,
.L258:
	ldr	ip, [fp, #-80]	@, %sfp
	cmp	ip, #0	@,
	ldrne	r1, [fp, #-56]	@, %sfp
	moveq	r0, #1	@ D.44776,
	ldrne	r2, [fp, #-88]	@, %sfp
	movne	r0, #0	@ D.44776,
	strne	r1, [r2, #0]	@,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L314:
	ldrb	r8, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r8, #0	@ <variable>.is_reference,
	movne	r7, #1	@ isAvailable.1993,
	b	.L274	@
.L263:
	ldr	r1, [r0, #64]	@ tmp221, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	ldr	r2, [sl, r4]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	ldr	r3, [sl, #192]	@ <variable>.PocRandomAccess, <variable>.PocRandomAccess
	add	r2, r1, r2	@ iPocLost, tmp221, <variable>.CurrSlice.poc
	cmp	r2, r3	@ iPocLost, <variable>.PocRandomAccess
	blt	.L262	@,
	ldr	r1, [r0, #0]	@ tmp224, <variable>.CurrSlice.short_term_ref_pic_set.used_flag
	ldr	r3, [fp, #-56]	@, %sfp
	cmp	r1, #0	@ tmp224,
	movne	r3, r2	@,, iPocLost
	ldr	r2, [fp, #-80]	@, %sfp
	str	r3, [fp, #-56]	@, %sfp
	movne	r2, #1	@,,
	str	r2, [fp, #-80]	@, %sfp
	b	.L262	@
.L312:
	ldrb	r7, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	subs	r7, r7, #0	@ isAvailable.1993, <variable>.is_reference,
	movne	r7, #1	@ isAvailable.1993
	b	.L269	@
.L313:
	ldrb	r2, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	movne	r7, #1	@ isAvailable.1993,
	b	.L271	@
.L304:
	ldrb	r3, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	bne	.L278	@,
	b	.L277	@
.L305:
	ldrb	r3, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	bne	.L282	@,
	b	.L281	@
	.fnend
	.size	HEVC_CheckThatAllRefPicsAreAvailable, .-HEVC_CheckThatAllRefPicsAreAvailable
	.align	2
	.global	HEVC_SetFrmRepeatCount
	.type	HEVC_SetFrmRepeatCount, %function
HEVC_SetFrmRepeatCount:
	.fnstart
.LFB1612:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:1960188	@ tmp138,
	movt	r2, #:upper16:1960188	@ tmp138,
	ldr	r3, [r0, r2]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r3, #692]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r2, ip, #2032	@ tmp139, <variable>.s32FastForwardBackwardSpeed,
	add	r3, r2, #15	@ tmp139, tmp139,
	cmp	r3, #4096	@ tmp139,
	bcc	.L317	@,
	movw	r3, #:lower16:1960368	@ tmp143,
	movt	r3, #:upper16:1960368	@ tmp143,
	ldr	r2, [r0, #252]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	ldr	ip, [r0, r3]	@ <variable>.DPB.size, <variable>.DPB.size
	ldr	r3, [r0, #248]	@ D.44886, <variable>.NewPicCounter
	add	r2, ip, r2	@ D.44889, <variable>.DPB.size, <variable>.PicOutCounter
	add	ip, r2, #1	@ tmp146, D.44889,
	cmp	r3, ip	@ D.44886, tmp146
	bcc	.L317	@,
	mvn	r2, r2	@ tmp147, D.44889
	add	ip, r2, r3	@ tmp148, tmp147, D.44886
	cmp	ip, #1	@ tmp148,
	movhi	ip, #2	@ tmp149,
	movls	ip, #1	@ tmp152,
	strhi	ip, [r1, #84]	@ tmp149, <variable>.u32RepeatCnt
	strls	ip, [r1, #84]	@ tmp152, <variable>.u32RepeatCnt
	ldrhi	ip, [r0, #252]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	ldrls	ip, [r0, #252]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	addhi	ip, ip, #2	@ tmp151, <variable>.PicOutCounter,
	addls	ip, ip, #1	@ tmp154, <variable>.PicOutCounter,
	str	ip, [r0, #252]	@ tmp154, <variable>.PicOutCounter
	ldmfd	sp, {fp, sp, pc}	@
.L317:
	mov	r0, #0	@ tmp156,
	str	r0, [r1, #84]	@ tmp156, <variable>.u32RepeatCnt
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_SetFrmRepeatCount, .-HEVC_SetFrmRepeatCount
	.align	2
	.global	HEVC_GetFreeFrameStoreNum
	.type	HEVC_GetFreeFrameStoreNum, %function
HEVC_GetFreeFrameStoreNum:
	.fnstart
.LFB1618:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:4306452	@ ivtmp.2073,
	movw	r2, #:lower16:1960396	@ ivtmp.2065,
	movt	r3, #:upper16:4306452	@ ivtmp.2073,
	movt	r2, #:upper16:1960396	@ ivtmp.2065,
	mov	r1, #0	@,
	movw	r9, #:lower16:1960372	@ tmp166,
	movw	sl, #:lower16:1960392	@ tmp167,
	add	r3, r0, r3	@ ivtmp.2073, pHevcCtx, ivtmp.2073
	add	r2, r0, r2	@ ivtmp.2065, pHevcCtx, ivtmp.2065
	movt	r9, #:upper16:1960372	@ tmp166,
	movt	sl, #:upper16:1960392	@ tmp167,
	mov	r6, r1	@ i,
	str	r1, [fp, #-48]	@, %sfp
.L327:
	ldr	r4, [r3, #0]	@ <variable>.eFrameStoreState, <variable>.eFrameStoreState
	cmp	r4, #0	@ <variable>.eFrameStoreState,
	bne	.L323	@,
	add	r5, r6, r6, asl #3	@, tmp157, i, i,
	movw	ip, #:lower16:4306448	@ tmp159,
	movt	ip, #:upper16:4306448	@ tmp159,
	mov	r1, r5, asl #6	@ tmp158, tmp157,
	add	r5, r1, ip	@ tmp159, tmp158, tmp159
	adds	r5, r0, r5	@ D.45056, pHevcCtx, tmp159
	beq	.L324	@,
	ldr	r8, [r0, r9]	@ D.48048, <variable>.DPB.used_size
	cmp	r8, #0	@ D.48048,
	beq	.L324	@,
	ldr	ip, [r0, sl]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r5, ip	@ D.45056, <variable>.DPB.fs
	beq	.L323	@,
	tst	r8, #1	@ D.48048,
	mov	ip, r2	@ ivtmp.2065, ivtmp.2065
	bne	.L336	@,
	mov	r4, #1	@ i,
	cmp	r4, r8	@ i, D.48048
	bcs	.L324	@,
	mov	ip, r2	@ ivtmp.2065, ivtmp.2065
	ldr	r1, [ip], #4	@ D.48049, <variable>.DPB.fs
	cmp	r5, r1	@ D.45056, D.48049
	beq	.L323	@,
.L336:
	mov	r7, r3	@ ivtmp.2073, ivtmp.2073
	b	.L325	@
.L326:
	ldr	r1, [r3], #4	@ D.48049, <variable>.DPB.fs
	cmp	r5, r1	@ D.45056, D.48049
	beq	.L337	@,
	ldr	r1, [ip, #4]	@ D.48049, <variable>.DPB.fs
	add	ip, r3, #4	@ ivtmp.2065, tmp174,
	cmp	r5, r1	@ D.45056, D.48049
	beq	.L337	@,
.L325:
	add	r4, r4, #1	@ tmp173, i,
	mov	r3, ip	@ tmp174, ivtmp.2065
	cmp	r4, r8	@ tmp173, D.48048
	add	r4, r4, #1	@ i, tmp173,
	bcc	.L326	@,
	mov	r3, r7	@ ivtmp.2073, ivtmp.2073
.L324:
	ldr	r1, [fp, #-48]	@, %sfp
	add	ip, r1, #1	@,,
	str	ip, [fp, #-48]	@, %sfp
.L323:
	add	r6, r6, #1	@ i, i,
	add	r3, r3, #576	@ ivtmp.2073, ivtmp.2073,
	cmp	r6, #20	@ i,
	bne	.L327	@,
	ldr	r0, [fp, #-48]	@, %sfp
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L337:
	mov	r3, r7	@ ivtmp.2073, ivtmp.2073
	b	.L323	@
	.fnend
	.size	HEVC_GetFreeFrameStoreNum, .-HEVC_GetFreeFrameStoreNum
	.align	2
	.global	HEVC_UpdateLTReflist
	.type	HEVC_UpdateLTReflist, %function
HEVC_UpdateLTReflist:
	.fnstart
.LFB1621:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:2125436	@ tmp151,
	movw	r1, #:lower16:1960184	@ tmp153,
	movt	r5, #:upper16:2125436	@ tmp151,
	movt	r1, #:upper16:1960184	@ tmp153,
	movw	r8, #7704	@ tmp155,
	ldr	ip, [r0, r5]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r4, #:lower16:2128520	@ tmp167,
	ldr	r7, [r0, r1]	@ <variable>.pPPS, <variable>.pPPS
	movt	r4, #:upper16:2128520	@ tmp167,
	movw	r1, #:lower16:2128516	@ tmp166,
	movt	r1, #:upper16:2128516	@ tmp166,
	movw	r3, #:lower16:2128524	@ tmp165,
	movt	r3, #:upper16:2128524	@ tmp165,
	mla	r8, r8, ip, r7	@ tmp156, tmp155, <variable>.CurrSlice.pic_parameter_set_id, <variable>.pPPS
	ldr	r6, [r0, r4]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	ldr	r7, [r0, r1]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	movw	r2, #:lower16:1960180	@ tmp159,
	movt	r2, #:upper16:1960180	@ tmp159,
	ldr	r4, [r0, r3]	@ D.45199, <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics
	add	r9, r7, r6	@ tmp168, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	mov	ip, #1	@ tmp163,
	ldr	r5, [r0, r2]	@ <variable>.pSPS, <variable>.pSPS
	sub	r6, r9, #1	@ tmp171, tmp168,
	ldr	r2, [r8, #32]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	sub	r9, r4, #1	@ i, D.45199,
	cmp	r9, r6	@ i, tmp171
	movw	r6, #36364	@ tmp161,
	mla	r3, r6, r2, r5	@ tmp162, tmp161, <variable>.seq_parameter_set_id, <variable>.pSPS
	movle	r1, #0	@ prephitmp.2094,
	ldr	r5, [r3, #128]	@ <variable>.max_pic_order_cnt_lsb, <variable>.max_pic_order_cnt_lsb
	strle	r1, [fp, #-56]	@ prephitmp.2094, %sfp
	mov	r5, ip, asl r5	@ PocCycle, tmp163,
	ble	.L340	@,
	movw	r8, #:lower16:532148	@ tmp172,
	movt	r8, #:upper16:532148	@ tmp172,
	add	r3, r4, r8	@ tmp172, D.45199, tmp172
	movw	sl, #:lower16:1960392	@,
	movt	sl, #:upper16:1960392	@,
	sub	r5, r5, #1	@, PocCycle,
	add	r6, r0, r3, asl #2	@, tmp175, pHevcCtx, tmp172,
	add	r4, r0, sl	@, pHevcCtx,
	movw	r8, #:lower16:1960372	@,
	add	sl, r6, #8	@ ivtmp.2122, tmp175,
	movt	r8, #:upper16:1960372	@,
	mov	r6, #0	@,
	str	r5, [fp, #-48]	@, %sfp
	str	r4, [fp, #-52]	@, %sfp
	str	r6, [fp, #-56]	@, %sfp
	str	r8, [fp, #-60]	@, %sfp
.L346:
	ldr	r2, [sl, #-4]	@ tmp176, <variable>.CurrSlice.short_term_ref_pic_set.used_flag
	cmp	r2, #0	@ tmp176,
	beq	.L341	@,
	ldrb	r4, [sl, #-1740]	@ zero_extendqisi2	@ DeltaPocMsbCycleLtFlag, <variable>.CurrSlice.CheckLTMSB
	ldr	r5, [sl, #124]	@ RpsPoc, <variable>.CurrSlice.short_term_ref_pic_set.poc
	cmp	r4, #0	@ DeltaPocMsbCycleLtFlag,
	ldreq	ip, [fp, #-48]	@, %sfp
	andeq	r5, r5, ip	@ RpsPoc, RpsPoc,
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r7, [r0, ip]	@ D.45220, <variable>.DPB.used_size
	cmp	r7, #0	@ D.45220,
	ble	.L341	@,
	ldr	r3, [fp, #-52]	@, %sfp
	cmp	r4, #0	@ DeltaPocMsbCycleLtFlag,
	sub	r1, r7, #1	@ tmp231, D.45220,
	and	ip, r1, #1	@ tmp233, tmp231,
	ldr	r2, [r3, #0]	@ D.45211, <variable>.DPB.fs
	mov	r3, #0	@ j,
	ldr	r1, [r2, #12]	@ CurPoc, <variable>.poc
	ldreq	r6, [fp, #-48]	@, %sfp
	andeq	r1, r1, r6	@ CurPoc, CurPoc,
.L357:
	cmp	r5, r1	@ RpsPoc, CurPoc
	beq	.L371	@,
	mov	r3, #1	@ j,
	ldr	r8, [fp, #-52]	@, %sfp
	cmp	r3, r7	@ j, D.45220
	add	r1, r8, #4	@ ivtmp.2113,,
	bge	.L341	@,
	cmp	ip, #0	@ tmp233,
	beq	.L345	@,
	ldr	r2, [r8, #4]	@ D.45211, <variable>.DPB.fs
	cmp	r4, #0	@ DeltaPocMsbCycleLtFlag,
	ldreq	r6, [fp, #-48]	@, %sfp
	ldr	ip, [r2, #12]	@ CurPoc, <variable>.poc
	andeq	ip, ip, r6	@ CurPoc, CurPoc,
	cmp	r5, ip	@ RpsPoc, CurPoc
	beq	.L371	@,
	add	r3, r3, #1	@ j, j,
	add	r1, r1, #4	@ ivtmp.2113, ivtmp.2113,
	cmp	r3, r7	@ j, D.45220
	blt	.L345	@,
	b	.L341	@
.L344:
	ldr	r2, [r1, #4]	@ D.45211, <variable>.DPB.fs
	add	r3, r3, #1	@ j, j,
	cmp	r4, #0	@ DeltaPocMsbCycleLtFlag,
	mov	r8, r3	@ tmp235, j
	ldr	ip, [r2, #12]	@ CurPoc, <variable>.poc
	ldreq	r1, [fp, #-48]	@, %sfp
	andeq	ip, ip, r1	@ CurPoc, CurPoc,
.L364:
	cmp	r5, ip	@ RpsPoc, CurPoc
	add	r1, r6, #4	@ ivtmp.2113, tmp234,
	beq	.L371	@,
	add	r3, r8, #1	@ j, tmp235,
	cmp	r3, r7	@ j, D.45220
	bge	.L341	@,
.L345:
	ldr	r2, [r1, #0]	@ D.45211, <variable>.DPB.fs
	cmp	r4, #0	@ DeltaPocMsbCycleLtFlag,
	add	r6, r1, #4	@ tmp234, ivtmp.2113,
	ldreq	r8, [fp, #-48]	@, %sfp
	ldr	ip, [r2, #12]	@ CurPoc, <variable>.poc
	andeq	ip, ip, r8	@ CurPoc, CurPoc,
	cmp	r5, ip	@ RpsPoc, CurPoc
	bne	.L344	@,
.L371:
	movw	r1, #:lower16:490098	@ tmp184,
	movt	r1, #:upper16:490098	@ tmp184,
	add	r1, r3, r1	@ tmp184, j, tmp184
	mov	r3, #1	@,
	strb	r3, [r2, #1]	@, <variable>.is_reference
	movw	r2, #:lower16:490148	@ tmp192,
	ldr	r4, [fp, #-56]	@, %sfp
	movt	r2, #:upper16:490148	@ tmp192,
	ldr	r8, [r0, r1, asl #2]	@ tmp186, <variable>.DPB.fs
	add	r6, r4, r2	@ tmp192,, tmp192
	add	r4, r4, #1	@,,
	str	r4, [fp, #-56]	@, %sfp
	add	r3, r0, r6, asl #2	@, tmp196, pHevcCtx, tmp192,
	mov	r6, #0	@,
	str	r6, [r8, #56]	@, <variable>.frame.is_short_term
	mov	r8, #1	@,
	ldr	ip, [r0, r1, asl #2]	@ tmp190, <variable>.DPB.fs
	str	r8, [ip, #52]	@, <variable>.frame.is_long_term
	ldr	r2, [r0, r1, asl #2]	@ tmp200, <variable>.DPB.fs
	str	r2, [r3, #4]	@ tmp200, <variable>.DPB.fs_ltref
.L341:
	movw	ip, #:lower16:2128516	@,
	movw	r1, #:lower16:2128520	@,
	movt	ip, #:upper16:2128516	@,
	movt	r1, #:upper16:2128520	@,
	sub	r9, r9, #1	@ i, i,
	sub	sl, sl, #4	@ ivtmp.2122, ivtmp.2122,
	ldr	r2, [r0, ip]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	ldr	r3, [r0, r1]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	add	r3, r2, r3	@ tmp203, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	sub	r2, r3, #1	@ tmp206, tmp203,
	cmp	r2, r9	@ tmp206, i
	blt	.L346	@,
	ldr	r1, [fp, #-56]	@ prephitmp.2094, %sfp
.L340:
	movw	r3, #:lower16:1960380	@ tmp207,
	movt	r3, #:upper16:1960380	@ tmp207,
	movw	r2, #:lower16:1960368	@ tmp208,
	movt	r2, #:upper16:1960368	@ tmp208,
	str	r1, [r0, r3]	@ prephitmp.2094, <variable>.DPB.ltref_frames_in_buffer
	ldr	ip, [r0, r2]	@ D.45228, <variable>.DPB.size
	ldr	r2, [fp, #-56]	@, %sfp
	cmp	r2, ip	@, D.45228
	bge	.L349	@,
	movw	r1, #:lower16:490148	@ tmp209,
	movt	r1, #:upper16:490148	@ tmp209,
	add	r3, r2, r1	@ tmp209,, tmp209
	add	r1, r2, #1	@ k,,
	mvn	r4, r2	@ tmp227,
	cmp	r1, ip	@ k, D.45228
	add	r3, r0, r3, asl #2	@, tmp212, pHevcCtx, tmp209,
	add	r0, r4, ip	@ tmp226, tmp227, D.45228
	add	r2, r3, #4	@ ivtmp.2109, tmp212,
	and	r4, r0, #1	@ tmp228, tmp226,
	mov	r0, #0	@ tmp216,
	str	r0, [r2], #4	@ tmp216, <variable>.DPB.fs_ltref
	bge	.L349	@,
	cmp	r4, #0	@ tmp228,
	beq	.L348	@,
	add	r1, r1, #1	@ k, k,
	str	r0, [r2], #4	@ tmp216, <variable>.DPB.fs_ltref
	cmp	r1, ip	@ k, D.45228
	bge	.L349	@,
.L348:
	add	r1, r1, #2	@ k, k,
	mov	r3, r2	@ tmp230, ivtmp.2109
	cmp	r1, ip	@ k, D.45228
	str	r0, [r3], #4	@ tmp216, <variable>.DPB.fs_ltref
	str	r0, [r2, #4]	@ tmp216, <variable>.DPB.fs_ltref
	add	r2, r3, #4	@ ivtmp.2109, tmp230,
	blt	.L348	@,
.L349:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	HEVC_UpdateLTReflist, .-HEVC_UpdateLTReflist
	.align	2
	.global	HEVC_CheckOutputImage
	.type	HEVC_CheckOutputImage, %function
HEVC_CheckOutputImage:
	.fnstart
.LFB1631:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #19	@ PicID,
	mvnhi	r0, #0	@ D.45516,
	ldmhifd	sp, {fp, sp, pc}	@
	add	r1, r1, r1, asl #3	@, tmp140, PicID, PicID,
	movw	r2, #:lower16:4306448	@ tmp143,
	movt	r2, #:upper16:4306448	@ tmp143,
	add	ip, r0, r1, asl #6	@, tmp142, pHevcCtx, tmp140,
	add	r3, ip, r2	@ tmp143, tmp142, tmp143
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	subs	r0, r0, #0	@ D.45516, <variable>.is_reference,
	movne	r0, #1	@ D.45516
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_CheckOutputImage, .-HEVC_CheckOutputImage
	.align	2
	.global	HEVC_WaitVo
	.type	HEVC_WaitVo, %function
HEVC_WaitVo:
	.fnstart
.LFB1636:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_WaitVo, .-HEVC_WaitVo
	.align	2
	.global	HEVC_GetReRangeFlag
	.type	HEVC_GetReRangeFlag, %function
HEVC_GetReRangeFlag:
	.fnstart
.LFB1641:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:2125436	@ tmp143,
	movw	r3, #:lower16:1960184	@ tmp145,
	movt	ip, #:upper16:2125436	@ tmp143,
	movt	r3, #:upper16:1960184	@ tmp145,
	movw	r5, #:lower16:1960180	@ tmp141,
	ldr	r4, [r0, ip]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	r5, #:upper16:1960180	@ tmp141,
	ldr	r3, [r0, r3]	@ <variable>.pPPS, <variable>.pPPS
	ldr	ip, [r0, r5]	@ <variable>.pSPS, <variable>.pSPS
	movw	r5, #7704	@ tmp147,
	mla	r3, r5, r4, r3	@ tmp148, tmp147, <variable>.CurrSlice.pic_parameter_set_id, <variable>.pPPS
	movw	r4, #36364	@ tmp151,
	ldr	r3, [r3, #32]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	r3, r4, r3, ip	@ sps, tmp151, <variable>.seq_parameter_set_id, <variable>.pSPS
	ldrb	ip, [r3, #2]	@ zero_extendqisi2	@ <variable>.dpbsize_changed, <variable>.dpbsize_changed
	ldr	r4, [r3, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	ldr	r3, [r3, #76]	@ newh, <variable>.pic_height_in_luma_samples
	cmp	ip, #0	@ <variable>.dpbsize_changed,
	cmpeq	r1, r4	@, OldWidth, <variable>.pic_width_in_luma_samples
	bne	.L384	@,
	cmp	r2, r3	@ OldHeight, newh
	beq	.L387	@,
.L384:
	mov	r0, #1	@ ReRangeFlag,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L387:
	ldr	r1, [r0, #160]	@ <variable>.AllowStartDec, <variable>.AllowStartDec
	cmp	r1, #0	@ <variable>.AllowStartDec,
	beq	.L384	@,
	movw	r3, #:lower16:1960188	@ tmp164,
	movt	r3, #:upper16:1960188	@ tmp164,
	ldr	r2, [r0, r3]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r0, [r2, #920]	@ <variable>.s32BitDepthChanged, <variable>.s32BitDepthChanged
	subs	r0, r0, #0	@ ReRangeFlag, <variable>.s32BitDepthChanged,
	movne	r0, #1	@ ReRangeFlag
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_GetReRangeFlag, .-HEVC_GetReRangeFlag
	.align	2
	.global	HEVC_GetRapPicFlag
	.type	HEVC_GetRapPicFlag, %function
HEVC_GetRapPicFlag:
	.fnstart
.LFB1646:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2125432	@ tmp141,
	movt	r3, #:upper16:2125432	@ tmp141,
	ldr	r1, [r0, r3]	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	sub	r0, r1, #16	@ tmp137, <variable>.CurrSlice.nal_unit_type,
	cmp	r0, #5	@ tmp137,
	movhi	r0, #0	@,
	movls	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_GetRapPicFlag, .-HEVC_GetRapPicFlag
	.align	2
	.global	HEVC_GetIdrPicFlag
	.type	HEVC_GetIdrPicFlag, %function
HEVC_GetIdrPicFlag:
	.fnstart
.LFB1647:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2125432	@ tmp141,
	movt	r3, #:upper16:2125432	@ tmp141,
	ldr	r1, [r0, r3]	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	sub	r0, r1, #19	@ tmp137, <variable>.CurrSlice.nal_unit_type,
	cmp	r0, #1	@ tmp137,
	movhi	r0, #0	@,
	movls	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_GetIdrPicFlag, .-HEVC_GetIdrPicFlag
	.align	2
	.global	HEVC_CalScalingList
	.type	HEVC_CalScalingList, %function
HEVC_CalScalingList:
	.fnstart
.LFB1652:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	ip, r0, r2, asl #2	@, tmp145, pHevcCtx, ListSize,
	add	r8, r2, r2, asl #1	@, tmp211, ListSize, ListSize,
	mov	r4, #0	@ k,
	ldr	ip, [ip, #268]	@ tmp147, <variable>.scalingListSize
	add	r2, r3, r8, asl #1	@, tmp213, MatrixId, tmp211,
	cmp	ip, #64	@ tmp147,
	movcs	ip, #64	@ CoefNum,
	mov	r8, r2, asl #4	@ tmp214, tmp213,
	mov	r3, ip, lsr #2	@ pretmp.2273, CoefNum,
.L408:
	cmp	r4, r3	@ k, pretmp.2273
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	ip, #0	@ CoefNum,
	beq	.L408	@,
	add	r2, r8, r4	@ tmp184, tmp214, k
	ldr	r6, [r1, #0]	@ tmp203,* pScalingListCoef
	add	r5, r2, #138	@ tmp185, tmp184,
	tst	ip, #1	@ CoefNum,
	mov	r2, #0	@ i,
	add	r5, r0, r5, asl #2	@, tmp188, pHevcCtx, tmp185,
	ldr	r7, [r5, #4]	@ tmp202, <variable>.qmatrix
	orr	r6, r7, r6	@ tmp204, tmp202, tmp203
	str	r6, [r5, #4]	@ tmp204, <variable>.qmatrix
	beq	.L410	@,
.L407:
	add	r2, r2, #1	@ tmp221, i,
	cmp	ip, r2	@ CoefNum, tmp221
	bls	.L408	@,
	add	r7, r8, r4	@ tmp154, tmp214, k
	ldr	sl, [r1, r2, asl #2]	@ tmp163,* pScalingListCoef
	add	r5, r7, #138	@ tmp155, tmp154,
	and	r6, r2, #3	@ D.46383, tmp221,
	cmp	r6, #3	@ D.46383,
	add	r2, r2, #1	@ i, tmp221,
	add	r5, r0, r5, asl #2	@, tmp158, pHevcCtx, tmp155,
	addeq	r4, r4, #1	@ k, k,
	mov	r6, r6, asl #3	@ tmp161, D.46383,
	ldr	r7, [r5, #4]	@ tmp176, <variable>.qmatrix
	orr	r6, r7, sl, asl r6	@, tmp177, tmp176, tmp163,
	add	sl, r8, r4	@ tmp244, tmp214, k
	str	r6, [r5, #4]	@ tmp177, <variable>.qmatrix
	add	r5, sl, #138	@ tmp245, tmp244,
	and	r7, r2, #3	@ D.46383, i,
	ldr	sl, [r1, r2, asl #2]	@ tmp251,* pScalingListCoef
	add	r5, r0, r5, asl #2	@, tmp247, pHevcCtx, tmp245,
	cmp	r7, #3	@ D.46383,
	mov	r6, r7, asl #3	@ tmp250, D.46383,
	addeq	r4, r4, #1	@ k, k,
	ldr	r7, [r5, #4]	@ tmp253, <variable>.qmatrix
	orr	r6, r7, sl, asl r6	@, tmp254, tmp253, tmp251,
	str	r6, [r5, #4]	@ tmp254, <variable>.qmatrix
	b	.L407	@
.L410:
	mov	r2, #1	@ i,
	cmp	ip, r2	@ CoefNum, i
	bls	.L408	@,
	ldr	r7, [r1, #4]	@ tmp235,
	orr	r6, r6, r7, asl #8	@, tmp238, tmp204, tmp235,
	str	r6, [r5, #4]	@ tmp238, <variable>.qmatrix
	b	.L407	@
	.fnend
	.size	HEVC_CalScalingList, .-HEVC_CalScalingList
	.align	2
	.global	HEVC_FindNaluArraySlot
	.type	HEVC_FindNaluArraySlot, %function
HEVC_FindNaluArraySlot:
	.fnstart
.LFB1662:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #140]	@ Pos, <variable>.NalArrayPos
	movw	r4, #:lower16:-1689489505	@ tmp163,
	movt	r4, #:upper16:-1689489505	@ tmp163,
	mov	r5, #211	@ tmp164,
	mov	r6, #100	@ tmp166,
	umull	r7, r1, r4, ip	@, tmp139, tmp163, Pos
	movw	r3, #:lower16:2358472	@ tmp147,
	movt	r3, #:upper16:2358472	@ tmp147,
	mov	r2, r1, lsr #7	@ Pos, tmp139,
	mls	r2, r5, r2, ip	@ Pos, tmp164, Pos, Pos
	mla	r1, r6, r2, r0	@ tmp146, tmp166, Pos, pHevcCtx
	add	r3, r1, r3	@ tmp147, tmp146, tmp147
	ldr	r1, [r3, #8]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	movne	r1, #1	@ i,
	bne	.L413	@,
	b	.L412	@
.L426:
	mls	r2, r5, r8, ip	@ Pos, tmp164, Pos, D.47193
	movw	r3, #:lower16:2358472	@ tmp147,
	movt	r3, #:upper16:2358472	@ tmp147,
	mla	ip, r6, r2, r0	@ tmp192, tmp166, Pos, pHevcCtx
	add	r3, ip, r3	@ tmp147, tmp192, tmp147
	ldr	ip, [r3, #8]	@ <variable>.is_valid, <variable>.is_valid
	cmp	ip, #0	@ <variable>.is_valid,
	beq	.L412	@,
	cmp	r1, #211	@ i,
	beq	.L425	@,
.L413:
	add	r2, r1, r2	@ D.47193, i, Pos
	add	ip, r1, #1	@ tmp167, i,
	movw	r3, #:lower16:2358472	@ tmp147,
	movt	r3, #:upper16:2358472	@ tmp147,
	umull	r1, r8, r4, r2	@, tmp173, tmp163, D.47193
	add	r1, ip, #1	@ i, tmp167,
	mov	r7, r8, lsr #7	@ Pos, tmp173,
	mls	r2, r5, r7, r2	@ Pos, tmp164, Pos, D.47193
	add	ip, ip, r2	@ D.47193, tmp167, Pos
	umull	r7, r8, r4, ip	@, tmp185, tmp163, D.47193
	mla	r7, r6, r2, r0	@ tmp180, tmp166, Pos, pHevcCtx
	add	r3, r7, r3	@ tmp147, tmp180, tmp147
	mov	r8, r8, lsr #7	@ Pos, tmp185,
	ldr	r7, [r3, #8]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r7, #0	@ <variable>.is_valid,
	bne	.L426	@,
.L412:
	cmp	r2, #210	@ D.47204,
	str	r2, [r0, #140]	@ D.47204, <variable>.NalArrayPos
	movls	r1, #1	@ tmp159,
	strls	r1, [r3, #8]	@ tmp159, <variable>.is_valid
	bhi	.L424	@,
	mov	r0, r2	@, D.47204
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L425:
	str	r2, [r0, #140]	@ Pos, <variable>.NalArrayPos
.L424:
	mvn	r2, #0	@ D.47204,
	mov	r0, r2	@, D.47204
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	HEVC_FindNaluArraySlot, .-HEVC_FindNaluArraySlot
	.align	2
	.global	HEVC_IsOutDPB
	.type	HEVC_IsOutDPB, %function
HEVC_IsOutDPB:
	.fnstart
.LFB1667:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pFrameStore
	beq	.L428	@,
	movw	r3, #:lower16:1960372	@ tmp141,
	movt	r3, #:upper16:1960372	@ tmp141,
	ldr	r4, [r0, r3]	@ D.47349, <variable>.DPB.used_size
	cmp	r4, #0	@ D.47349,
	beq	.L428	@,
	movw	ip, #:lower16:1960392	@ tmp142,
	movt	ip, #:upper16:1960392	@ tmp142,
	ldr	r2, [r0, ip]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r2, r1	@ <variable>.DPB.fs, pFrameStore
	beq	.L429	@,
	tst	r4, #1	@ D.47349,
	movw	r3, #:lower16:1960396	@ ivtmp.2349,
	movt	r3, #:upper16:1960396	@ ivtmp.2349,
	mov	ip, #0	@ i,
	add	r3, r0, r3	@ ivtmp.2349, pHevcCtx, ivtmp.2349
	bne	.L430	@,
	ldr	r2, [r3], #4	@ D.47346, <variable>.DPB.fs
	mov	ip, #1	@ i,
	cmp	r2, r1	@ D.47346, pFrameStore
	bne	.L430	@,
.L429:
	mov	r0, #0	@ D.47344,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L431:
	ldr	r0, [r2], #4	@ D.47346, <variable>.DPB.fs
	cmp	r0, r1	@ D.47346, pFrameStore
	beq	.L429	@,
	ldr	r0, [r3, #4]	@ D.47346, <variable>.DPB.fs
	add	r3, r2, #4	@ ivtmp.2349, tmp150,
	cmp	r0, r1	@ D.47346, pFrameStore
	beq	.L429	@,
.L430:
	add	r0, ip, #1	@ tmp149, i,
	mov	r2, r3	@ tmp150, ivtmp.2349
	cmp	r0, r4	@ tmp149, D.47349
	add	ip, r0, #1	@ i, tmp149,
	bcc	.L431	@,
.L428:
	mov	r0, #1	@ D.47344,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	HEVC_IsOutDPB, .-HEVC_IsOutDPB
	.align	2
	.global	HEVC_IsNewPicNal
	.type	HEVC_IsNewPicNal, %function
HEVC_IsNewPicNal:
	.fnstart
.LFB1671:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r0, #0	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_IsNewPicNal, .-HEVC_IsNewPicNal
	.align	2
	.global	HEVC_FrameStoreRefFlg
	.type	HEVC_FrameStoreRefFlg, %function
HEVC_FrameStoreRefFlg:
	.fnstart
.LFB1678:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r0, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	subs	r0, r0, #0	@, <variable>.is_reference,
	movne	r0, #1	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_FrameStoreRefFlg, .-HEVC_FrameStoreRefFlg
	.align	2
	.global	HEVC_GetPicStreamSize
	.type	HEVC_GetPicStreamSize, %function
HEVC_GetPicStreamSize:
	.fnstart
.LFB1687:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2139520	@ tmp138,
	movt	r3, #:upper16:2139520	@ tmp138,
	ldr	r3, [r0, r3]	@ pHevcSliceParam, <variable>.DecPicPara.pFirstSlice
	cmp	r3, #0	@ pHevcSliceParam,
	moveq	r0, r3	@ TotalSize, pHevcSliceParam
	ldmeqfd	sp, {fp, sp, pc}	@
	mov	r0, #0	@ TotalSize,
.L446:
	ldmia	r3, {r1, r2}	@ phole ldm
	ldr	r3, [r3, #1292]	@ pHevcSliceParam, <variable>.pNextSlice
	add	ip, r1, r2	@ tmp139, <variable>.valid_bitlen, <variable>.valid_bitlen
	add	r2, ip, #7	@ tmp142, tmp139,
	cmp	r3, #0	@ pHevcSliceParam,
	add	r0, r0, r2, lsr #3	@, TotalSize, TotalSize, tmp142,
	bne	.L446	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_GetPicStreamSize, .-HEVC_GetPicStreamSize
	.align	2
	.global	HEVCDEC_GetImageWidth
	.type	HEVCDEC_GetImageWidth, %function
HEVCDEC_GetImageWidth:
	.fnstart
.LFB1689:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2044528	@ tmp143,
	movw	r1, #:lower16:2044448	@ tmp144,
	movt	r3, #:upper16:2044528	@ tmp143,
	movt	r1, #:upper16:2044448	@ tmp144,
	ldr	ip, [r0, r3]	@ D.47849, <variable>.CurrSPS.min_cb_sizeY
	ldr	r2, [r0, r1]	@ <variable>.CurrSPS.pic_width_in_luma_samples, <variable>.CurrSPS.pic_width_in_luma_samples
	rsb	r3, ip, #0	@ tmp142, D.47849
	add	r1, ip, r2	@ tmp139, D.47849, <variable>.CurrSPS.pic_width_in_luma_samples
	sub	r0, r1, #1	@ tmp141, tmp139,
	and	r0, r0, r3	@, tmp141, tmp142
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVCDEC_GetImageWidth, .-HEVCDEC_GetImageWidth
	.align	2
	.global	HEVCDEC_GetImageHeight
	.type	HEVCDEC_GetImageHeight, %function
HEVCDEC_GetImageHeight:
	.fnstart
.LFB1690:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2044528	@ tmp143,
	movw	r1, #:lower16:2044452	@ tmp144,
	movt	r3, #:upper16:2044528	@ tmp143,
	movt	r1, #:upper16:2044452	@ tmp144,
	ldr	ip, [r0, r3]	@ D.47859, <variable>.CurrSPS.min_cb_sizeY
	ldr	r2, [r0, r1]	@ <variable>.CurrSPS.pic_height_in_luma_samples, <variable>.CurrSPS.pic_height_in_luma_samples
	rsb	r3, ip, #0	@ tmp142, D.47859
	add	r1, ip, r2	@ tmp139, D.47859, <variable>.CurrSPS.pic_height_in_luma_samples
	sub	r0, r1, #1	@ tmp141, tmp139,
	and	r0, r0, r3	@, tmp141, tmp142
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVCDEC_GetImageHeight, .-HEVCDEC_GetImageHeight
	.align	2
	.global	HEVC_GetScalingListDefaultAddress
	.type	HEVC_GetScalingListDefaultAddress, %function
HEVC_GetScalingListDefaultAddress:
	.fnstart
.LFB1653:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #3	@ sizeId,
	ldrls	pc, [pc, r0, asl #2]	@ sizeId
	b	.L454	@
.L459:
	.word	.L455
	.word	.L457
	.word	.L457
	.word	.L458
.L457:
	ldr	r3, .L465	@ tmp148,
	cmp	r1, #2	@ matrixId,
	sub	r0, r3, #256	@ tmp149, tmp148,
	movls	r0, r3	@ src, tmp148
	ldmfd	sp, {fp, sp, pc}	@
.L458:
	ldr	r2, .L465	@ tmp150,
	cmp	r1, #0	@ matrixId,
	sub	r0, r2, #256	@ tmp151, tmp150,
	moveq	r0, r2	@ src, tmp150
	ldmfd	sp, {fp, sp, pc}	@
.L455:
	movw	r0, #:lower16:.LANCHOR0	@ src,
	movt	r0, #:upper16:.LANCHOR0	@ src,
	ldmfd	sp, {fp, sp, pc}	@
.L454:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC0	@,
	movt	r1, #:upper16:.LC0	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ src,
	ldmfd	sp, {fp, sp, pc}	@
.L466:
	.align	2
.L465:
	.word	.LANCHOR0+320
	.fnend
	.size	HEVC_GetScalingListDefaultAddress, .-HEVC_GetScalingListDefaultAddress
	.align	2
	.global	HEVC_IsNewPic
	.type	HEVC_IsNewPic, %function
HEVC_IsNewPic:
	.fnstart
.LFB1644:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [r0, #192]	@ prephitmp.2519, <variable>.PocRandomAccess
	mov	r3, r0	@ pHevcCtx, pHevcCtx
	cmn	r4, #-2147483647	@ prephitmp.2519,
	beq	.L468	@,
	movw	r0, #:lower16:1960196	@ tmp153,
	movt	r0, #:upper16:1960196	@ tmp153,
	ldr	r2, [r3, r0]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [r2, #16]	@ prephitmp.2518, <variable>.nal_unit_type
.L469:
	cmp	r2, #21	@ prephitmp.2518,
	cmpne	r2, #16	@, prephitmp.2518,
	beq	.L471	@,
	cmp	r2, #18	@ prephitmp.2518,
	beq	.L471	@,
	cmp	r2, #17	@ prephitmp.2518,
	beq	.L471	@,
	sub	r1, r2, #19	@ tmp177, prephitmp.2518,
	cmp	r1, #1	@ tmp177,
	movls	r4, #-2147483647	@ tmp178,
	strls	r4, [r3, #192]	@ tmp178, <variable>.PocRandomAccess
.L473:
	movw	r2, #:lower16:2125408	@ tmp179,
	movt	r2, #:upper16:2125408	@ tmp179,
	ldr	ip, [r3, r2]	@ D.45968, <variable>.CurrSlice.poc
	cmp	ip, r4	@ D.45968, prephitmp.2519
	bge	.L474	@,
.L492:
	movw	r5, #:lower16:1960196	@ tmp181,
	movt	r5, #:upper16:1960196	@ tmp181,
	ldr	r1, [r3, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r5, [r1, #16]	@ D.45947, <variable>.nal_unit_type
	sub	r0, r5, #8	@ tmp182, D.45947,
	cmp	r0, #1	@ tmp182,
	bls	.L488	@,
.L474:
	ldrb	r4, [r3, #2]	@ zero_extendqisi2	@ D.45977, <variable>.bNoRaslOutputFlag
	cmp	r4, #0	@ D.45977,
	beq	.L475	@,
	movw	r1, #:lower16:1960196	@ tmp186,
	movt	r1, #:upper16:1960196	@ tmp186,
	ldr	r0, [r3, r1]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r5, [r0, #16]	@ temp.2537, <variable>.nal_unit_type
	sub	r2, r5, #8	@ tmp187, temp.2537,
	cmp	r2, #1	@ tmp187,
	bls	.L489	@,
.L475:
	ldrb	r4, [r3, #7]	@ zero_extendqisi2	@ D.45984, <variable>.PrevRAPIsBLA
	cmp	r4, #0	@ D.45984,
	beq	.L476	@,
	ldr	r5, [r3, #196]	@ D.45987, <variable>.PocCRA
	cmp	ip, r5	@ D.45968, D.45987
	bge	.L476	@,
	movw	r6, #:lower16:1960196	@ tmp191,
	movt	r6, #:upper16:1960196	@ tmp191,
	ldr	r0, [r3, r6]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r6, [r0, #16]	@ temp.2540, <variable>.nal_unit_type
	sub	r2, r6, #8	@ tmp192, temp.2540,
	cmp	r2, #1	@ tmp192,
	bls	.L490	@,
.L476:
	movw	r1, #:lower16:2125363	@ tmp195,
	movt	r1, #:upper16:2125363	@ tmp195,
	ldrb	r2, [r3, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.dependent_slice_segment_flag, <variable>.CurrSlice.dependent_slice_segment_flag
	cmp	r2, #0	@ <variable>.CurrSlice.dependent_slice_segment_flag,
	bne	.L477	@,
	movw	r0, #:lower16:1960196	@ tmp198,
	movt	r0, #:upper16:1960196	@ tmp198,
	ldr	r1, [r3, r0]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r1, [r1, #16]	@ temp.2543, <variable>.nal_unit_type
	sub	r0, r1, #19	@ tmp199, temp.2543,
	cmp	r0, #1	@ tmp199,
	bls	.L486	@,
	cmp	r1, #21	@ temp.2543,
	beq	.L486	@,
	sub	r1, r1, #16	@ tmp204, temp.2543,
	cmp	r1, #2	@ tmp204,
	strls	ip, [r3, #196]	@ D.45968, <variable>.PocCRA
	movls	r2, #1	@ tmp205,
	strlsb	r2, [r3, #7]	@ tmp205, <variable>.PrevRAPIsBLA
.L477:
	ldr	r1, [r3, #208]	@ D.46008, <variable>.TotalSliceNum
	movw	ip, #:lower16:2125361	@ tmp207,
	movt	ip, #:upper16:2125361	@ tmp207,
	cmp	r1, #0	@ D.46008,
	ldrb	r0, [r3, ip]	@ zero_extendqisi2	@ ret, <variable>.CurrSlice.first_slice_segment_in_pic_flag
	bne	.L480	@,
.L493:
	movw	r2, #:lower16:2125436	@ tmp208,
	movt	r2, #:upper16:2125436	@ tmp208,
	ldr	r1, [r3, #264]	@ <variable>.prev_pic_parameter_set_id, <variable>.prev_pic_parameter_set_id
	ldr	r2, [r3, r2]	@ prephitmp.2545, <variable>.CurrSlice.pic_parameter_set_id
	cmp	r1, r2	@ <variable>.prev_pic_parameter_set_id, prephitmp.2545
	beq	.L491	@,
.L482:
	mov	r0, #1	@ ret,
.L470:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L471:
	cmn	r4, #-2147483647	@ prephitmp.2519,
	bne	.L473	@,
	movw	r0, #:lower16:2125408	@ tmp176,
	movw	r2, #:lower16:2125408	@ tmp179,
	movt	r0, #:upper16:2125408	@ tmp176,
	movt	r2, #:upper16:2125408	@ tmp179,
	ldr	r4, [r3, r0]	@ prephitmp.2519, <variable>.CurrSlice.poc
	ldr	ip, [r3, r2]	@ D.45968, <variable>.CurrSlice.poc
	cmp	ip, r4	@ D.45968, prephitmp.2519
	str	r4, [r3, #192]	@ prephitmp.2519, <variable>.PocRandomAccess
	bge	.L474	@,
	b	.L492	@
.L480:
	movw	ip, #3688	@ tmp212,
	movw	r2, #:lower16:2125436	@ tmp209,
	mla	r1, ip, r1, r3	@ tmp213, tmp212, D.46008, pHevcCtx
	movt	r2, #:upper16:2125436	@ tmp209,
	ldr	r2, [r3, r2]	@ prephitmp.2545, <variable>.CurrSlice.pic_parameter_set_id
	add	r1, r1, #2408448	@ tmp214, tmp213,
	add	ip, r1, #248	@ tmp214, tmp214,
	ldr	r1, [ip, #4]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	cmp	r2, r1	@ prephitmp.2545, <variable>.pic_parameter_set_id
	ldr	r1, [r3, #264]	@ <variable>.prev_pic_parameter_set_id, <variable>.prev_pic_parameter_set_id
	movne	r0, #1	@ ret,
	cmp	r1, r2	@ <variable>.prev_pic_parameter_set_id, prephitmp.2545
	bne	.L482	@,
.L491:
	movw	r2, #:lower16:2125408	@ tmp217,
	movt	r2, #:upper16:2125408	@ tmp217,
	ldr	ip, [r3, #244]	@ <variable>.prev_poc, <variable>.prev_poc
	ldr	r3, [r3, r2]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	cmp	ip, r3	@ <variable>.prev_poc, <variable>.CurrSlice.poc
	bne	.L482	@,
	b	.L470	@
.L468:
	movw	r2, #:lower16:1960196	@ tmp155,
	movt	r2, #:upper16:1960196	@ tmp155,
	ldr	ip, [r0, r2]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [ip, #16]	@ prephitmp.2518, <variable>.nal_unit_type
	cmp	r2, #21	@ prephitmp.2518,
	cmpne	r2, #16	@, prephitmp.2518,
	movne	r1, #0	@, flag
	moveq	r1, #1	@, flag
	cmp	r2, #18	@ prephitmp.2518,
	orreq	r1, r1, #1	@,, flag.2531, flag
	cmp	r2, #17	@ prephitmp.2518,
	orreq	r1, r1, #1	@,, flag.2532, flag.2531
	cmp	r2, #19	@ prephitmp.2518,
	orreq	r1, r1, #1	@,, flag.2533, flag.2532
	cmp	r2, #20	@ prephitmp.2518,
	orreq	r1, r1, #1	@,, tmp168, flag.2533
	cmp	r1, #0	@ tmp168,
	bne	.L469	@,
	mov	r0, #2	@ ret,
	b	.L470	@
.L488:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LANCHOR1	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LANCHOR1	@,
	movw	r3, #8553	@,
	str	ip, [sp, #0]	@ D.45968,
	stmib	sp, {r4, r5}	@ phole stm
	bl	dprint_vfmw	@
	mov	r0, #2	@ ret,
	b	.L470	@
.L489:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC2	@,
	movw	r2, #:lower16:.LANCHOR1	@,
	movt	r1, #:upper16:.LC2	@,
	movt	r2, #:upper16:.LANCHOR1	@,
	movw	r3, #8561	@,
	str	ip, [sp, #0]	@ D.45968,
	stmib	sp, {r4, r5}	@ phole stm
	bl	dprint_vfmw	@
	mov	r0, #2	@ ret,
	b	.L470	@
.L486:
	ldr	r1, [r3, #208]	@ D.46008, <variable>.TotalSliceNum
	str	ip, [r3, #196]	@ D.45968, <variable>.PocCRA
	movw	ip, #:lower16:2125361	@ tmp207,
	cmp	r1, #0	@ D.46008,
	movt	ip, #:upper16:2125361	@ tmp207,
	strb	r2, [r3, #7]	@ <variable>.CurrSlice.dependent_slice_segment_flag, <variable>.PrevRAPIsBLA
	ldrb	r0, [r3, ip]	@ zero_extendqisi2	@ ret, <variable>.CurrSlice.first_slice_segment_in_pic_flag
	bne	.L480	@,
	b	.L493	@
.L490:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC3	@,
	movw	r2, #:lower16:.LANCHOR1	@,
	movt	r1, #:upper16:.LC3	@,
	movt	r2, #:upper16:.LANCHOR1	@,
	movw	r3, #8571	@,
	stmia	sp, {r4, ip}	@ phole stm
	str	r5, [sp, #8]	@ D.45987,
	str	r6, [sp, #12]	@ temp.2540,
	bl	dprint_vfmw	@
	mov	r0, #2	@ ret,
	b	.L470	@
	.fnend
	.size	HEVC_IsNewPic, .-HEVC_IsNewPic
	.align	2
	.global	HEVC_VpsSpsPpsCheck
	.type	HEVC_VpsSpsPpsCheck, %function
HEVC_VpsSpsPpsCheck:
	.fnstart
.LFB1643:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:2125436	@ tmp141,
	movt	r1, #:upper16:2125436	@ tmp141,
	ldr	r3, [r0, #156]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	ldr	r2, [r0, r1]	@ D.45900, <variable>.CurrSlice.pic_parameter_set_id
	cmp	r2, r3	@ D.45900, <variable>.MaxPpsNum
	bge	.L503	@,
	movw	r3, #7704	@ tmp146,
	movw	ip, #:lower16:1960184	@ tmp144,
	mul	r1, r3, r2	@ tmp145, tmp146, D.45900
	movt	ip, #:upper16:1960184	@ tmp144,
	ldr	r3, [r0, ip]	@ <variable>.pPPS, <variable>.pPPS
	add	ip, r1, r3	@ pPPS, tmp145, <variable>.pPPS
	ldrb	r3, [r1, r3]	@ zero_extendqisi2	@ <variable>.valid, <variable>.valid
	cmp	r3, #0	@ <variable>.valid,
	beq	.L504	@,
	ldr	r2, [ip, #32]	@ D.45913, <variable>.seq_parameter_set_id
	ldr	r1, [r0, #152]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	cmp	r2, r1	@ D.45913, <variable>.MaxSpsNum
	bge	.L505	@,
	movw	ip, #:lower16:1960180	@ tmp152,
	movt	ip, #:upper16:1960180	@ tmp152,
	movw	r1, #36364	@ tmp154,
	ldr	r3, [r0, ip]	@ <variable>.pSPS, <variable>.pSPS
	mla	r3, r1, r2, r3	@ pSPS, tmp154, D.45913, <variable>.pSPS
	ldrb	ip, [r3, #1]	@ zero_extendqisi2	@ <variable>.valid, <variable>.valid
	cmp	ip, #0	@ <variable>.valid,
	beq	.L506	@,
	ldr	r2, [r3, #52]	@ D.45925, <variable>.video_parameter_set_id
	ldr	r3, [r0, #148]	@ <variable>.MaxVpsNum, <variable>.MaxVpsNum
	cmp	r2, r3	@ D.45925, <variable>.MaxVpsNum
	bcs	.L507	@,
	movw	r3, #23196	@ tmp163,
	movw	ip, #:lower16:1960176	@ tmp161,
	mul	r1, r3, r2	@ tmp162, tmp163, D.45925
	movt	ip, #:upper16:1960176	@ tmp161,
	ldr	r3, [r0, ip]	@ <variable>.pVPS, <variable>.pVPS
	ldrb	ip, [r1, r3]	@ zero_extendqisi2	@ <variable>.valid, <variable>.valid
	cmp	ip, #0	@ <variable>.valid,
	movne	r0, #0	@ D.45905,
	ldmnefd	sp, {fp, sp, pc}	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC9	@,
	movt	r1, #:upper16:.LC9	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45905,
	ldmfd	sp, {fp, sp, pc}	@
.L503:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC4	@,
	movt	r1, #:upper16:.LC4	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45905,
	ldmfd	sp, {fp, sp, pc}	@
.L504:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC5	@,
	movt	r1, #:upper16:.LC5	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45905,
	ldmfd	sp, {fp, sp, pc}	@
.L505:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC6	@,
	movt	r1, #:upper16:.LC6	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45905,
	ldmfd	sp, {fp, sp, pc}	@
.L506:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC7	@,
	movt	r1, #:upper16:.LC7	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45905,
	ldmfd	sp, {fp, sp, pc}	@
.L507:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC8	@,
	movt	r1, #:upper16:.LC8	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45905,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_VpsSpsPpsCheck, .-HEVC_VpsSpsPpsCheck
	.align	2
	.global	HEVC_CalcStreamBits
	.type	HEVC_CalcStreamBits, %function
HEVC_CalcStreamBits:
	.fnstart
.LFB1642:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:1960196	@ tmp164,
	movt	r3, #:upper16:1960196	@ tmp164,
	ldr	r1, [r0, r3]	@ temp.2643, <variable>.pCurrNal
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ temp.2644, <variable>.nal_used_segment
	cmp	r3, #0	@ temp.2644,
	moveq	ip, r3	@ code_len_byte, temp.2644
	beq	.L510	@,
	mov	r2, #1	@ i,
	cmp	r2, r3	@ i, temp.2644
	sub	r4, r3, #1	@ tmp394, temp.2644,
	ldr	ip, [r1, #48]	@ code_len_byte, <variable>.bitstream_length
	and	r5, r4, r2	@ tmp396, tmp394,
	add	r4, r1, #28	@ ivtmp.2608, temp.2643,
	bcs	.L510	@,
	cmp	r5, #0	@ tmp396,
	beq	.L511	@,
	ldr	r5, [r4, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	r2, #2	@ i,
	cmp	r2, r3	@ i, temp.2644
	add	r4, r1, #56	@ ivtmp.2608, temp.2643,
	add	ip, ip, r5	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	bcs	.L510	@,
.L511:
	ldr	r6, [r4, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r2, r2, #2	@ i, i,
	ldr	r5, [r4, #76]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r2, r3	@ i, temp.2644
	add	ip, ip, r6	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	add	r4, r4, #56	@ ivtmp.2608, ivtmp.2608,
	add	ip, ip, r5	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	bcc	.L511	@,
.L510:
	movw	r2, #:lower16:1960172	@ tmp174,
	movt	r2, #:upper16:1960172	@ tmp174,
	rsb	r5, r3, r3, asl #3	@, tmp169, temp.2644, temp.2644,
	movw	r3, #:lower16:1960196	@ tmp177,
	ldr	r4, [r0, r2]	@ <variable>.pBS, <variable>.pBS
	movt	r3, #:upper16:1960196	@ tmp177,
	add	r6, r1, r5, asl #2	@, tmp171, temp.2643, tmp169,
	ldr	r5, [r4, #24]	@ <variable>.TotalPos, <variable>.TotalPos
	and	r4, r5, #7	@ tmp176, <variable>.TotalPos,
	str	r4, [r6, #60]	@ tmp176, <variable>.bitsoffset
	ldr	r5, [r0, r3]	@ D.45845, <variable>.pCurrNal
	ldr	r1, [r0, r2]	@ <variable>.pBS, <variable>.pBS
	ldrb	r6, [r5, #1]	@ zero_extendqisi2	@ temp.2609, <variable>.nal_used_segment
	ldr	r1, [r1, #24]	@ <variable>.TotalPos, <variable>.TotalPos
	rsb	r4, r6, r6, asl #3	@, tmp181, temp.2609, temp.2609,
	cmp	r1, #0	@ <variable>.TotalPos,
	add	r6, r1, #7	@ tmp190, <variable>.TotalPos,
	add	r4, r5, r4, asl #2	@, tmp183, D.45845, tmp181,
	movlt	r1, r6	@ <variable>.TotalPos, tmp190
	ldr	r5, [r4, #52]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	add	r1, r5, r1, asr #3	@, tmp199, <variable>.stream_phy_addr, <variable>.TotalPos,
	rsb	r1, ip, r1	@ tmp201, code_len_byte, tmp199
	str	r1, [r4, #64]	@ tmp201, <variable>.bytespos
	ldr	r1, [r0, r3]	@ temp.2612, <variable>.pCurrNal
	ldr	r4, [r0, r2]	@ <variable>.pBS, <variable>.pBS
	ldrb	r2, [r1, #1]	@ zero_extendqisi2	@ temp.2614, <variable>.nal_used_segment
	ldr	r4, [r4, #24]	@ <variable>.TotalPos, <variable>.TotalPos
	rsb	r2, r2, r2, asl #3	@, tmp206, temp.2614, temp.2614,
	add	r2, r1, r2, asl #2	@, tmp208, temp.2612, tmp206,
	ldr	r1, [r2, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	ip, ip, r1	@ tmp217, code_len_byte, <variable>.bitstream_length
	rsb	ip, r4, ip, asl #3	@, tmp223, <variable>.TotalPos, tmp217,
	str	ip, [r2, #56]	@ tmp223, <variable>.valid_bitlen
	ldr	ip, [r0, r3]	@ temp.2618, <variable>.pCurrNal
	ldrb	r1, [ip, #1]	@ zero_extendqisi2	@ temp.2620, <variable>.nal_used_segment
	rsb	r2, r1, r1, asl #3	@, tmp228, temp.2620, temp.2620,
	add	r2, ip, r2, asl #2	@, tmp230, temp.2618, tmp228,
	ldr	r1, [r2, #64]	@ <variable>.bytespos, <variable>.bytespos
	ldr	ip, [r2, #60]	@ <variable>.bitsoffset, <variable>.bitsoffset
	and	r1, r1, #3	@ tmp239, <variable>.bytespos,
	add	r1, ip, r1, asl #3	@, tmp250, <variable>.bitsoffset, tmp239,
	str	r1, [r2, #60]	@ tmp250, <variable>.bitsoffset
	ldr	r1, [r0, r3]	@ temp.2622, <variable>.pCurrNal
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ temp.2624, <variable>.nal_used_segment
	rsb	r2, ip, ip, asl #3	@, tmp255, temp.2624, temp.2624,
	add	r2, r1, r2, asl #2	@, tmp257, temp.2622, tmp255,
	ldr	ip, [r2, #64]	@ <variable>.bytespos, <variable>.bytespos
	bic	r1, ip, #3	@ tmp267, <variable>.bytespos,
	str	r1, [r2, #64]	@ tmp267, <variable>.bytespos
	ldr	r1, [r0, r3]	@ temp.2626, <variable>.pCurrNal
	ldr	r2, [r1, #8]	@ temp.2627, <variable>.nal_segment
	sub	ip, r2, #1	@ prephitmp.2586, temp.2627,
	cmp	ip, #1	@ prephitmp.2586,
	bhi	.L528	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	r4, r4, #1	@ tmp271, <variable>.nal_used_segment,
	cmp	r2, r4	@ temp.2627, tmp271
	bls	.L514	@,
	mov	ip, #1	@ i.2638,
	mov	r4, #0	@ tmp392,
.L515:
	rsb	r2, ip, ip, asl #3	@, tmp275, i.2638, i.2638,
	add	ip, ip, #1	@ i.2638, i.2638,
	mov	r2, r2, asl #2	@ tmp276, tmp275,
	add	r6, r2, r1	@ tmp277, tmp276, temp.2626
	str	r4, [r6, #60]	@ tmp392, <variable>.bitsoffset
	ldr	r1, [r0, r3]	@ temp.2632, <variable>.pCurrNal
	add	r6, r2, r1	@ tmp286, tmp276, temp.2632
	ldr	r5, [r6, #52]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	str	r5, [r6, #64]	@ <variable>.stream_phy_addr, <variable>.bytespos
	ldr	r1, [r0, r3]	@ temp.2633, <variable>.pCurrNal
	add	r1, r2, r1	@ tmp302, tmp276, temp.2633
	ldr	r6, [r1, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	r5, r6, asl #3	@ tmp312, <variable>.bitstream_length,
	str	r5, [r1, #56]	@ tmp312, <variable>.valid_bitlen
	ldr	r6, [r0, r3]	@ temp.2635, <variable>.pCurrNal
	add	r1, r2, r6	@ tmp319, tmp276, temp.2635
	ldr	r5, [r1, #64]	@ <variable>.bytespos, <variable>.bytespos
	ldr	r6, [r1, #60]	@ <variable>.bitsoffset, <variable>.bitsoffset
	and	r5, r5, #15	@ tmp328, <variable>.bytespos,
	add	r5, r6, r5, asl #3	@, tmp339, <variable>.bitsoffset, tmp328,
	str	r5, [r1, #60]	@ tmp339, <variable>.bitsoffset
	ldr	r1, [r0, r3]	@ temp.2636, <variable>.pCurrNal
	add	r2, r2, r1	@ tmp346, tmp276, temp.2636
	ldr	r1, [r2, #64]	@ <variable>.bytespos, <variable>.bytespos
	bic	r1, r1, #15	@ tmp356, <variable>.bytespos,
	str	r1, [r2, #64]	@ tmp356, <variable>.bytespos
	ldr	r1, [r0, r3]	@ temp.2626, <variable>.pCurrNal
	ldr	r2, [r1, #8]	@ D.45874, <variable>.nal_segment
	cmp	r2, ip	@ D.45874, i.2638
	bhi	.L515	@,
	sub	ip, r2, #1	@ prephitmp.2586, D.45874,
.L514:
	rsb	ip, ip, ip, asl #3	@, tmp361, prephitmp.2586, prephitmp.2586,
	ldr	r2, [r1, #12]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	movw	r3, #:lower16:1960196	@ tmp375,
	movt	r3, #:upper16:1960196	@ tmp375,
	add	r1, r1, ip, asl #2	@, tmp363, temp.2626, tmp361,
	ldr	ip, [r1, #56]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	rsb	r2, r2, ip	@ tmp374, <variable>.nal_trail_zero_bit_num, <variable>.valid_bitlen
	str	r2, [r1, #56]	@ tmp374, <variable>.valid_bitlen
	ldr	r2, [r0, r3]	@ temp.2639, <variable>.pCurrNal
	ldrb	r3, [r2, #1]	@ zero_extendqisi2	@ i.2621, <variable>.nal_used_segment
	ldr	ip, [r2, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	ip, r3	@ <variable>.nal_segment, i.2621
	ldmlsfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	movw	r1, #:lower16:2124840	@ tmp391,
	movt	r1, #:upper16:2124840	@ tmp391,
.L519:
	rsb	r4, r3, r3, asl #3	@, tmp380, i.2621, i.2621,
	ldr	r5, [r0, r1]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	add	r3, r3, #1	@ i.2621, i.2621,
	add	r4, r2, r4, asl #2	@, tmp382, temp.2639, tmp380,
	ldr	r4, [r4, #64]	@ temp.2642, <variable>.bytespos
	cmp	r4, r5	@ temp.2642, <variable>.CurrPic.stream_base_addr
	strcc	r4, [r0, r1]	@ temp.2642, <variable>.CurrPic.stream_base_addr
	ldrcc	ip, [r2, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	ip, r3	@ <variable>.nal_segment, i.2621
	bhi	.L519	@,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L528:
	movw	r1, #:lower16:.LC10	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC10	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	HEVC_CalcStreamBits, .-HEVC_CalcStreamBits
	.align	2
	.global	HEVC_GetMinPOC
	.type	HEVC_GetMinPOC, %function
HEVC_GetMinPOC:
	.fnstart
.LFB1640:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:1960372	@ tmp143,
	movw	r7, #:lower16:1960368	@ tmp144,
	movt	r8, #:upper16:1960372	@ tmp143,
	movt	r7, #:upper16:1960368	@ tmp144,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	mvn	r3, #-2147483648	@ tmp142,
	mov	r6, r2	@ pos, pos
	mov	r0, #0	@ tmp141,
	str	r0, [r2, #0]	@ tmp141,* pos
	str	r3, [r1, #0]	@ tmp142,* poc
	mov	r4, r1	@ poc, poc
	ldr	r2, [r5, r8]	@ prephitmp.2659, <variable>.DPB.used_size
	ldr	r3, [r5, r7]	@ D.45786, <variable>.DPB.size
	cmp	r2, r3	@ prephitmp.2659, D.45786
	bhi	.L536	@,
	cmp	r2, #0	@ prephitmp.2659,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L537:
	movw	r2, #:lower16:1960392	@ ivtmp.2673,
	movt	r2, #:upper16:1960392	@ ivtmp.2673,
	movw	ip, #:lower16:1960372	@ tmp154,
	add	r2, r5, r2	@ ivtmp.2673, pHevcCtx, ivtmp.2673
	movt	ip, #:upper16:1960372	@ tmp154,
	mov	r3, #0	@ i,
.L533:
	ldr	r1, [r2, #0]	@ tmp149, <variable>.DPB.fs
	add	r2, r2, #4	@ ivtmp.2673, ivtmp.2673,
	ldr	r0, [r4, #0]	@ tmp150,* poc
	ldr	r1, [r1, #12]	@ D.45793, <variable>.poc
	cmp	r0, r1	@ tmp150, D.45793
	strgt	r1, [r4, #0]	@ D.45793,* poc
	strgt	r3, [r6, #0]	@ i,* pos
	add	r3, r3, #1	@ i, i,
	ldr	r1, [r5, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, r3	@ <variable>.DPB.used_size, i
	bhi	.L533	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L536:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC11	@,
	movt	r1, #:upper16:.LC11	@,
	bl	dprint_vfmw	@
	ldr	r2, [r5, r7]	@ prephitmp.2659, <variable>.DPB.size
	cmp	r2, #0	@ prephitmp.2659,
	str	r2, [r5, r8]	@ prephitmp.2659, <variable>.DPB.used_size
	bne	.L537	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	HEVC_GetMinPOC, .-HEVC_GetMinPOC
	.align	2
	.global	HEVC_RemoveApcStore
	.type	HEVC_RemoveApcStore, %function
HEVC_RemoveApcStore:
	.fnstart
.LFB1605:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:490098	@ tmp137,
	movt	r4, #:upper16:490098	@ tmp137,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	add	r4, r1, r4	@ tmp137, pos, tmp137
	ldr	r2, [r0, r4, asl #2]	@ tmp139, <variable>.DPB.fs
	ldr	r3, [r2, #28]	@ D.44562, <variable>.apc_idc
	cmp	r3, #16	@ D.44562,
	ldmeqfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	movw	r0, #:lower16:490168	@ tmp140,
	movt	r0, #:upper16:490168	@ tmp140,
	add	r6, r3, r0	@ tmp140, D.44562, tmp140
	mov	lr, #0	@ tmp142,
	movw	ip, #:lower16:490184	@ tmp146,
	movt	ip, #:upper16:490184	@ tmp146,
	str	lr, [r5, r6, asl #2]	@ tmp142, <variable>.APC.is_used
	movw	r3, #:lower16:490200	@ tmp153,
	ldr	r6, [r2, #28]	@ <variable>.apc_idc, <variable>.apc_idc
	movt	r3, #:upper16:490200	@ tmp153,
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC12	@,
	add	ip, r6, ip	@ tmp146, <variable>.apc_idc, tmp146
	movt	r1, #:upper16:.LC12	@,
	str	lr, [r5, ip, asl #2]	@ tmp142, <variable>.APC.idc
	ldr	ip, [r2, #28]	@ <variable>.apc_idc, <variable>.apc_idc
	add	r3, ip, r3	@ tmp153, <variable>.apc_idc, tmp153
	str	lr, [r5, r3, asl #2]	@ tmp142, <variable>.APC.poc
	ldr	ip, [r2, #24]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	add	r3, ip, #520	@ tmp160, <variable>.pmv_address_idc,
	add	ip, r3, #2	@ tmp160, tmp160,
	add	r3, r5, ip, asl #2	@, tmp165, pHevcCtx, tmp160,
	str	lr, [r3, #4]	@ tmp142, <variable>.PmvStoreUsedFlag
	ldr	r3, [r2, #24]	@, <variable>.pmv_address_idc
	ldr	r2, [r2, #28]	@, <variable>.apc_idc
	bl	dprint_vfmw	@
	ldr	ip, [r5, r4, asl #2]	@ tmp175, <variable>.DPB.fs
	movw	r3, #:lower16:1960668	@ tmp177,
	movt	r3, #:upper16:1960668	@ tmp177,
	mov	r1, #16	@ tmp176,
	str	r1, [ip, #28]	@ tmp176, <variable>.apc_idc
	ldr	r0, [r5, r3]	@ <variable>.APC.used_size, <variable>.APC.used_size
	sub	r2, r0, #1	@ tmp180, <variable>.APC.used_size,
	str	r2, [r5, r3]	@ tmp180, <variable>.APC.used_size
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	HEVC_RemoveApcStore, .-HEVC_RemoveApcStore
	.align	2
	.global	HEVC_RemoveUnusedApcStore
	.type	HEVC_RemoveUnusedApcStore, %function
HEVC_RemoveUnusedApcStore:
	.fnstart
.LFB1606:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:1960372	@ tmp137,
	movt	r7, #:upper16:1960372	@ tmp137,
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	movw	r5, #:lower16:1960392	@ ivtmp.2738,
	mov	r1, #0	@ i.669,
	movt	r5, #:upper16:1960392	@ ivtmp.2738,
	mov	r4, r1	@ i, i.669
	add	r5, r0, r5	@ ivtmp.2738, pHevcCtx, ivtmp.2738
	b	.L544	@
.L543:
	ldr	ip, [r6, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r1, r4	@ i.669, i
	cmp	ip, r4	@ <variable>.DPB.used_size, i
	bls	.L547	@,
.L544:
	ldr	r2, [r5, #0]	@ tmp140, <variable>.DPB.fs
	add	r4, r4, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.2738, ivtmp.2738,
	ldrb	r0, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	bne	.L543	@,
	mov	r0, r6	@, pHevcCtx
	bl	HEVC_RemoveApcStore	@
	ldr	ip, [r6, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r1, r4	@ i.669, i
	cmp	ip, r4	@ <variable>.DPB.used_size, i
	bhi	.L544	@,
.L547:
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	HEVC_RemoveUnusedApcStore, .-HEVC_RemoveUnusedApcStore
	.align	2
	.global	HEVC_RepairList
	.type	HEVC_RepairList, %function
HEVC_RepairList:
	.fnstart
.LFB1597:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:2125420	@ tmp158,
	movt	r3, #:upper16:2125420	@ tmp158,
	mov	sl, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r3]	@ D.44176, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ D.44176,
	beq	.L551	@,
	cmp	r3, #2	@ D.44176,
	beq	.L552	@,
	cmp	r3, #0	@ D.44176,
	moveq	ip, #2	@,
	streq	ip, [fp, #-48]	@, %sfp
	bne	.L581	@,
.L554:
	movw	r8, #:lower16:2125520	@ ivtmp.2795,
	movw	r9, #:lower16:1960200	@ ivtmp.2798,
	movt	r8, #:upper16:2125520	@ ivtmp.2795,
	movt	r9, #:upper16:1960200	@ ivtmp.2798,
	mov	r4, #0	@ pRepairPic.2806,
	movw	ip, #:lower16:1960188	@ tmp211,
	add	r8, sl, r8	@ ivtmp.2795, pHevcCtx, ivtmp.2795
	add	r9, sl, r9	@ ivtmp.2798, pHevcCtx, ivtmp.2798
	movt	ip, #:upper16:1960188	@ tmp211,
	mov	r7, r4	@ i_list, pRepairPic.2806
	movw	r1, #:lower16:2124852	@,
	movt	r1, #:upper16:2124852	@,
	str	r1, [fp, #-60]	@, %sfp
.L568:
	ldr	r2, [r8, #0]	@ tmp205, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ tmp205,
	beq	.L555	@,
	ldr	r3, [r9, #0]	@ pRepairPic.2807, <variable>.pListX
	cmp	r3, #0	@ pRepairPic.2807,
	movne	r6, r3	@ pRepairPic, pRepairPic.2807
	movne	r0, #0	@ found,
	bne	.L557	@,
	add	r5, r7, r7, asl #4	@, tmp167, i_list, i_list,
	movw	r6, #:lower16:1960200	@ tmp169,
	tst	r2, #1	@ tmp205,
	movt	r6, #:upper16:1960200	@ tmp169,
	mov	r5, r5, asl #2	@ tmp168, tmp167,
	mov	r1, r3	@ i, pRepairPic.2807
	add	r0, r5, r6	@ tmp169, tmp168, tmp169
	add	r0, sl, r0	@ ivtmp.2792, pHevcCtx, tmp169
	bne	.L558	@,
	ldr	r6, [r0, #4]!	@ pRepairPic, <variable>.pListX
	mov	r1, #1	@ i,
	cmp	r6, #0	@ pRepairPic,
	beq	.L558	@,
	b	.L578	@
.L560:
	ldr	r6, [r0, #4]!	@ pRepairPic, <variable>.pListX
	cmp	r6, #0	@ pRepairPic,
	bne	.L578	@,
	ldr	r6, [r0, #4]!	@ pRepairPic, <variable>.pListX
	add	r1, r1, #1	@ i, i,
	cmp	r6, #0	@ pRepairPic,
	bne	.L578	@,
.L558:
	add	r1, r1, #1	@ i, i,
	cmp	r2, r1	@ tmp205, i
	bhi	.L560	@,
	mov	r6, r4	@ pRepairPic, pRepairPic.2806
	mov	r1, #1	@ prephitmp.2758,
	mov	r0, #255	@ found,
.L559:
	cmp	r6, #0	@ pRepairPic,
	orreq	r1, r1, #1	@,, tmp175, prephitmp.2758
	cmp	r1, #0	@ tmp175,
	beq	.L561	@,
	ldr	r1, [sl, ip]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r1, [r1, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r1, #2	@ <variable>.s32DecOrderOutput,
	bne	.L562	@,
	ldr	r6, [fp, #-60]	@, %sfp
	ldr	r4, [sl, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r6, r4, #36	@ pRepairPic, <variable>.CurrPic.frame_store,
.L561:
	add	r1, r7, r7, asl #4	@, tmp186, i_list, i_list,
	movw	r5, #:lower16:1960204	@ tmp188,
	movt	r5, #:upper16:1960204	@ tmp188,
	sxtb	r0, r0	@, found
	mov	r1, r1, asl #2	@ tmp187, tmp186,
	str	r0, [fp, #-52]	@, %sfp
	add	r5, r1, r5	@ tmp188, tmp187, tmp188
	mov	r4, #0	@ i.2802,
	add	r5, sl, r5	@ ivtmp.2780, pHevcCtx, tmp188
	str	ip, [fp, #-56]	@ tmp211, %sfp
	b	.L565	@
.L563:
	add	r4, r4, #1	@ i.2802, i.2802,
	add	r5, r5, #4	@ ivtmp.2780, ivtmp.2780,
	cmp	r2, r4	@ tmp205, i.2802
	bls	.L579	@,
.L582:
	ldr	r3, [r5, #-4]	@ pRepairPic.2807, <variable>.pListX
.L565:
	cmp	r3, #0	@ pRepairPic.2807,
	bne	.L563	@,
	ldr	ip, [fp, #-52]	@, %sfp
	mov	r3, r7	@, i_list
	ldr	r2, .L583	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC15	@,
	movt	r1, #:upper16:.LC15	@,
	str	r4, [sp, #0]	@ i.2802,
	add	r4, r4, #1	@ i.2802, i.2802,
	str	ip, [sp, #4]	@,
	bl	dprint_vfmw	@
	ldr	r2, [r8, #0]	@ tmp205, <variable>.CurrSlice.listXsize
	str	r6, [r5, #-4]	@ pRepairPic, <variable>.pListX
	add	r5, r5, #4	@ ivtmp.2780, ivtmp.2780,
	cmp	r2, r4	@ tmp205, i.2802
	bhi	.L582	@,
.L579:
	ldr	r2, [fp, #-48]	@, %sfp
	add	r7, r7, #1	@ i_list, i_list,
	ldr	ip, [fp, #-56]	@ tmp211, %sfp
	add	r8, r8, #4	@ ivtmp.2795, ivtmp.2795,
	cmp	r7, r2	@ i_list,
	add	r9, r9, #68	@ ivtmp.2798, ivtmp.2798,
	bcc	.L567	@,
.L552:
	mov	r0, #0	@ D.44178,
.L553:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L555:
	ldr	r3, [sl, ip]	@ <variable>.pstExtraData, <variable>.pstExtraData
	add	r7, r7, #1	@ i_list, i_list,
	ldr	r3, [r3, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r3, #2	@ <variable>.s32DecOrderOutput,
	ldreq	r1, [fp, #-60]	@, %sfp
	moveq	r2, #1	@,
	streq	r2, [r8, #0]	@, <variable>.CurrSlice.listXsize
	movne	r6, r4	@ pRepairPic, pRepairPic.2806
	moveq	r6, r4	@ pRepairPic, pRepairPic.2806
	add	r8, r8, #4	@ ivtmp.2795, ivtmp.2795,
	ldreq	r3, [sl, r1]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	addeq	r3, r3, #36	@ tmp201, <variable>.CurrPic.frame_store,
	streq	r3, [r9, #0]	@ tmp201, <variable>.pListX
	add	r9, r9, #68	@ ivtmp.2798, ivtmp.2798,
	ldr	r2, [fp, #-48]	@, %sfp
	cmp	r7, r2	@ i_list,
	bcs	.L552	@,
.L567:
	mov	r4, r6	@ pRepairPic.2806, pRepairPic
	b	.L568	@
.L578:
	uxtb	r0, r1	@ found, i
.L557:
	cmp	r0, #255	@ found,
	movne	r1, #0	@, prephitmp.2758
	moveq	r1, #1	@, prephitmp.2758
	b	.L559	@
.L581:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC13	@,
	ldr	r2, .L583	@,
	movt	r1, #:upper16:.LC13	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44178,
	b	.L553	@
.L551:
	str	r3, [fp, #-48]	@ D.44176, %sfp
	b	.L554	@
.L562:
	mov	r3, r7	@, i_list
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC14	@,
	ldr	r2, .L583	@,
	movt	r1, #:upper16:.LC14	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44178,
	b	.L553	@
.L584:
	.align	2
.L583:
	.word	.LANCHOR1+16
	.fnend
	.size	HEVC_RepairList, .-HEVC_RepairList
	.align	2
	.global	HEVC_CheckListX
	.type	HEVC_CheckListX, %function
HEVC_CheckListX:
	.fnstart
.LFB1589:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:2125363	@ tmp147,
	movt	r2, #:upper16:2125363	@ tmp147,
	ldrb	r1, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.dependent_slice_segment_flag, <variable>.CurrSlice.dependent_slice_segment_flag
	cmp	r1, #0	@ <variable>.CurrSlice.dependent_slice_segment_flag,
	movweq	r1, #:lower16:2125360	@ pSlice,
	movwne	r1, #:lower16:2129048	@ pSlice,
	movteq	r1, #:upper16:2125360	@ pSlice,
	movtne	r1, #:upper16:2129048	@ pSlice,
	add	r3, r0, r1	@ pSlice, pHevcCtx, pSlice
	ldr	r4, [r3, #160]	@ list0size, <variable>.listXsize
	ldr	r5, [r3, #164]	@ list1size, <variable>.listXsize
	cmp	r4, #16	@ list0size,
	bhi	.L628	@,
	cmp	r5, #16	@ list1size,
	bhi	.L590	@,
	cmp	r4, #0	@ list0size,
	beq	.L591	@,
	movw	ip, #:lower16:1960200	@ tmp152,
	movt	ip, #:upper16:1960200	@ tmp152,
	ldr	r2, [r0, ip]	@ temp.2845, <variable>.pListX
	cmp	r2, #0	@ temp.2845,
	beq	.L593	@,
	ldr	r2, [r2, #32]	@ <variable>.frame_store, <variable>.frame_store
	cmp	r2, #0	@ <variable>.frame_store,
	beq	.L595	@,
	tst	r4, #1	@ list0size,
	movw	r3, #:lower16:1960204	@ ivtmp.2839,
	movt	r3, #:upper16:1960204	@ ivtmp.2839,
	mov	r2, #0	@ i,
	add	r3, r0, r3	@ ivtmp.2839, pHevcCtx, ivtmp.2839
	bne	.L597	@,
	ldr	r1, [r3, #0]	@ D.43555, <variable>.pListX
	mov	r2, #1	@ i,
	cmp	r1, #0	@ D.43555,
	beq	.L593	@,
	ldr	r1, [r1, #32]	@ <variable>.frame_store, <variable>.frame_store
	add	r3, r3, #4	@ ivtmp.2839, ivtmp.2839,
	cmp	r1, #0	@ <variable>.frame_store,
	bne	.L597	@,
.L595:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC19	@,
	movt	r1, #:upper16:.LC19	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43550,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L598:
	ldr	r1, [r3, #0]	@ D.43555, <variable>.pListX
	cmp	r1, #0	@ D.43555,
	beq	.L593	@,
	ldr	r1, [r1, #32]	@ <variable>.frame_store, <variable>.frame_store
	cmp	r1, #0	@ <variable>.frame_store,
	beq	.L595	@,
	ldr	r1, [r3, #4]	@ D.43555, <variable>.pListX
	add	r2, r2, #1	@ i, i,
	add	r3, ip, #4	@ ivtmp.2839, tmp175,
	cmp	r1, #0	@ D.43555,
	beq	.L593	@,
	ldr	ip, [r1, #32]	@ <variable>.frame_store, <variable>.frame_store
	cmp	ip, #0	@ <variable>.frame_store,
	beq	.L595	@,
.L597:
	add	r2, r2, #1	@ i, i,
	add	ip, r3, #4	@ tmp175, ivtmp.2839,
	cmp	r4, r2	@ list0size, i
	bhi	.L598	@,
.L591:
	cmp	r5, #0	@ list1size,
	beq	.L599	@,
	movw	ip, #:lower16:1960268	@ tmp159,
	movt	ip, #:upper16:1960268	@ tmp159,
	ldr	r2, [r0, ip]	@ temp.2843, <variable>.pListX
	cmp	r2, #0	@ temp.2843,
	beq	.L601	@,
	ldr	r2, [r2, #32]	@ <variable>.frame_store, <variable>.frame_store
	cmp	r2, #0	@ <variable>.frame_store,
	beq	.L603	@,
	tst	r5, #1	@ list1size,
	movw	r3, #:lower16:1960272	@ ivtmp.2834,
	movt	r3, #:upper16:1960272	@ ivtmp.2834,
	mov	r2, #0	@ i.2842,
	add	r3, r0, r3	@ ivtmp.2834, pHevcCtx, ivtmp.2834
	bne	.L605	@,
	ldr	r1, [r3, #0]	@ D.43563, <variable>.pListX
	mov	r2, #1	@ i.2842,
	cmp	r1, #0	@ D.43563,
	beq	.L601	@,
	ldr	r0, [r1, #32]	@ <variable>.frame_store, <variable>.frame_store
	add	r3, r3, #4	@ ivtmp.2834, ivtmp.2834,
	cmp	r0, #0	@ <variable>.frame_store,
	bne	.L605	@,
.L603:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC21	@,
	movt	r1, #:upper16:.LC21	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43550,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L606:
	ldr	r1, [r3, #0]	@ D.43563, <variable>.pListX
	cmp	r1, #0	@ D.43563,
	beq	.L601	@,
	ldr	r1, [r1, #32]	@ <variable>.frame_store, <variable>.frame_store
	cmp	r1, #0	@ <variable>.frame_store,
	beq	.L603	@,
	ldr	r1, [r3, #4]	@ D.43563, <variable>.pListX
	add	r2, r2, #1	@ i.2842, i.2842,
	add	r3, r0, #4	@ ivtmp.2834, tmp169,
	cmp	r1, #0	@ D.43563,
	beq	.L601	@,
	ldr	ip, [r1, #32]	@ <variable>.frame_store, <variable>.frame_store
	cmp	ip, #0	@ <variable>.frame_store,
	beq	.L603	@,
.L605:
	add	r2, r2, #1	@ i.2842, i.2842,
	add	r0, r3, #4	@ tmp169, ivtmp.2834,
	cmp	r5, r2	@ list1size, i.2842
	bhi	.L606	@,
.L599:
	mov	r0, #0	@ D.43550,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L593:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC18	@,
	movt	r1, #:upper16:.LC18	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43550,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L601:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC20	@,
	movt	r1, #:upper16:.LC20	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43550,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L628:
	mov	r2, r4	@, list0size
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC16	@,
	mov	r3, #17	@,
	movt	r1, #:upper16:.LC16	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43550,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L590:
	mov	r2, r5	@, list1size
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC17	@,
	mov	r3, #17	@,
	movt	r1, #:upper16:.LC17	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43550,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_CheckListX, .-HEVC_CheckListX
	.align	2
	.global	HEVC_CtbTsAddrToRsAddr
	.type	HEVC_CtbTsAddrToRsAddr, %function
HEVC_CtbTsAddrToRsAddr:
	.fnstart
.LFB1586:
	@ args = 0, pretend = 0, frame = 544
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #548
	sub	sp, sp, #548	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:2117117	@ tmp164,
	movt	r2, #:upper16:2117117	@ tmp164,
	ldrb	r3, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPPS.tiles_enabled_flag, <variable>.CurrPPS.tiles_enabled_flag
	cmp	r3, #0	@ <variable>.CurrPPS.tiles_enabled_flag,
	moveq	r0, r1	@ CtbAddrRs, CtbAddrTs
	beq	.L631	@,
	movw	r2, #:lower16:2044448	@ tmp166,
	movt	r2, #:upper16:2044448	@ tmp166,
	movw	lr, #:lower16:2117176	@ tmp168,
	movt	lr, #:upper16:2117176	@ tmp168,
	ldr	r3, [r0, r2]	@, <variable>.CurrSPS.pic_width_in_luma_samples
	movw	ip, #:lower16:2117172	@ tmp170,
	ldr	r8, [r0, lr]	@ <variable>.CurrPPS.num_tile_rows, <variable>.CurrPPS.num_tile_rows
	movt	ip, #:upper16:2117172	@ tmp170,
	movw	lr, #:lower16:2044524	@ tmp167,
	movt	lr, #:upper16:2044524	@ tmp167,
	ldr	r6, [r0, ip]	@ <variable>.CurrPPS.num_tile_columns, <variable>.CurrPPS.num_tile_columns
	subs	r8, r8, #1	@ D.43240, <variable>.CurrPPS.num_tile_rows,
	str	r3, [fp, #-584]	@, %sfp
	ldr	ip, [r0, lr]	@, <variable>.CurrSPS.log2_ctb_sizeY
	sub	r6, r6, #1	@ D.43242, <variable>.CurrPPS.num_tile_columns,
	str	ip, [fp, #-588]	@, %sfp
	bmi	.L632	@,
	movw	r5, #:lower16:2117964	@ ivtmp.2891,
	movt	r5, #:upper16:2117964	@ ivtmp.2891,
	add	r2, r0, r5	@ ivtmp.2891, pHevcCtx, ivtmp.2891
	sub	r3, fp, #568	@ ivtmp.2895,,
	cmp	r8, #1	@ D.43240,
	and	r5, r8, #1	@ tmp229, D.43240,
	ldr	r4, [r2], #4	@ tmp174, <variable>.CurrPPS.row_bd
	add	ip, r3, #4	@ ivtmp.2895, ivtmp.2895,
	mov	lr, #1	@ idx,
	sub	r4, r4, #1	@ tmp175, tmp174,
	str	r4, [r3, #12]	@ tmp175, pTileInfo.row_height_minus1
	blt	.L632	@,
	cmp	r5, #0	@ tmp229,
	beq	.L633	@,
	ldr	r3, [r2], #4	@ tmp264, <variable>.CurrPPS.row_bd
	mov	lr, #2	@ idx,
	cmp	r8, lr	@ D.43240, idx
	sub	r3, r3, #1	@ tmp265, tmp264,
	str	r3, [ip, #12]	@ tmp265, pTileInfo.row_height_minus1
	add	ip, ip, #4	@ ivtmp.2895, ivtmp.2895,
	blt	.L632	@,
.L633:
	mov	r3, r2	@ tmp231, ivtmp.2891
	add	lr, lr, #2	@ idx, idx,
	ldr	r5, [r3], #4	@ tmp236, <variable>.CurrPPS.row_bd
	add	r4, ip, #4	@ tmp232, ivtmp.2895,
	cmp	r8, lr	@ D.43240, idx
	sub	r5, r5, #1	@ tmp237, tmp236,
	str	r5, [ip, #12]	@ tmp237, pTileInfo.row_height_minus1
	ldr	r5, [r2, #4]	@ tmp241, <variable>.CurrPPS.row_bd
	add	ip, r4, #4	@ ivtmp.2895, tmp232,
	add	r2, r3, #4	@ ivtmp.2891, tmp231,
	sub	r3, r5, #1	@ tmp242, tmp241,
	str	r3, [r4, #12]	@ tmp242, pTileInfo.row_height_minus1
	bge	.L633	@,
.L632:
	cmp	r6, #0	@ D.43242,
	blt	.L634	@,
	movw	r2, #:lower16:2117708	@ ivtmp.2884,
	movt	r2, #:upper16:2117708	@ ivtmp.2884,
	add	r2, r0, r2	@ ivtmp.2884, pHevcCtx, ivtmp.2884
	sub	r3, fp, #568	@ ivtmp.2888,,
	cmp	r6, #1	@ D.43242,
	and	r4, r6, #1	@ tmp224, D.43242,
	ldr	lr, [r2], #4	@ tmp178, <variable>.CurrPPS.column_bd
	add	r0, r3, #4	@ ivtmp.2888, ivtmp.2888,
	mov	ip, #1	@ idx.2897,
	sub	lr, lr, #1	@ tmp179, tmp178,
	str	lr, [r3, #268]	@ tmp179, pTileInfo.column_width_minus1
	blt	.L634	@,
	cmp	r4, #0	@ tmp224,
	beq	.L635	@,
	ldr	lr, [r2], #4	@ tmp262, <variable>.CurrPPS.column_bd
	mov	ip, #2	@ idx.2897,
	cmp	r6, ip	@ D.43242, idx.2897
	sub	r3, lr, #1	@ tmp263, tmp262,
	str	r3, [r0, #268]	@ tmp263, pTileInfo.column_width_minus1
	add	r0, r0, #4	@ ivtmp.2888, ivtmp.2888,
	blt	.L634	@,
.L635:
	mov	r3, r2	@ tmp226, ivtmp.2884
	add	ip, ip, #2	@ idx.2897, idx.2897,
	ldr	r4, [r3], #4	@ tmp246, <variable>.CurrPPS.column_bd
	add	lr, r0, #4	@ tmp227, ivtmp.2888,
	cmp	r6, ip	@ D.43242, idx.2897
	sub	r4, r4, #1	@ tmp247, tmp246,
	str	r4, [r0, #268]	@ tmp247, pTileInfo.column_width_minus1
	ldr	r4, [r2, #4]	@ tmp251, <variable>.CurrPPS.column_bd
	add	r0, lr, #4	@ ivtmp.2888, tmp227,
	add	r2, r3, #4	@ ivtmp.2884, tmp226,
	sub	r3, r4, #1	@ tmp252, tmp251,
	str	r3, [lr, #268]	@ tmp252, pTileInfo.column_width_minus1
	bge	.L635	@,
.L634:
	cmp	r8, #0	@ D.43240,
	blt	.L636	@,
	ldr	sl, [fp, #-300]	@ pTileInfo.column_width_minus1, pTileInfo.column_width_minus1
	mov	r0, #0	@,
	sub	r9, fp, #568	@ ivtmp.2876,,
	str	r8, [fp, #-580]	@ D.43240, %sfp
	add	sl, sl, #1	@ TileWidthInCtb.2902, pTileInfo.column_width_minus1,
	mov	r3, r0	@ tile_y,
	mov	r7, r0	@ NextTileCtbAddrInTS.2901, tile_y
	mov	r2, r0	@ TileCtbAddrInTS, NextTileCtbAddrInTS.2901
	mov	lr, r0	@ TileHeightInCtb, TileCtbAddrInTS
	mov	r4, r0	@ TileWidthInCtb, TileHeightInCtb
	mov	r8, r0	@ tile_y, tile_y
	str	r0, [fp, #-576]	@, %sfp
.L637:
	cmp	r6, #0	@ D.43242,
	movlt	r3, r7	@ NextTileCtbAddrInTS, NextTileCtbAddrInTS.2901
	movlt	r5, #0	@ AbsWidthInCtb,
	blt	.L643	@,
	ldr	r5, [r9, #12]	@ tmp184, pTileInfo.row_height_minus1
	add	lr, r5, #1	@ TileHeightInCtb, tmp184,
	mla	r3, sl, lr, r7	@ NextTileCtbAddrInTS, TileWidthInCtb.2902, TileHeightInCtb, NextTileCtbAddrInTS.2901
	cmp	r1, r3	@ CtbAddrTs, NextTileCtbAddrInTS
	blt	.L644	@,
	tst	r6, #1	@ D.43242,
	mov	r5, #0	@ AbsWidthInCtb,
	sub	r2, fp, #568	@ ivtmp.2896,,
	mov	r4, sl	@ TileWidthInCtb, TileWidthInCtb.2902
	mov	r0, r5	@ tile_x, AbsWidthInCtb
	beq	.L645	@,
	mov	r0, #1	@ tile_x,
	cmp	r6, r0	@ D.43242, tile_x
	mov	r5, sl	@ AbsWidthInCtb, TileWidthInCtb.2902
	blt	.L667	@,
	ldr	r4, [fp, #-296]	@ tmp259, pTileInfo.column_width_minus1
	sub	ip, fp, #568	@,,
	add	r2, ip, #4	@ ivtmp.2896,,
	add	r4, r4, r0	@ TileWidthInCtb, tmp259,
	mla	ip, r4, lr, r3	@ NextTileCtbAddrInTS.2898, TileWidthInCtb, TileHeightInCtb, NextTileCtbAddrInTS
	cmp	ip, r1	@ NextTileCtbAddrInTS.2898, CtbAddrTs
	bgt	.L665	@,
	mov	r7, r3	@ NextTileCtbAddrInTS.2901, NextTileCtbAddrInTS
	mov	r3, ip	@ NextTileCtbAddrInTS, NextTileCtbAddrInTS.2898
	b	.L645	@
.L640:
	ldr	r7, [r2, #272]	@ tmp182, pTileInfo.column_width_minus1
	add	r2, ip, #4	@ ivtmp.2896, tmp221,
	add	r4, r7, #1	@ TileWidthInCtb, tmp182,
	mla	r7, r4, lr, r3	@ NextTileCtbAddrInTS.2898, TileWidthInCtb, TileHeightInCtb, NextTileCtbAddrInTS
	cmp	r7, r1	@ NextTileCtbAddrInTS.2898, CtbAddrTs
	bgt	.L665	@,
	ldr	ip, [ip, #272]	@ tmp255, pTileInfo.column_width_minus1
	add	r5, r5, r4	@ AbsWidthInCtb, AbsWidthInCtb, TileWidthInCtb
	mov	r3, r7	@ NextTileCtbAddrInTS, NextTileCtbAddrInTS.2898
	add	r4, ip, #1	@ TileWidthInCtb, tmp255,
	mla	ip, r4, lr, r3	@ NextTileCtbAddrInTS.2898, TileWidthInCtb, TileHeightInCtb, NextTileCtbAddrInTS
	cmp	ip, r1	@ NextTileCtbAddrInTS.2898, CtbAddrTs
	bgt	.L665	@,
	mov	r3, ip	@ NextTileCtbAddrInTS, NextTileCtbAddrInTS.2898
.L645:
	add	r0, r0, #1	@ tmp222, tile_x,
	add	r5, r5, r4	@ AbsWidthInCtb, AbsWidthInCtb, TileWidthInCtb
	cmp	r6, r0	@ D.43242, tmp222
	add	ip, r2, #4	@ tmp221, ivtmp.2896,
	add	r0, r0, #1	@ tile_x, tmp222,
	bge	.L640	@,
.L667:
	mov	r2, r7	@ TileCtbAddrInTS, NextTileCtbAddrInTS.2901
.L643:
	cmp	r3, r1	@ NextTileCtbAddrInTS, CtbAddrTs
	bgt	.L641	@,
	ldr	ip, [fp, #-576]	@, %sfp
	add	r8, r8, #1	@ tile_y, tile_y,
	add	r9, r9, #4	@ ivtmp.2876, ivtmp.2876,
	add	r0, ip, lr	@,, TileHeightInCtb
	ldr	ip, [fp, #-580]	@, %sfp
	str	r0, [fp, #-576]	@, %sfp
	cmp	ip, r8	@, tile_y
	blt	.L641	@,
	mov	r7, r3	@ NextTileCtbAddrInTS.2901, NextTileCtbAddrInTS
	b	.L637	@
.L644:
	mov	r2, r7	@ TileCtbAddrInTS, NextTileCtbAddrInTS.2901
	mov	r5, #0	@ AbsWidthInCtb,
.L639:
	mov	r4, sl	@ TileWidthInCtb, TileWidthInCtb.2902
.L641:
	cmp	r4, #0	@ TileWidthInCtb,
	beq	.L636	@,
	rsb	r7, r2, r1	@ D.43267, TileCtbAddrInTS, CtbAddrTs
	ldr	lr, [fp, #-588]	@, %sfp
	mov	r1, r4	@, TileWidthInCtb
	mov	r6, #1	@ tmp187,
	mov	r0, r7	@, D.43267
	mov	r6, r6, asl lr	@ ctb_size_y, tmp187,
	bl	__aeabi_idivmod	@
	mov	r0, r7	@, D.43267
	add	r5, r1, r5	@ tmp194,, AbsWidthInCtb
	mov	r1, r4	@, TileWidthInCtb
	bl	__aeabi_idiv	@
	ldr	r2, [fp, #-576]	@, %sfp
	mov	r1, r6	@, ctb_size_y
	add	r4, r0, r2	@ tmp199,,
	ldr	r0, [fp, #-584]	@, %sfp
	bl	__aeabi_idivmod	@
	ldr	r0, [fp, #-584]	@, %sfp
	subs	r7, r1, #0	@ tmp207,,
	movne	r7, #1	@ tmp207
	mov	r1, r6	@, ctb_size_y
	bl	__aeabi_idiv	@
	add	r1, r7, r0	@ tmp212, tmp207,
	mla	r0, r1, r4, r5	@ CtbAddrRs, tmp212, tmp199, tmp194
.L631:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L665:
	mov	r2, r3	@ TileCtbAddrInTS, NextTileCtbAddrInTS
	mov	sl, r4	@ TileWidthInCtb.2902, TileWidthInCtb
	b	.L639	@
.L636:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC22	@,
	movt	r1, #:upper16:.LC22	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ CtbAddrRs,
	b	.L631	@
	.fnend
	.size	HEVC_CtbTsAddrToRsAddr, .-HEVC_CtbTsAddrToRsAddr
	.align	2
	.global	HEVC_GetUnRefPicWithMinPoc
	.type	HEVC_GetUnRefPicWithMinPoc, %function
HEVC_GetUnRefPicWithMinPoc:
	.fnstart
.LFB1572:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:1960372	@ tmp145,
	movt	r2, #:upper16:1960372	@ tmp145,
	mvn	r4, #0	@ tmp144,
	str	r4, [r1, #0]	@ tmp144,* pos
	ldr	r3, [r0, r2]	@ D.41571, <variable>.DPB.used_size
	cmp	r3, #16	@ D.41571,
	bhi	.L677	@,
	cmp	r3, #0	@ D.41571,
	beq	.L679	@,
	movw	lr, #:lower16:1960392	@ ivtmp.2933,
	movt	lr, #:upper16:1960392	@ ivtmp.2933,
	add	lr, r0, lr	@ ivtmp.2933, pHevcCtx, ivtmp.2933
	mvn	r4, #-2147483648	@ poc.2937,
	mov	r3, #0	@ i,
.L684:
	ldr	r5, [lr, #0]	@ D.41577, <variable>.DPB.fs
	ldr	ip, [r5, #12]	@ poc, <variable>.poc
	cmp	ip, r4	@ poc, poc.2937
	bge	.L681	@,
	ldr	r5, [r5, #0]	@ tmp152,* D.41577
	bic	r5, r5, #-16777216	@ tmp150, tmp152,
	bic	r5, r5, #255	@ tmp150, tmp150,
	cmp	r5, #0	@ tmp150,
	streq	r3, [r1, #0]	@ i,* pos
	beq	.L682	@,
.L681:
	mov	ip, r4	@ poc, poc.2937
.L682:
	ldr	r5, [r0, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r3, r3, #1	@ i, i,
	add	lr, lr, #4	@ ivtmp.2933, ivtmp.2933,
	mov	r4, ip	@ poc.2937, poc
	cmp	r5, r3	@ <variable>.DPB.used_size, i
	bhi	.L684	@,
	ldr	r3, [r1, #0]	@ D.41586,* pos
	cmn	r3, #1	@ D.41586,
	beq	.L679	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC25	@,
	ldr	r2, .L687	@,
	movt	r1, #:upper16:.LC25	@,
	str	ip, [sp, #0]	@ poc,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.41575,
.L680:
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
.L677:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC23	@,
	ldr	r2, .L687	@,
	movt	r1, #:upper16:.LC23	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@ D.41575, tmp144
	b	.L680	@
.L679:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC24	@,
	ldr	r2, .L687	@,
	movt	r1, #:upper16:.LC24	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41575,
	b	.L680	@
.L688:
	.align	2
.L687:
	.word	.LANCHOR1+32
	.fnend
	.size	HEVC_GetUnRefPicWithMinPoc, .-HEVC_GetUnRefPicWithMinPoc
	.align	2
	.global	HEVC_VPSEqual
	.type	HEVC_VPSEqual, %function
HEVC_VPSEqual:
	.fnstart
.LFB1546:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r9, r0, #0	@ pVPS1, pVPS1
	beq	.L723	@,
	cmp	r1, #0	@ pVPS2,
	beq	.L724	@,
	ldr	r8, [r9, #12]	@ <variable>.vps_reserved_three_2bits, <variable>.vps_reserved_three_2bits
	movw	ip, #12712	@ tmp204,
	ldr	r7, [r1, #12]	@ <variable>.vps_reserved_three_2bits, <variable>.vps_reserved_three_2bits
	movw	r0, #12436	@ tmp210,
	ldr	r5, [r9, #16]	@ <variable>.vps_max_layers_minus1, <variable>.vps_max_layers_minus1
	movw	r2, #12708	@ tmp216,
	ldr	r4, [r1, #16]	@ <variable>.vps_max_layers_minus1, <variable>.vps_max_layers_minus1
	mov	r3, #0	@ i,
	ldr	r6, [r9, #20]	@ D.39664, <variable>.vps_max_sub_layers_minus1
	cmp	r8, r7	@ <variable>.vps_reserved_three_2bits, <variable>.vps_reserved_three_2bits
	cmpeq	r5, r4	@, <variable>.vps_max_layers_minus1, <variable>.vps_max_layers_minus1
	ldr	sl, [r1, #20]	@ <variable>.vps_max_sub_layers_minus1, <variable>.vps_max_sub_layers_minus1
	ldrb	r5, [r1, #1]	@ zero_extendqisi2	@ <variable>.vps_temporal_id_nesting_flag, <variable>.vps_temporal_id_nesting_flag
	ldrb	r7, [r9, #1]	@ zero_extendqisi2	@ <variable>.vps_temporal_id_nesting_flag, <variable>.vps_temporal_id_nesting_flag
	movne	r4, #0	@, equal.3016
	moveq	r4, #1	@, equal.3016
	ldr	r8, [r1, #24]	@ <variable>.vps_reserved_0xffff_16bits, <variable>.vps_reserved_0xffff_16bits
	cmp	r6, sl	@ D.39664, <variable>.vps_max_sub_layers_minus1
	movne	sl, #0	@, equal.3017
	andeq	sl, r4, #1	@,, equal.3017, equal.3016
	ldr	r4, [r9, #24]	@ <variable>.vps_reserved_0xffff_16bits, <variable>.vps_reserved_0xffff_16bits
	cmp	r7, r5	@ <variable>.vps_temporal_id_nesting_flag, <variable>.vps_temporal_id_nesting_flag
	movne	r7, #0	@, equal.3018
	andeq	r7, sl, #1	@,, equal.3018, equal.3017
	ldr	r5, [r9, #8]	@ <variable>.video_parameter_set_id, <variable>.video_parameter_set_id
	ldr	sl, [r1, #8]	@ <variable>.video_parameter_set_id, <variable>.video_parameter_set_id
	cmp	r4, r8	@ <variable>.vps_reserved_0xffff_16bits, <variable>.vps_reserved_0xffff_16bits
	movne	r7, #0	@, equal.3019
	andeq	r7, r7, #1	@,, equal.3019, equal.3018
	ldr	r4, [r1, ip]	@ <variable>.profile_tier_level.general_profile_space, <variable>.profile_tier_level.general_profile_space
	ldr	ip, [r9, ip]	@ <variable>.profile_tier_level.general_profile_space, <variable>.profile_tier_level.general_profile_space
	cmp	r5, sl	@ <variable>.video_parameter_set_id, <variable>.video_parameter_set_id
	movne	r7, #0	@, equal.3020
	andeq	r7, r7, #1	@,, equal.3020, equal.3019
	ldrb	r8, [r1, r0]	@ zero_extendqisi2	@ <variable>.profile_tier_level.general_tier_flag, <variable>.profile_tier_level.general_tier_flag
	ldrb	r5, [r9, r0]	@ zero_extendqisi2	@ <variable>.profile_tier_level.general_tier_flag, <variable>.profile_tier_level.general_tier_flag
	cmp	ip, r4	@ <variable>.profile_tier_level.general_profile_space, <variable>.profile_tier_level.general_profile_space
	movne	r4, #0	@, equal.3021
	andeq	r4, r7, #1	@,, equal.3021, equal.3020
	ldr	r0, [r1, r2]	@ <variable>.profile_tier_level.general_profile_idc, <variable>.profile_tier_level.general_profile_idc
	ldr	ip, [r9, r2]	@ <variable>.profile_tier_level.general_profile_idc, <variable>.profile_tier_level.general_profile_idc
	cmp	r5, r8	@ <variable>.profile_tier_level.general_tier_flag, <variable>.profile_tier_level.general_tier_flag
	movne	r2, #0	@, equal.3022
	andeq	r2, r4, #1	@,, equal.3022, equal.3021
	cmp	ip, r0	@ <variable>.profile_tier_level.general_profile_idc, <variable>.profile_tier_level.general_profile_idc
	movne	r0, #0	@, equal
	andeq	r0, r2, #1	@,, equal, equal.3022
.L693:
	add	r2, r3, #1	@ tmp322, i,
	add	r7, r9, r3	@ tmp222, pVPS1, i
	add	r5, r1, r3	@ tmp225, pVPS2, i
	add	ip, r9, r2	@ tmp325, pVPS1, tmp322
	add	r3, r5, #12416	@ tmp227, tmp225,
	add	sl, r1, r2	@ tmp328, pVPS2, tmp322
	add	r4, r7, #12416	@ tmp224, tmp222,
	add	r8, ip, #12416	@ tmp326, tmp325,
	add	r7, sl, #12416	@ tmp329, tmp328,
	ldrb	sl, [r3, #21]	@ zero_extendqisi2	@ tmp230, <variable>.profile_tier_level.general_profile_compatibility_flag
	ldrb	r5, [r4, #21]	@ zero_extendqisi2	@ tmp229, <variable>.profile_tier_level.general_profile_compatibility_flag
	add	r3, r2, #1	@ i, tmp322,
	ldrb	ip, [r8, #21]	@ zero_extendqisi2	@ tmp331, <variable>.profile_tier_level.general_profile_compatibility_flag
	ldrb	r2, [r7, #21]	@ zero_extendqisi2	@ tmp332, <variable>.profile_tier_level.general_profile_compatibility_flag
	cmp	r5, sl	@ tmp229, tmp230
	movne	r0, #0	@, equal
	andeq	r0, r0, #1	@,, equal, equal
	cmp	ip, r2	@ tmp331, tmp332
	movne	r0, #0	@, equal
	andeq	r0, r0, #1	@,, equal, equal
	cmp	r3, #32	@ i,
	bne	.L693	@,
	movw	ip, #12471	@ tmp244,
	movw	r5, #12470	@ tmp232,
	ldrb	sl, [r1, ip]	@ zero_extendqisi2	@, <variable>.profile_tier_level.general_non_packed_constraint_flag
	movw	r4, #12469	@ tmp238,
	ldrb	r7, [r1, r5]	@ zero_extendqisi2	@ <variable>.profile_tier_level.general_interlaced_source_flag, <variable>.profile_tier_level.general_interlaced_source_flag
	movw	r3, #12472	@ tmp250,
	ldrb	r2, [r1, r4]	@ zero_extendqisi2	@ <variable>.profile_tier_level.general_progressive_source_flag, <variable>.profile_tier_level.general_progressive_source_flag
	sub	r6, r6, #1	@ D.39714, D.39664,
	ldrb	r8, [r9, r5]	@ zero_extendqisi2	@ <variable>.profile_tier_level.general_interlaced_source_flag, <variable>.profile_tier_level.general_interlaced_source_flag
	mov	r5, #1	@ i.3030,
	ldrb	r4, [r9, r4]	@ zero_extendqisi2	@ <variable>.profile_tier_level.general_progressive_source_flag, <variable>.profile_tier_level.general_progressive_source_flag
	str	sl, [fp, #-48]	@, %sfp
	and	sl, r6, r5	@, D.39714,
	cmp	r8, r7	@ <variable>.profile_tier_level.general_interlaced_source_flag, <variable>.profile_tier_level.general_interlaced_source_flag
	cmpeq	r4, r2	@, <variable>.profile_tier_level.general_progressive_source_flag, <variable>.profile_tier_level.general_progressive_source_flag
	str	sl, [fp, #-56]	@, %sfp
	ldrb	sl, [r1, r3]	@ zero_extendqisi2	@ <variable>.profile_tier_level.general_frame_only_constraint_flag, <variable>.profile_tier_level.general_frame_only_constraint_flag
	add	r2, r9, #4	@ ivtmp.2996, pVPS1,
	ldrb	r4, [r9, r3]	@ zero_extendqisi2	@ <variable>.profile_tier_level.general_frame_only_constraint_flag, <variable>.profile_tier_level.general_frame_only_constraint_flag
	movne	r7, #0	@, equal.3023
	moveq	r7, #1	@, equal.3023
	ldrb	ip, [r9, ip]	@ zero_extendqisi2	@ <variable>.profile_tier_level.general_non_packed_constraint_flag, <variable>.profile_tier_level.general_non_packed_constraint_flag
	ldr	r3, [fp, #-48]	@, %sfp
	cmp	ip, r3	@ <variable>.profile_tier_level.general_non_packed_constraint_flag,
	movne	r8, #0	@, equal.3024
	andeq	r8, r7, #1	@,, equal.3024, equal.3023
	add	r3, r1, #4	@ ivtmp.2998, pVPS2,
	cmp	r4, sl	@ <variable>.profile_tier_level.general_frame_only_constraint_flag, <variable>.profile_tier_level.general_frame_only_constraint_flag
	movne	r8, #0	@, equal.3024
	andeq	r8, r8, #1	@,, equal.3024, equal.3024
	str	r8, [fp, #-52]	@ equal.3024, %sfp
	ldrb	r7, [r9, #7]	@ zero_extendqisi2	@, <variable>.vps_sub_layer_ordering_info_present_flag
	str	r7, [fp, #-60]	@, %sfp
	ldr	r8, [r9, #84]	@, <variable>.vps_num_reorder_pics
	ldr	sl, [r1, #84]	@, <variable>.vps_num_reorder_pics
	ldr	ip, [r9, #52]	@, <variable>.vps_max_dec_pic_buffering
	ldr	r4, [r1, #52]	@, <variable>.vps_max_dec_pic_buffering
	ldrb	r7, [r1, #7]	@ zero_extendqisi2	@ <variable>.vps_sub_layer_ordering_info_present_flag, <variable>.vps_sub_layer_ordering_info_present_flag
	cmp	r8, sl	@,
	cmpeq	ip, r4	@,,
	ldr	r4, [fp, #-52]	@ equal.3026, %sfp
	movne	r8, #0	@,
	moveq	r8, #1	@,
	str	r8, [fp, #-48]	@, %sfp
	ldr	r8, [fp, #-60]	@, %sfp
	ldr	sl, [r9, #116]	@ tmp269, <variable>.vps_max_latency_increase
	cmp	r8, r7	@, <variable>.vps_sub_layer_ordering_info_present_flag
	movne	r4, #0	@, equal.3026
	andeq	r4, r4, #1	@,, equal.3026, equal.3026
	ldr	ip, [fp, #-48]	@ equal.3028, %sfp
	and	r0, r4, r0	@ equal.3029, equal.3026, equal
	ldr	r4, [r1, #116]	@, <variable>.vps_max_latency_increase
	cmp	sl, r4	@ tmp269,
	movne	ip, #0	@, equal.3028
	andeq	ip, ip, #1	@,, equal.3028, equal.3028
	cmp	r5, r6	@ i.3030, D.39714
	and	r0, r0, ip	@ equal.3029, equal.3029, equal.3028
	bhi	.L716	@,
	ldr	sl, [fp, #-56]	@, %sfp
	cmp	sl, #0	@,
	beq	.L722	@,
	ldr	sl, [r3, #116]	@, <variable>.vps_max_latency_increase
	mov	r5, #2	@ i.3030,
	ldr	r8, [r2, #84]	@ tmp380, <variable>.vps_num_reorder_pics
	ldr	r7, [r2, #52]	@ tmp383, <variable>.vps_max_dec_pic_buffering
	ldr	r4, [r2, #116]	@ tmp387, <variable>.vps_max_latency_increase
	add	r2, r2, #4	@ ivtmp.2996, ivtmp.2996,
	str	sl, [fp, #-48]	@, %sfp
	ldr	ip, [r3, #52]	@, <variable>.vps_max_dec_pic_buffering
	ldr	sl, [r3, #84]	@, <variable>.vps_num_reorder_pics
	add	r3, r3, #4	@ ivtmp.2998, ivtmp.2998,
	cmp	r8, sl	@ tmp380,
	cmpeq	r7, ip	@, tmp383,
	ldr	r8, [fp, #-48]	@, %sfp
	movne	r7, #0	@, equal.3027
	moveq	r7, #1	@, equal.3027
	cmp	r4, r8	@ tmp387,
	movne	ip, #0	@, equal.3028
	andeq	ip, r7, #1	@,, equal.3028, equal.3027
	cmp	r5, r6	@ i.3030, D.39714
	and	r0, r0, ip	@ equal.3029, equal.3029, equal.3028
	bhi	.L716	@,
.L722:
	str	r6, [fp, #-48]	@ D.39714, %sfp
	str	r9, [fp, #-56]	@ pVPS1, %sfp
	str	r1, [fp, #-60]	@ pVPS2, %sfp
.L694:
	add	ip, r2, #4	@ tmp320, ivtmp.2996,
	add	r1, r3, #4	@ tmp321, ivtmp.2998,
	ldr	r6, [r2, #84]	@ tmp338, <variable>.vps_num_reorder_pics
	add	r5, r5, #2	@ i.3030, i.3030,
	ldr	r4, [r3, #84]	@ tmp339, <variable>.vps_num_reorder_pics
	ldr	r8, [r2, #52]	@ tmp341, <variable>.vps_max_dec_pic_buffering
	ldr	r7, [r3, #52]	@ tmp342, <variable>.vps_max_dec_pic_buffering
	ldr	r9, [r1, #84]	@, <variable>.vps_num_reorder_pics
	cmp	r6, r4	@ tmp338, tmp339
	cmpeq	r8, r7	@, tmp341, tmp342
	ldr	sl, [ip, #52]	@ tmp356, <variable>.vps_max_dec_pic_buffering
	ldr	r7, [r3, #116]	@ tmp346, <variable>.vps_max_latency_increase
	ldr	r6, [ip, #84]	@, <variable>.vps_num_reorder_pics
	movne	r4, #0	@, equal.3027
	moveq	r4, #1	@, equal.3027
	ldr	r3, [r1, #52]	@, <variable>.vps_max_dec_pic_buffering
	ldr	r8, [r2, #116]	@ tmp345, <variable>.vps_max_latency_increase
	add	r2, ip, #4	@ ivtmp.2996, tmp320,
	cmp	r6, r9	@,
	cmpeq	sl, r3	@, tmp356,
	ldr	r9, [ip, #116]	@ tmp360, <variable>.vps_max_latency_increase
	add	r3, r1, #4	@ ivtmp.2998, tmp321,
	ldr	r1, [r1, #116]	@ tmp361, <variable>.vps_max_latency_increase
	movne	sl, #0	@, equal.3027
	moveq	sl, #1	@, equal.3027
	cmp	r8, r7	@ tmp345, tmp346
	movne	r4, #0	@, equal.3028
	andeq	r4, r4, #1	@,, equal.3028, equal.3027
	and	r6, r0, r4	@ equal.3029, equal.3029, equal.3028
	ldr	r4, [fp, #-48]	@, %sfp
	cmp	r9, r1	@ tmp360, tmp361
	movne	sl, #0	@, equal.3028
	andeq	sl, sl, #1	@,, equal.3028, equal.3027
	cmp	r5, r4	@ i.3030,
	and	r0, r6, sl	@ equal.3029, equal.3029, equal.3028
	bls	.L694	@,
	ldr	r9, [fp, #-56]	@ pVPS1, %sfp
	ldr	r1, [fp, #-60]	@ pVPS2, %sfp
.L716:
	ldr	r6, [r9, #32]	@, <variable>.vps_num_layer_sets_minus1
	str	r6, [fp, #-48]	@, %sfp
	ldr	ip, [r9, #28]	@ D.39715, <variable>.vps_max_layer_id
	ldr	r3, [r1, #28]	@ <variable>.vps_max_layer_id, <variable>.vps_max_layer_id
	ldr	r2, [r1, #32]	@ <variable>.vps_num_layer_sets_minus1, <variable>.vps_num_layer_sets_minus1
	cmp	r6, r2	@, <variable>.vps_num_layer_sets_minus1
	cmpeq	ip, r3	@, D.39715, <variable>.vps_max_layer_id
	movne	r3, #0	@, equal.3031
	moveq	r3, #1	@, equal.3031
	cmp	r6, #0	@,
	and	r0, r3, r0	@ equal.3032, equal.3031, equal.3029
	strne	r9, [fp, #-52]	@ pVPS1, %sfp
	movne	r3, #1	@ i.3033,
	movne	r9, r1	@ pVPS2, pVPS2
	beq	.L695	@,
.L696:
	add	r1, r3, #36	@ tmp282, i.3033,
	ldr	r8, [fp, #-52]	@, %sfp
	mov	r2, #1	@ j,
	and	sl, ip, r2	@ tmp313, D.39715,
	mov	r6, r1, asl #2	@ tmp283, tmp282,
	add	r7, r8, r6	@ tmp284,, tmp283
	add	r5, r9, r6	@ tmp287, pVPS2, tmp283
	add	r1, r5, #4	@ ivtmp.2987, tmp287,
	add	r4, r7, #4	@ ivtmp.2984, tmp284,
	ldr	r6, [r7, #4]	@ tmp374, <variable>.layer_id_included_flag
	add	r8, r4, #4	@ ivtmp.2984, ivtmp.2984,
	ldr	r5, [r5, #4]	@ tmp375, <variable>.layer_id_included_flag
	add	r7, r1, #4	@ ivtmp.2987, ivtmp.2987,
	cmp	r6, r5	@ tmp374, tmp375
	movne	r0, #0	@, equal.3032
	andeq	r0, r0, #1	@,, equal.3032, equal.3032
	cmp	r2, ip	@ j, D.39715
	bhi	.L717	@,
	cmp	sl, #0	@ tmp313,
	beq	.L697	@,
	ldr	r4, [r4, #4]	@ tmp377, <variable>.layer_id_included_flag
	mov	r2, #2	@ j,
	ldr	r1, [r1, #4]	@ tmp378, <variable>.layer_id_included_flag
	add	r8, r8, #4	@ ivtmp.2984, ivtmp.2984,
	add	r7, r7, #4	@ ivtmp.2987, ivtmp.2987,
	cmp	r4, r1	@ tmp377, tmp378
	movne	r0, #0	@, equal.3032
	andeq	r0, r0, #1	@,, equal.3032, equal.3032
	cmp	r2, ip	@ j, D.39715
	bhi	.L717	@,
.L697:
	mov	r4, r8	@ tmp315, ivtmp.2984
	mov	r1, r7	@ tmp316, ivtmp.2987
	ldr	r6, [r4], #4	@ tmp279, <variable>.layer_id_included_flag
	add	r2, r2, #2	@ j, j,
	ldr	r5, [r1], #4	@ tmp280, <variable>.layer_id_included_flag
	ldr	sl, [r8, #4]	@ tmp368, <variable>.layer_id_included_flag
	add	r8, r4, #4	@ ivtmp.2984, tmp315,
	ldr	r4, [r7, #4]	@ tmp369, <variable>.layer_id_included_flag
	cmp	r6, r5	@ tmp279, tmp280
	movne	r0, #0	@, equal.3032
	andeq	r0, r0, #1	@,, equal.3032, equal.3032
	add	r7, r1, #4	@ ivtmp.2987, tmp316,
	cmp	sl, r4	@ tmp368, tmp369
	movne	r0, #0	@, equal.3032
	andeq	r0, r0, #1	@,, equal.3032, equal.3032
	cmp	r2, ip	@ j, D.39715
	bls	.L697	@,
.L717:
	ldr	r7, [fp, #-48]	@, %sfp
	add	r3, r3, #1	@ i.3033, i.3033,
	cmp	r3, r7	@ i.3033,
	bls	.L696	@,
	mov	r1, r9	@ pVPS2, pVPS2
	ldr	r9, [fp, #-52]	@ pVPS1, %sfp
.L695:
	ldrb	ip, [r9, #6]	@ zero_extendqisi2	@ D.39727, <variable>.vps_timing_info_present_flag
	ldrb	r2, [r1, #6]	@ zero_extendqisi2	@ <variable>.vps_timing_info_present_flag, <variable>.vps_timing_info_present_flag
	cmp	r2, ip	@ <variable>.vps_timing_info_present_flag, D.39727
	movne	r0, #0	@, equal.3013
	andeq	r0, r0, #1	@,, equal.3013, equal.3032
	cmp	ip, #0	@ D.39727,
	beq	.L698	@,
	ldr	r2, [r1, #40]	@ <variable>.vps_time_scale, <variable>.vps_time_scale
	ldr	r6, [r9, #40]	@ <variable>.vps_time_scale, <variable>.vps_time_scale
	ldr	r5, [r9, #36]	@ <variable>.vps_num_units_in_tick, <variable>.vps_num_units_in_tick
	ldr	r4, [r1, #36]	@ <variable>.vps_num_units_in_tick, <variable>.vps_num_units_in_tick
	ldrb	r3, [r9, #5]	@ zero_extendqisi2	@ D.39738, <variable>.vps_poc_proportional_to_timing_flag
	cmp	r6, r2	@ <variable>.vps_time_scale, <variable>.vps_time_scale
	cmpeq	r5, r4	@, <variable>.vps_num_units_in_tick, <variable>.vps_num_units_in_tick
	ldrb	ip, [r1, #5]	@ zero_extendqisi2	@ <variable>.vps_poc_proportional_to_timing_flag, <variable>.vps_poc_proportional_to_timing_flag
	movne	r2, #0	@, equal.3034
	moveq	r2, #1	@, equal.3034
	cmp	ip, r3	@ <variable>.vps_poc_proportional_to_timing_flag, D.39738
	movne	r2, #0	@, equal.3035
	andeq	r2, r2, #1	@,, equal.3035, equal.3034
	cmp	r3, #0	@ D.39738,
	and	r0, r2, r0	@ equal.3012, equal.3035, equal.3013
	bne	.L725	@,
.L699:
	ldr	r2, [r9, #48]	@ <variable>.vps_num_hrd_parameters, <variable>.vps_num_hrd_parameters
	ldr	ip, [r1, #48]	@ <variable>.vps_num_hrd_parameters, <variable>.vps_num_hrd_parameters
	cmp	r2, ip	@ <variable>.vps_num_hrd_parameters, <variable>.vps_num_hrd_parameters
	movne	r0, #0	@, equal.3013
	andeq	r0, r0, #1	@,, equal.3013, equal.3012
.L698:
	cmp	r0, #0	@ equal.3013,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L691:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L725:
	ldr	ip, [r9, #44]	@ <variable>.vps_num_ticks_poc_diff_one_minus1, <variable>.vps_num_ticks_poc_diff_one_minus1
	ldr	r3, [r1, #44]	@ <variable>.vps_num_ticks_poc_diff_one_minus1, <variable>.vps_num_ticks_poc_diff_one_minus1
	cmp	ip, r3	@ <variable>.vps_num_ticks_poc_diff_one_minus1, <variable>.vps_num_ticks_poc_diff_one_minus1
	movne	r0, #0	@, equal.3012
	andeq	r0, r0, #1	@,, equal.3012, equal.3012
	b	.L699	@
.L724:
	mov	r0, r1	@, pVPS2
	movw	r2, #:lower16:.LC27	@,
	movw	r1, #:lower16:.LC26	@,
	movt	r2, #:upper16:.LC27	@,
	movt	r1, #:upper16:.LC26	@,
	movw	r3, #1290	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L691	@
.L723:
	movw	r1, #:lower16:.LC26	@,
	movw	r2, #:lower16:.LC27	@,
	movt	r1, #:upper16:.LC26	@,
	movt	r2, #:upper16:.LC27	@,
	movw	r3, #1289	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L691	@
	.fnend
	.size	HEVC_VPSEqual, .-HEVC_VPSEqual
	.align	2
	.global	HEVC_PrintAPCState
	.type	HEVC_PrintAPCState, %function
HEVC_PrintAPCState:
	.fnstart
.LFB1534:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC28	@,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movt	r1, #:upper16:.LC28	@,
	mov	r0, #1	@,
	movw	r5, #:lower16:1960736	@ tmp241,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:1960668	@ tmp238,
	movw	r3, #:lower16:1960664	@ tmp239,
	movt	r1, #:upper16:1960668	@ tmp238,
	movt	r3, #:upper16:1960664	@ tmp239,
	mov	r0, #1	@,
	ldr	r2, [r4, r1]	@, <variable>.APC.used_size
	movw	r1, #:lower16:.LC29	@,
	ldr	r3, [r4, r3]	@, <variable>.APC.size
	movt	r1, #:upper16:.LC29	@,
	bl	dprint_vfmw	@
	movt	r5, #:upper16:1960736	@ tmp241,
	movw	r0, #:lower16:1960800	@ tmp242,
	movt	r0, #:upper16:1960800	@ tmp242,
	ldr	lr, [r4, r5]	@ <variable>.APC.idc, <variable>.APC.idc
	movw	r2, #:lower16:1960672	@ tmp240,
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	movt	r2, #:upper16:1960672	@ tmp240,
	movw	r5, #:lower16:.LC30	@ pretmp.3049,
	movt	r5, #:upper16:.LC30	@ pretmp.3049,
	ldr	r3, [r4, r2]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r0, #1	@,
	mov	r1, r5	@, pretmp.3049
	mov	r2, #0	@,
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:1960740	@ tmp244,
	movw	r2, #:lower16:1960804	@ tmp245,
	movt	r1, #:upper16:1960740	@ tmp244,
	movt	r2, #:upper16:1960804	@ tmp245,
	movw	r3, #:lower16:1960676	@ tmp243,
	movt	r3, #:upper16:1960676	@ tmp243,
	ldr	lr, [r4, r1]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r0, #1	@,
	ldr	ip, [r4, r2]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r1, r5	@, pretmp.3049
	ldr	r3, [r4, r3]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r2, r0	@,
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960744	@ tmp247,
	movw	r0, #:lower16:1960808	@ tmp248,
	movt	r2, #:upper16:1960744	@ tmp247,
	movt	r0, #:upper16:1960808	@ tmp248,
	movw	r1, #:lower16:1960680	@ tmp246,
	movt	r1, #:upper16:1960680	@ tmp246,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r2, #2	@,
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r0, #1	@,
	ldr	r3, [r4, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r1, r5	@, pretmp.3049
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960748	@ tmp250,
	movw	r0, #:lower16:1960812	@ tmp251,
	movt	r2, #:upper16:1960748	@ tmp250,
	movt	r0, #:upper16:1960812	@ tmp251,
	movw	r3, #:lower16:1960684	@ tmp249,
	movt	r3, #:upper16:1960684	@ tmp249,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r1, r5	@, pretmp.3049
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r2, #3	@,
	ldr	r3, [r4, r3]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r0, #1	@,
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960752	@ tmp253,
	movw	r0, #:lower16:1960816	@ tmp254,
	movt	r2, #:upper16:1960752	@ tmp253,
	movt	r0, #:upper16:1960816	@ tmp254,
	movw	r1, #:lower16:1960688	@ tmp252,
	movt	r1, #:upper16:1960688	@ tmp252,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r2, #4	@,
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r0, #1	@,
	ldr	r3, [r4, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r1, r5	@, pretmp.3049
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960756	@ tmp256,
	movw	r0, #:lower16:1960820	@ tmp257,
	movt	r2, #:upper16:1960756	@ tmp256,
	movt	r0, #:upper16:1960820	@ tmp257,
	movw	r3, #:lower16:1960692	@ tmp255,
	movt	r3, #:upper16:1960692	@ tmp255,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r1, r5	@, pretmp.3049
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r2, #5	@,
	ldr	r3, [r4, r3]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r0, #1	@,
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960760	@ tmp259,
	movw	r0, #:lower16:1960824	@ tmp260,
	movt	r2, #:upper16:1960760	@ tmp259,
	movt	r0, #:upper16:1960824	@ tmp260,
	movw	r1, #:lower16:1960696	@ tmp258,
	movt	r1, #:upper16:1960696	@ tmp258,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r2, #6	@,
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r0, #1	@,
	ldr	r3, [r4, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r1, r5	@, pretmp.3049
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960764	@ tmp262,
	movw	r0, #:lower16:1960828	@ tmp263,
	movt	r2, #:upper16:1960764	@ tmp262,
	movt	r0, #:upper16:1960828	@ tmp263,
	movw	r3, #:lower16:1960700	@ tmp261,
	movt	r3, #:upper16:1960700	@ tmp261,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r1, r5	@, pretmp.3049
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r2, #7	@,
	ldr	r3, [r4, r3]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r0, #1	@,
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960768	@ tmp265,
	movw	r0, #:lower16:1960832	@ tmp266,
	movt	r2, #:upper16:1960768	@ tmp265,
	movt	r0, #:upper16:1960832	@ tmp266,
	movw	r1, #:lower16:1960704	@ tmp264,
	movt	r1, #:upper16:1960704	@ tmp264,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r2, #8	@,
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r0, #1	@,
	ldr	r3, [r4, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r1, r5	@, pretmp.3049
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960772	@ tmp268,
	movw	r0, #:lower16:1960836	@ tmp269,
	movt	r2, #:upper16:1960772	@ tmp268,
	movt	r0, #:upper16:1960836	@ tmp269,
	movw	r3, #:lower16:1960708	@ tmp267,
	movt	r3, #:upper16:1960708	@ tmp267,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r1, r5	@, pretmp.3049
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r2, #9	@,
	ldr	r3, [r4, r3]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r0, #1	@,
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960776	@ tmp271,
	movw	r0, #:lower16:1960840	@ tmp272,
	movt	r2, #:upper16:1960776	@ tmp271,
	movt	r0, #:upper16:1960840	@ tmp272,
	movw	r1, #:lower16:1960712	@ tmp270,
	movt	r1, #:upper16:1960712	@ tmp270,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r2, #10	@,
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r0, #1	@,
	ldr	r3, [r4, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r1, r5	@, pretmp.3049
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960780	@ tmp274,
	movw	r0, #:lower16:1960844	@ tmp275,
	movt	r2, #:upper16:1960780	@ tmp274,
	movt	r0, #:upper16:1960844	@ tmp275,
	movw	r3, #:lower16:1960716	@ tmp273,
	movt	r3, #:upper16:1960716	@ tmp273,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r1, r5	@, pretmp.3049
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r2, #11	@,
	ldr	r3, [r4, r3]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r0, #1	@,
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960784	@ tmp277,
	movw	r0, #:lower16:1960848	@ tmp278,
	movt	r2, #:upper16:1960784	@ tmp277,
	movt	r0, #:upper16:1960848	@ tmp278,
	movw	r1, #:lower16:1960720	@ tmp276,
	movt	r1, #:upper16:1960720	@ tmp276,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r2, #12	@,
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r0, #1	@,
	ldr	r3, [r4, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r1, r5	@, pretmp.3049
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960788	@ tmp280,
	movw	r0, #:lower16:1960852	@ tmp281,
	movt	r2, #:upper16:1960788	@ tmp280,
	movt	r0, #:upper16:1960852	@ tmp281,
	movw	r3, #:lower16:1960724	@ tmp279,
	movt	r3, #:upper16:1960724	@ tmp279,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r1, r5	@, pretmp.3049
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r2, #13	@,
	ldr	r3, [r4, r3]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r0, #1	@,
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960792	@ tmp283,
	movw	r0, #:lower16:1960856	@ tmp284,
	movt	r2, #:upper16:1960792	@ tmp283,
	movt	r0, #:upper16:1960856	@ tmp284,
	movw	r1, #:lower16:1960728	@ tmp282,
	movt	r1, #:upper16:1960728	@ tmp282,
	ldr	lr, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r2, #14	@,
	ldr	ip, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r0, #1	@,
	ldr	r3, [r4, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r1, r5	@, pretmp.3049
	str	lr, [sp, #0]	@ <variable>.APC.idc,
	str	ip, [sp, #4]	@ <variable>.APC.poc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960796	@ tmp286,
	movw	r0, #:lower16:1960860	@ tmp287,
	movt	r2, #:upper16:1960796	@ tmp286,
	movt	r0, #:upper16:1960860	@ tmp287,
	movw	r3, #:lower16:1960732	@ tmp285,
	movt	r3, #:upper16:1960732	@ tmp285,
	ldr	lr, [r4, r0]	@ <variable>.APC.poc, <variable>.APC.poc
	mov	r1, r5	@, pretmp.3049
	ldr	ip, [r4, r2]	@ <variable>.APC.idc, <variable>.APC.idc
	mov	r0, #1	@,
	ldr	r3, [r4, r3]	@ <variable>.APC.is_used, <variable>.APC.is_used
	mov	r2, #15	@,
	stmia	sp, {ip, lr}	@ phole stm
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC31	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC31	@,
	bl	dprint_vfmw	@
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
	.fnend
	.size	HEVC_PrintAPCState, .-HEVC_PrintAPCState
	.align	2
	.global	HEVC_PrintFrameStoreState
	.type	HEVC_PrintFrameStoreState, %function
HEVC_PrintFrameStoreState:
	.fnstart
.LFB1533:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC32	@,
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	movt	r1, #:upper16:.LC32	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	ldr	r3, [r6, #168]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	cmp	r3, #0	@ <variable>.TotalFsNum,
	beq	.L729	@,
	movw	r4, #:lower16:4306732	@ ivtmp.3143,
	movt	r4, #:upper16:4306732	@ ivtmp.3143,
	add	r4, r6, r4	@ ivtmp.3143, pHevcCtx, ivtmp.3143
	mov	r5, #0	@ i,
.L730:
	ldr	r0, [r4, #-280]	@ <variable>.eFrameStoreState, <variable>.eFrameStoreState
	add	r2, r5, r5, asl #3	@, tmp144, i, i,
	movw	ip, #:lower16:4306448	@ tmp146,
	movt	ip, #:upper16:4306448	@ tmp146,
	mov	r1, r2, asl #6	@ tmp145, tmp144,
	mov	r2, r5	@, i
	str	r0, [sp, #0]	@ <variable>.eFrameStoreState,
	add	r3, r1, ip	@ tmp146, tmp145, tmp146
	ldrb	lr, [r4, #-283]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	add	r3, r6, r3	@, pHevcCtx, tmp146
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC33	@,
	movt	r1, #:upper16:.LC33	@,
	add	r5, r5, r0	@ i, i,
	str	lr, [sp, #4]	@ <variable>.is_reference,
	ldrb	ip, [r4, #-282]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	str	ip, [sp, #8]	@ <variable>.is_displayed,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #0]	@, <variable>.fs_image.p_usrdat
	mov	r2, #0	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC34	@,
	movt	r1, #:upper16:.LC34	@,
	bl	dprint_vfmw	@
	mov	r0, #1	@,
	ldr	r3, [r4, #4]	@, <variable>.fs_image.p_usrdat
	mov	r2, r0	@,
	movw	r1, #:lower16:.LC34	@,
	movt	r1, #:upper16:.LC34	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #8]	@, <variable>.fs_image.p_usrdat
	mov	r2, #2	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC34	@,
	movt	r1, #:upper16:.LC34	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #12]	@, <variable>.fs_image.p_usrdat
	mov	r2, #3	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC34	@,
	movt	r1, #:upper16:.LC34	@,
	bl	dprint_vfmw	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	bl	dprint_vfmw	@
	ldr	r0, [r6, #168]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	add	r4, r4, #576	@ ivtmp.3143, ivtmp.3143,
	cmp	r0, r5	@ <variable>.TotalFsNum, i
	bhi	.L730	@,
.L729:
	movw	r1, #:lower16:.LC36	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC36	@,
	bl	dprint_vfmw	@
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
	.fnend
	.size	HEVC_PrintFrameStoreState, .-HEVC_PrintFrameStoreState
	.align	2
	.global	HEVC_PrintNaluArraySlot
	.type	HEVC_PrintNaluArraySlot, %function
HEVC_PrintNaluArraySlot:
	.fnstart
.LFB1531:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:2358480	@ ivtmp.3186,
	movt	r6, #:upper16:2358480	@ ivtmp.3186,
	mov	r7, r0	@ pHevcCtx, pHevcCtx
	add	r6, r0, r6	@ ivtmp.3186, pHevcCtx, ivtmp.3186
	movw	r1, #:lower16:.LC37	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC37	@,
	bl	dprint_vfmw	@
	ldr	ip, [r6], #100	@ <variable>.is_valid, <variable>.is_valid
	movw	r3, #:lower16:2358444	@,
	movt	r3, #:upper16:2358444	@,
	add	r3, r7, r3	@, pHevcCtx,
	mov	r2, #0	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC38	@,
	movt	r1, #:upper16:.LC38	@,
	str	ip, [sp, #0]	@ <variable>.is_valid,
	bl	dprint_vfmw	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	movw	sl, #:lower16:-858993459	@ tmp166,
	bl	dprint_vfmw	@
	movt	sl, #:upper16:-858993459	@ tmp166,
	mov	r9, #100	@ tmp162,
	mov	r4, #1	@ Pos,
	b	.L735	@
.L734:
	mla	r1, r9, r5, r7	@ tmp192, tmp162, tmp168, pHevcCtx
	ldr	lr, [r6, #100]	@ <variable>.is_valid, <variable>.is_valid
	movw	r6, #:lower16:2358444	@,
	movt	r6, #:upper16:2358444	@,
	mov	r2, r5	@, tmp168
	mov	r0, #1	@,
	add	r3, r1, r6	@, tmp192,
	movw	r1, #:lower16:.LC38	@,
	movt	r1, #:upper16:.LC38	@,
	str	lr, [sp, #0]	@ <variable>.is_valid,
	bl	dprint_vfmw	@
	umull	r2, r3, sl, r5	@, tmp196, tmp166, tmp168
	mov	r4, r3, lsr #3	@ tmp197, tmp196,
	add	r2, r4, r4, asl #2	@, tmp199, tmp197, tmp197,
	cmp	r5, r2, asl #1	@ tmp168, tmp199,
	beq	.L744	@,
	add	r4, r5, #1	@ Pos, tmp168,
	add	r6, r8, #100	@ ivtmp.3186, tmp169,
	cmp	r4, #211	@ Pos,
	beq	.L745	@,
.L735:
	mla	ip, r9, r4, r7	@ tmp175, tmp162, Pos, pHevcCtx
	ldr	lr, [r6, #0]	@ <variable>.is_valid, <variable>.is_valid
	movw	r8, #:lower16:2358444	@,
	movt	r8, #:upper16:2358444	@,
	mov	r2, r4	@, Pos
	mov	r0, #1	@,
	add	r3, ip, r8	@, tmp175,
	movw	r1, #:lower16:.LC38	@,
	movt	r1, #:upper16:.LC38	@,
	str	lr, [sp, #0]	@ <variable>.is_valid,
	bl	dprint_vfmw	@
	umull	r2, ip, sl, r4	@, tmp180, tmp166, Pos
	add	r5, r4, #1	@ tmp168, Pos,
	add	r8, r6, #100	@ tmp169, ivtmp.3186,
	mov	r1, ip, lsr #3	@ tmp181, tmp180,
	add	r0, r1, r1, asl #2	@, tmp183, tmp181, tmp181,
	cmp	r4, r0, asl #1	@ Pos, tmp183,
	bne	.L734	@,
	movw	r1, #:lower16:.LC35	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC35	@,
	bl	dprint_vfmw	@
	b	.L734	@
.L744:
	movw	r1, #:lower16:.LC35	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC35	@,
	add	r4, r5, #1	@ Pos, tmp168,
	bl	dprint_vfmw	@
	cmp	r4, #211	@ Pos,
	add	r6, r8, #100	@ ivtmp.3186, tmp169,
	bne	.L735	@,
.L745:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC39	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC39	@,
	bl	dprint_vfmw	@
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	HEVC_PrintNaluArraySlot, .-HEVC_PrintNaluArraySlot
	.align	2
	.global	HEVCGetDar
	.type	HEVCGetDar, %function
HEVCGetDar:
	.fnstart
.LFB1530:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ ar_idc
	mov	ip, r1	@ sar_width, sar_width
	mov	r4, r3	@ img_width, img_width
	beq	.L747	@,
	subs	r3, r0, #255	@ D.38724, ar_idc,
	movne	r3, #1	@ D.38724
	cmp	r0, #255	@ ar_idc,
	cmpne	r0, #16	@, ar_idc,
	bgt	.L747	@,
	cmp	r1, #0	@ sar_width,
	cmpne	r2, #0	@, sar_height,
	beq	.L764	@,
.L748:
	cmp	r0, #1	@ ar_idc,
	moveq	r4, #5	@ final_dar,
	beq	.L750	@,
	cmp	r3, #0	@ D.38724,
	beq	.L751	@,
	movw	r3, #:lower16:.LANCHOR1	@ tmp162,
	movt	r3, #:upper16:.LANCHOR1	@ tmp162,
	add	r2, r3, r0, asl #3	@, tmp171, tmp162, ar_idc,
	mov	r0, r2	@ tmp165, tmp171
	ldr	r2, [r2, #64]	@ sar_height, SarTable
	ldr	ip, [r0, #60]	@ sar_width, SarTable
.L751:
	mov	r1, r2	@, sar_height
	mov	r0, ip, asl #10	@, sar_width,
	bl	__aeabi_idiv	@
	ldr	r1, [fp, #4]	@, img_height
	mov	r5, r0	@ tmp178,
	mov	r0, r4, asl #10	@, img_width,
	bl	__aeabi_idiv	@
	mul	r5, r0, r5	@ tmp184,, tmp178
	add	r3, r5, #1020	@ tmp186, tmp184,
	cmp	r5, #0	@ tmp184,
	add	r2, r3, #3	@ tmp186, tmp186,
	movlt	r5, r2	@ tmp185, tmp186
	mov	r5, r5, asr #10	@ dar, tmp185,
	sub	r0, r5, #2400	@ iftmp.450, dar,
	sub	r1, r5, #2256	@ iftmp.3216, dar,
	sub	ip, r0, #6	@ iftmp.450, iftmp.450,
	sub	r3, r1, #7	@ iftmp.3216, iftmp.3216,
	cmp	ip, #0	@ iftmp.450,
	rsblt	ip, r5, #2400	@ tmp190, dar,
	addlt	ip, ip, #6	@ iftmp.450, tmp190,
	cmp	r3, #0	@ iftmp.3216,
	rsblt	r1, r5, #2256	@ tmp192, dar,
	addlt	r1, r1, #7	@ iftmp.451, tmp192,
	movge	r1, r3	@ iftmp.451, iftmp.3216
	cmp	ip, r1	@ iftmp.450, iftmp.451
	movlt	r4, #4	@ final_dar,
	blt	.L750	@,
	cmp	r3, #0	@ iftmp.3216,
	sub	lr, r5, #1808	@ iftmp.3217, dar,
	rsblt	r3, r5, #2256	@ tmp193, dar,
	sub	r2, lr, #12	@ iftmp.3217, iftmp.3217,
	addlt	r3, r3, #7	@ iftmp.3216, tmp193,
	cmp	r2, #0	@ iftmp.3217,
	rsblt	r1, r5, #1808	@ tmp195, dar,
	addlt	r1, r1, #12	@ iftmp.453, tmp195,
	movge	r1, r2	@ iftmp.453, iftmp.3217
	cmp	r3, r1	@ iftmp.3216, iftmp.453
	movlt	r4, #3	@ final_dar,
	blt	.L750	@,
	cmp	r2, #0	@ iftmp.3217,
	sub	r4, r5, #1360	@ iftmp.455, dar,
	sub	r4, r4, #5	@ iftmp.455, iftmp.455,
	rsblt	r2, r5, #1808	@ tmp196, dar,
	addlt	r2, r2, #12	@ iftmp.3217, tmp196,
	cmp	r4, #0	@ iftmp.455,
	rsblt	r4, r5, #1360	@ tmp198, dar,
	addlt	r4, r4, #5	@ iftmp.455, tmp198,
	cmp	r2, r4	@ iftmp.3217, iftmp.455
	movlt	r4, #2	@ final_dar,
	movge	r4, #1	@ final_dar,
	b	.L750	@
.L764:
	cmp	r0, #255	@ ar_idc,
	bne	.L748	@,
.L747:
	mov	r4, #0	@ final_dar,
.L750:
	mov	r2, r4	@, final_dar
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC40	@,
	movt	r1, #:upper16:.LC40	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, final_dar
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVCGetDar, .-HEVCGetDar
	.align	2
	.global	HEVC_CalcTileMap
	.type	HEVC_CalcTileMap, %function
HEVC_CalcTileMap:
	.fnstart
.LFB1587:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	lr, #:lower16:2139748	@,
	movt	lr, #:upper16:2139748	@,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r1, #147456	@,
	add	r0, r0, lr	@, pHevcCtx,
	bl	__memzero	@
	movw	ip, #:lower16:2287204	@,
	movt	ip, #:upper16:2287204	@,
	mov	r1, #36864	@,
	add	r0, r4, ip	@, pHevcCtx,
	movw	r9, #:lower16:2324068	@,
	movt	r9, #:upper16:2324068	@,
	bl	__memzero	@
	add	r0, r4, r9	@, pHevcCtx,
	mov	r1, #32768	@,
	bl	__memzero	@
	movw	r3, #:lower16:2356836	@ tmp158,
	movt	r3, #:upper16:2356836	@ tmp158,
	movw	r1, #:lower16:2044616	@ tmp160,
	movt	r1, #:upper16:2044616	@ tmp160,
	mov	r0, #0	@ tmp159,
	str	r0, [fp, #-52]	@ tmp159, %sfp
	movw	r2, #:lower16:2117176	@ tmp161,
	str	r0, [r4, r3]	@ tmp159, <variable>.DecPicPara.TileNum
	movt	r2, #:upper16:2117176	@ tmp161,
	ldr	r9, [r4, r1]	@ picWidthInCtb, <variable>.CurrSPS.ctb_num_width
	movw	r5, #:lower16:2117964	@,
	ldr	r1, [fp, #-52]	@, %sfp
	movt	r5, #:upper16:2117964	@,
	movw	ip, #:lower16:2117708	@,
	movt	ip, #:upper16:2117708	@,
	add	ip, r4, ip	@, pHevcCtx,
	add	r5, r4, r5	@, pHevcCtx,
	str	r5, [fp, #-48]	@, %sfp
	ldr	r2, [r4, r2]	@ prephitmp.3239, <variable>.CurrPPS.num_tile_rows
	str	ip, [fp, #-56]	@, %sfp
	mov	ip, r1	@ idx,
	str	r1, [fp, #-68]	@, %sfp
.L766:
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	r1, r2	@, prephitmp.3239
	bcs	.L775	@,
	movw	r5, #:lower16:2117172	@ tmp190,
	movt	r5, #:upper16:2117172	@ tmp190,
	ldr	r3, [r4, r5]	@ <variable>.CurrPPS.num_tile_columns, <variable>.CurrPPS.num_tile_columns
	cmp	r3, #0	@ <variable>.CurrPPS.num_tile_columns,
	ldreq	r5, [fp, #-48]	@, %sfp
	ldreq	sl, [r5, #0]	@ tmp198, <variable>.CurrPPS.row_bd
	beq	.L773	@,
	ldr	lr, [fp, #-68]	@, %sfp
	movw	r5, #:lower16:2356836	@,
	movt	r5, #:upper16:2356836	@,
	mov	r2, #0	@,
	ldr	sl, [fp, #-56]	@, %sfp
	mov	r1, #0	@,
	mul	r0, r9, lr	@, picWidthInCtb,
	str	r2, [fp, #-64]	@, %sfp
	ldr	r2, [r4, r5]	@ prephitmp.3237, <variable>.DecPicPara.TileNum
	ldr	r5, [fp, #-48]	@, %sfp
	str	sl, [fp, #-60]	@, %sfp
	ldr	sl, [r5, #0]	@ tmp198, <variable>.CurrPPS.row_bd
	str	r1, [fp, #-72]	@, %sfp
	str	r0, [fp, #-76]	@, %sfp
.L774:
	movw	lr, #:lower16:290508	@ tmp163,
	movt	lr, #:upper16:290508	@ tmp163,
	add	r3, r2, lr	@ tmp163, prephitmp.3237, tmp163
	cmp	sl, #0	@ tmp198,
	add	r2, r4, r3, asl #3	@, tmp167, pHevcCtx, tmp163,
	str	ip, [r2, #4]	@ idx, <variable>.DecPicPara.TileGroup
	ldreq	r5, [fp, #-60]	@, %sfp
	ldreq	r7, [r5, #0]	@ temp.3282, <variable>.CurrPPS.column_bd
	beq	.L767	@,
	ldr	r5, [fp, #-60]	@, %sfp
	ldr	r6, [fp, #-72]	@, %sfp
	ldr	r8, [fp, #-76]	@, %sfp
	ldr	r7, [r5, #0]	@ temp.3282, <variable>.CurrPPS.column_bd
	add	r5, r6, r8	@ ivtmp.3264,,
	mov	r8, #0	@ i,
	mov	r6, r4	@ pHevcCtx, pHevcCtx
.L768:
	cmp	r7, #0	@ temp.3282,
	beq	.L770	@,
	movw	r3, #:lower16:534936	@ tmp172,
	movt	r3, #:upper16:534936	@ tmp172,
	add	r4, ip, r3	@ tmp172, idx, tmp172
	sub	r2, r7, #1	@ tmp217, temp.3282,
	mov	r3, #1	@ j,
	cmp	r7, r3	@ temp.3282, j
	add	r1, r6, r4, asl #2	@, tmp175, pHevcCtx, tmp172,
	and	r0, r2, r3	@ tmp219, tmp217,
	add	r2, r1, #4	@ ivtmp.3260, tmp175,
	add	ip, ip, r3	@ idx, idx,
	str	r5, [r1, #4]	@ ivtmp.3264, <variable>.DecPicPara.TsToRsMap
	add	r1, r2, #4	@ ivtmp.3260, ivtmp.3260,
	bls	.L770	@,
	cmp	r0, #0	@ tmp219,
	beq	.L769	@,
	add	r4, r5, r3	@ tmp230, ivtmp.3264, j
	mov	r3, #2	@ j,
	cmp	r7, r3	@ temp.3282, j
	str	r4, [r2, #4]	@ tmp230, <variable>.DecPicPara.TsToRsMap
	add	ip, ip, #1	@ idx, idx,
	add	r1, r1, #4	@ ivtmp.3260, ivtmp.3260,
	bls	.L770	@,
.L769:
	add	r0, r3, #1	@ tmp221, j,
	add	lr, r5, r3	@ tmp170, ivtmp.3264, j
	add	r3, r0, #1	@ j, tmp221,
	mov	r2, r1	@ tmp222, ivtmp.3260
	cmp	r7, r3	@ temp.3282, j
	str	lr, [r2], #4	@ tmp170, <variable>.DecPicPara.TsToRsMap
	add	r4, r5, r0	@ tmp226, ivtmp.3264, tmp221
	add	ip, ip, #2	@ idx, idx,
	str	r4, [r1, #4]	@ tmp226, <variable>.DecPicPara.TsToRsMap
	add	r1, r2, #4	@ ivtmp.3260, tmp222,
	bhi	.L769	@,
.L770:
	add	r8, r8, #1	@ i, i,
	add	r5, r5, r9	@ ivtmp.3264, ivtmp.3264, picWidthInCtb
	cmp	sl, r8	@ tmp198, i
	bhi	.L768	@,
	mov	r4, r6	@ pHevcCtx, pHevcCtx
.L767:
	movw	r0, #:lower16:2356836	@,
	movt	r0, #:upper16:2356836	@,
	ldr	r3, [fp, #-64]	@, %sfp
	movw	r2, #:lower16:2117172	@,
	ldr	r1, [r4, r0]	@ <variable>.DecPicPara.TileNum, <variable>.DecPicPara.TileNum
	movt	r2, #:upper16:2117172	@,
	add	r5, r3, #1	@,,
	str	r5, [fp, #-64]	@, %sfp
	ldr	lr, [fp, #-64]	@, %sfp
	movw	r3, #:lower16:2324068	@ tmp181,
	ldr	r0, [r4, r2]	@ <variable>.CurrPPS.num_tile_columns, <variable>.CurrPPS.num_tile_columns
	movt	r3, #:upper16:2324068	@ tmp181,
	add	r2, r1, #1	@ prephitmp.3237, <variable>.DecPicPara.TileNum,
	add	r1, r4, r1, asl #3	@, tmp180, pHevcCtx, <variable>.DecPicPara.TileNum,
	cmp	r0, lr	@ <variable>.CurrPPS.num_tile_columns,
	add	lr, r1, r3	@ tmp181, tmp180, tmp181
	movw	r1, #:lower16:2356836	@,
	movt	r1, #:upper16:2356836	@,
	sub	r0, ip, #1	@ tmp182, idx,
	str	r2, [r4, r1]	@ prephitmp.3237, <variable>.DecPicPara.TileNum
	ldr	r5, [fp, #-60]	@, %sfp
	add	r5, r5, #4	@,,
	str	r5, [fp, #-60]	@, %sfp
	str	r0, [lr, #4]	@ tmp182, <variable>.DecPicPara.TileGroup
	ldrhi	r0, [fp, #-72]	@, %sfp
	addhi	r1, r0, r7	@,, temp.3282
	strhi	r1, [fp, #-72]	@, %sfp
	bhi	.L774	@
.L789:
	movw	lr, #:lower16:2117176	@ tmp188,
	movt	lr, #:upper16:2117176	@ tmp188,
	ldr	r2, [r4, lr]	@ prephitmp.3239, <variable>.CurrPPS.num_tile_rows
.L773:
	ldr	lr, [fp, #-68]	@, %sfp
	ldr	r3, [fp, #-52]	@, %sfp
	ldr	r1, [fp, #-48]	@, %sfp
	add	r0, lr, sl	@,, tmp198
	add	r5, r3, #1	@,,
	str	r0, [fp, #-68]	@, %sfp
	str	r5, [fp, #-52]	@, %sfp
	add	r5, r1, #4	@,,
	str	r5, [fp, #-48]	@, %sfp
	b	.L766	@
.L775:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	HEVC_CalcTileMap, .-HEVC_CalcTileMap
	.align	2
	.global	HEVC_CalcTileInfo
	.type	HEVC_CalcTileInfo, %function
HEVC_CalcTileInfo:
	.fnstart
.LFB1544:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:2117172	@ tmp163,
	movt	r5, #:upper16:2117172	@ tmp163,
	mov	r9, r0	@ pHevcCtx, pHevcCtx
	movw	ip, #:lower16:2044524	@ tmp162,
	movt	ip, #:upper16:2044524	@ tmp162,
	ldr	r4, [r0, r5]	@, <variable>.CurrPPS.num_tile_columns
	movw	r0, #:lower16:2117176	@ tmp164,
	movt	r0, #:upper16:2117176	@ tmp164,
	str	r3, [fp, #-56]	@ TilePosY, %sfp
	sub	lr, r4, #1	@ tmp165,,
	mov	r5, r2	@ TilePosX, TilePosX
	str	r4, [fp, #-48]	@, %sfp
	cmp	lr, #19	@ tmp165,
	ldr	r0, [r9, r0]	@, <variable>.CurrPPS.num_tile_rows
	mov	r4, r1	@ TileId, TileId
	ldr	sl, [r9, ip]	@ D.39422, <variable>.CurrSPS.log2_ctb_sizeY
	str	r0, [fp, #-52]	@, %sfp
	bhi	.L828	@,
	ldr	r2, [fp, #-52]	@, %sfp
	sub	r3, r2, #1	@ tmp170,,
	cmp	r3, #21	@ tmp170,
	bhi	.L829	@,
	mov	r1, #4096	@,
	mov	r0, r4	@, TileId
	bl	__memzero	@
	movw	r8, #:lower16:2117708	@ ivtmp.3338,
	mov	r0, r5	@, TilePosX
	mov	r1, #160	@,
	movt	r8, #:upper16:2117708	@ ivtmp.3338,
	bl	__memzero	@
	mov	r7, #0	@ End,
	ldr	r0, [fp, #-56]	@, %sfp
	mov	r1, #176	@,
	sub	sl, sl, #4	@ pretmp.3301, D.39422,
	add	r8, r9, r8	@ ivtmp.3338, pHevcCtx, ivtmp.3338
	bl	__memzero	@
	mov	r3, r7	@ Start.3344, End
	mov	r1, r7	@ TileX, End
	movw	r0, #511	@ tmp200,
.L799:
	str	r7, [r5, #0]	@ End,* ivtmp.3337
	mov	r3, r3, asl sl	@ idx, Start.3344,
	ldr	r6, [r8, #0]	@ tmp176, <variable>.CurrPPS.column_bd
	add	r7, r7, r6	@ End, End, tmp176
	sub	r2, r7, #1	@ tmp177, End,
	str	r2, [r5, #4]	@ tmp177,
	mov	r6, r7, asl sl	@ D.39464, End,
	cmp	r6, r3	@ D.39464, idx
	ble	.L794	@,
	cmp	r3, r0	@ idx, tmp200
	bhi	.L795	@,
	mvn	lr, r3	@ tmp208, idx
	add	ip, lr, r6	@ tmp207, tmp208, D.39464
	tst	ip, #1	@ tmp207,
	add	r2, r4, r3, asl #2	@, ivtmp.3331, TileId, idx,
	beq	.L797	@,
	str	r1, [r4, r3, asl #2]	@ TileX,* TileId
	add	r3, r3, #1	@ idx, idx,
	cmp	r3, r0	@ idx, tmp200
	add	r2, r2, #4	@ ivtmp.3331, ivtmp.3331,
	bls	.L797	@,
	b	.L795	@
.L798:
	cmp	r3, r0	@ idx, tmp200
	bhi	.L795	@,
	add	r3, r3, #1	@ idx, idx,
	str	r1, [r2, #4]	@ TileX,
	cmp	r3, r0	@ idx, tmp200
	add	r2, ip, #4	@ ivtmp.3331, tmp210,
	bhi	.L795	@,
.L797:
	add	r3, r3, #1	@ idx, idx,
	str	r1, [r2, #0]	@ TileX,* ivtmp.3331
	cmp	r6, r3	@ D.39464, idx
	add	ip, r2, #4	@ tmp210, ivtmp.3331,
	bgt	.L798	@,
.L794:
	ldr	r3, [fp, #-48]	@, %sfp
	add	r1, r1, #1	@ TileX, TileX,
	add	r5, r5, #8	@ ivtmp.3337, ivtmp.3337,
	add	r8, r8, #4	@ ivtmp.3338, ivtmp.3338,
	cmp	r3, r1	@, TileX
	mov	r3, r7	@ Start.3344, End
	bgt	.L799	@,
	ldr	r7, [fp, #-56]	@ ivtmp.3323, %sfp
	mov	r6, #0	@ End.3346,
	movw	r1, #:lower16:2117964	@ ivtmp.3324,
	add	r8, r4, #2048	@ tmp197, TileId,
	movt	r1, #:upper16:2117964	@ ivtmp.3324,
	mov	r3, r6	@ Start, End.3346
	add	r5, r9, r1	@ ivtmp.3324, pHevcCtx, ivtmp.3324
	movw	r0, #511	@ tmp196,
	mov	r1, r6	@ TileY, End.3346
.L805:
	str	r6, [r7, #0]	@ End.3346,* ivtmp.3323
	mov	r3, r3, asl sl	@ idx.3347, Start,
	ldr	r2, [r5, #0]	@ tmp185, <variable>.CurrPPS.row_bd
	add	r6, r6, r2	@ End.3346, End.3346, tmp185
	sub	r4, r6, #1	@ tmp186, End.3346,
	str	r4, [r7, #4]	@ tmp186,
	mov	r4, r6, asl sl	@ temp.3342, End.3346,
	cmp	r4, r3	@ temp.3342, idx.3347
	ble	.L800	@,
	cmp	r3, r0	@ idx.3347, tmp196
	bhi	.L801	@,
	mvn	lr, r3	@ tmp203, idx.3347
	add	ip, lr, r4	@ tmp202, tmp203, temp.3342
	tst	ip, #1	@ tmp202,
	add	r2, r8, r3, asl #2	@, ivtmp.3317, tmp197, idx.3347,
	beq	.L803	@,
	str	r1, [r8, r3, asl #2]	@ TileY,
	add	r3, r3, #1	@ idx.3347, idx.3347,
	cmp	r3, r0	@ idx.3347, tmp196
	add	r2, r2, #4	@ ivtmp.3317, ivtmp.3317,
	bls	.L803	@,
	b	.L801	@
.L804:
	cmp	r3, r0	@ idx.3347, tmp196
	bhi	.L801	@,
	add	r3, r3, #1	@ idx.3347, idx.3347,
	str	r1, [r2, #4]	@ TileY,
	cmp	r3, r0	@ idx.3347, tmp196
	add	r2, ip, #4	@ ivtmp.3317, tmp205,
	bhi	.L801	@,
.L803:
	add	r3, r3, #1	@ idx.3347, idx.3347,
	str	r1, [r2, #0]	@ TileY,* ivtmp.3317
	cmp	r4, r3	@ temp.3342, idx.3347
	add	ip, r2, #4	@ tmp205, ivtmp.3317,
	bgt	.L804	@,
.L800:
	ldr	r4, [fp, #-52]	@, %sfp
	add	r1, r1, #1	@ TileY, TileY,
	add	r7, r7, #8	@ ivtmp.3323, ivtmp.3323,
	add	r5, r5, #4	@ ivtmp.3324, ivtmp.3324,
	cmp	r4, r1	@, TileY
	mov	r3, r6	@ Start, End.3346
	bgt	.L805	@,
	mov	r0, #0	@ D.39428,
	b	.L792	@
.L795:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC43	@,
	ldr	r2, .L830	@,
	movt	r1, #:upper16:.LC43	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39428,
.L792:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L801:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC44	@,
	ldr	r2, .L830	@,
	movt	r1, #:upper16:.LC44	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39428,
	b	.L792	@
.L829:
	mov	r3, r2	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC42	@,
	ldr	r2, .L830	@,
	movt	r1, #:upper16:.LC42	@,
	mov	lr, #22	@ tmp174,
	str	lr, [sp, #0]	@ tmp174,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39428,
	b	.L792	@
.L828:
	ldr	r3, [fp, #-48]	@, %sfp
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC41	@,
	ldr	r2, .L830	@,
	movt	r1, #:upper16:.LC41	@,
	mov	ip, #20	@ tmp169,
	str	ip, [sp, #0]	@ tmp169,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39428,
	b	.L792	@
.L831:
	.align	2
.L830:
	.word	.LANCHOR1+196
	.fnend
	.size	HEVC_CalcTileInfo, .-HEVC_CalcTileInfo
	.align	2
	.global	HEVC_UnMarkFrameStoreRef
	.type	HEVC_UnMarkFrameStoreRef, %function
HEVC_UnMarkFrameStoreRef:
	.fnstart
.LFB1684:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	ip, #0	@ tmp135,
	mov	r3, r1	@ pFrameStore, pFrameStore
	mov	r2, ip	@, tmp135
	strb	ip, [r3, #1]	@ tmp135, <variable>.is_reference
	ldr	r1, [r1, #32]	@, <variable>.logic_fs_id
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_UnMarkFrameStoreRef, .-HEVC_UnMarkFrameStoreRef
	.align	2
	.global	HEVC_UpdateReflist
	.type	HEVC_UpdateReflist, %function
HEVC_UpdateReflist:
	.fnstart
.LFB1620:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:2128516	@ tmp160,
	movt	r8, #:upper16:2128516	@ tmp160,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	ldr	r9, [r0, r8]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	cmp	r9, #0	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics,
	moveq	r6, r9	@ i, k
	beq	.L836	@,
	movw	r7, #:lower16:2128600	@ ivtmp.3435,
	movw	r6, #:lower16:1960396	@,
	movt	r7, #:upper16:2128600	@ ivtmp.3435,
	movt	r6, #:upper16:1960396	@,
	mov	r9, #0	@ k,
	add	r7, r0, r7	@ ivtmp.3435, pHevcCtx, ivtmp.3435
	add	r0, r0, r6	@, pHevcCtx,
	mov	r6, r9	@ i, k
	movw	r1, #:lower16:2125408	@,
	movw	r2, #:lower16:1960372	@,
	movt	r1, #:upper16:2125408	@,
	movt	r2, #:upper16:1960372	@,
	movw	r3, #:lower16:1960392	@,
	str	r0, [fp, #-48]	@, %sfp
	movt	r3, #:upper16:1960392	@,
	str	r1, [fp, #-52]	@, %sfp
	str	r2, [fp, #-56]	@, %sfp
	str	r3, [fp, #-60]	@, %sfp
.L843:
	ldr	ip, [r7, #0]	@ tmp163, <variable>.CurrSlice.short_term_ref_pic_set.used_flag
	cmp	ip, #0	@ tmp163,
	beq	.L837	@,
	ldr	r2, [fp, #-56]	@, %sfp
	ldr	r3, [fp, #-52]	@, %sfp
	ldr	r0, [r7, #64]	@ D.45142, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	ldr	sl, [r5, r2]	@ temp.3459, <variable>.DPB.used_size
	ldr	r2, [r5, r3]	@ D.45141, <variable>.CurrSlice.poc
	cmp	sl, #0	@ temp.3459,
	beq	.L837	@,
	ldr	ip, [fp, #-60]	@, %sfp
	add	r0, r0, r2	@ poc, D.45142, D.45141
	ldr	r3, [r5, ip]	@ temp.3454, <variable>.DPB.fs
	ldr	r1, [r3, #12]	@ <variable>.poc, <variable>.poc
	cmp	r1, r0	@ <variable>.poc, poc
	moveq	r4, #0	@ j,
	beq	.L839	@,
	tst	sl, #1	@ temp.3459,
	ldr	r1, [fp, #-48]	@ ivtmp.3430, %sfp
	mov	r4, #0	@ j,
	bne	.L840	@,
	mov	r4, #1	@ j,
	cmp	r4, sl	@ j, temp.3459
	bcs	.L837	@,
	ldr	r1, [fp, #-48]	@ ivtmp.3430, %sfp
	ldr	r3, [r1], #4	@ temp.3454, <variable>.DPB.fs
	ldr	ip, [r3, #12]	@ <variable>.poc, <variable>.poc
	cmp	ip, r0	@ <variable>.poc, poc
	bne	.L840	@,
	b	.L839	@
.L842:
	ldr	r3, [r2], #4	@ temp.3454, <variable>.DPB.fs
	ldr	ip, [r3, #12]	@ <variable>.poc, <variable>.poc
	cmp	ip, r0	@ <variable>.poc, poc
	beq	.L839	@,
	ldr	r3, [r1, #4]	@ temp.3454, <variable>.DPB.fs
	add	r1, r2, #4	@ ivtmp.3430, tmp281,
	add	r4, r4, #1	@ j, j,
	ldr	r2, [r3, #12]	@ <variable>.poc, <variable>.poc
	cmp	r2, r0	@ <variable>.poc, poc
	beq	.L839	@,
.L840:
	add	r4, r4, #1	@ j, j,
	mov	r2, r1	@ tmp281, ivtmp.3430
	cmp	r4, sl	@ j, temp.3459
	bcc	.L842	@,
.L837:
	ldr	ip, [r5, r8]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	add	r6, r6, #1	@ i, i,
	add	r7, r7, #4	@ ivtmp.3435, ivtmp.3435,
	cmp	ip, r6	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, i
	bhi	.L843	@,
.L836:
	movw	r0, #:lower16:1960368	@ tmp196,
	movt	r0, #:upper16:1960368	@ tmp196,
	movw	r1, #:lower16:1960384	@ tmp195,
	movt	r1, #:upper16:1960384	@ tmp195,
	ldr	ip, [r5, r0]	@ temp.3457, <variable>.DPB.size
	str	r9, [r5, r1]	@ k, <variable>.DPB.negative_ref_frames_in_buffer
	cmp	r9, ip	@ k, temp.3457
	bcs	.L844	@,
	movw	r1, #:lower16:490114	@ tmp197,
	movt	r1, #:upper16:490114	@ tmp197,
	add	r0, r9, r1	@ tmp197, k, tmp197
	add	r1, r9, #1	@ k, k,
	mvn	r2, r9	@ tmp273, k
	cmp	r1, ip	@ k, temp.3457
	add	r3, r5, r0, asl #2	@, tmp200, pHevcCtx, tmp197,
	add	r0, r2, ip	@ tmp272, tmp273, temp.3457
	add	r2, r3, #4	@ ivtmp.3426, tmp200,
	and	r3, r0, #1	@ tmp274, tmp272,
	mov	r0, #0	@ tmp253,
	str	r0, [r2], #4	@ tmp253, <variable>.DPB.fs_negative_ref
	bcs	.L844	@,
	cmp	r3, #0	@ tmp274,
	beq	.L845	@,
	add	r1, r1, #1	@ k, k,
	str	r0, [r2], #4	@ tmp253, <variable>.DPB.fs_negative_ref
	cmp	r1, ip	@ k, temp.3457
	bcs	.L844	@,
.L845:
	add	r1, r1, #2	@ k, k,
	mov	r3, r2	@ tmp276, ivtmp.3426
	cmp	r1, ip	@ k, temp.3457
	str	r0, [r3], #4	@ tmp253, <variable>.DPB.fs_negative_ref
	str	r0, [r2, #4]	@ tmp253, <variable>.DPB.fs_negative_ref
	add	r2, r3, #4	@ ivtmp.3426, tmp276,
	bcc	.L845	@,
.L844:
	movw	r3, #:lower16:2128520	@ tmp202,
	movw	r1, #:lower16:2128516	@ tmp203,
	movt	r3, #:upper16:2128520	@ tmp202,
	movt	r1, #:upper16:2128516	@ tmp203,
	ldr	r2, [r5, r3]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	ldr	r0, [r5, r1]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	add	ip, r2, r0	@, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	str	ip, [fp, #-48]	@, %sfp
	cmp	ip, r6	@, i
	movls	r9, #0	@ k.3453,
	bls	.L847	@,
	movw	r9, #:lower16:532148	@ tmp206,
	movt	r9, #:upper16:532148	@ tmp206,
	add	sl, r6, r9	@ tmp206, i, tmp206
	movw	r7, #:lower16:1960396	@ ivtmp.3414,
	movt	r7, #:upper16:1960396	@ ivtmp.3414,
	mov	r9, #0	@ k.3453,
	add	r1, r5, sl, asl #2	@, tmp209, pHevcCtx, tmp206,
	add	sl, r5, r7	@ ivtmp.3414, pHevcCtx, ivtmp.3414
	add	r7, r1, #8	@ ivtmp.3420, tmp209,
	movw	r2, #:lower16:2125408	@,
	movw	r0, #:lower16:1960372	@,
	movt	r2, #:upper16:2125408	@,
	movt	r0, #:upper16:1960372	@,
	movw	ip, #:lower16:1960392	@,
	str	r2, [fp, #-52]	@, %sfp
	movt	ip, #:upper16:1960392	@,
	str	r0, [fp, #-56]	@, %sfp
	str	ip, [fp, #-60]	@, %sfp
.L854:
	ldr	r3, [r7, #0]	@ tmp210, <variable>.CurrSlice.short_term_ref_pic_set.used_flag
	cmp	r3, #0	@ tmp210,
	beq	.L848	@,
	ldr	r0, [fp, #-56]	@, %sfp
	ldr	ip, [fp, #-52]	@, %sfp
	ldr	r8, [r5, r0]	@ D.45154, <variable>.DPB.used_size
	ldr	r2, [r5, ip]	@ temp.3443, <variable>.CurrSlice.poc
	cmp	r8, #0	@ D.45154,
	ldr	r0, [r7, #64]	@ temp.3444, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	beq	.L848	@,
	ldr	r1, [fp, #-60]	@, %sfp
	add	r0, r0, r2	@ poc.3445, temp.3444, temp.3443
	ldr	r3, [r5, r1]	@ temp.3455, <variable>.DPB.fs
	ldr	r2, [r3, #12]	@ <variable>.poc, <variable>.poc
	cmp	r2, r0	@ <variable>.poc, poc.3445
	moveq	r4, #0	@ j.3441,
	beq	.L850	@,
	tst	r8, #1	@ D.45154,
	mov	r1, sl	@ ivtmp.3414, ivtmp.3414
	mov	r4, #0	@ j.3441,
	bne	.L851	@,
	mov	r4, #1	@ j.3441,
	cmp	r4, r8	@ j.3441, D.45154
	bcs	.L848	@,
	mov	r1, sl	@ ivtmp.3414, ivtmp.3414
	ldr	r3, [r1], #4	@ temp.3455, <variable>.DPB.fs
	ldr	ip, [r3, #12]	@ <variable>.poc, <variable>.poc
	cmp	ip, r0	@ <variable>.poc, poc.3445
	bne	.L851	@,
	b	.L850	@
.L853:
	ldr	r3, [r2], #4	@ temp.3455, <variable>.DPB.fs
	ldr	ip, [r3, #12]	@ <variable>.poc, <variable>.poc
	cmp	ip, r0	@ <variable>.poc, poc.3445
	beq	.L850	@,
	ldr	r3, [r1, #4]	@ temp.3455, <variable>.DPB.fs
	add	r1, r2, #4	@ ivtmp.3414, tmp271,
	add	r4, r4, #1	@ j.3441, j.3441,
	ldr	r2, [r3, #12]	@ <variable>.poc, <variable>.poc
	cmp	r2, r0	@ <variable>.poc, poc.3445
	beq	.L850	@,
.L851:
	add	r4, r4, #1	@ j.3441, j.3441,
	mov	r2, r1	@ tmp271, ivtmp.3414
	cmp	r4, r8	@ j.3441, D.45154
	bcc	.L853	@,
.L848:
	ldr	ip, [fp, #-48]	@, %sfp
	add	r6, r6, #1	@ i, i,
	add	r7, r7, #4	@ ivtmp.3420, ivtmp.3420,
	cmp	ip, r6	@, i
	bhi	.L854	@,
.L847:
	movw	r3, #:lower16:1960368	@ tmp237,
	movt	r3, #:upper16:1960368	@ tmp237,
	movw	r1, #:lower16:1960388	@ tmp236,
	movt	r1, #:upper16:1960388	@ tmp236,
	ldr	r0, [r5, r3]	@ D.45156, <variable>.DPB.size
	str	r9, [r5, r1]	@ k.3453, <variable>.DPB.positive_ref_frames_in_buffer
	cmp	r9, r0	@ k.3453, D.45156
	bcs	.L857	@,
	movw	r2, #:lower16:490132	@ tmp238,
	movt	r2, #:upper16:490132	@ tmp238,
	add	r1, r9, r2	@ tmp238, k.3453, tmp238
	add	r2, r9, #1	@ k.3453, k.3453,
	cmp	r2, r0	@ k.3453, D.45156
	mvn	r9, r9	@ tmp263, k.3453
	add	r5, r5, r1, asl #2	@, ivtmp.3410, pHevcCtx, tmp238,
	add	ip, r9, r0	@ tmp262, tmp263, D.45156
	mov	r1, #0	@ tmp245,
	and	r3, ip, #1	@ tmp264, tmp262,
	str	r1, [r5], #4	@ tmp245, <variable>.DPB.fs_positive_ref
	bcs	.L857	@,
	cmp	r3, #0	@ tmp264,
	beq	.L856	@,
	add	r2, r2, #1	@ k.3453, k.3453,
	str	r1, [r5], #4	@ tmp245, <variable>.DPB.fs_positive_ref
	cmp	r2, r0	@ k.3453, D.45156
	bcs	.L857	@,
.L856:
	add	r2, r2, #2	@ k.3453, k.3453,
	mov	r3, r5	@ tmp266, ivtmp.3410
	cmp	r2, r0	@ k.3453, D.45156
	str	r1, [r3], #4	@ tmp245, <variable>.DPB.fs_positive_ref
	str	r1, [r5, #4]	@ tmp245, <variable>.DPB.fs_positive_ref
	add	r5, r3, #4	@ ivtmp.3410, tmp266,
	bcc	.L856	@,
.L857:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L839:
	movw	sl, #:lower16:490098	@ tmp171,
	movt	sl, #:upper16:490098	@ tmp171,
	add	sl, r4, sl	@ tmp171, j, tmp171
	mov	r2, #1	@,
	strb	r2, [r3, #1]	@, <variable>.is_reference
	ldr	r3, [r5, sl, asl #2]	@ prephitmp.3392, <variable>.DPB.fs
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	bne	.L894	@,
.L841:
	movw	r2, #:lower16:490098	@ tmp179,
	movt	r2, #:upper16:490098	@ tmp179,
	add	ip, r4, r2	@ tmp179, j, tmp179
	mov	r0, #1	@,
	str	r0, [r3, #56]	@, <variable>.frame.is_short_term
	movw	r3, #:lower16:490114	@ tmp183,
	ldr	r1, [r5, ip, asl #2]	@ tmp181, <variable>.DPB.fs
	movt	r3, #:upper16:490114	@ tmp183,
	add	r3, r9, r3	@ tmp183, k, tmp183
	add	r9, r9, r0	@ k, k,
	mov	r0, #0	@,
	add	r6, r6, #1	@ i, i,
	str	r0, [r1, #52]	@, <variable>.frame.is_long_term
	add	r3, r5, r3, asl #2	@, tmp187, pHevcCtx, tmp183,
	ldr	r1, [r5, ip, asl #2]	@ tmp191, <variable>.DPB.fs
	add	r7, r7, #4	@ ivtmp.3435, ivtmp.3435,
	ldr	ip, [r5, r8]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	cmp	ip, r6	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, i
	str	r1, [r3, #4]	@ tmp191, <variable>.DPB.fs_negative_ref
	bhi	.L843	@,
	b	.L836	@
.L850:
	movw	r8, #:lower16:490098	@ tmp218,
	movt	r8, #:upper16:490098	@ tmp218,
	add	r8, r4, r8	@ tmp218, j.3441, tmp218
	mov	r2, #1	@,
	strb	r2, [r3, #1]	@, <variable>.is_reference
	ldr	r3, [r5, r8, asl #2]	@ prephitmp.3452, <variable>.DPB.fs
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	bne	.L895	@,
.L852:
	movw	r2, #:lower16:490098	@ tmp226,
	movt	r2, #:upper16:490098	@ tmp226,
	add	ip, r4, r2	@ tmp226, j.3441, tmp226
	mov	r0, #1	@,
	str	r0, [r3, #56]	@, <variable>.frame.is_short_term
	movw	r3, #:lower16:490132	@ tmp230,
	ldr	r1, [r5, ip, asl #2]	@ tmp228, <variable>.DPB.fs
	movt	r3, #:upper16:490132	@ tmp230,
	add	r3, r9, r3	@ tmp230, k.3453, tmp230
	add	r9, r9, r0	@ k.3453, k.3453,
	mov	r0, #0	@,
	add	r6, r6, #1	@ i, i,
	str	r0, [r1, #52]	@, <variable>.frame.is_long_term
	add	r7, r7, #4	@ ivtmp.3420, ivtmp.3420,
	ldr	r1, [r5, ip, asl #2]	@ tmp234, <variable>.DPB.fs
	str	r1, [r5, r3, asl #2]	@ tmp234, <variable>.DPB.fs_positive_ref
	ldr	ip, [fp, #-48]	@, %sfp
	cmp	ip, r6	@, i
	bhi	.L854	@,
	b	.L847	@
.L894:
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldr	r3, [r5, sl, asl #2]	@ prephitmp.3392, <variable>.DPB.fs
	b	.L841	@
.L895:
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldr	r3, [r5, r8, asl #2]	@ prephitmp.3452, <variable>.DPB.fs
	b	.L852	@
	.fnend
	.size	HEVC_UpdateReflist, .-HEVC_UpdateReflist
	.align	2
	.global	HEVC_ApplyReferencePictureSet
	.type	HEVC_ApplyReferencePictureSet, %function
HEVC_ApplyReferencePictureSet:
	.fnstart
.LFB1608:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:2125436	@ tmp149,
	movw	r3, #:lower16:1960184	@ tmp151,
	movt	ip, #:upper16:2125436	@ tmp149,
	movt	r3, #:upper16:1960184	@ tmp151,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r1, [r0, ip]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	ip, #7704	@ tmp153,
	ldr	r0, [r0, r3]	@ <variable>.pPPS, <variable>.pPPS
	movw	r2, #:lower16:1960180	@ tmp157,
	movw	r3, #:lower16:1960372	@ tmp163,
	movt	r2, #:upper16:1960180	@ tmp157,
	movt	r3, #:upper16:1960372	@ tmp163,
	mla	r1, ip, r1, r0	@ tmp154, tmp153, <variable>.CurrSlice.pic_parameter_set_id, <variable>.pPPS
	ldr	r2, [r4, r2]	@ <variable>.pSPS, <variable>.pSPS
	ldr	r0, [r4, r3]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, #0	@ <variable>.DPB.used_size,
	ldr	r3, [r1, #32]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r1, #36364	@ tmp159,
	mla	ip, r1, r3, r2	@ tmp160, tmp159, <variable>.seq_parameter_set_id, <variable>.pSPS
	mov	r2, #1	@ tmp161,
	ldr	r0, [ip, #128]	@ <variable>.max_pic_order_cnt_lsb, <variable>.max_pic_order_cnt_lsb
	mov	r3, r2, asl r0	@, tmp161,
	str	r3, [fp, #-52]	@, %sfp
	beq	.L913	@,
	movw	r3, #:lower16:2128520	@ tmp293,
	movw	ip, #:lower16:2128516	@ tmp294,
	movt	r3, #:upper16:2128520	@ tmp293,
	movt	ip, #:upper16:2128516	@ tmp294,
	movw	r1, #:lower16:1960392	@,
	movt	r1, #:upper16:1960392	@,
	add	sl, r4, r1	@, pHevcCtx,
	movw	r7, #:lower16:2128524	@,
	movw	r6, #:lower16:2125408	@,
	movt	r7, #:upper16:2128524	@,
	movt	r6, #:upper16:2125408	@,
	mov	r5, #0	@,
	str	sl, [fp, #-48]	@, %sfp
	str	r7, [fp, #-68]	@, %sfp
	str	r6, [fp, #-72]	@, %sfp
	str	r5, [fp, #-64]	@, %sfp
.L912:
	ldr	r0, [fp, #-68]	@, %sfp
	ldr	r5, [r4, r3]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	ldr	r7, [r4, ip]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	ldr	r2, [r4, r0]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics
	add	r6, r5, r7	@ prephitmp.3489, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	cmp	r6, r2	@ prephitmp.3489, <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics
	bcs	.L918	@,
	ldr	r0, [fp, #-48]	@, %sfp
	movw	r7, #:lower16:531716	@ tmp172,
	movt	r7, #:upper16:531716	@ tmp172,
	mov	r8, #0	@,
	add	r5, r6, r7	@ tmp172, j, tmp172
	ldr	r7, [r0, #0]	@ prephitmp.3493, <variable>.DPB.fs
	add	r5, r4, r5, asl #2	@, ivtmp.3512, pHevcCtx, tmp172,
	str	r8, [fp, #-60]	@, %sfp
	str	r3, [fp, #-76]	@ tmp293, %sfp
	mov	r3, r8	@ is_reference,
	str	r7, [fp, #-56]	@ prephitmp.3493, %sfp
	str	ip, [fp, #-80]	@ tmp294, %sfp
	ldr	r8, [fp, #-68]	@ tmp295, %sfp
	b	.L906	@
.L921:
	ldr	ip, [r7, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	ip, #0	@ <variable>.frame.is_long_term,
	beq	.L901	@,
	ldr	r2, [r5, #1864]	@ tmp177, <variable>.CurrSlice.short_term_ref_pic_set.poc
	ldr	r1, [r7, #12]	@ <variable>.poc, <variable>.poc
	cmp	r1, r2	@ <variable>.poc, tmp177
	moveq	r2, #1	@,
	streqb	r2, [r7, #1]	@, <variable>.is_reference
	beq	.L917	@,
.L901:
	cmp	r3, #0	@ is_reference,
	strne	r7, [fp, #-56]	@ prephitmp.3493, %sfp
	movne	r3, #1	@ is_reference,
	bne	.L904	@,
	cmp	sl, #0	@ D.44632,
	ldr	r9, [r7, #12]	@ CurPoc, <variable>.poc
	ldr	sl, [r5, #1864]	@ RefPoc, <variable>.CurrSlice.short_term_ref_pic_set.poc
	bne	.L905	@,
	mov	r0, r9	@, CurPoc
	ldr	r1, [fp, #-52]	@, %sfp
	str	r3, [fp, #-84]	@,
	bl	__aeabi_idivmod	@
	mov	r0, sl	@, RefPoc
	mov	r9, r1	@ CurPoc,
	ldr	r1, [fp, #-52]	@, %sfp
	bl	__aeabi_idivmod	@
	ldr	r3, [fp, #-84]	@,
	mov	sl, r1	@ RefPoc,
.L905:
	ldrb	r2, [r7, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r9, sl	@ CurPoc, RefPoc
	movne	ip, #0	@, tmp226
	moveq	ip, #1	@, tmp226
	cmp	r2, #0	@ <variable>.is_reference,
	moveq	ip, #0	@, tmp226,
	cmp	ip, #0	@ tmp226,
	bne	.L919	@,
.L904:
	ldr	r1, [r4, r8]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics
	add	r6, r6, #1	@ j, j,
	add	r5, r5, #4	@ ivtmp.3512, ivtmp.3512,
	cmp	r1, r6	@ <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics, j
	bls	.L920	@,
.L906:
	ldr	sl, [r5, #0]	@ D.44632, <variable>.CurrSlice.CheckLTMSB
	cmp	sl, #0	@ D.44632,
	bne	.L921	@,
	ldr	r0, [r7, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r0, #0	@ <variable>.frame.is_long_term,
	beq	.L901	@,
	ldr	r0, [r7, #12]	@, <variable>.poc
	ldr	r1, [fp, #-52]	@, %sfp
	str	r3, [fp, #-84]	@,
	bl	__aeabi_idivmod	@
	ldr	r0, [r5, #1864]	@, <variable>.CurrSlice.short_term_ref_pic_set.poc
	mov	r9, r1	@ tmp192,
	ldr	r1, [fp, #-52]	@, %sfp
	bl	__aeabi_idivmod	@
	ldr	r3, [fp, #-84]	@,
	cmp	r9, r1	@ tmp192,
	bne	.L901	@,
	mov	lr, #1	@,
	strb	lr, [r7, #1]	@, <variable>.is_reference
.L917:
	ldr	sl, [fp, #-48]	@, %sfp
	mov	r2, #1	@,
	add	r6, r6, #1	@ j, j,
	add	r5, r5, #4	@ ivtmp.3512, ivtmp.3512,
	ldr	r7, [sl, #0]	@ tmp202, <variable>.DPB.fs
	str	r2, [r7, #4]	@, <variable>.eFrameStoreState
	ldr	r3, [sl, #0]	@ tmp205, <variable>.DPB.fs
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	sl, [fp, #-48]	@, %sfp
	mov	r3, #1	@ is_reference,
	ldr	r7, [sl, #0]	@ prephitmp.3493, <variable>.DPB.fs
	str	r7, [fp, #-56]	@ prephitmp.3493, %sfp
	ldr	r1, [r4, r8]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics
	cmp	r1, r6	@ <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics, j
	bhi	.L906	@,
.L920:
	str	r3, [fp, #-60]	@ is_reference, %sfp
	ldr	ip, [fp, #-80]	@ tmp294, %sfp
	ldr	r3, [fp, #-76]	@ tmp293, %sfp
	ldr	sl, [fp, #-56]	@ prephitmp.3493, %sfp
	ldr	r6, [r4, ip]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	ldr	r5, [r4, r3]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	add	r6, r5, r6	@ prephitmp.3489, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	cmp	r6, #0	@ prephitmp.3489,
	beq	.L922	@,
.L907:
	movw	r9, #:lower16:2128664	@ ivtmp.3506,
	movt	r9, #:upper16:2128664	@ ivtmp.3506,
	ldr	r0, [r7, #12]	@ <variable>.poc, <variable>.poc
	add	r6, r4, r9	@ ivtmp.3506, pHevcCtx, ivtmp.3506
	mov	r1, sl	@ prephitmp.3493, prephitmp.3493
	mov	r8, ip	@ tmp294, tmp294
	mov	r5, #0	@ j.3542,
	mov	r7, #1	@ tmp288,
	mov	r9, r3	@ tmp293, tmp293
	ldr	ip, [fp, #-48]	@ ivtmp.3517, %sfp
	ldr	sl, [fp, #-72]	@ tmp297, %sfp
	b	.L910	@
.L909:
	ldr	r2, [r4, r9]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	add	r6, r6, #4	@ ivtmp.3506, ivtmp.3506,
	ldr	r3, [r4, r8]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	add	r3, r2, r3	@ tmp258, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	cmp	r5, r3	@ j.3542, tmp258
	bcs	.L923	@,
.L910:
	ldr	r3, [r1, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	add	r5, r5, #1	@ j.3542, j.3542,
	cmp	r3, #0	@ <variable>.frame.is_long_term,
	bne	.L909	@,
	ldr	r2, [r6, #0]	@ tmp246, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	ldr	r3, [r4, sl]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	add	r3, r2, r3	@ tmp245, tmp246, <variable>.CurrSlice.poc
	cmp	r0, r3	@ <variable>.poc, tmp245
	bne	.L909	@,
	strb	r7, [r1, #1]	@ tmp288, <variable>.is_reference
	mov	r2, r7	@, tmp288
	ldr	r0, [ip, #0]	@ tmp251, <variable>.DPB.fs
	add	r6, r6, #4	@ ivtmp.3506, ivtmp.3506,
	str	r7, [fp, #-60]	@ tmp288, %sfp
	str	r7, [r0, #4]	@ tmp288, <variable>.eFrameStoreState
	ldr	lr, [ip, #0]	@ tmp254, <variable>.DPB.fs
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [lr, #32]	@, <variable>.logic_fs_id
	str	ip, [fp, #-88]	@,
	bl	FSP_SetRef	@
	ldr	ip, [fp, #-88]	@,
	ldr	r2, [r4, r9]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	ldr	r3, [r4, r8]	@ <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	ldr	r1, [ip, #0]	@ prephitmp.3493, <variable>.DPB.fs
	add	r3, r2, r3	@ tmp258, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	cmp	r5, r3	@ j.3542, tmp258
	ldr	r0, [r1, #12]	@ <variable>.poc, <variable>.poc
	bcc	.L910	@,
.L923:
	mov	sl, r1	@ prephitmp.3493, prephitmp.3493
	mov	r3, r9	@ tmp293, tmp293
	mov	ip, r8	@ tmp294, tmp294
.L908:
	ldr	r1, [fp, #-72]	@, %sfp
	ldr	r5, [fp, #-60]	@, %sfp
	ldr	r2, [r4, r1]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	eor	r1, r5, #1	@ tmp262,,
	cmp	r0, r2	@ <variable>.poc, <variable>.CurrSlice.poc
	moveq	r5, #0	@, tmp270
	andne	r5, r1, #1	@,, tmp270, tmp262
	cmp	r5, #0	@ tmp270,
	beq	.L911	@,
	mov	r2, #0	@ tmp271,
	strb	r2, [sl, #1]	@ tmp271, <variable>.is_reference
	ldr	r5, [fp, #-48]	@, %sfp
	ldr	r1, [r5, #0]	@ tmp273, <variable>.DPB.fs
	str	r2, [r1, #52]	@ tmp271, <variable>.frame.is_long_term
	ldr	r1, [r5, #0]	@ temp.3546, <variable>.DPB.fs
	ldr	r0, [r1, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	cmp	r0, #1	@ <variable>.eFirstFrameState,
	beq	.L911	@,
	ldr	r1, [r1, #32]	@, <variable>.logic_fs_id
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	str	r3, [fp, #-84]	@,
	str	ip, [fp, #-88]	@,
	bl	FSP_SetRef	@
	ldr	ip, [fp, #-88]	@,
	ldr	r3, [fp, #-84]	@,
.L911:
	ldr	r1, [fp, #-64]	@, %sfp
	movw	r2, #:lower16:1960372	@ tmp278,
	ldr	r5, [fp, #-48]	@, %sfp
	movt	r2, #:upper16:1960372	@ tmp278,
	add	r0, r1, #1	@,,
	str	r0, [fp, #-64]	@, %sfp
	add	r5, r5, #4	@,,
	str	r5, [fp, #-48]	@, %sfp
	ldr	r2, [r4, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r2, r0	@ <variable>.DPB.used_size,
	bhi	.L912	@,
.L913:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L919:
	mov	r2, #1	@,
	strb	r2, [r7, #1]	@, <variable>.is_reference
	ldr	ip, [fp, #-48]	@, %sfp
	mov	r2, #1	@,
	ldr	r7, [ip, #0]	@ tmp229, <variable>.DPB.fs
	str	r2, [r7, #52]	@ is_reference, <variable>.frame.is_long_term
	ldr	r0, [fp, #-48]	@, %sfp
	ldr	sl, [r0, #0]	@ tmp231, <variable>.DPB.fs
	str	r2, [sl, #4]	@ is_reference, <variable>.eFrameStoreState
	ldr	r3, [r0, #0]	@ tmp234, <variable>.DPB.fs
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	str	r2, [fp, #-84]	@ tmp14,
	bl	FSP_SetRef	@
	ldr	r1, [fp, #-48]	@, %sfp
	ldr	r3, [fp, #-84]	@,
	ldr	r7, [r1, #0]	@ prephitmp.3493, <variable>.DPB.fs
	str	r7, [fp, #-56]	@ prephitmp.3493, %sfp
	b	.L904	@
.L918:
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r6, #0	@ prephitmp.3489,
	mov	sl, #0	@,
	ldr	r7, [r1, #0]	@ prephitmp.3493, <variable>.DPB.fs
	str	sl, [fp, #-60]	@, %sfp
	mov	sl, r7	@ prephitmp.3493, prephitmp.3493
	bne	.L907	@,
.L922:
	mov	sl, r7	@ prephitmp.3493, prephitmp.3493
	ldr	r0, [r7, #12]	@ <variable>.poc, <variable>.poc
	b	.L908	@
	.fnend
	.size	HEVC_ApplyReferencePictureSet, .-HEVC_ApplyReferencePictureSet
	.align	2
	.global	HEVC_More_Rbsp_Data
	.type	HEVC_More_Rbsp_Data, %function
HEVC_More_Rbsp_Data:
	.fnstart
.LFB1660:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:1960172	@ tmp140,
	movt	r3, #:upper16:1960172	@ tmp140,
	ldr	r0, [r0, r3]	@ D.47130, <variable>.pBS
	ldr	r2, [r0, #16]	@ <variable>.BsLen, <variable>.BsLen
	ldr	r3, [r0, #24]	@ D.47133, <variable>.TotalPos
	mov	r2, r2, asl #3	@ D.47132, <variable>.BsLen,
	cmp	r2, r3	@ D.47132, D.47133
	ble	.L928	@,
	mov	r1, #8	@,
	bl	BsShow	@
	subs	r0, r0, #128	@ D.47137,,
	movne	r0, #1	@ D.47137
	ldmfd	sp, {fp, sp, pc}	@
.L928:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC45	@,
	movt	r1, #:upper16:.LC45	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.47137,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_More_Rbsp_Data, .-HEVC_More_Rbsp_Data
	.align	2
	.global	HEVC_se_v
	.type	HEVC_se_v, %function
HEVC_se_v:
	.fnstart
.LFB1675:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r1, #32	@,
	mov	r4, r0	@ pBs, pBs
	bl	BsShow	@
	bl	ZerosMS_32	@
	cmp	r0, #31	@ LeadingZeros,
	mvnhi	r5, #-2147483648	@ Info,
	bhi	.L931	@,
	add	r6, r0, #1	@ D.47576, LeadingZeros,
	mov	r1, r0	@, LeadingZeros
	mov	r0, r4	@, pBs
	bl	BsSkip	@
	mov	r1, r6	@, D.47576
	mov	r0, r4	@, pBs
	bl	BsShow	@
	mov	r1, r6	@, D.47576
	sub	r0, r0, #1	@ Info.3598,,
	tst	r0, #1	@ Info.3598,
	mov	r5, r0, asr #1	@ Info.3599, Info.3598,
	mov	r0, r4	@, pBs
	addne	r5, r5, #1	@ Info, Info.3599,
	rsbeq	r5, r5, #0	@ Info, Info.3599
	bl	BsSkip	@
.L931:
	mov	r0, r5	@, Info
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	HEVC_se_v, .-HEVC_se_v
	.align	2
	.global	HEVC_ue_v
	.type	HEVC_ue_v, %function
HEVC_ue_v:
	.fnstart
.LFB1674:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r1, #32	@,
	mov	r5, r0	@ pBs, pBs
	bl	BsShow	@
	bl	ZerosMS_32	@
	cmp	r0, #31	@ LeadingZeros,
	bls	.L939	@,
	movw	r4, #:lower16:-4370	@ Info,
	movt	r4, #:upper16:-4370	@ Info,
	mov	r2, r0	@, LeadingZeros
	movw	r1, #:lower16:.LC46	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC46	@,
	movw	r3, #:lower16:-4370	@,
	movt	r3, #:upper16:-4370	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, Info
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L939:
	add	r4, r0, #1	@ D.47556, LeadingZeros,
	mov	r1, r0	@, LeadingZeros
	mov	r0, r5	@, pBs
	bl	BsSkip	@
	mov	r1, r4	@, D.47556
	mov	r0, r5	@, pBs
	bl	BsShow	@
	mov	r1, r4	@, D.47556
	sub	r4, r0, #1	@ Info,,
	mov	r0, r5	@, pBs
	bl	BsSkip	@
	mov	r0, r4	@, Info
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_ue_v, .-HEVC_ue_v
	.align	2
	.global	HEVC_f_v
	.type	HEVC_f_v, %function
HEVC_f_v:
	.fnstart
.LFB1673:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	bl	BsGet	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_f_v, .-HEVC_f_v
	.align	2
	.global	HEVC_u_v
	.type	HEVC_u_v, %function
HEVC_u_v:
	.fnstart
.LFB1672:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	bl	BsGet	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_u_v, .-HEVC_u_v
	.align	2
	.global	HEVC_DecHrdParam
	.type	HEVC_DecHrdParam, %function
HEVC_DecHrdParam:
	.fnstart
.LFB1658:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pHevcCtx,
	cmpne	r1, #0	@, pHrd,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	str	r1, [fp, #-52]	@ pHrd, %sfp
	str	r3, [fp, #-72]	@ maxNumSubLayersMinus1, %sfp
	mvneq	r0, #0	@ D.47019,
	beq	.L946	@,
	cmp	r2, #0	@ commonInfPresentFlag,
	bne	.L969	@,
.L947:
	ldr	r9, [fp, #-52]	@ ivtmp.3715, %sfp
	movw	r5, #:lower16:1960172	@ tmp286,
	movt	r5, #:upper16:1960172	@ tmp286,
	mov	lr, #0	@,
	str	lr, [fp, #-64]	@, %sfp
.L964:
	ldr	r0, [r4, r5]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC60	@,
	movt	r2, #:upper16:.LC60	@,
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.47065,
	strb	r0, [r9, #40]	@ D.47065, <variable>.fixed_pic_rate_general_flag
	cmp	r0, #0	@ D.47065,
	movne	r3, #1	@ tmp228,
	strneb	r3, [r9, #41]	@ tmp228, <variable>.fixed_pic_rate_within_cvs_flag
	beq	.L970	@,
.L951:
	ldrb	r2, [r9, #41]	@ zero_extendqisi2	@ <variable>.fixed_pic_rate_within_cvs_flag, <variable>.fixed_pic_rate_within_cvs_flag
	mov	r3, #0	@,
	mov	r1, #0	@,
	strb	r3, [r9, #42]	@, <variable>.low_delay_hrd_flag
	cmp	r2, #0	@ <variable>.fixed_pic_rate_within_cvs_flag,
	str	r1, [r9, #48]	@, <variable>.cpb_cnt_minus1
	beq	.L952	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r1, #:lower16:.LC62	@,
	movt	r1, #:upper16:.LC62	@,
	bl	HEVC_ue_v	@
	ldrb	r3, [r9, #42]	@ zero_extendqisi2	@ prephitmp.3684, <variable>.low_delay_hrd_flag
	cmp	r3, #0	@ prephitmp.3684,
	ldrne	r2, [r9, #48]	@ prephitmp.3686, <variable>.cpb_cnt_minus1
	str	r0, [r9, #44]	@, <variable>.elemental_duration_in_tc_minus1
	beq	.L971	@,
.L955:
	cmp	r2, #31	@ prephitmp.3686,
	bhi	.L972	@,
.L956:
	ldr	r1, [fp, #-64]	@, %sfp
	movw	r3, #323	@ tmp278,
	mov	r0, #1	@,
	mov	lr, #0	@,
	str	r9, [fp, #-48]	@ ivtmp.3715, %sfp
	mul	r2, r3, r1	@, tmp278,
	str	r0, [fp, #-60]	@, %sfp
	str	lr, [fp, #-56]	@, %sfp
	str	r2, [fp, #-68]	@, %sfp
.L957:
	ldr	ip, [fp, #-56]	@, %sfp
	cmp	ip, #0	@,
	beq	.L973	@,
	ldr	r1, [fp, #-52]	@, %sfp
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.vcl_hrd_parameters_present_flag, <variable>.vcl_hrd_parameters_present_flag
	cmp	r3, #0	@ <variable>.vcl_hrd_parameters_present_flag,
	beq	.L962	@,
.L961:
	ldr	r8, [fp, #-68]	@, %sfp
	ldr	r7, [fp, #-56]	@, %sfp
	ldr	r2, [fp, #-52]	@, %sfp
	add	r6, r8, r7	@ tmp249,,
	mov	r7, #0	@ ivtmp.3702,
	mov	r8, r7	@ k, ivtmp.3702
	add	sl, r2, r6, asl #2	@, tmp252,, tmp249,
	add	sl, sl, #52	@ ivtmp.3701, tmp252,
	b	.L960	@
.L963:
	ldr	r0, [r4, r5]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC68	@,
	movt	r2, #:upper16:.LC68	@,
	bl	HEVC_u_v	@
	ldr	r2, [r9, #48]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	cmp	r2, r8	@ <variable>.cpb_cnt_minus1, k
	str	r0, [r6, #1076]	@, <variable>.cbr_flag
	bcc	.L962	@,
.L960:
	ldr	lr, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC66	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movt	r1, #:upper16:.LC66	@,
	add	r6, lr, r7	@ D.51369,, ivtmp.3702
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC67	@,
	movt	r1, #:upper16:.LC67	@,
	add	r8, r8, #1	@ k, k,
	add	r7, r7, #8	@ ivtmp.3702, ivtmp.3702,
	str	r0, [sl, #0]	@, <variable>.bit_rate_value_minus1
	add	sl, sl, #8	@ ivtmp.3701, ivtmp.3701,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	str	r0, [r6, #308]	@, <variable>.cpb_size_value_minus1
	ldr	r0, [fp, #-52]	@, %sfp
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.sub_pic_hrd_params_present_flag, <variable>.sub_pic_hrd_params_present_flag
	cmp	ip, #0	@ <variable>.sub_pic_hrd_params_present_flag,
	beq	.L963	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r1, #:lower16:.LC69	@,
	movt	r1, #:upper16:.LC69	@,
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC70	@,
	movt	r1, #:upper16:.LC70	@,
	str	r0, [r6, #564]	@, <variable>.cpb_size_du_value_minus1
	ldr	r0, [r4, r5]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	str	r0, [r6, #820]	@, <variable>.bit_rate_du_value_minus1
	b	.L963	@
.L962:
	ldr	r3, [fp, #-60]	@, %sfp
	cmp	r3, #1	@,
	bls	.L959	@,
	ldr	r0, [fp, #-64]	@, %sfp
	add	r9, r9, #1280	@ ivtmp.3715, ivtmp.3715,
	ldr	r1, [fp, #-72]	@, %sfp
	add	r9, r9, #12	@ ivtmp.3715, ivtmp.3715,
	add	ip, r0, #1	@,,
	str	ip, [fp, #-64]	@, %sfp
	cmp	r1, ip	@,
	bcs	.L964	@,
	mov	r0, #0	@ D.47019,
.L946:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L973:
	ldr	r0, [fp, #-52]	@, %sfp
	ldrb	lr, [r0, #0]	@ zero_extendqisi2	@ <variable>.nal_hrd_parameters_present_flag, <variable>.nal_hrd_parameters_present_flag
	cmp	lr, #0	@ <variable>.nal_hrd_parameters_present_flag,
	bne	.L961	@,
.L959:
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	r2, [fp, #-60]	@, %sfp
	ldr	lr, [fp, #-48]	@, %sfp
	add	r3, r1, #1	@,,
	add	r0, r2, #1	@,,
	str	r3, [fp, #-56]	@, %sfp
	add	ip, lr, #4	@,,
	str	r0, [fp, #-60]	@, %sfp
	str	ip, [fp, #-48]	@, %sfp
	b	.L957	@
.L952:
	ldr	r0, [r4, r5]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC63	@,
	movt	r2, #:upper16:.LC63	@,
	bl	HEVC_u_v	@
	uxtb	r3, r0	@ prephitmp.3684,
	strb	r3, [r9, #42]	@ prephitmp.3684, <variable>.low_delay_hrd_flag
	cmp	r3, #0	@ prephitmp.3684,
	ldrne	r2, [r9, #48]	@ prephitmp.3686, <variable>.cpb_cnt_minus1
	bne	.L955	@,
.L971:
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r1, #:lower16:.LC64	@,
	movt	r1, #:upper16:.LC64	@,
	bl	HEVC_ue_v	@
	mov	r2, r0	@ prephitmp.3686,
	cmp	r2, #31	@ prephitmp.3686,
	str	r0, [r9, #48]	@ prephitmp.3686, <variable>.cpb_cnt_minus1
	bls	.L956	@,
.L972:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC65	@,
	movt	r1, #:upper16:.LC65	@,
	bl	dprint_vfmw	@
	mov	ip, #0	@,
	str	ip, [r9, #48]	@, <variable>.cpb_cnt_minus1
	b	.L956	@
.L970:
	ldr	r0, [r4, r5]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC61	@,
	movt	r2, #:upper16:.LC61	@,
	bl	HEVC_u_v	@
	strb	r0, [r9, #41]	@, <variable>.fixed_pic_rate_within_cvs_flag
	b	.L951	@
.L969:
	movw	r5, #:lower16:1960172	@ tmp187,
	movt	r5, #:upper16:1960172	@ tmp187,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC47	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movt	r2, #:upper16:.LC47	@,
	bl	HEVC_u_v	@
	ldr	r9, [fp, #-52]	@, %sfp
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC48	@,
	movt	r2, #:upper16:.LC48	@,
	strb	r0, [r9, #0]	@, <variable>.nal_hrd_parameters_present_flag
	ldr	r0, [r4, r5]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r1, [fp, #-52]	@, %sfp
	strb	r0, [r1, #1]	@, <variable>.vcl_hrd_parameters_present_flag
	ldrh	r3, [r1, #0]	@ tmp195,
	cmp	r3, #0	@ tmp195,
	beq	.L947	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC49	@,
	movt	r2, #:upper16:.LC49	@,
	bl	HEVC_u_v	@
	ldr	r2, [fp, #-52]	@, %sfp
	uxtb	r0, r0	@ D.47035,
	strb	r0, [r2, #2]	@ D.47035, <variable>.sub_pic_hrd_params_present_flag
	cmp	r0, #0	@ D.47035,
	bne	.L974	@,
.L948:
	movw	r5, #:lower16:1960172	@ tmp208,
	movt	r5, #:upper16:1960172	@ tmp208,
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC54	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movt	r2, #:upper16:.LC54	@,
	bl	HEVC_u_v	@
	ldr	ip, [fp, #-52]	@, %sfp
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC55	@,
	movt	r2, #:upper16:.LC55	@,
	str	r0, [ip, #16]	@, <variable>.bit_rate_scale
	ldr	r0, [r4, r5]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r1, [fp, #-52]	@, %sfp
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ <variable>.sub_pic_hrd_params_present_flag, <variable>.sub_pic_hrd_params_present_flag
	cmp	r2, #0	@ <variable>.sub_pic_hrd_params_present_flag,
	str	r0, [r1, #20]	@, <variable>.cpb_size_scale
	bne	.L975	@,
.L949:
	movw	r9, #:lower16:1960172	@ tmp215,
	movt	r9, #:upper16:1960172	@ tmp215,
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC57	@,
	ldr	r0, [r4, r9]	@, <variable>.pBS
	movt	r2, #:upper16:.LC57	@,
	bl	HEVC_u_v	@
	ldr	r5, [fp, #-52]	@, %sfp
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC58	@,
	movt	r2, #:upper16:.LC58	@,
	str	r0, [r5, #28]	@, <variable>.initial_cpb_removal_delay_length_minus1
	ldr	r0, [r4, r9]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	ip, [fp, #-52]	@, %sfp
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC59	@,
	movt	r2, #:upper16:.LC59	@,
	str	r0, [ip, #32]	@, <variable>.au_cpb_removal_delay_length_minus1
	ldr	r0, [r4, r9]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r3, [fp, #-52]	@, %sfp
	str	r0, [r3, #36]	@, <variable>.dpb_output_delay_length_minus1
	b	.L947	@
.L975:
	ldr	r0, [r4, r5]	@, <variable>.pBS
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC56	@,
	movt	r2, #:upper16:.LC56	@,
	bl	HEVC_u_v	@
	ldr	r5, [fp, #-52]	@, %sfp
	str	r0, [r5, #24]	@, <variable>.cpb_size_du_scale
	b	.L949	@
.L974:
	mov	r1, #8	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r2, #:lower16:.LC50	@,
	movt	r2, #:upper16:.LC50	@,
	bl	HEVC_u_v	@
	ldr	r9, [fp, #-52]	@, %sfp
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC51	@,
	movt	r2, #:upper16:.LC51	@,
	str	r0, [r9, #4]	@, <variable>.tick_divisor_minus2
	ldr	r0, [r4, r5]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r3, [fp, #-52]	@, %sfp
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC52	@,
	movt	r2, #:upper16:.LC52	@,
	str	r0, [r3, #8]	@, <variable>.du_cpb_removal_delay_increment_length_minus1
	ldr	r0, [r4, r5]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	ip, [fp, #-52]	@, %sfp
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC53	@,
	movt	r2, #:upper16:.LC53	@,
	strb	r0, [ip, #3]	@, <variable>.sub_pic_cpb_params_in_pic_timing_sei_flag
	ldr	r0, [r4, r5]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r5, [fp, #-52]	@, %sfp
	str	r0, [r5, #36]	@, <variable>.dpb_output_delay_length_minus1
	b	.L948	@
	.fnend
	.size	HEVC_DecHrdParam, .-HEVC_DecHrdParam
	.align	2
	.global	HEVC_DecVuiParam
	.type	HEVC_DecVuiParam, %function
HEVC_DecVuiParam:
	.fnstart
.LFB1657:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, .L998	@ tmp191,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	mov	r4, r1	@ pVUI, pVUI
	add	lr, r3, #16	@ tmp194, tmp191,
	mov	r6, r2	@ pSps, pSps
	ldmia	r3, {r0, r1, r2, r3}	@ tmp191,,,,
	sub	ip, fp, #52	@ tmp190,,
	sub	r8, fp, #68	@ tmp193,,
	movw	r7, #:lower16:1960172	@ tmp195,
	movt	r7, #:upper16:1960172	@ tmp195,
	stmia	ip, {r0, r1, r2, r3}	@ tmp190,,,,
	ldmia	lr, {r0, r1, r2, r3}	@ tmp194,,,,
	stmia	r8, {r0, r1, r2, r3}	@ tmp193,,,,
	mov	r1, #1	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC71	@,
	movt	r2, #:upper16:.LC71	@,
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.46844,
	strb	r0, [r4, #0]	@ D.46844, <variable>.aspect_ratio_info_present_flag
	cmp	r0, #0	@ D.46844,
	bne	.L989	@,
.L977:
	movw	r7, #:lower16:1960172	@ tmp208,
	movt	r7, #:upper16:1960172	@ tmp208,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC75	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC75	@,
	bl	HEVC_u_v	@
	uxtb	r1, r0	@ D.46859,
	strb	r1, [r4, #1]	@ D.46859, <variable>.overscan_info_present_flag
	cmp	r1, #0	@ D.46859,
	bne	.L990	@,
.L978:
	movw	r7, #:lower16:1960172	@ tmp216,
	movt	r7, #:upper16:1960172	@ tmp216,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC77	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC77	@,
	bl	HEVC_u_v	@
	uxtb	r2, r0	@ D.46868,
	strb	r2, [r4, #3]	@ D.46868, <variable>.video_signal_type_present_flag
	cmp	r2, #0	@ D.46868,
	bne	.L991	@,
.L979:
	movw	r7, #:lower16:1960172	@ tmp240,
	movt	r7, #:upper16:1960172	@ tmp240,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC84	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC84	@,
	bl	HEVC_u_v	@
	uxtb	ip, r0	@ D.46891,
	strb	ip, [r4, #6]	@ D.46891, <variable>.chroma_loc_info_present_flag
	cmp	ip, #0	@ D.46891,
	bne	.L992	@,
.L980:
	movw	r7, #:lower16:1960172	@ tmp250,
	movt	r7, #:upper16:1960172	@ tmp250,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC87	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC87	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC88	@,
	movt	r2, #:upper16:.LC88	@,
	strb	r0, [r4, #7]	@, <variable>.neutral_chroma_indication_flag
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC89	@,
	movt	r2, #:upper16:.LC89	@,
	strb	r0, [r4, #8]	@, <variable>.field_seq_flag
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC90	@,
	movt	r2, #:upper16:.LC90	@,
	strb	r0, [r4, #9]	@, <variable>.frame_field_info_present_flag
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r3, r0	@ D.46910,
	strb	r3, [r4, #10]	@ D.46910, <variable>.default_display_window_flag
	cmp	r3, #0	@ D.46910,
	beq	.L981	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC91	@,
	movt	r1, #:upper16:.LC91	@,
	bl	HEVC_ue_v	@
	str	r0, [r4, #60]	@ D.46915, <variable>.def_disp_win_left_offset
	ldr	r3, [r6, #64]	@ D.46916, <variable>.chroma_format_idc
	cmp	r3, #3	@ D.46916,
	bhi	.L993	@,
	sub	r1, fp, #36	@,,
	add	r3, r1, r3, asl #2	@, tmp272,, D.46916,
	movw	r1, #:lower16:.LC93	@,
	movt	r1, #:upper16:.LC93	@,
	ldr	ip, [r3, #-16]	@ tmp274, m_winUnitX
	mul	lr, ip, r0	@ tmp275, tmp274, D.46915
	str	lr, [r4, #60]	@ tmp275, <variable>.def_disp_win_left_offset
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	sub	r2, fp, #36	@,,
	movw	r1, #:lower16:.LC94	@,
	movt	r1, #:upper16:.LC94	@,
	str	r0, [r4, #64]	@ D.46925, <variable>.def_disp_win_right_offset
	ldr	r3, [r6, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	add	ip, r2, r3, asl #2	@, tmp282,, <variable>.chroma_format_idc,
	ldr	r3, [ip, #-16]	@ tmp284, m_winUnitX
	mul	r0, r3, r0	@ tmp285, tmp284, D.46925
	str	r0, [r4, #64]	@ tmp285, <variable>.def_disp_win_right_offset
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	sub	r2, fp, #36	@,,
	movw	r1, #:lower16:.LC95	@,
	movt	r1, #:upper16:.LC95	@,
	str	r0, [r4, #68]	@ D.46929, <variable>.def_disp_win_top_offset
	ldr	ip, [r6, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	add	r3, r2, ip, asl #2	@, tmp292,, <variable>.chroma_format_idc,
	ldr	ip, [r3, #-32]	@ tmp294, m_winUnitY
	mul	r0, ip, r0	@ tmp295, tmp294, D.46929
	str	r0, [r4, #68]	@ tmp295, <variable>.def_disp_win_top_offset
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	sub	r2, fp, #36	@,,
	str	r0, [r4, #72]	@ D.46934, <variable>.def_disp_win_bottom_offset
	ldr	r3, [r6, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	add	ip, r2, r3, asl #2	@, tmp302,, <variable>.chroma_format_idc,
	ldr	r1, [ip, #-32]	@ tmp304, m_winUnitY
	mul	r7, r1, r0	@ tmp305, tmp304, D.46934
	str	r7, [r4, #72]	@ tmp305, <variable>.def_disp_win_bottom_offset
.L981:
	movw	r7, #:lower16:1960172	@ tmp306,
	movt	r7, #:upper16:1960172	@ tmp306,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC96	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC96	@,
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.46939,
	strb	r0, [r4, #11]	@ D.46939, <variable>.vui_timing_info_present_flag
	cmp	r0, #0	@ D.46939,
	beq	.L984	@,
	mov	r1, #32	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC97	@,
	movt	r2, #:upper16:.LC97	@,
	bl	HEVC_u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC98	@,
	movt	r2, #:upper16:.LC98	@,
	str	r0, [r4, #76]	@, <variable>.vui_num_units_in_tick
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC99	@,
	movt	r2, #:upper16:.LC99	@,
	str	r0, [r4, #80]	@, <variable>.vui_time_scale
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r2, r0	@ D.46949,
	strb	r2, [r4, #12]	@ D.46949, <variable>.vui_poc_proportional_to_timing_flag
	cmp	r2, #0	@ D.46949,
	bne	.L994	@,
.L985:
	movw	lr, #:lower16:1960172	@ tmp323,
	movt	lr, #:upper16:1960172	@ tmp323,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC101	@,
	ldr	r0, [r5, lr]	@, <variable>.pBS
	movt	r2, #:upper16:.LC101	@,
	bl	HEVC_u_v	@
	uxtb	ip, r0	@ D.46957,
	strb	ip, [r4, #13]	@ D.46957, <variable>.vui_hrd_parameters_present_flag
	cmp	ip, #0	@ D.46957,
	bne	.L995	@,
.L984:
	movw	r6, #:lower16:1960172	@ tmp330,
	movt	r6, #:upper16:1960172	@ tmp330,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC103	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC103	@,
	bl	HEVC_u_v	@
	uxtb	r3, r0	@ D.46969,
	strb	r3, [r4, #14]	@ D.46969, <variable>.bitstream_restriction_flag
	cmp	r3, #0	@ D.46969,
	bne	.L996	@,
.L983:
	mov	r0, r3	@, D.46920
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L996:
	mov	r1, #1	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC104	@,
	movt	r2, #:upper16:.LC104	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC105	@,
	movt	r2, #:upper16:.LC105	@,
	strb	r0, [r4, #15]	@, <variable>.tiles_fixed_structure_flag
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC106	@,
	movt	r2, #:upper16:.LC106	@,
	strb	r0, [r4, #16]	@, <variable>.motion_vectors_over_pic_boundaries_flag
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC107	@,
	movt	r1, #:upper16:.LC107	@,
	strb	r0, [r4, #17]	@, <variable>.restricted_ref_pic_lists_flag
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #4096	@ D.46983,
	str	r0, [r4, #88]	@ D.46983, <variable>.min_spatial_segmentation_idc
	bcs	.L997	@,
.L987:
	movw	r6, #:lower16:1960172	@ tmp351,
	movt	r6, #:upper16:1960172	@ tmp351,
	movw	r1, #:lower16:.LC109	@,
	movt	r1, #:upper16:.LC109	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC110	@,
	movt	r1, #:upper16:.LC110	@,
	str	r0, [r4, #92]	@, <variable>.max_bytes_per_pic_denom
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	str	r0, [r4, #96]	@, <variable>.max_bits_per_min_cu_denom
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC112	@,
	movt	r1, #:upper16:.LC112	@,
	str	r0, [r4, #100]	@, <variable>.log2_max_mv_length_horizontal
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	mov	r3, #0	@ D.46920,
	str	r0, [r4, #104]	@, <variable>.log2_max_mv_length_vertical
	b	.L983	@
.L992:
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC85	@,
	movt	r1, #:upper16:.LC85	@,
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC86	@,
	movt	r1, #:upper16:.LC86	@,
	str	r0, [r4, #52]	@, <variable>.chroma_sample_loc_type_top_field
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	str	r0, [r4, #56]	@, <variable>.chroma_sample_loc_type_bottom_field
	b	.L980	@
.L989:
	ldr	r0, [r5, r7]	@, <variable>.pBS
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC72	@,
	movt	r2, #:upper16:.LC72	@,
	bl	HEVC_u_v	@
	cmp	r0, #255	@ D.46849,
	str	r0, [r4, #24]	@ D.46849, <variable>.aspect_ratio_idc
	bne	.L977	@,
	mov	r1, #16	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC73	@,
	movt	r2, #:upper16:.LC73	@,
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC74	@,
	movt	r2, #:upper16:.LC74	@,
	str	r0, [r4, #28]	@, <variable>.sar_width
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	str	r0, [r4, #32]	@, <variable>.sar_height
	b	.L977	@
.L991:
	mov	r1, #3	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC78	@,
	movt	r2, #:upper16:.LC78	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC79	@,
	movt	r2, #:upper16:.LC79	@,
	str	r0, [r4, #36]	@, <variable>.video_format
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC80	@,
	movt	r2, #:upper16:.LC80	@,
	strb	r0, [r4, #4]	@, <variable>.video_full_range_flag
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.46879,
	strb	r0, [r4, #5]	@ D.46879, <variable>.colour_description_present_flag
	cmp	r0, #0	@ D.46879,
	beq	.L979	@,
	mov	r1, #8	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC81	@,
	movt	r2, #:upper16:.LC81	@,
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC82	@,
	movt	r2, #:upper16:.LC82	@,
	str	r0, [r4, #40]	@, <variable>.colour_primaries
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC83	@,
	movt	r2, #:upper16:.LC83	@,
	str	r0, [r4, #44]	@, <variable>.transfer_characteristics
	ldr	r0, [r5, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	str	r0, [r4, #48]	@, <variable>.matrix_coeffs
	b	.L979	@
.L990:
	ldr	r0, [r5, r7]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC76	@,
	movt	r2, #:upper16:.LC76	@,
	bl	HEVC_u_v	@
	strb	r0, [r4, #2]	@, <variable>.overscan_appropriate_flag
	b	.L978	@
.L995:
	ldr	r3, [r6, #56]	@, <variable>.sps_max_sub_layers_minus1
	mov	r0, r5	@, pHevcCtx
	add	r1, r4, #108	@, pVUI,
	mov	r2, #1	@,
	bl	HEVC_DecHrdParam	@
	cmp	r0, #0	@,
	beq	.L984	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC102	@,
	movt	r1, #:upper16:.LC102	@,
	bl	dprint_vfmw	@
	mvn	r3, #0	@ D.46920,
	b	.L983	@
.L994:
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC100	@,
	movt	r1, #:upper16:.LC100	@,
	bl	HEVC_ue_v	@
	str	r0, [r4, #84]	@, <variable>.vui_num_ticks_poc_diff_one_minus1
	b	.L985	@
.L997:
	movw	r1, #:lower16:.LC108	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC108	@,
	bl	dprint_vfmw	@
	b	.L987	@
.L993:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC92	@,
	movt	r1, #:upper16:.LC92	@,
	bl	dprint_vfmw	@
	mvn	r3, #0	@ D.46920,
	b	.L983	@
.L999:
	.align	2
.L998:
	.word	.LANCHOR1+216
	.fnend
	.size	HEVC_DecVuiParam, .-HEVC_DecVuiParam
	.align	2
	.global	HEVC_DecPredWeightTable
	.type	HEVC_DecPredWeightTable, %function
HEVC_DecPredWeightTable:
	.fnstart
.LFB1656:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:1960184	@ tmp194,
	movw	r8, #:lower16:2125436	@ tmp195,
	movt	r1, #:upper16:1960184	@ tmp194,
	movt	r8, #:upper16:2125436	@ tmp195,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movw	r2, #7704	@ tmp198,
	movw	r5, #:lower16:2125420	@ tmp201,
	ldr	ip, [r0, r8]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	r5, #:upper16:2125420	@ tmp201,
	ldr	r0, [r0, r1]	@ <variable>.pPPS, <variable>.pPPS
	movw	r3, #:lower16:1960180	@ tmp200,
	ldr	r1, [r4, r5]	@ D.46675, <variable>.CurrSlice.slice_type
	movt	r3, #:upper16:1960180	@ tmp200,
	mla	r2, r2, ip, r0	@ pPPS, tmp198, <variable>.CurrSlice.pic_parameter_set_id, <variable>.pPPS
	cmp	r1, #1	@ D.46675,
	ldr	r8, [r4, r3]	@ D.46668, <variable>.pSPS
	ldr	r5, [r2, #32]	@ D.46669, <variable>.seq_parameter_set_id
	beq	.L1053	@,
	cmp	r1, #0	@ D.46675,
	bne	.L1003	@,
	ldrb	r0, [r2, #11]	@ zero_extendqisi2	@ <variable>.weighted_bipred_flag, <variable>.weighted_bipred_flag
	cmp	r0, #0	@ <variable>.weighted_bipred_flag,
	beq	.L1003	@,
.L1002:
	movw	r7, #:lower16:1960172	@ tmp204,
	movt	r7, #:upper16:1960172	@ tmp204,
	movw	r1, #:lower16:.LC113	@,
	movt	r1, #:upper16:.LC113	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r6, #:lower16:2126928	@ tmp207,
	bl	HEVC_ue_v	@
	movt	r6, #:upper16:2126928	@ tmp207,
	cmp	r0, #7	@ prephitmp.3950,
	str	r0, [r4, r6]	@ prephitmp.3950, <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom
	bhi	.L1054	@,
	movw	r2, #36364	@ tmp210,
	mla	r5, r2, r5, r8	@ pSPS, tmp210, D.46669, D.46668
	ldr	lr, [r5, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	lr, #0	@ <variable>.chroma_format_idc,
	bne	.L1055	@,
	movw	r6, #:lower16:2126932	@ tmp219,
	movt	r6, #:upper16:2126932	@ tmp219,
	ldr	r1, [r4, r6]	@ prephitmp.3826, <variable>.CurrSlice.pred_weight_table.delta_chroma_log2_weight_denom
.L1008:
	movw	sl, #:lower16:2125528	@ tmp222,
	movt	sl, #:upper16:2125528	@ tmp222,
	movw	lr, #:lower16:2127896	@ tmp220,
	movt	lr, #:upper16:2127896	@ tmp220,
	ldr	r3, [r4, sl]	@ <variable>.CurrSlice.num_ref_idx, <variable>.CurrSlice.num_ref_idx
	add	r1, r0, r1	@ tmp221, prephitmp.3950, prephitmp.3826
	str	r1, [r4, lr]	@ tmp221, <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom
	cmp	r3, #0	@ <variable>.CurrSlice.num_ref_idx,
	beq	.L1010	@,
	movw	r7, #:lower16:2126936	@ ivtmp.3905,
	movt	r7, #:upper16:2126936	@ ivtmp.3905,
	movw	r8, #:lower16:1960172	@ tmp437,
	add	r7, r4, r7	@ ivtmp.3905, pHevcCtx, ivtmp.3905
	movt	r8, #:upper16:1960172	@ tmp437,
	mov	r6, #0	@ i.3912,
.L1011:
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC117	@,
	movt	r2, #:upper16:.LC117	@,
	bl	HEVC_u_v	@
	ldr	r3, [r4, sl]	@ prephitmp.3910, <variable>.CurrSlice.num_ref_idx
	add	r6, r6, #1	@ i.3912, i.3912,
	cmp	r3, r6	@ prephitmp.3910, i.3912
	str	r0, [r7], #4	@, <variable>.CurrSlice.pred_weight_table.luma_weight_l0_flag
	bhi	.L1011	@,
.L1010:
	ldr	r0, [r5, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r0, #0	@ <variable>.chroma_format_idc,
	beq	.L1012	@,
	cmp	r3, #0	@ prephitmp.3910,
	beq	.L1014	@,
	movw	sl, #:lower16:2126996	@ ivtmp.3900,
	movt	sl, #:upper16:2126996	@ ivtmp.3900,
	add	r7, r4, sl	@ ivtmp.3900, pHevcCtx, ivtmp.3900
	movw	r8, #:lower16:1960172	@ tmp433,
	movw	sl, #:lower16:2125528	@ tmp436,
	movt	r8, #:upper16:1960172	@ tmp433,
	movt	sl, #:upper16:2125528	@ tmp436,
	mov	r6, #0	@ i.3915,
.L1016:
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC118	@,
	movt	r2, #:upper16:.LC118	@,
	bl	HEVC_u_v	@
	ldr	r3, [r4, sl]	@ prephitmp.3827, <variable>.CurrSlice.num_ref_idx
	add	r6, r6, #1	@ i.3915, i.3915,
	cmp	r3, r6	@ prephitmp.3827, i.3915
	str	r0, [r7], #4	@, <variable>.CurrSlice.pred_weight_table.chroma_weight_l0_flag
	bhi	.L1016	@,
.L1017:
	cmp	r3, #0	@ prephitmp.3827,
	beq	.L1014	@,
	movw	r3, #:lower16:2126936	@ ivtmp.3881,
	movw	ip, #:lower16:2127300	@ ivtmp.3892,
	movt	r3, #:upper16:2126936	@ ivtmp.3881,
	movt	ip, #:upper16:2127300	@ ivtmp.3892,
	movw	sl, #:lower16:2126928	@ tmp425,
	movw	r8, #:lower16:1960172	@,
	movw	r9, #:lower16:2127896	@,
	movt	r8, #:upper16:1960172	@,
	movt	r9, #:upper16:2127896	@,
	str	r8, [fp, #-48]	@, %sfp
	str	r9, [fp, #-52]	@, %sfp
	add	r6, r4, r3	@ ivtmp.3881, pHevcCtx, ivtmp.3881
	movw	r9, #:lower16:2125528	@ tmp432,
	add	r7, r4, ip	@ ivtmp.3892, pHevcCtx, ivtmp.3892
	movt	sl, #:upper16:2126928	@ tmp425,
	movt	r9, #:upper16:2125528	@ tmp432,
	mov	r8, #0	@ i,
	b	.L1027	@
.L1018:
	ldr	r2, [r4, sl]	@ <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom
	mov	r1, #1	@,
	str	r3, [r6, #180]	@ tmp236, <variable>.CurrSlice.pred_weight_table.luma_offset_l0
	mov	r0, r1, asl r2	@ tmp255,,
	str	r0, [r6, #964]	@ tmp255, <variable>.CurrSlice.pred_weight_table.LumaWeightL0
.L1020:
	ldr	r3, [r5, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L1021	@,
	ldr	r3, [r6, #60]	@ tmp258, <variable>.CurrSlice.pred_weight_table.chroma_weight_l0_flag
	cmp	r3, #0	@ tmp258,
	bne	.L1022	@,
	ldr	r2, [fp, #-52]	@, %sfp
	mov	r1, #1	@,
	str	r3, [r7, #784]	@ tmp258, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL0
	str	r3, [r7, #780]	@ tmp258, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL0
	ldr	r0, [r4, r2]	@ <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom
	mov	ip, r1, asl r0	@ tmp262,,
	str	ip, [r7, #664]	@ tmp262, <variable>.CurrSlice.pred_weight_table.ChromaWeightL0
	str	ip, [r7, #660]	@ tmp262, <variable>.CurrSlice.pred_weight_table.ChromaWeightL0
.L1021:
	ldr	r0, [r4, r9]	@ <variable>.CurrSlice.num_ref_idx, <variable>.CurrSlice.num_ref_idx
	add	r8, r8, #1	@ i, i,
	add	r6, r6, #4	@ ivtmp.3881, ivtmp.3881,
	add	r7, r7, #8	@ ivtmp.3892, ivtmp.3892,
	cmp	r0, r8	@ <variable>.CurrSlice.num_ref_idx, i
	bls	.L1014	@,
.L1027:
	ldr	r3, [r6, #0]	@ tmp236, <variable>.CurrSlice.pred_weight_table.luma_weight_l0_flag
	cmp	r3, #0	@ tmp236,
	beq	.L1018	@,
	ldr	lr, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC119	@,
	movt	r1, #:upper16:.LC119	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	HEVC_se_v	@
	add	r1, r0, #128	@ tmp240, D.46717,
	mov	r2, r0	@ D.46717,
	cmp	r1, #255	@ tmp240,
	str	r0, [r6, #120]	@ D.46717, <variable>.CurrSlice.pred_weight_table.delta_luma_weight_l0
	bhi	.L1056	@,
	ldr	ip, [fp, #-48]	@, %sfp
	mov	lr, #1	@,
	ldr	r3, [r4, sl]	@ <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom
	movw	r1, #:lower16:.LC121	@,
	movt	r1, #:upper16:.LC121	@,
	ldr	r0, [r4, ip]	@, <variable>.pBS
	add	ip, r2, lr, asl r3	@, tmp246, D.46717,,
	str	ip, [r6, #964]	@ tmp246, <variable>.CurrSlice.pred_weight_table.LumaWeightL0
	bl	HEVC_se_v	@
	add	r2, r0, #128	@ tmp250, D.46727,
	str	r0, [r6, #180]	@ D.46727, <variable>.CurrSlice.pred_weight_table.luma_offset_l0
	cmp	r2, #255	@ tmp250,
	bls	.L1020	@,
	mov	r2, r0	@, D.46727
	movw	r1, #:lower16:.LC122	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC122	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
.L1053:
	ldrb	r3, [r2, #10]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r3, #0	@ <variable>.weighted_pred_flag,
	bne	.L1002	@,
.L1003:
	mov	r0, #0	@ D.46689,
.L1005:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1022:
	ldr	lr, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC123	@,
	movt	r1, #:upper16:.LC123	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	HEVC_se_v	@
	add	r3, r0, #128	@ tmp271, temp.3944,
	str	r0, [r7, #-124]	@ temp.3944, <variable>.CurrSlice.pred_weight_table.delta_chroma_weight_l0
	cmp	r3, #255	@ tmp271,
	bhi	.L1023	@,
	ldr	r1, [fp, #-48]	@, %sfp
	ldr	r0, [r4, r1]	@, <variable>.pBS
	movw	r1, #:lower16:.LC124	@,
	movt	r1, #:upper16:.LC124	@,
	bl	HEVC_se_v	@
	movw	ip, #1023	@,
	mov	r2, r0	@ temp.3940,
	add	r0, r0, #512	@ tmp274, temp.3940,
	cmp	r0, ip	@ tmp274,
	str	r2, [r7, #-4]	@ temp.3940, <variable>.CurrSlice.pred_weight_table.delta_chroma_offset_l0
	bhi	.L1024	@,
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC123	@,
	ldr	lr, [fp, #-48]	@, %sfp
	movt	r1, #:upper16:.LC123	@,
	ldr	r3, [r7, #-124]	@ tmp280, <variable>.CurrSlice.pred_weight_table.delta_chroma_weight_l0
	ldr	ip, [r4, r0]	@ <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom
	ldr	r0, [r4, lr]	@, <variable>.pBS
	mov	lr, #1	@,
	add	r3, r3, lr, asl ip	@, temp.3971, tmp280,,
	str	r3, [r7, #660]	@ temp.3971, <variable>.CurrSlice.pred_weight_table.ChromaWeightL0
	mov	r3, r3, asl #7	@ tmp281, temp.3971,
	mov	lr, r3, asr ip	@ tmp283, tmp281,
	rsb	ip, lr, #128	@ tmp285, tmp283,
	mvn	lr, #127	@,
	add	r3, ip, r2	@ iftmp.3977, tmp285, temp.3940
	cmp	r3, #127	@ iftmp.3977,
	movge	r3, #127	@ iftmp.3977,
	cmp	r3, lr	@ iftmp.3977,
	strge	r3, [r7, #780]	@, iftmp.3977, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL0
	strlt	lr, [r7, #780]	@,, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL0
	bl	HEVC_se_v	@
	add	r2, r0, #128	@ tmp290, D.46741,
	str	r0, [r7, #-120]	@ D.46741, <variable>.CurrSlice.pred_weight_table.delta_chroma_weight_l0
	cmp	r2, #255	@ tmp290,
	bhi	.L1023	@,
	ldr	ip, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC124	@,
	movt	r1, #:upper16:.LC124	@,
	ldr	r0, [r4, ip]	@, <variable>.pBS
	bl	HEVC_se_v	@
	movw	r2, #1023	@,
	add	r1, r0, #512	@ tmp294, D.46749,
	str	r0, [r7, #0]	@ D.46749, <variable>.CurrSlice.pred_weight_table.delta_chroma_offset_l0
	cmp	r1, r2	@ tmp294,
	bhi	.L1024	@,
	ldr	lr, [fp, #-52]	@, %sfp
	mov	ip, #1	@,
	ldr	r1, [r7, #-120]	@ tmp301, <variable>.CurrSlice.pred_weight_table.delta_chroma_weight_l0
	add	r8, r8, #1	@ i, i,
	add	r6, r6, #4	@ ivtmp.3881, ivtmp.3881,
	ldr	r2, [r4, lr]	@ <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom
	add	r3, r1, ip, asl r2	@, D.46758, tmp301,,
	str	r3, [r7, #664]	@ D.46758, <variable>.CurrSlice.pred_weight_table.ChromaWeightL0
	mov	lr, r3, asl #7	@ tmp302, D.46758,
	mvn	r3, #127	@,
	mov	ip, lr, asr r2	@ tmp304, tmp302,
	rsb	r1, ip, #128	@ tmp306, tmp304,
	add	lr, r1, r0	@ iftmp.3931, tmp306, D.46749
	ldr	r0, [r4, r9]	@ <variable>.CurrSlice.num_ref_idx, <variable>.CurrSlice.num_ref_idx
	cmp	lr, #127	@ iftmp.3931,
	movge	lr, #127	@ iftmp.3931,
	cmp	lr, r3	@ iftmp.3931,
	strge	lr, [r7, #784]	@, iftmp.3931, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL0
	strlt	r3, [r7, #784]	@,, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL0
	cmp	r0, r8	@ <variable>.CurrSlice.num_ref_idx, i
	add	r7, r7, #8	@ ivtmp.3892, ivtmp.3892,
	bhi	.L1027	@,
.L1014:
	movw	r2, #:lower16:2125420	@ tmp311,
	movt	r2, #:upper16:2125420	@ tmp311,
	ldr	r6, [r4, r2]	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r6, #0	@ <variable>.CurrSlice.slice_type,
	bne	.L1003	@,
	movw	sl, #:lower16:2125532	@ tmp313,
	movt	sl, #:upper16:2125532	@ tmp313,
	ldr	r3, [r4, sl]	@ <variable>.CurrSlice.num_ref_idx, <variable>.CurrSlice.num_ref_idx
	cmp	r3, #0	@ <variable>.CurrSlice.num_ref_idx,
	beq	.L1029	@,
	movw	r7, #:lower16:2127416	@ ivtmp.3876,
	movt	r7, #:upper16:2127416	@ ivtmp.3876,
	movw	r8, #:lower16:1960172	@ tmp421,
	add	r7, r4, r7	@ ivtmp.3876, pHevcCtx, ivtmp.3876
	movt	r8, #:upper16:1960172	@ tmp421,
.L1030:
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC127	@,
	movt	r2, #:upper16:.LC127	@,
	bl	HEVC_u_v	@
	ldr	r3, [r4, sl]	@ prephitmp.3932, <variable>.CurrSlice.num_ref_idx
	add	r6, r6, #1	@ i.3928, i.3928,
	cmp	r3, r6	@ prephitmp.3932, i.3928
	str	r0, [r7], #4	@, <variable>.CurrSlice.pred_weight_table.luma_weight_l1_flag
	bhi	.L1030	@,
.L1029:
	ldr	r1, [r5, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r1, #0	@ <variable>.chroma_format_idc,
	bne	.L1057	@,
	movw	r3, #:lower16:2125532	@ tmp320,
	movt	r3, #:upper16:2125532	@ tmp320,
	ldr	r3, [r4, r3]	@ prephitmp.3929, <variable>.CurrSlice.num_ref_idx
.L1035:
	cmp	r3, #0	@ prephitmp.3929,
	beq	.L1003	@,
	movw	ip, #:lower16:2127416	@ ivtmp.3852,
	movw	sl, #:lower16:2127780	@ ivtmp.3863,
	movt	ip, #:upper16:2127416	@ ivtmp.3852,
	movt	sl, #:upper16:2127780	@ ivtmp.3863,
	add	r7, r4, sl	@ ivtmp.3863, pHevcCtx, ivtmp.3863
	movw	r8, #:lower16:1960172	@,
	movw	sl, #:lower16:2126928	@ tmp409,
	movt	r8, #:upper16:1960172	@,
	movw	r9, #:lower16:2127896	@,
	str	r8, [fp, #-48]	@, %sfp
	movt	r9, #:upper16:2127896	@,
	add	r6, r4, ip	@ ivtmp.3852, pHevcCtx, ivtmp.3852
	str	r9, [fp, #-52]	@, %sfp
	movt	sl, #:upper16:2126928	@ tmp409,
	movw	r9, #:lower16:2125532	@ tmp416,
	mov	r8, #0	@ i.3957,
	movt	r9, #:upper16:2125532	@ tmp416,
	b	.L1045	@
.L1036:
	ldr	r2, [r4, sl]	@ <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom
	mov	r1, #1	@,
	str	r3, [r6, #180]	@ tmp327, <variable>.CurrSlice.pred_weight_table.luma_offset_l1
	mov	r0, r1, asl r2	@ tmp346,,
	str	r0, [r6, #784]	@ tmp346, <variable>.CurrSlice.pred_weight_table.LumaWeightL1
.L1038:
	ldr	r3, [r5, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L1039	@,
	ldr	r3, [r6, #60]	@ tmp349, <variable>.CurrSlice.pred_weight_table.chroma_weight_l1_flag
	cmp	r3, #0	@ tmp349,
	bne	.L1040	@,
	ldr	r2, [fp, #-52]	@, %sfp
	mov	r1, #1	@,
	str	r3, [r7, #604]	@ tmp349, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL1
	str	r3, [r7, #600]	@ tmp349, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL1
	ldr	r0, [r4, r2]	@ <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom
	mov	ip, r1, asl r0	@ tmp353,,
	str	ip, [r7, #484]	@ tmp353, <variable>.CurrSlice.pred_weight_table.ChromaWeightL1
	str	ip, [r7, #480]	@ tmp353, <variable>.CurrSlice.pred_weight_table.ChromaWeightL1
.L1039:
	ldr	r0, [r4, r9]	@ <variable>.CurrSlice.num_ref_idx, <variable>.CurrSlice.num_ref_idx
	add	r8, r8, #1	@ i.3957, i.3957,
	add	r6, r6, #4	@ ivtmp.3852, ivtmp.3852,
	add	r7, r7, #8	@ ivtmp.3863, ivtmp.3863,
	cmp	r0, r8	@ <variable>.CurrSlice.num_ref_idx, i.3957
	bls	.L1003	@,
.L1045:
	ldr	r3, [r6, #0]	@ tmp327, <variable>.CurrSlice.pred_weight_table.luma_weight_l1_flag
	cmp	r3, #0	@ tmp327,
	beq	.L1036	@,
	ldr	lr, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC129	@,
	movt	r1, #:upper16:.LC129	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	HEVC_se_v	@
	mov	r2, r0	@ D.46783,
	add	r0, r0, #128	@ tmp331, D.46783,
	cmp	r0, #255	@ tmp331,
	str	r2, [r6, #120]	@ D.46783, <variable>.CurrSlice.pred_weight_table.delta_luma_weight_l1
	bhi	.L1058	@,
	ldr	lr, [fp, #-48]	@, %sfp
	mov	ip, #1	@,
	ldr	r3, [r4, sl]	@ <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom
	movw	r1, #:lower16:.LC131	@,
	movt	r1, #:upper16:.LC131	@,
	add	r3, r2, ip, asl r3	@, tmp337, D.46783,,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	str	r3, [r6, #784]	@ tmp337, <variable>.CurrSlice.pred_weight_table.LumaWeightL1
	bl	HEVC_se_v	@
	add	r2, r0, #128	@ tmp341, D.46792,
	str	r0, [r6, #180]	@ D.46792, <variable>.CurrSlice.pred_weight_table.luma_offset_l1
	cmp	r2, #255	@ tmp341,
	bls	.L1038	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC132	@,
	movt	r1, #:upper16:.LC132	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
.L1012:
	movw	r2, #:lower16:2125528	@ tmp229,
	movt	r2, #:upper16:2125528	@ tmp229,
	ldr	r3, [r4, r2]	@ prephitmp.3827, <variable>.CurrSlice.num_ref_idx
	b	.L1017	@
.L1055:
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC115	@,
	movt	r1, #:upper16:.LC115	@,
	bl	HEVC_se_v	@
	movw	ip, #:lower16:2126932	@ tmp215,
	movt	ip, #:upper16:2126932	@ tmp215,
	add	r3, r0, #7	@ tmp216, prephitmp.3826,
	mov	r1, r0	@ prephitmp.3826,
	cmp	r3, #14	@ tmp216,
	str	r0, [r4, ip]	@ prephitmp.3826, <variable>.CurrSlice.pred_weight_table.delta_chroma_log2_weight_denom
	ldrls	r0, [r4, r6]	@ prephitmp.3950, <variable>.CurrSlice.pred_weight_table.luma_log2_weight_denom
	bls	.L1008	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC116	@,
	movt	r1, #:upper16:.LC116	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
.L1023:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC125	@,
	movt	r1, #:upper16:.LC125	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
.L1024:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC126	@,
	movt	r1, #:upper16:.LC126	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
.L1057:
	cmp	r3, #0	@ prephitmp.3932,
	beq	.L1003	@,
	movw	r6, #:lower16:2127476	@ ivtmp.3871,
	movw	r8, #:lower16:1960172	@ tmp417,
	movt	r6, #:upper16:2127476	@ ivtmp.3871,
	movw	sl, #:lower16:2125532	@ tmp420,
	movt	r8, #:upper16:1960172	@ tmp417,
	movt	sl, #:upper16:2125532	@ tmp420,
	add	r7, r4, r6	@ ivtmp.3871, pHevcCtx, ivtmp.3871
	mov	r6, #0	@ i.3937,
.L1034:
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC128	@,
	movt	r2, #:upper16:.LC128	@,
	bl	HEVC_u_v	@
	ldr	r3, [r4, sl]	@ prephitmp.3929, <variable>.CurrSlice.num_ref_idx
	add	r6, r6, #1	@ i.3937, i.3937,
	cmp	r3, r6	@ prephitmp.3929, i.3937
	str	r0, [r7], #4	@, <variable>.CurrSlice.pred_weight_table.chroma_weight_l1_flag
	bhi	.L1034	@,
	b	.L1035	@
.L1040:
	ldr	lr, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC133	@,
	movt	r1, #:upper16:.LC133	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	HEVC_se_v	@
	add	r3, r0, #128	@ tmp362, temp.3980,
	str	r0, [r7, #-124]	@ temp.3980, <variable>.CurrSlice.pred_weight_table.delta_chroma_weight_l1
	cmp	r3, #255	@ tmp362,
	bhi	.L1041	@,
	ldr	r1, [fp, #-48]	@, %sfp
	ldr	r0, [r4, r1]	@, <variable>.pBS
	movw	r1, #:lower16:.LC134	@,
	movt	r1, #:upper16:.LC134	@,
	bl	HEVC_se_v	@
	movw	ip, #1023	@,
	mov	r2, r0	@ temp.3984,
	add	r0, r0, #512	@ tmp365, temp.3984,
	cmp	r0, ip	@ tmp365,
	str	r2, [r7, #-4]	@ temp.3984, <variable>.CurrSlice.pred_weight_table.delta_chroma_offset_l1
	bhi	.L1042	@,
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC133	@,
	ldr	lr, [fp, #-48]	@, %sfp
	movt	r1, #:upper16:.LC133	@,
	ldr	r3, [r7, #-124]	@ tmp371, <variable>.CurrSlice.pred_weight_table.delta_chroma_weight_l1
	ldr	ip, [r4, r0]	@ <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom
	ldr	r0, [r4, lr]	@, <variable>.pBS
	mov	lr, #1	@,
	add	r3, r3, lr, asl ip	@, temp.3990, tmp371,,
	str	r3, [r7, #480]	@ temp.3990, <variable>.CurrSlice.pred_weight_table.ChromaWeightL1
	mov	r3, r3, asl #7	@ tmp372, temp.3990,
	mov	lr, r3, asr ip	@ tmp374, tmp372,
	rsb	ip, lr, #128	@ tmp376, tmp374,
	mvn	lr, #127	@,
	add	r3, ip, r2	@ iftmp.3996, tmp376, temp.3984
	cmp	r3, #127	@ iftmp.3996,
	movge	r3, #127	@ iftmp.3996,
	cmp	r3, lr	@ iftmp.3996,
	strge	r3, [r7, #600]	@, iftmp.3996, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL1
	strlt	lr, [r7, #600]	@,, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL1
	bl	HEVC_se_v	@
	add	r2, r0, #128	@ tmp381, D.46806,
	str	r0, [r7, #-120]	@ D.46806, <variable>.CurrSlice.pred_weight_table.delta_chroma_weight_l1
	cmp	r2, #255	@ tmp381,
	bhi	.L1041	@,
	ldr	ip, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC134	@,
	movt	r1, #:upper16:.LC134	@,
	ldr	r0, [r4, ip]	@, <variable>.pBS
	bl	HEVC_se_v	@
	movw	r2, #1023	@,
	add	r1, r0, #512	@ tmp385, D.46814,
	str	r0, [r7, #0]	@ D.46814, <variable>.CurrSlice.pred_weight_table.delta_chroma_offset_l1
	cmp	r1, r2	@ tmp385,
	bhi	.L1042	@,
	ldr	lr, [fp, #-52]	@, %sfp
	mov	ip, #1	@,
	ldr	r1, [r7, #-120]	@ tmp392, <variable>.CurrSlice.pred_weight_table.delta_chroma_weight_l1
	ldr	r2, [r4, lr]	@ <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom, <variable>.CurrSlice.pred_weight_table.chroma_log2_weight_denom
	add	r3, r1, ip, asl r2	@, D.46821, tmp392,,
	str	r3, [r7, #484]	@ D.46821, <variable>.CurrSlice.pred_weight_table.ChromaWeightL1
	mov	lr, r3, asl #7	@ tmp393, D.46821,
	mvn	r3, #127	@,
	mov	ip, lr, asr r2	@ tmp395, tmp393,
	rsb	r1, ip, #128	@ tmp397, tmp395,
	add	lr, r1, r0	@ iftmp.798, tmp397, D.46814
	cmp	lr, #127	@ iftmp.798,
	movge	lr, #127	@ iftmp.798,
	cmp	lr, r3	@ iftmp.798,
	strge	lr, [r7, #604]	@, iftmp.798, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL1
	strlt	r3, [r7, #604]	@,, <variable>.CurrSlice.pred_weight_table.ChromaOffsetL1
	b	.L1039	@
.L1056:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC120	@,
	movt	r1, #:upper16:.LC120	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
.L1041:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC135	@,
	movt	r1, #:upper16:.LC135	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
.L1042:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC136	@,
	movt	r1, #:upper16:.LC136	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
.L1058:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC130	@,
	movt	r1, #:upper16:.LC130	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
.L1054:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC114	@,
	movt	r1, #:upper16:.LC114	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46689,
	b	.L1005	@
	.fnend
	.size	HEVC_DecPredWeightTable, .-HEVC_DecPredWeightTable
	.align	2
	.global	HEVC_DecRefPicListsModification
	.type	HEVC_DecRefPicListsModification, %function
HEVC_DecRefPicListsModification:
	.fnstart
.LFB1655:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pHevcCtx,
	cmpne	r1, #0	@, pSlice,
	mov	r4, r1	@ pSlice, pSlice
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	mov	r6, r2	@ pRpListModification, pRpListModification
	bne	.L1073	@,
.L1060:
	mvn	r0, #0	@ D.46594,
.L1068:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1073:
	cmp	r2, #0	@ pRpListModification,
	beq	.L1060	@,
	sub	r2, r3, #1	@ numRpsCurrTempList.4040, numRpsCurrTempList,
	movs	r2, r2, asr #1	@ numRpsCurrTempList.4047, numRpsCurrTempList.4040,
	moveq	r8, #1	@ length,
	beq	.L1062	@,
	mov	r8, #1	@ length,
.L1063:
	movs	r2, r2, asr #1	@ numRpsCurrTempList.4047, numRpsCurrTempList.4047,
	add	r8, r8, #1	@ length, length,
	bne	.L1063	@,
.L1062:
	movw	sl, #:lower16:1960172	@ tmp163,
	movt	sl, #:upper16:1960172	@ tmp163,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC137	@,
	ldr	r0, [r5, sl]	@, <variable>.pBS
	movt	r2, #:upper16:.LC137	@,
	str	r3, [fp, #-48]	@,
	bl	HEVC_u_v	@
	ldr	r3, [fp, #-48]	@,
	cmp	r3, #1	@ numRpsCurrTempList,
	movls	r9, #0	@, D.46601
	movhi	r9, #1	@, D.46601
	uxtb	r0, r0	@ D.46598,
	strb	r0, [r6, #0]	@ D.46598, <variable>.ref_pic_list_modification_flag_l0
	cmp	r0, #0	@ D.46598,
	cmpne	r3, #1	@, numRpsCurrTempList,
	bls	.L1064	@,
	ldr	r1, [r4, #168]	@ <variable>.num_ref_idx, <variable>.num_ref_idx
	cmp	r1, #0	@ <variable>.num_ref_idx,
	beq	.L1064	@,
	mov	r7, #0	@ i,
.L1065:
	ldr	r0, [r5, sl]	@, <variable>.pBS
	mov	r1, r8	@, length
	movw	r2, #:lower16:.LC138	@,
	movt	r2, #:upper16:.LC138	@,
	bl	HEVC_u_v	@
	add	r2, r6, r7, asl #2	@, tmp178, pRpListModification, i,
	add	r7, r7, #1	@ i, i,
	str	r0, [r2, #4]	@, <variable>.list_entry_l0
	ldr	ip, [r4, #168]	@ <variable>.num_ref_idx, <variable>.num_ref_idx
	cmp	ip, r7	@ <variable>.num_ref_idx, i
	bhi	.L1065	@,
.L1064:
	ldr	r7, [r4, #60]	@ <variable>.slice_type, <variable>.slice_type
	cmp	r7, #0	@ <variable>.slice_type,
	beq	.L1074	@,
.L1066:
	mov	r0, #0	@ D.46594,
	b	.L1068	@
.L1074:
	movw	sl, #:lower16:1960172	@ tmp181,
	movt	sl, #:upper16:1960172	@ tmp181,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC139	@,
	ldr	r0, [r5, sl]	@, <variable>.pBS
	movt	r2, #:upper16:.LC139	@,
	bl	HEVC_u_v	@
	uxtb	r3, r0	@ D.46615,
	strb	r3, [r6, #1]	@ D.46615, <variable>.ref_pic_list_modification_flag_l1
	cmp	r3, #0	@ D.46615,
	moveq	r0, #0	@, tmp189
	andne	r0, r9, #1	@,, tmp189, D.46601
	cmp	r0, #0	@ tmp189,
	beq	.L1066	@,
	ldr	lr, [r4, #172]	@ <variable>.num_ref_idx, <variable>.num_ref_idx
	cmp	lr, #0	@ <variable>.num_ref_idx,
	beq	.L1066	@,
.L1067:
	mov	r1, r8	@, length
	ldr	r0, [r5, sl]	@, <variable>.pBS
	movw	r2, #:lower16:.LC140	@,
	movt	r2, #:upper16:.LC140	@,
	bl	HEVC_u_v	@
	add	r7, r7, #1	@ i.4044, i.4044,
	str	r0, [r6, #132]	@, <variable>.list_entry_l1
	add	r6, r6, #4	@ ivtmp.4031, ivtmp.4031,
	ldr	r1, [r4, #172]	@ <variable>.num_ref_idx, <variable>.num_ref_idx
	cmp	r1, r7	@ <variable>.num_ref_idx, i.4044
	bhi	.L1067	@,
	mov	r0, #0	@ D.46594,
	b	.L1068	@
	.fnend
	.size	HEVC_DecRefPicListsModification, .-HEVC_DecRefPicListsModification
	.align	2
	.global	HEVC_DecShortTermRefPicSet
	.type	HEVC_DecShortTermRefPicSet, %function
HEVC_DecShortTermRefPicSet:
	.fnstart
.LFB1654:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r7, r3, #0	@ idx, idx
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	mov	r4, r1	@ pSPS, pSPS
	mov	r5, r2	@ pShortTermRpset, pShortTermRpset
	streq	r7, [r2, #0]	@ idx, <variable>.inter_ref_pic_set_prediction_flag
	bne	.L1134	@,
.L1078:
	movw	r9, #:lower16:1960172	@ tmp276,
	movt	r9, #:upper16:1960172	@ tmp276,
	movw	r1, #:lower16:.LC151	@,
	movt	r1, #:upper16:.LC151	@,
	ldr	r0, [r6, r9]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #15	@ D.46545,
	mov	r2, r0	@ D.46545,
	str	r0, [r5, #16]	@ D.46545, <variable>.num_negative_pics
	bhi	.L1135	@,
	ldr	r0, [r6, r9]	@, <variable>.pBS
	movw	r1, #:lower16:.LC153	@,
	movt	r1, #:upper16:.LC153	@,
	bl	HEVC_ue_v	@
	cmp	r0, #15	@ D.46550,
	str	r0, [r5, #20]	@ D.46550, <variable>.num_positive_pics
	bhi	.L1136	@,
	ldr	r4, [r5, #16]	@ <variable>.num_negative_pics, <variable>.num_negative_pics
	add	r2, r0, r4	@ prephitmp.4071, D.46550, <variable>.num_negative_pics
	str	r2, [r5, #24]	@ prephitmp.4071, <variable>.num_of_pics
	cmp	r2, #15	@ prephitmp.4071,
	bhi	.L1104	@,
	cmp	r4, #0	@ i.4140,
	movne	r8, #0	@ i.4146,
	movne	r7, r5	@ ivtmp.4135, pShortTermRpset
	movne	sl, r8	@ prev, i.4146
	beq	.L1106	@,
.L1107:
	ldr	r0, [r6, r9]	@, <variable>.pBS
	movw	r1, #:lower16:.LC156	@,
	movt	r1, #:upper16:.LC156	@,
	add	r8, r8, #1	@ i.4146, i.4146,
	bl	HEVC_ue_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC157	@,
	movt	r2, #:upper16:.LC157	@,
	mvn	ip, r0	@ tmp288,
	add	sl, sl, ip	@ prev, prev, tmp288
	str	sl, [r7, #164]	@ prev, <variable>.delta_poc
	ldr	r0, [r6, r9]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r4, [r5, #16]	@ i.4140, <variable>.num_negative_pics
	cmp	r4, r8	@ i.4140, i.4146
	str	r0, [r7, #100]	@, <variable>.used_flag
	add	r7, r7, #4	@ ivtmp.4135, ivtmp.4135,
	bhi	.L1107	@,
	ldr	r2, [r5, #24]	@ prephitmp.4071, <variable>.num_of_pics
.L1106:
	cmp	r4, r2	@ i.4140, prephitmp.4071
	bcs	.L1100	@,
	add	r2, r5, r4, asl #2	@, tmp294, pShortTermRpset, i.4140,
	movw	sl, #:lower16:1960172	@ tmp312,
	add	r7, r2, #164	@ ivtmp.4128, tmp294,
	movt	sl, #:upper16:1960172	@ tmp312,
	mov	r8, #0	@ prev.4168,
.L1108:
	ldr	r0, [r6, sl]	@, <variable>.pBS
	movw	r1, #:lower16:.LC158	@,
	movt	r1, #:upper16:.LC158	@,
	add	r4, r4, #1	@ i.4140, i.4140,
	bl	HEVC_ue_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC159	@,
	movt	r2, #:upper16:.LC159	@,
	add	r8, r0, r8	@ D.46566,, prev.4168
	add	r8, r8, r1	@ prev.4168, D.46566,
	str	r8, [r7, #0]	@ prev.4168, <variable>.delta_poc
	ldr	r0, [r6, sl]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r3, [r5, #24]	@ <variable>.num_of_pics, <variable>.num_of_pics
	cmp	r3, r4	@ <variable>.num_of_pics, i.4140
	str	r0, [r7, #-64]	@, <variable>.used_flag
	add	r7, r7, #4	@ ivtmp.4128, ivtmp.4128,
	bhi	.L1108	@,
.L1100:
	mov	r0, #0	@ D.46482,
.L1083:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1134:
	movw	sl, #:lower16:1960172	@ tmp197,
	movt	sl, #:upper16:1960172	@ tmp197,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC141	@,
	ldr	r0, [r0, sl]	@, <variable>.pBS
	movt	r2, #:upper16:.LC141	@,
	bl	HEVC_u_v	@
	cmp	r0, #0	@ D.46466,
	str	r0, [r5, #0]	@ D.46466, <variable>.inter_ref_pic_set_prediction_flag
	beq	.L1078	@,
	ldr	r8, [r4, #228]	@ D.46471, <variable>.num_short_term_ref_pic_sets
	cmp	r8, r7	@ D.46471, idx
	subne	r7, r7, #1	@ rIdx, idx,
	movne	r3, #0	@ tmp203,
	strne	r3, [r5, #4]	@ tmp203, <variable>.delta_idx
	beq	.L1137	@,
.L1082:
	movw	r9, #:lower16:1960172	@ tmp206,
	movt	r9, #:upper16:1960172	@ tmp206,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC145	@,
	ldr	r0, [r6, r9]	@, <variable>.pBS
	movt	r2, #:upper16:.LC145	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC146	@,
	movt	r1, #:upper16:.LC146	@,
	add	r7, r7, r7, asl #3	@, tmp218, rIdx, rIdx,
	str	r0, [r5, #8]	@, <variable>.delta_rps_sign
	ldr	r0, [r6, r9]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldr	ip, [r5, #8]	@ <variable>.delta_rps_sign, <variable>.delta_rps_sign
	mov	r3, r7, asl #5	@ tmp219, tmp218,
	movw	r2, #17956	@ tmp215,
	add	sl, r3, r4	@ tmp220, tmp219, pSPS
	mov	r1, ip, asl #1	@ tmp212, <variable>.delta_rps_sign,
	rsb	ip, r1, #1	@ tmp214, tmp212,
	ldr	r2, [sl, r2]	@ D.46500, <variable>.num_of_pics
	cmp	r2, #15	@ D.46500,
	add	r0, r0, #1	@ D.46494,,
	str	r0, [r5, #12]	@ D.46494, <variable>.abs_delta_rps
	mul	r1, ip, r0	@, tmp214, D.46494
	str	r1, [fp, #-60]	@, %sfp
	bhi	.L1138	@,
	add	r7, r4, r3	@ tmp229, pSPS, tmp219
	add	sl, sl, #17920	@ tmp310, tmp220,
	mov	r4, #0	@ i.4145,
	add	r8, r7, #17920	@ ivtmp.4124, tmp229,
	str	r5, [fp, #-48]	@ pShortTermRpset, %sfp
	mov	r7, r5	@ ivtmp.4122, pShortTermRpset
	add	sl, sl, #36	@ tmp310, tmp310,
	add	r8, r8, #12	@ ivtmp.4124, ivtmp.4124,
	str	r4, [fp, #-52]	@ i.4145, %sfp
	mov	r5, r4	@ k, k
	str	r4, [fp, #-56]	@ i.4145, %sfp
	b	.L1092	@
.L1086:
	sub	lr, r0, #1	@ tmp235, refIdc,
	cmp	lr, #1	@ tmp235,
	bls	.L1139	@,
.L1087:
	ldr	r3, [sl, #0]	@ temp.4141, <variable>.num_of_pics
	add	r4, r4, #1	@ i.4145, i.4145,
	str	r0, [r7, #36]	@ refIdc, <variable>.refIdc
	add	r8, r8, #4	@ ivtmp.4124, ivtmp.4124,
	cmp	r3, r4	@ temp.4141, i.4145
	add	r7, r7, #4	@ ivtmp.4122, ivtmp.4122,
	bcc	.L1140	@,
.L1092:
	ldr	r0, [r6, r9]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC148	@,
	movt	r2, #:upper16:.LC148	@,
	bl	HEVC_u_v	@
	cmp	r0, #0	@ used_by_curr_pic_flag
	bne	.L1086	@,
	ldr	r0, [r6, r9]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC149	@,
	movt	r2, #:upper16:.LC149	@,
	bl	HEVC_u_v	@
	mov	r0, r0, asl #1	@ refIdc,,
	sub	lr, r0, #1	@ tmp235, refIdc,
	cmp	lr, #1	@ tmp235,
	bhi	.L1087	@,
.L1139:
	ldr	ip, [sl, #0]	@ <variable>.num_of_pics, <variable>.num_of_pics
	ldr	r2, [fp, #-60]	@, %sfp
	cmp	ip, r4	@ <variable>.num_of_pics, i.4145
	ldr	lr, [fp, #-48]	@, %sfp
	add	r4, r4, #1	@ i.4145, i.4145,
	ldrhi	ip, [r8, #164]	@ iftmp.785, <variable>.delta_poc
	movls	ip, #0	@ iftmp.785,
	add	r1, lr, r5, asl #2	@, tmp247,, k,
	add	r8, r8, #4	@ ivtmp.4124, ivtmp.4124,
	add	r3, ip, r2	@ deltaPOC, iftmp.785,
	cmp	r0, #1	@ refIdc,
	movne	ip, #0	@,
	moveq	ip, #1	@,
	cmp	r3, #0	@ deltaPOC,
	str	r3, [r1, #164]	@ deltaPOC, <variable>.delta_poc
	str	ip, [r1, #100]	@, <variable>.used_flag
	add	r5, r5, #1	@ k, k,
	ldrlt	r3, [fp, #-56]	@, %sfp
	ldrge	ip, [fp, #-52]	@, %sfp
	addlt	r3, r3, #1	@,,
	addge	ip, ip, #1	@,,
	strlt	r3, [fp, #-56]	@, %sfp
	strge	ip, [fp, #-52]	@, %sfp
	ldr	r3, [sl, #0]	@ temp.4141, <variable>.num_of_pics
	str	r0, [r7, #36]	@ refIdc, <variable>.refIdc
	add	r7, r7, #4	@ ivtmp.4122, ivtmp.4122,
	cmp	r3, r4	@ temp.4141, i.4145
	bcs	.L1092	@,
.L1140:
	mov	r2, r5	@ k, k
	ldr	r5, [fp, #-48]	@ pShortTermRpset, %sfp
	add	r0, r3, #1	@ tmp262, temp.4141,
	cmp	r2, #15	@ k,
	str	r0, [r5, #28]	@ tmp262, <variable>.numRefIdc
	str	r2, [r5, #24]	@ k, <variable>.num_of_pics
	ldr	r3, [fp, #-56]	@, %sfp
	str	r3, [r5, #16]	@, <variable>.num_negative_pics
	ldr	ip, [fp, #-52]	@, %sfp
	str	ip, [r5, #20]	@, <variable>.num_positive_pics
	bhi	.L1093	@,
	cmp	r3, #15	@,
	bhi	.L1093	@,
	cmp	ip, #15	@,
	bhi	.L1093	@,
	cmp	r2, #1	@ k,
	bls	.L1095	@,
	mov	r9, r2	@ <variable>.num_of_pics, k
	mov	r8, r5	@ ivtmp.4164, pShortTermRpset
	mov	r7, #0	@ ivtmp.4111,
	mov	sl, #1	@ i.4149,
.L1099:
	cmp	r7, #0	@ ivtmp.4111,
	ldr	r1, [r8, #168]	@ deltaPOC.4148, <variable>.delta_poc
	ldrb	r4, [r8, #104]	@ zero_extendqisi2	@ used, <variable>.used_flag
	blt	.L1096	@,
	add	r3, sl, #40	@ tmp265, i.4149,
	and	ip, r7, #1	@ tmp327, ivtmp.4111,
	add	r3, r5, r3, asl #2	@, tmp267, pShortTermRpset, tmp265,
	mov	r2, r3	@ ivtmp.4107, tmp267
	ldr	r0, [r2], #4	@ temp, <variable>.delta_poc
	cmp	r1, r0	@ deltaPOC.4148, temp
	bge	.L1120	@,
	ldr	r6, [r2, #-68]	@ tmp357, <variable>.used_flag
	str	r0, [r3, #4]	@ temp, <variable>.delta_poc
	str	r4, [r2, #-68]	@ used, <variable>.used_flag
	str	r6, [r2, #-64]	@ tmp357, <variable>.used_flag
	str	r1, [r2, #-4]	@ deltaPOC.4148, <variable>.delta_poc
.L1120:
	subs	r0, r7, #1	@ j, ivtmp.4111,
	sub	r3, r2, #4	@ ivtmp.4107, ivtmp.4107,
	bmi	.L1096	@,
	cmp	ip, #0	@ tmp327,
	beq	.L1098	@,
	ldr	ip, [r3, #-4]	@ temp, <variable>.delta_poc
	cmp	r1, ip	@ deltaPOC.4148, temp
	strlt	ip, [r2, #-4]	@ temp, <variable>.delta_poc
	ldrlt	r6, [r3, #-68]	@ tmp359, <variable>.used_flag
	strlt	r1, [r3, #-4]	@ deltaPOC.4148, <variable>.delta_poc
	strlt	r4, [r3, #-68]	@ used, <variable>.used_flag
	strlt	r6, [r3, #-64]	@ tmp359, <variable>.used_flag
	subs	r0, r0, #1	@ j, j,
	sub	r3, r3, #4	@ ivtmp.4107, ivtmp.4107,
	bmi	.L1096	@,
.L1098:
	ldr	lr, [r3, #-4]	@ temp, <variable>.delta_poc
	sub	r2, r3, #4	@ tmp329, ivtmp.4107,
	sub	r0, r0, #1	@ tmp328, j,
	cmp	r1, lr	@ deltaPOC.4148, temp
	strlt	r1, [r3, #-4]	@ deltaPOC.4148, <variable>.delta_poc
	strlt	lr, [r3, #0]	@ temp, <variable>.delta_poc
	ldrlt	r6, [r3, #-68]	@ tmp268, <variable>.used_flag
	ldr	ip, [r2, #-4]	@ temp, <variable>.delta_poc
	strlt	r4, [r3, #-68]	@ used, <variable>.used_flag
	strlt	r6, [r3, #-64]	@ tmp268, <variable>.used_flag
	cmp	r1, ip	@ deltaPOC.4148, temp
	bge	.L1125	@,
	str	ip, [r3, #-4]	@ temp, <variable>.delta_poc
	ldr	r3, [r2, #-68]	@ tmp360, <variable>.used_flag
	str	r1, [r2, #-4]	@ deltaPOC.4148, <variable>.delta_poc
	str	r4, [r2, #-68]	@ used, <variable>.used_flag
	str	r3, [r2, #-64]	@ tmp360, <variable>.used_flag
.L1125:
	subs	r0, r0, #1	@ j, tmp328,
	sub	r3, r2, #4	@ ivtmp.4107, tmp329,
	bpl	.L1098	@,
.L1096:
	add	sl, sl, #1	@ i.4149, i.4149,
	add	r7, r7, #1	@ ivtmp.4111, ivtmp.4111,
	cmp	r9, sl	@ <variable>.num_of_pics, i.4149
	add	r8, r8, #4	@ ivtmp.4164, ivtmp.4164,
	bhi	.L1099	@,
	ldr	r7, [r5, #16]	@, <variable>.num_negative_pics
	str	r7, [fp, #-56]	@, %sfp
.L1095:
	ldr	r3, [fp, #-56]	@, %sfp
	movs	r7, r3, lsr #1	@ D.46542,,
	beq	.L1100	@,
	add	sl, r3, #40	@ tmp270,,
	sub	r8, r7, #1	@ tmp320, D.46542,
	mov	ip, #1	@ i,
	and	r0, r8, ip	@ tmp322, tmp320,
	add	r3, r5, sl, asl #2	@, tmp272, pShortTermRpset, tmp270,
	ldr	r6, [r5, #164]	@ deltaPOC.4151, <variable>.delta_poc
	ldrb	r4, [r5, #100]	@ zero_extendqisi2	@ used.4153, <variable>.used_flag
	cmp	ip, r7	@ i, D.46542
	mov	r1, r3	@ ivtmp.4098, tmp272
	add	r2, r5, #4	@ ivtmp.4150, pShortTermRpset,
	ldr	r8, [r1], #4	@ tmp274, <variable>.delta_poc
	ldr	sl, [r1, #-68]	@ tmp275, <variable>.used_flag
	str	r8, [r5, #164]	@ tmp274, <variable>.delta_poc
	str	r6, [r1, #-4]	@ deltaPOC.4151, <variable>.delta_poc
	str	sl, [r5, #100]	@ tmp275, <variable>.used_flag
	str	r4, [r1, #-68]	@ used.4153, <variable>.used_flag
	beq	.L1100	@,
	cmp	r0, #0	@ tmp322,
	beq	.L1101	@,
	ldr	r0, [r2, #164]	@ deltaPOC.4151, <variable>.delta_poc
	mov	ip, #2	@ i,
	ldrb	lr, [r2, #100]	@ zero_extendqisi2	@ used.4153, <variable>.used_flag
	cmp	ip, r7	@ i, D.46542
	ldr	r5, [r3, #-4]	@ tmp355, <variable>.delta_poc
	ldr	r4, [r3, #-68]	@ tmp356, <variable>.used_flag
	str	r5, [r2, #164]	@ tmp355, <variable>.delta_poc
	str	r4, [r2, #100]	@ tmp356, <variable>.used_flag
	add	r2, r2, #4	@ ivtmp.4150, ivtmp.4150,
	str	r0, [r3, #-4]	@ deltaPOC.4151, <variable>.delta_poc
	str	lr, [r3, #-68]	@ used.4153, <variable>.used_flag
	sub	r3, r3, #4	@ ivtmp.4098, ivtmp.4098,
	beq	.L1100	@,
.L1101:
	ldr	r5, [r2, #164]	@ deltaPOC.4151, <variable>.delta_poc
	add	r0, r2, #4	@ tmp324, ivtmp.4150,
	ldrb	r4, [r2, #100]	@ zero_extendqisi2	@ used.4153, <variable>.used_flag
	sub	lr, r3, #4	@ tmp325, ivtmp.4098,
	ldr	r6, [r3, #-68]	@ tmp343, <variable>.used_flag
	add	ip, ip, #2	@ i, i,
	ldr	r1, [r3, #-4]	@ tmp342, <variable>.delta_poc
	cmp	ip, r7	@ i, D.46542
	str	r6, [r2, #100]	@ tmp343, <variable>.used_flag
	str	r1, [r2, #164]	@ tmp342, <variable>.delta_poc
	add	r2, r0, #4	@ ivtmp.4150, tmp324,
	str	r5, [r3, #-4]	@ deltaPOC.4151, <variable>.delta_poc
	str	r4, [r3, #-68]	@ used.4153, <variable>.used_flag
	sub	r3, lr, #4	@ ivtmp.4098, tmp325,
	ldr	r5, [r0, #164]	@ deltaPOC.4151, <variable>.delta_poc
	ldrb	r4, [r0, #100]	@ zero_extendqisi2	@ used.4153, <variable>.used_flag
	ldr	r8, [lr, #-4]	@ tmp350, <variable>.delta_poc
	ldr	r6, [lr, #-68]	@ tmp351, <variable>.used_flag
	str	r8, [r0, #164]	@ tmp350, <variable>.delta_poc
	str	r6, [r0, #100]	@ tmp351, <variable>.used_flag
	str	r5, [lr, #-4]	@ deltaPOC.4151, <variable>.delta_poc
	str	r4, [lr, #-68]	@ used.4153, <variable>.used_flag
	bne	.L1101	@,
	b	.L1100	@
.L1137:
	ldr	r0, [r6, sl]	@, <variable>.pBS
	movw	r1, #:lower16:.LC142	@,
	movt	r1, #:upper16:.LC142	@,
	bl	HEVC_ue_v	@
	add	r2, r0, #1	@ D.46476, code,
	str	r2, [r5, #4]	@ D.46476, <variable>.delta_idx
	cmp	r8, r2	@ D.46471, D.46476
	bcc	.L1141	@,
	sub	r3, r8, #1	@ D.46483, D.46471,
	rsb	r7, r0, r3	@ rIdx, code, D.46483
	cmp	r3, r7	@ D.46483, rIdx
	bcs	.L1082	@,
	mov	r2, r7	@, rIdx
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC144	@,
	movt	r1, #:upper16:.LC144	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46482,
	b	.L1083	@
.L1093:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC150	@,
	movt	r1, #:upper16:.LC150	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46482,
	b	.L1083	@
.L1135:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC152	@,
	movt	r1, #:upper16:.LC152	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46482,
	b	.L1083	@
.L1141:
	mov	r3, r8	@, D.46471
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC143	@,
	movt	r1, #:upper16:.LC143	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46482,
	b	.L1083	@
.L1138:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC147	@,
	movt	r1, #:upper16:.LC147	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46482,
	b	.L1083	@
.L1104:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC155	@,
	mov	r3, #15	@,
	movt	r1, #:upper16:.LC155	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46482,
	b	.L1083	@
.L1136:
	ldr	r2, [r5, #16]	@, <variable>.num_negative_pics
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC154	@,
	movt	r1, #:upper16:.LC154	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46482,
	b	.L1083	@
	.fnend
	.size	HEVC_DecShortTermRefPicSet, .-HEVC_DecShortTermRefPicSet
	.align	2
	.global	HEVC_Sei_User_Data_Unregistered
	.type	HEVC_Sei_User_Data_Unregistered, %function
HEVC_Sei_User_Data_Unregistered:
	.fnstart
.LFB1570:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #15	@ payloadSize,
	mov	r7, r2	@ payloadSize, payloadSize
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	mov	r4, r1	@ pData, pData
	bls	.L1149	@,
	movw	r6, #:lower16:1960172	@ tmp159,
	movt	r6, #:upper16:1960172	@ tmp159,
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	ldr	r0, [r0, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC161	@,
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	sub	r7, r7, #16	@ D.41494, payloadSize,
	strb	r0, [r4, #4]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #5]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #6]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #7]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #8]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #9]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #10]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #11]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #12]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #13]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #14]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #15]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #16]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #17]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	strb	r0, [r4, #18]	@, <variable>.uuid_iso_iec_11578
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	cmp	r7, #0	@ D.41494,
	str	r7, [r4, #20]	@ D.41494, <variable>.userDataLength
	streq	r7, [r4, #0]	@ D.41494, <variable>.user_data_payload_byte
	strb	r0, [r4, #19]	@, <variable>.uuid_iso_iec_11578
	moveq	r0, r7	@ D.41488, D.41494
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	mov	r7, #0	@ i,
.L1146:
	ldr	r0, [r5, r6]	@, <variable>.pBS
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC162	@,
	movt	r2, #:upper16:.LC162	@,
	bl	HEVC_u_v	@
	ldr	r3, [r4, #20]	@ <variable>.userDataLength, <variable>.userDataLength
	add	r7, r7, #1	@ i, i,
	cmp	r3, r7	@ <variable>.userDataLength, i
	bhi	.L1146	@,
	mov	r0, #0	@ D.41488,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1149:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC160	@,
	movt	r1, #:upper16:.LC160	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41488,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_User_Data_Unregistered, .-HEVC_Sei_User_Data_Unregistered
	.align	2
	.global	HEVC_Sei_Region_Refresh_Info
	.type	HEVC_Sei_Region_Refresh_Info, %function
HEVC_Sei_Region_Refresh_Info:
	.fnstart
.LFB1561:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pHevcCtx,
	cmpne	r1, #0	@, pReg,
	mov	r4, r1	@ pReg, pReg
	movne	r5, #0	@, tmp144
	moveq	r5, #1	@, tmp144
	mvneq	r5, #0	@ D.41125,
	beq	.L1152	@,
	movw	r3, #:lower16:1960172	@ tmp145,
	movt	r3, #:upper16:1960172	@ tmp145,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC163	@,
	ldr	r0, [r0, r3]	@, <variable>.pBS
	movt	r2, #:upper16:.LC163	@,
	bl	HEVC_u_v	@
	strb	r0, [r4, #0]	@, <variable>.refreshed_region_flag
.L1152:
	mov	r0, r5	@, D.41125
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_Region_Refresh_Info, .-HEVC_Sei_Region_Refresh_Info
	.align	2
	.global	HEVC_Sei_Tone_Mapping_Info
	.type	HEVC_Sei_Tone_Mapping_Info, %function
HEVC_Sei_Tone_Mapping_Info:
	.fnstart
.LFB1560:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:1960172	@ tmp172,
	movt	r6, #:upper16:1960172	@ tmp172,
	mov	r4, r1	@ pTon, pTon
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	movw	r1, #:lower16:.LC164	@,
	ldr	r0, [r0, r6]	@, <variable>.pBS
	movt	r1, #:upper16:.LC164	@,
	bl	HEVC_ue_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC165	@,
	movt	r2, #:upper16:.LC165	@,
	str	r0, [r4, #4]	@, <variable>.tone_map_id
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.41037,
	strb	r0, [r4, #0]	@ D.41037, <variable>.tone_map_cancel_flag
	cmp	r0, #0	@ D.41037,
	ldrne	r0, [r4, #16]	@ prephitmp.4298, <variable>.tone_map_model_id
	beq	.L1180	@,
.L1156:
	cmp	r0, #4	@ prephitmp.4298,
	ldrls	pc, [pc, r0, asl #2]	@ prephitmp.4298
	b	.L1159	@
.L1165:
	.word	.L1160
	.word	.L1161
	.word	.L1162
	.word	.L1163
	.word	.L1164
.L1163:
	movw	r8, #:lower16:1960172	@ tmp221,
	movt	r8, #:upper16:1960172	@ tmp221,
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC176	@,
	ldr	r0, [r5, r8]	@, <variable>.pBS
	movt	r2, #:upper16:.LC176	@,
	bl	HEVC_u_v	@
	cmp	r0, #256	@ D.41078,
	str	r0, [r4, #80]	@ D.41078, <variable>.num_pivots
	bhi	.L1168	@,
	cmp	r0, #0	@ D.41078,
	movne	r6, r4	@ ivtmp.4322, pTon
	movne	r7, #0	@ i.4343,
	beq	.L1159	@,
.L1170:
	ldr	r3, [r4, #8]	@ <variable>.coded_data_bit_depth, <variable>.coded_data_bit_depth
	movw	r2, #:lower16:.LC178	@,
	ldr	r0, [r5, r8]	@, <variable>.pBS
	movt	r2, #:upper16:.LC178	@,
	add	lr, r3, #7	@ tmp227, <variable>.coded_data_bit_depth,
	add	r7, r7, #1	@ i.4343, i.4343,
	bic	r1, lr, #7	@, tmp227,
	bl	HEVC_u_v	@
	ldr	r1, [r4, #12]	@ <variable>.target_bit_depth, <variable>.target_bit_depth
	movw	r2, #:lower16:.LC179	@,
	movt	r2, #:upper16:.LC179	@,
	add	ip, r1, #7	@ tmp232, <variable>.target_bit_depth,
	bic	r1, ip, #7	@, tmp232,
	str	r0, [r6, #84]	@, <variable>.coded_pivot_value
	ldr	r0, [r5, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r3, [r4, #80]	@ <variable>.num_pivots, <variable>.num_pivots
	cmp	r3, r7	@ <variable>.num_pivots, i.4343
	str	r0, [r6, #1108]	@, <variable>.target_pivot_value
	add	r6, r6, #4	@ ivtmp.4322, ivtmp.4322,
	bhi	.L1170	@,
.L1159:
	mov	r3, #0	@ D.41052,
.L1158:
	mov	r0, r3	@, D.41052
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1180:
	mov	r1, #1	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC166	@,
	movt	r2, #:upper16:.LC166	@,
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC167	@,
	movt	r2, #:upper16:.LC167	@,
	strb	r0, [r4, #1]	@, <variable>.tone_map_persistence_flag
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC168	@,
	movt	r2, #:upper16:.LC168	@,
	str	r0, [r4, #8]	@, <variable>.coded_data_bit_depth
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	cmp	r0, #8	@ D.41047,
	str	r0, [r4, #12]	@ D.41047, <variable>.target_bit_depth
	bhi	.L1181	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC170	@,
	movt	r2, #:upper16:.LC170	@,
	bl	HEVC_u_v	@
	str	r0, [r4, #16]	@ prephitmp.4298, <variable>.tone_map_model_id
	b	.L1156	@
.L1164:
	movw	r6, #:lower16:1960172	@ tmp236,
	movt	r6, #:upper16:1960172	@ tmp236,
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC180	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC180	@,
	bl	HEVC_u_v	@
	cmp	r0, #255	@ D.41091,
	str	r0, [r4, #36]	@ D.41091, <variable>.camera_iso_speed_idc
	beq	.L1182	@,
.L1171:
	movw	r6, #:lower16:1960172	@ tmp242,
	movt	r6, #:upper16:1960172	@ tmp242,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC182	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC182	@,
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC183	@,
	movt	r2, #:upper16:.LC183	@,
	strb	r0, [r4, #2]	@, <variable>.exposure_compensation_value_sign_flag
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC184	@,
	movt	r2, #:upper16:.LC184	@,
	str	r0, [r4, #52]	@, <variable>.exposure_compensation_value_numerator
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC185	@,
	movt	r2, #:upper16:.LC185	@,
	str	r0, [r4, #56]	@, <variable>.exposure_compensation_value_denom_idc
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC186	@,
	movt	r2, #:upper16:.LC186	@,
	str	r0, [r4, #60]	@, <variable>.ref_screen_luminance_white
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC187	@,
	movt	r2, #:upper16:.LC187	@,
	str	r0, [r4, #64]	@, <variable>.extended_range_white_level
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC188	@,
	movt	r2, #:upper16:.LC188	@,
	str	r0, [r4, #68]	@, <variable>.nominal_black_level_code_value
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC183	@,
	movt	r2, #:upper16:.LC183	@,
	str	r0, [r4, #72]	@, <variable>.nominal_white_level_code_value
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC189	@,
	movt	r2, #:upper16:.LC189	@,
	str	r0, [r4, #52]	@, <variable>.exposure_compensation_value_numerator
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r3, #0	@ D.41052,
	str	r0, [r4, #76]	@, <variable>.extended_white_level_code_value
	mov	r0, r3	@, D.41052
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1160:
	movw	r6, #:lower16:1960172	@ tmp193,
	movt	r6, #:upper16:1960172	@ tmp193,
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC171	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC171	@,
	bl	HEVC_u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC172	@,
	movt	r2, #:upper16:.LC172	@,
	str	r0, [r4, #20]	@, <variable>.min_value
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r3, #0	@ D.41052,
	str	r0, [r4, #24]	@, <variable>.max_value
	mov	r0, r3	@, D.41052
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1161:
	movw	r6, #:lower16:1960172	@ tmp199,
	movt	r6, #:upper16:1960172	@ tmp199,
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC173	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC173	@,
	bl	HEVC_u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC174	@,
	movt	r2, #:upper16:.LC174	@,
	str	r0, [r4, #28]	@, <variable>.sigmoid_midpoint
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r3, #0	@ D.41052,
	str	r0, [r4, #32]	@, <variable>.sigmoid_width
	mov	r0, r3	@, D.41052
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1162:
	ldr	r9, [r4, #12]	@ <variable>.target_bit_depth, <variable>.target_bit_depth
	mov	r8, #1	@ tmp205,
	movs	r9, r8, asl r9	@ num, tmp205,
	beq	.L1166	@,
	ldr	r0, [r4, #8]	@ <variable>.coded_data_bit_depth, <variable>.coded_data_bit_depth
	movw	sl, #:lower16:1960172	@ tmp270,
	movt	sl, #:upper16:1960172	@ tmp270,
	movw	r2, #:lower16:.LC175	@,
	add	r1, r0, #7	@ tmp210, <variable>.coded_data_bit_depth,
	movt	r2, #:upper16:.LC175	@,
	bic	r1, r1, #7	@, tmp210,
	ldr	r0, [r5, sl]	@, <variable>.pBS
	bl	HEVC_u_v	@
	add	r7, r4, #2128	@ ivtmp.4315, pTon,
	add	r7, r7, #4	@ ivtmp.4315, ivtmp.4315,
	cmp	r9, r8	@ num,
	sub	r6, r9, #1	@ tmp275, num,
	and	r6, r6, r8	@ tmp277, tmp275,
	str	r0, [r7], #4	@, <variable>.start_of_coded_interval
	bls	.L1166	@,
	cmp	r6, #0	@ tmp277,
	beq	.L1167	@,
	ldr	r8, [r4, #8]	@ <variable>.coded_data_bit_depth, <variable>.coded_data_bit_depth
	movw	r2, #:lower16:.LC175	@,
	ldr	r0, [r5, sl]	@, <variable>.pBS
	movt	r2, #:upper16:.LC175	@,
	add	ip, r8, #7	@ tmp299, <variable>.coded_data_bit_depth,
	mov	r8, #2	@ i,
	bic	r1, ip, #7	@, tmp299,
	bl	HEVC_u_v	@
	cmp	r9, r8	@ num, i
	str	r0, [r7], #4	@, <variable>.start_of_coded_interval
	bls	.L1166	@,
.L1167:
	ldr	r6, [r4, #8]	@ <variable>.coded_data_bit_depth, <variable>.coded_data_bit_depth
	movw	r2, #:lower16:.LC175	@,
	ldr	r0, [r5, sl]	@, <variable>.pBS
	movt	r2, #:upper16:.LC175	@,
	add	lr, r6, #7	@ tmp285, <variable>.coded_data_bit_depth,
	mov	r6, r7	@ tmp279, ivtmp.4315
	bic	r1, lr, #7	@, tmp285,
	add	r8, r8, #1	@ tmp278, i,
	bl	HEVC_u_v	@
	ldr	ip, [r4, #8]	@ <variable>.coded_data_bit_depth, <variable>.coded_data_bit_depth
	movw	r2, #:lower16:.LC175	@,
	movt	r2, #:upper16:.LC175	@,
	add	r3, ip, #7	@ tmp293, <variable>.coded_data_bit_depth,
	add	r8, r8, #1	@ i, tmp278,
	bic	r1, r3, #7	@, tmp293,
	str	r0, [r6], #4	@, <variable>.start_of_coded_interval
	ldr	r0, [r5, sl]	@, <variable>.pBS
	bl	HEVC_u_v	@
	cmp	r9, r8	@ num, i
	str	r0, [r7, #4]	@, <variable>.start_of_coded_interval
	add	r7, r6, #4	@ ivtmp.4315, tmp279,
	bhi	.L1167	@,
.L1166:
	ldr	r0, [r4, #8]	@ <variable>.coded_data_bit_depth, <variable>.coded_data_bit_depth
	add	r9, r4, r9, asl #2	@, tmp216, pTon, num,
	mov	r3, #0	@ D.41052,
	mov	r1, #1	@ tmp218,
	mov	r2, r1, asl r0	@ tmp220, tmp218,
	mov	r0, r3	@, D.41052
	str	r2, [r9, #2132]	@ tmp220, <variable>.start_of_coded_interval
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1182:
	ldr	r0, [r5, r6]	@, <variable>.pBS
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC181	@,
	movt	r2, #:upper16:.LC181	@,
	bl	HEVC_u_v	@
	str	r0, [r4, #40]	@, <variable>.camera_iso_speed_value
	b	.L1171	@
.L1181:
	mov	r2, r0	@, D.41047
	movw	r1, #:lower16:.LC169	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC169	@,
	bl	dprint_vfmw	@
	mvn	r3, #0	@ D.41052,
	b	.L1158	@
.L1168:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC177	@,
	movt	r1, #:upper16:.LC177	@,
	bl	dprint_vfmw	@
	mvn	r3, #0	@ D.41052,
	b	.L1158	@
	.fnend
	.size	HEVC_Sei_Tone_Mapping_Info, .-HEVC_Sei_Tone_Mapping_Info
	.align	2
	.global	HEVC_Sei_Decoded_Picture_Hash
	.type	HEVC_Sei_Decoded_Picture_Hash, %function
HEVC_Sei_Decoded_Picture_Hash:
	.fnstart
.LFB1557:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pHevcCtx,
	cmpne	r1, #0	@, pDec,
	mov	r4, r1	@ pDec, pDec
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	mvneq	r7, #0	@ D.40886,
	bne	.L1199	@,
.L1185:
	mov	r0, r7	@, D.40886
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1199:
	movw	r6, #:lower16:1960172	@ tmp204,
	movt	r6, #:upper16:1960172	@ tmp204,
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC190	@,
	ldr	r0, [r0, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC190	@,
	bl	HEVC_u_v	@
	cmp	r0, #0	@ D.40889,
	str	r0, [r4, #48]	@ D.40889, <variable>.hash_type
	str	r0, [r4, #52]	@ D.40889, <variable>.method
	beq	.L1186	@,
	cmp	r0, #1	@ D.40889,
	beq	.L1187	@,
	cmp	r0, #2	@ D.40889,
	beq	.L1200	@,
.L1197:
	cmp	r0, #1	@ pretmp.4369,
	beq	.L1191	@,
	cmp	r0, #2	@ pretmp.4369,
	ldrne	r7, [r4, #52]	@ pretmp.4402, <variable>.method
	beq	.L1201	@,
.L1194:
	cmp	r7, #1	@ pretmp.4402,
	beq	.L1202	@,
	cmp	r7, #2	@ pretmp.4402,
	movne	r7, #0	@ D.40886,
	bne	.L1185	@,
	movw	lr, #:lower16:1960172	@ tmp389,
	movt	lr, #:upper16:1960172	@ tmp389,
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC191	@,
	ldr	r0, [r5, lr]	@, <variable>.pBS
	movt	r2, #:upper16:.LC191	@,
	bl	HEVC_u_v	@
	mov	r7, #0	@ D.40886,
	mov	r1, r0, lsr #24	@ tmp392, val.4391,
	mov	r3, r0, lsr #16	@ tmp394, val.4391,
	mov	r2, r0, lsr #8	@ tmp396, val.4391,
	strb	r0, [r4, #35]	@ val.4391, <variable>.digest
	strb	r1, [r4, #32]	@ tmp392, <variable>.digest
	strb	r3, [r4, #33]	@ tmp394, <variable>.digest
	strb	r2, [r4, #34]	@ tmp396, <variable>.digest
	b	.L1185	@
.L1186:
	mov	r1, #8	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #0]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #1]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #2]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #3]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #4]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #5]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #6]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #7]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #8]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #9]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #10]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #11]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #12]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #13]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #14]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	strb	r0, [r4, #15]	@, <variable>.digest
.L1189:
	ldr	r0, [r4, #52]	@ pretmp.4369, <variable>.method
	cmp	r0, #0	@ pretmp.4369,
	bne	.L1197	@,
	movw	r6, #:lower16:1960172	@ tmp287,
	movt	r6, #:upper16:1960172	@ tmp287,
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC193	@,
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #16]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #17]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #18]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #19]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #20]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #21]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #22]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #23]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #24]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #25]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #26]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #27]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #28]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #29]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #30]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	strb	r0, [r4, #31]	@, <variable>.digest
.L1193:
	ldr	r7, [r4, #52]	@ pretmp.4402, <variable>.method
	cmp	r7, #0	@ pretmp.4402,
	bne	.L1194	@,
	movw	r6, #:lower16:1960172	@ tmp335,
	movt	r6, #:upper16:1960172	@ tmp335,
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC193	@,
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #32]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #33]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #34]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #35]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #36]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #37]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #38]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #39]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #40]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #41]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #42]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #43]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #44]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #45]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	strb	r0, [r4, #46]	@, <variable>.digest
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	strb	r0, [r4, #47]	@, <variable>.digest
	mov	r0, r7	@, D.40886
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1202:
	movw	ip, #:lower16:1960172	@ tmp383,
	movt	ip, #:upper16:1960172	@ tmp383,
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC192	@,
	ldr	r0, [r5, ip]	@, <variable>.pBS
	movt	r2, #:upper16:.LC192	@,
	bl	HEVC_u_v	@
	mov	r7, #0	@ D.40886,
	mov	r1, r0, lsr #8	@ tmp386, val,
	strb	r0, [r4, #33]	@ val, <variable>.digest
	strb	r1, [r4, #32]	@ tmp386, <variable>.digest
	b	.L1185	@
.L1191:
	movw	r7, #:lower16:1960172	@ tmp281,
	movt	r7, #:upper16:1960172	@ tmp281,
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC192	@,
	ldr	r0, [r5, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC192	@,
	bl	HEVC_u_v	@
	strb	r0, [r4, #17]	@ val.4516, <variable>.digest
	mov	r0, r0, lsr #8	@ tmp284, val.4516,
	strb	r0, [r4, #16]	@ tmp284, <variable>.digest
	b	.L1193	@
.L1187:
	ldr	r0, [r5, r6]	@, <variable>.pBS
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC192	@,
	movt	r2, #:upper16:.LC192	@,
	bl	HEVC_u_v	@
	mov	r2, r0, lsr #8	@ tmp220, val.4431,
	strb	r0, [r4, #1]	@ val.4431, <variable>.digest
	strb	r2, [r4, #0]	@ tmp220, <variable>.digest
	b	.L1189	@
.L1201:
	movw	lr, #:lower16:1960172	@ tmp271,
	movt	lr, #:upper16:1960172	@ tmp271,
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC191	@,
	ldr	r0, [r5, lr]	@, <variable>.pBS
	movt	r2, #:upper16:.LC191	@,
	bl	HEVC_u_v	@
	mov	r3, r0, lsr #24	@ tmp274, val.4506,
	mov	ip, r0, lsr #16	@ tmp276, val.4506,
	mov	r7, r0, lsr #8	@ tmp278, val.4506,
	strb	r0, [r4, #19]	@ val.4506, <variable>.digest
	strb	r3, [r4, #16]	@ tmp274, <variable>.digest
	strb	ip, [r4, #17]	@ tmp276, <variable>.digest
	strb	r7, [r4, #18]	@ tmp278, <variable>.digest
	b	.L1193	@
.L1200:
	mov	r1, #32	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC191	@,
	movt	r2, #:upper16:.LC191	@,
	bl	HEVC_u_v	@
	mov	r1, r0, lsr #24	@ tmp210, val.4456,
	mov	r3, r0, lsr #16	@ tmp212, val.4456,
	strb	r0, [r4, #3]	@ val.4456, <variable>.digest
	mov	r0, r0, lsr #8	@ tmp214, val.4456,
	strb	r1, [r4, #0]	@ tmp210, <variable>.digest
	strb	r3, [r4, #1]	@ tmp212, <variable>.digest
	strb	r0, [r4, #2]	@ tmp214, <variable>.digest
	b	.L1189	@
	.fnend
	.size	HEVC_Sei_Decoded_Picture_Hash, .-HEVC_Sei_Decoded_Picture_Hash
	.align	2
	.global	HEVC_ReleaseNAL
	.type	HEVC_ReleaseNAL, %function
HEVC_ReleaseNAL:
	.fnstart
.LFB1663:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r1, #0	@ p_nal, p_nal
	mov	r6, r0	@ ChanID, ChanID
	beq	.L1209	@,
	ldr	r3, [r4, #44]	@ <variable>.streamBuffer, <variable>.streamBuffer
	mov	r5, #0	@ tmp137,
	str	r5, [r4, #36]	@ tmp137, <variable>.is_valid
	cmp	r3, r5	@ <variable>.streamBuffer,
	str	r5, [r4, #40]	@ tmp137, <variable>.nal_integ
	beq	.L1206	@,
	ldr	r1, [r4, #68]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	ldr	ip, [r4, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r3, [r4, #44]	@ <variable>.streamBuffer, <variable>.streamBuffer
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC194	@,
	ldr	r2, .L1210	@,
	movt	r1, #:upper16:.LC194	@,
	str	ip, [sp, #0]	@ <variable>.bitstream_length,
	bl	dprint_vfmw	@
	str	r5, [r4, #48]	@ tmp137, <variable>.bitstream_length
	str	r5, [r4, #44]	@ tmp137, <variable>.streamBuffer
	str	r5, [r4, #60]	@ tmp137, <variable>.bitsoffset
.L1206:
	ldr	r0, [r4, #72]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r0, #0	@ <variable>.streamBuffer,
	beq	.L1207	@,
	ldr	r1, [r4, #96]	@, <variable>.StreamID
	mov	r0, r6	@, ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	ip, [r4, #76]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r3, [r4, #72]	@ <variable>.streamBuffer, <variable>.streamBuffer
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC194	@,
	ldr	r2, .L1210	@,
	movt	r1, #:upper16:.LC194	@,
	str	ip, [sp, #0]	@ <variable>.bitstream_length,
	bl	dprint_vfmw	@
	mov	r1, #0	@ tmp156,
	str	r1, [r4, #76]	@ tmp156, <variable>.bitstream_length
	str	r1, [r4, #72]	@ tmp156, <variable>.streamBuffer
	str	r1, [r4, #88]	@ tmp156, <variable>.bitsoffset
.L1207:
	mov	r0, r4	@, p_nal
	mov	r1, #100	@,
	bl	__memzero	@
.L1208:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L1209:
	mov	r0, r4	@, p_nal
	movw	r1, #:lower16:.LC26	@,
	movw	r2, #:lower16:.LC27	@,
	movt	r1, #:upper16:.LC26	@,
	movt	r2, #:upper16:.LC27	@,
	movw	r3, #9732	@,
	bl	dprint_vfmw	@
	b	.L1208	@
.L1211:
	.align	2
.L1210:
	.word	.LANCHOR1+248
	.fnend
	.size	HEVC_ReleaseNAL, .-HEVC_ReleaseNAL
	.align	2
	.global	HEVC_ClearAllNal
	.type	HEVC_ClearAllNal, %function
HEVC_ClearAllNal:
	.fnstart
.LFB1681:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:2358480	@ ivtmp.4630,
	movt	r4, #:upper16:2358480	@ ivtmp.4630,
	mov	r7, r0	@ pHevcCtx, pHevcCtx
	add	r4, r0, r4	@ ivtmp.4630, pHevcCtx, ivtmp.4630
	mov	r8, #100	@ tmp150,
	ldr	r3, [r4, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #1	@ <variable>.is_valid,
	beq	.L1224	@,
.L1217:
	add	r4, r4, #100	@ ivtmp.4630, ivtmp.4630,
	mov	r3, #1	@ i,
	b	.L1214	@
.L1213:
	ldr	r0, [r4, #100]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	beq	.L1225	@,
.L1219:
	add	r3, r5, #1	@ i, tmp151,
	add	r4, r6, #100	@ ivtmp.4630, tmp152,
	cmp	r3, #211	@ i,
	beq	.L1226	@,
.L1214:
	ldr	r2, [r4, #0]	@ <variable>.is_valid, <variable>.is_valid
	add	r5, r3, #1	@ tmp151, i,
	add	r6, r4, #100	@ tmp152, ivtmp.4630,
	cmp	r2, #1	@ <variable>.is_valid,
	bne	.L1213	@,
	mla	ip, r8, r3, r7	@ tmp144, tmp150, i, pHevcCtx
	movw	r1, #:lower16:2358444	@,
	movt	r1, #:upper16:2358444	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	add	r1, ip, r1	@, tmp144,
	bl	HEVC_ReleaseNAL	@
	ldr	r0, [r4, #100]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	bne	.L1219	@,
.L1225:
	mla	r3, r8, r5, r7	@ tmp169, tmp150, tmp151, pHevcCtx
	movw	lr, #:lower16:2358444	@,
	movt	lr, #:upper16:2358444	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	add	r4, r6, #100	@ ivtmp.4630, tmp152,
	add	r1, r3, lr	@, tmp169,
	bl	HEVC_ReleaseNAL	@
	add	r3, r5, #1	@ i, tmp151,
	cmp	r3, #211	@ i,
	bne	.L1214	@,
.L1226:
	mov	r0, #0	@ tmp146,
	str	r0, [r7, #140]	@ tmp146, <variable>.NalArrayPos
	strb	r0, [r7, #4]	@ tmp146, <variable>.bHaveNalNotDecoded
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1224:
	movw	r5, #:lower16:2358444	@,
	movt	r5, #:upper16:2358444	@,
	add	r1, r0, r5	@, pHevcCtx,
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	bl	HEVC_ReleaseNAL	@
	b	.L1217	@
	.fnend
	.size	HEVC_ClearAllNal, .-HEVC_ClearAllNal
	.align	2
	.global	HEVC_InitDecPara
	.type	HEVC_InitDecPara, %function
HEVC_InitDecPara:
	.fnstart
.LFB1541:
	@ args = 0, pretend = 0, frame = 408
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #412
	sub	sp, sp, #412	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC195	@,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movt	r1, #:upper16:.LC195	@,
	mov	r0, #22	@,
	movw	r5, #:lower16:4306460	@ ivtmp.4704,
	bl	dprint_vfmw	@
	mov	r3, #-2147483647	@ tmp144,
	mov	r0, r4	@, pHevcCtx
	str	r3, [r4, #204]	@ tmp144, <variable>.LastDisplayPoc
	bl	HEVC_ClearAllNal	@
	add	r0, r4, #2129920	@, pHevcCtx,
	add	r0, r0, #2816	@,,
	movt	r5, #:upper16:4306460	@ ivtmp.4704,
	bl	ResetVoQueue	@
	mov	r8, #0	@ i,
	add	r5, r4, r5	@ ivtmp.4704, pHevcCtx, ivtmp.4704
	mov	r6, r8	@ tmp448, i
.L1228:
	add	r1, r8, r8, asl #3	@, tmp160, i, i,
	movw	r0, #:lower16:4306520	@ tmp162,
	movt	r0, #:upper16:4306520	@ tmp162,
	add	sl, r8, #1	@ tmp457, i,
	mov	r9, r1, asl #6	@ tmp161, tmp160,
	mov	ip, #20	@,
	add	r7, r9, r0	@ tmp162, tmp161, tmp162
	str	ip, [r5, #12]	@, <variable>.pmv_address_idc
	add	r0, r4, r7	@, pHevcCtx, tmp162
	mov	lr, #16	@,
	strb	r6, [r5, #-12]	@ tmp448, <variable>.non_existing
	mov	r1, #504	@,
	str	lr, [r5, #16]	@, <variable>.apc_idc
	add	r7, r5, #576	@ tmp458, ivtmp.4704,
	str	r6, [r5, #-8]	@ tmp448, <variable>.eFrameStoreState
	strb	r6, [r5, #-11]	@ tmp448, <variable>.is_reference
	str	r6, [r5, #0]	@ tmp448, <variable>.poc
	strb	r6, [r5, #-10]	@ tmp448, <variable>.is_displayed
	bl	__memzero	@
	add	r3, sl, sl, asl #3	@, tmp465, tmp457, tmp457,
	movw	r2, #:lower16:4306448	@ tmp169,
	movw	ip, #:lower16:4306520	@ tmp468,
	mov	r3, r3, asl #6	@ tmp466, tmp465,
	movt	ip, #:upper16:4306520	@ tmp468,
	movt	r2, #:upper16:4306448	@ tmp169,
	add	r0, r3, ip	@ tmp468, tmp466, tmp468
	add	r1, r9, r2	@ tmp169, tmp161, tmp169
	str	r8, [r5, #256]	@ i, <variable>.fs_image.image_id
	str	r6, [r5, #36]	@ tmp448, <variable>.frame.structure
	add	r8, r4, r1	@ tmp171, pHevcCtx, tmp169
	strb	r6, [r5, #565]	@ tmp448, <variable>.is_reference
	mov	r2, #16	@,
	str	r8, [r5, #56]	@ tmp171, <variable>.frame.frame_store
	mov	r1, #504	@,
	str	r6, [r5, #576]	@ tmp448, <variable>.poc
	mov	r9, #20	@,
	strb	r6, [r5, #566]	@ tmp448, <variable>.is_displayed
	add	r0, r4, r0	@, pHevcCtx, tmp468
	str	r9, [r7, #12]	@, <variable>.pmv_address_idc
	add	r8, sl, #1	@ i, tmp457,
	str	r2, [r7, #16]	@, <variable>.apc_idc
	movw	r9, #:lower16:4306448	@ tmp471,
	strb	r6, [r7, #-12]	@ tmp448, <variable>.non_existing
	movt	r9, #:upper16:4306448	@ tmp471,
	str	r6, [r7, #-8]	@ tmp448, <variable>.eFrameStoreState
	add	r5, r5, #1152	@ ivtmp.4704, ivtmp.4704,
	str	r3, [fp, #-448]	@,
	bl	__memzero	@
	ldr	ip, [fp, #-448]	@,
	cmp	r8, #20	@ i,
	str	r6, [r7, #36]	@ tmp448, <variable>.frame.structure
	add	r1, ip, r9	@ tmp471, tmp466, tmp471
	str	sl, [r7, #256]	@ tmp457, <variable>.fs_image.image_id
	add	r2, r4, r1	@ tmp472, pHevcCtx, tmp471
	str	r2, [r7, #56]	@ tmp472, <variable>.frame.frame_store
	bne	.L1228	@,
	mov	r2, r6	@ tmp447, ivtmp.4692
.L1229:
	add	r8, r6, #4	@ tmp456, ivtmp.4692,
	add	sl, r4, r6	@ tmp173, pHevcCtx, ivtmp.4692
	add	r6, r8, #4	@ ivtmp.4692, tmp456,
	add	r5, r4, r8	@ tmp474, pHevcCtx, tmp456
	cmp	r6, #80	@ ivtmp.4692,
	str	r2, [sl, #2092]	@ tmp447, <variable>.PmvStoreUsedFlag
	str	r2, [r5, #2092]	@ tmp447, <variable>.PmvStoreUsedFlag
	bne	.L1229	@,
	movw	r6, #:lower16:4300568	@ ivtmp.4681,
	movt	r6, #:upper16:4300568	@ ivtmp.4681,
	add	r3, r4, r6	@ ivtmp.4681, pHevcCtx, ivtmp.4681
	mov	r5, r2	@ tmp446, i.4711
.L1230:
	add	r2, r2, #2	@ i.4711, i.4711,
	add	r9, r3, #28	@ tmp455, ivtmp.4681,
	cmp	r2, #210	@ i.4711,
	str	r5, [r3, #20]	@ tmp446, <variable>.slot_addr_vir
	str	r5, [r3, #24]	@ tmp446, <variable>.slice_nal
	str	r5, [r3, #0]	@ tmp446, <variable>.slot_addr_ph
	str	r5, [r3, #28]	@ tmp446, <variable>.slot_addr_ph
	add	r3, r3, #56	@ ivtmp.4681, ivtmp.4681,
	str	r5, [r9, #24]	@ tmp446, <variable>.slice_nal
	str	r5, [r9, #20]	@ tmp446, <variable>.slot_addr_vir
	bne	.L1230	@,
	movw	r3, #:lower16:1960664	@,
	movt	r3, #:upper16:1960664	@,
	add	r0, r4, r3	@, pHevcCtx,
	mov	r1, #200	@,
	bl	__memzero	@
	movw	r9, #:lower16:1960664	@,
	movw	sl, #:lower16:1960596	@ tmp183,
	movt	r9, #:upper16:1960664	@,
	movt	sl, #:upper16:1960596	@ tmp183,
	str	r9, [fp, #-48]	@, %sfp
	movw	r8, #:lower16:1960528	@ tmp185,
	movw	r7, #:lower16:1960460	@ tmp187,
	movt	r8, #:upper16:1960528	@ tmp185,
	movt	r7, #:upper16:1960460	@ tmp187,
	movw	r6, #:lower16:1960392	@ tmp189,
	movw	r1, #:lower16:1960600	@ tmp191,
	movt	r6, #:upper16:1960392	@ tmp189,
	movt	r1, #:upper16:1960600	@ tmp191,
	movw	lr, #:lower16:1960532	@ tmp193,
	movw	ip, #:lower16:1960464	@ tmp195,
	movt	lr, #:upper16:1960532	@ tmp193,
	movt	ip, #:upper16:1960464	@ tmp195,
	movw	r2, #:lower16:1960396	@ tmp197,
	movw	r3, #:lower16:1960604	@ tmp199,
	movt	r2, #:upper16:1960396	@ tmp197,
	movt	r3, #:upper16:1960604	@ tmp199,
	movw	r9, #:lower16:1960536	@ tmp201,
	movt	r9, #:upper16:1960536	@ tmp201,
	movw	r0, #:lower16:1960468	@,
	movt	r0, #:upper16:1960468	@,
	str	r0, [fp, #-52]	@, %sfp
	movw	r0, #:lower16:1960400	@,
	movt	r0, #:upper16:1960400	@,
	str	r0, [fp, #-56]	@, %sfp
	movw	r0, #:lower16:1960608	@,
	movt	r0, #:upper16:1960608	@,
	str	r0, [fp, #-60]	@, %sfp
	movw	r0, #:lower16:1960540	@,
	movt	r0, #:upper16:1960540	@,
	str	r0, [fp, #-64]	@, %sfp
	movw	r0, #:lower16:1960472	@,
	movt	r0, #:upper16:1960472	@,
	str	r0, [fp, #-68]	@, %sfp
	movw	r0, #:lower16:1960404	@,
	movt	r0, #:upper16:1960404	@,
	str	r0, [fp, #-72]	@, %sfp
	movw	r0, #:lower16:1960612	@,
	movt	r0, #:upper16:1960612	@,
	str	r0, [fp, #-76]	@, %sfp
	movw	r0, #:lower16:1960544	@,
	movt	r0, #:upper16:1960544	@,
	str	r0, [fp, #-80]	@, %sfp
	movw	r0, #:lower16:1960476	@,
	movt	r0, #:upper16:1960476	@,
	str	r0, [fp, #-84]	@, %sfp
	movw	r0, #:lower16:1960408	@,
	movt	r0, #:upper16:1960408	@,
	str	r0, [fp, #-88]	@, %sfp
	movw	r0, #:lower16:1960616	@,
	movt	r0, #:upper16:1960616	@,
	str	r0, [fp, #-92]	@, %sfp
	movw	r0, #:lower16:1960548	@,
	movt	r0, #:upper16:1960548	@,
	str	r0, [fp, #-96]	@, %sfp
	movw	r0, #:lower16:1960480	@,
	movt	r0, #:upper16:1960480	@,
	str	r0, [fp, #-100]	@, %sfp
	movw	r0, #:lower16:1960412	@,
	movt	r0, #:upper16:1960412	@,
	str	r0, [fp, #-104]	@, %sfp
	movw	r0, #:lower16:1960620	@,
	movt	r0, #:upper16:1960620	@,
	str	r0, [fp, #-108]	@, %sfp
	movw	r0, #:lower16:1960552	@,
	movt	r0, #:upper16:1960552	@,
	str	r0, [fp, #-112]	@, %sfp
	movw	r0, #:lower16:1960484	@,
	movt	r0, #:upper16:1960484	@,
	str	r0, [fp, #-116]	@, %sfp
	movw	r0, #:lower16:1960416	@,
	movt	r0, #:upper16:1960416	@,
	str	r0, [fp, #-120]	@, %sfp
	movw	r0, #:lower16:1960624	@,
	movt	r0, #:upper16:1960624	@,
	str	r0, [fp, #-124]	@, %sfp
	movw	r0, #:lower16:1960556	@,
	movt	r0, #:upper16:1960556	@,
	str	r0, [fp, #-128]	@, %sfp
	movw	r0, #:lower16:1960488	@,
	movt	r0, #:upper16:1960488	@,
	str	r0, [fp, #-132]	@, %sfp
	movw	r0, #:lower16:1960420	@,
	movt	r0, #:upper16:1960420	@,
	str	r0, [fp, #-136]	@, %sfp
	movw	r0, #:lower16:1960628	@,
	movt	r0, #:upper16:1960628	@,
	str	r0, [fp, #-140]	@, %sfp
	movw	r0, #:lower16:1960560	@,
	movt	r0, #:upper16:1960560	@,
	str	r0, [fp, #-144]	@, %sfp
	movw	r0, #:lower16:1960492	@,
	movt	r0, #:upper16:1960492	@,
	str	r0, [fp, #-148]	@, %sfp
	movw	r0, #:lower16:1960424	@,
	movt	r0, #:upper16:1960424	@,
	str	r0, [fp, #-152]	@, %sfp
	movw	r0, #:lower16:1960632	@,
	movt	r0, #:upper16:1960632	@,
	str	r0, [fp, #-156]	@, %sfp
	movw	r0, #:lower16:1960564	@,
	movt	r0, #:upper16:1960564	@,
	str	r0, [fp, #-160]	@, %sfp
	movw	r0, #:lower16:1960496	@,
	movt	r0, #:upper16:1960496	@,
	str	r0, [fp, #-164]	@, %sfp
	movw	r0, #:lower16:1960428	@,
	movt	r0, #:upper16:1960428	@,
	str	r0, [fp, #-168]	@, %sfp
	movw	r0, #:lower16:1960636	@,
	movt	r0, #:upper16:1960636	@,
	str	r0, [fp, #-172]	@, %sfp
	movw	r0, #:lower16:1960568	@,
	movt	r0, #:upper16:1960568	@,
	str	r0, [fp, #-176]	@, %sfp
	movw	r0, #:lower16:1960500	@,
	movt	r0, #:upper16:1960500	@,
	str	r0, [fp, #-180]	@, %sfp
	movw	r0, #:lower16:1960432	@,
	movt	r0, #:upper16:1960432	@,
	str	r0, [fp, #-184]	@, %sfp
	movw	r0, #:lower16:1960640	@,
	movt	r0, #:upper16:1960640	@,
	str	r0, [fp, #-188]	@, %sfp
	movw	r0, #:lower16:1960572	@,
	movt	r0, #:upper16:1960572	@,
	str	r0, [fp, #-192]	@, %sfp
	movw	r0, #:lower16:1960504	@,
	movt	r0, #:upper16:1960504	@,
	str	r0, [fp, #-196]	@, %sfp
	movw	r0, #:lower16:1960436	@,
	movt	r0, #:upper16:1960436	@,
	str	r0, [fp, #-200]	@, %sfp
	movw	r0, #:lower16:1960644	@,
	movt	r0, #:upper16:1960644	@,
	str	r0, [fp, #-204]	@, %sfp
	movw	r0, #:lower16:1960576	@,
	movt	r0, #:upper16:1960576	@,
	str	r0, [fp, #-208]	@, %sfp
	movw	r0, #:lower16:1960508	@,
	movt	r0, #:upper16:1960508	@,
	str	r0, [fp, #-212]	@, %sfp
	movw	r0, #:lower16:1960440	@,
	movt	r0, #:upper16:1960440	@,
	str	r0, [fp, #-216]	@, %sfp
	movw	r0, #:lower16:1960648	@,
	movt	r0, #:upper16:1960648	@,
	str	r0, [fp, #-220]	@, %sfp
	movw	r0, #:lower16:1960580	@,
	movt	r0, #:upper16:1960580	@,
	str	r0, [fp, #-224]	@, %sfp
	movw	r0, #:lower16:1960512	@,
	movt	r0, #:upper16:1960512	@,
	str	r0, [fp, #-228]	@, %sfp
	movw	r0, #:lower16:1960444	@,
	movt	r0, #:upper16:1960444	@,
	str	r0, [fp, #-232]	@, %sfp
	movw	r0, #:lower16:1960652	@,
	movt	r0, #:upper16:1960652	@,
	str	r0, [fp, #-236]	@, %sfp
	movw	r0, #:lower16:1960584	@,
	movt	r0, #:upper16:1960584	@,
	str	r0, [fp, #-240]	@, %sfp
	movw	r0, #:lower16:1960516	@,
	movt	r0, #:upper16:1960516	@,
	str	r0, [fp, #-244]	@, %sfp
	movw	r0, #:lower16:1960448	@,
	movt	r0, #:upper16:1960448	@,
	str	r0, [fp, #-248]	@, %sfp
	movw	r0, #:lower16:1960656	@,
	movt	r0, #:upper16:1960656	@,
	str	r0, [fp, #-252]	@, %sfp
	movw	r0, #:lower16:1960588	@,
	movt	r0, #:upper16:1960588	@,
	str	r0, [fp, #-256]	@, %sfp
	movw	r0, #:lower16:1960520	@,
	movt	r0, #:upper16:1960520	@,
	str	r0, [fp, #-260]	@, %sfp
	movw	r0, #:lower16:1960452	@,
	movt	r0, #:upper16:1960452	@,
	str	r0, [fp, #-264]	@, %sfp
	movw	r0, #:lower16:1960660	@,
	movt	r0, #:upper16:1960660	@,
	str	r0, [fp, #-268]	@, %sfp
	movw	r0, #:lower16:1960592	@,
	movt	r0, #:upper16:1960592	@,
	str	r0, [fp, #-272]	@, %sfp
	movw	r0, #:lower16:1960524	@,
	movt	r0, #:upper16:1960524	@,
	str	r0, [fp, #-276]	@, %sfp
	movw	r0, #:lower16:1960456	@,
	movt	r0, #:upper16:1960456	@,
	str	r0, [fp, #-280]	@, %sfp
	movw	r0, #:lower16:1960372	@,
	movt	r0, #:upper16:1960372	@,
	str	r0, [fp, #-284]	@, %sfp
	movw	r0, #:lower16:1960376	@,
	movt	r0, #:upper16:1960376	@,
	str	r0, [fp, #-288]	@, %sfp
	movw	r0, #:lower16:1960380	@,
	movt	r0, #:upper16:1960380	@,
	str	r0, [fp, #-292]	@, %sfp
	movw	r0, #:lower16:1960384	@,
	movt	r0, #:upper16:1960384	@,
	str	r0, [fp, #-296]	@, %sfp
	movw	r0, #:lower16:1960388	@,
	movt	r0, #:upper16:1960388	@,
	str	r0, [fp, #-300]	@, %sfp
	movw	r0, #:lower16:1960368	@,
	movt	r0, #:upper16:1960368	@,
	str	r0, [fp, #-304]	@, %sfp
	movw	r0, #:lower16:1960268	@,
	movt	r0, #:upper16:1960268	@,
	str	r0, [fp, #-308]	@, %sfp
	movw	r0, #:lower16:1960200	@,
	movt	r0, #:upper16:1960200	@,
	str	r0, [fp, #-312]	@, %sfp
	movw	r0, #:lower16:1960272	@,
	movt	r0, #:upper16:1960272	@,
	str	r0, [fp, #-316]	@, %sfp
	movw	r0, #:lower16:1960204	@,
	movt	r0, #:upper16:1960204	@,
	str	r0, [fp, #-320]	@, %sfp
	movw	r0, #:lower16:1960276	@,
	movt	r0, #:upper16:1960276	@,
	str	r0, [fp, #-324]	@, %sfp
	movw	r0, #:lower16:1960208	@,
	movt	r0, #:upper16:1960208	@,
	str	r0, [fp, #-328]	@, %sfp
	movw	r0, #:lower16:1960280	@,
	movt	r0, #:upper16:1960280	@,
	str	r0, [fp, #-332]	@, %sfp
	movw	r0, #:lower16:1960212	@,
	movt	r0, #:upper16:1960212	@,
	str	r0, [fp, #-336]	@, %sfp
	movw	r0, #:lower16:1960284	@,
	movt	r0, #:upper16:1960284	@,
	str	r0, [fp, #-340]	@, %sfp
	movw	r0, #:lower16:1960216	@,
	movt	r0, #:upper16:1960216	@,
	str	r0, [fp, #-344]	@, %sfp
	movw	r0, #:lower16:1960288	@,
	movt	r0, #:upper16:1960288	@,
	str	r0, [fp, #-348]	@, %sfp
	movw	r0, #:lower16:1960220	@,
	movt	r0, #:upper16:1960220	@,
	str	r0, [fp, #-352]	@, %sfp
	movw	r0, #:lower16:1960292	@,
	movt	r0, #:upper16:1960292	@,
	str	r0, [fp, #-356]	@, %sfp
	movw	r0, #:lower16:1960224	@,
	movt	r0, #:upper16:1960224	@,
	str	r0, [fp, #-360]	@, %sfp
	movw	r0, #:lower16:1960296	@,
	movt	r0, #:upper16:1960296	@,
	str	r0, [fp, #-364]	@, %sfp
	movw	r0, #:lower16:1960228	@,
	movt	r0, #:upper16:1960228	@,
	str	r0, [fp, #-368]	@, %sfp
	movw	r0, #:lower16:1960300	@,
	movt	r0, #:upper16:1960300	@,
	str	r0, [fp, #-372]	@, %sfp
	movw	r0, #:lower16:1960232	@,
	movt	r0, #:upper16:1960232	@,
	str	r0, [fp, #-376]	@, %sfp
	movw	r0, #:lower16:1960304	@,
	movt	r0, #:upper16:1960304	@,
	str	r0, [fp, #-380]	@, %sfp
	movw	r0, #:lower16:1960236	@,
	movt	r0, #:upper16:1960236	@,
	str	r0, [fp, #-384]	@, %sfp
	movw	r0, #:lower16:1960308	@,
	movt	r0, #:upper16:1960308	@,
	str	r0, [fp, #-388]	@, %sfp
	movw	r0, #:lower16:1960240	@,
	movt	r0, #:upper16:1960240	@,
	str	r0, [fp, #-392]	@, %sfp
	movw	r0, #:lower16:1960312	@,
	movt	r0, #:upper16:1960312	@,
	str	r0, [fp, #-396]	@, %sfp
	movw	r0, #:lower16:1960244	@,
	movt	r0, #:upper16:1960244	@,
	str	r0, [fp, #-400]	@, %sfp
	movw	r0, #:lower16:1960316	@,
	movt	r0, #:upper16:1960316	@,
	str	r0, [fp, #-404]	@, %sfp
	movw	r0, #:lower16:1960248	@,
	movt	r0, #:upper16:1960248	@,
	str	r0, [fp, #-408]	@, %sfp
	movw	r0, #:lower16:1960320	@,
	movt	r0, #:upper16:1960320	@,
	str	r0, [fp, #-412]	@, %sfp
	movw	r0, #:lower16:1960252	@,
	movt	r0, #:upper16:1960252	@,
	str	r0, [fp, #-416]	@, %sfp
	movw	r0, #:lower16:1960324	@,
	movt	r0, #:upper16:1960324	@,
	str	r0, [fp, #-420]	@, %sfp
	movw	r0, #:lower16:1960256	@,
	movt	r0, #:upper16:1960256	@,
	str	r0, [fp, #-424]	@, %sfp
	movw	r0, #:lower16:1960328	@,
	movt	r0, #:upper16:1960328	@,
	str	r0, [fp, #-428]	@, %sfp
	movw	r0, #:lower16:1960260	@,
	movt	r0, #:upper16:1960260	@,
	str	r0, [fp, #-432]	@, %sfp
	movw	r0, #:lower16:1960332	@,
	movt	r0, #:upper16:1960332	@,
	str	r0, [fp, #-436]	@, %sfp
	movw	r0, #:lower16:1960264	@,
	movt	r0, #:upper16:1960264	@,
	str	r0, [fp, #-440]	@, %sfp
	movw	r0, #:lower16:1960196	@,
	movt	r0, #:upper16:1960196	@,
	str	r0, [fp, #-444]	@, %sfp
	movw	r0, #:lower16:2125360	@,
	str	r5, [r4, sl]	@ tmp446, <variable>.DPB.fs_ltref
	movt	r0, #:upper16:2125360	@,
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_positive_ref
	mov	sl, #2	@ tmp404,
	str	r5, [r4, r6]	@ tmp446, <variable>.DPB.fs
	add	r0, r4, r0	@, pHevcCtx,
	str	r5, [r4, r1]	@ tmp446, <variable>.DPB.fs_ltref
	movw	r6, #:lower16:1960336	@ tmp439,
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs_negative_ref
	movw	r1, #3688	@,
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_positive_ref
	movt	r6, #:upper16:1960336	@ tmp439,
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs_negative_ref
	add	r6, r4, r6	@ tmp439, pHevcCtx, tmp439
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.fs_ltref
	str	r5, [r4, r9]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	lr, [fp, #-52]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	r7, [fp, #-56]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs
	ldr	r8, [fp, #-60]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-64]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r3, [fp, #-68]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	r2, [fp, #-72]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs
	ldr	lr, [fp, #-76]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	r7, [fp, #-80]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r8, [fp, #-84]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	ip, [fp, #-88]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs
	ldr	r3, [fp, #-92]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	r2, [fp, #-96]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	lr, [fp, #-100]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	r7, [fp, #-104]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs
	ldr	r8, [fp, #-108]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-112]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r3, [fp, #-116]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.fs_negative_ref
	mov	r3, #16	@,
	ldr	r2, [fp, #-120]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs
	ldr	lr, [fp, #-124]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	r7, [fp, #-128]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r8, [fp, #-132]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	ip, [fp, #-136]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs
	ldr	r2, [fp, #-48]	@, %sfp
	str	r3, [r4, r2]	@, <variable>.APC.size
	ldr	lr, [fp, #-140]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	r7, [fp, #-144]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r8, [fp, #-148]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	ip, [fp, #-152]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs
	ldr	r2, [fp, #-156]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	r3, [fp, #-160]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	lr, [fp, #-164]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	r7, [fp, #-168]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs
	ldr	r8, [fp, #-172]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-176]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r2, [fp, #-180]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	r3, [fp, #-184]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.fs
	ldr	lr, [fp, #-188]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	r7, [fp, #-192]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r8, [fp, #-196]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	ip, [fp, #-200]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs
	ldr	r2, [fp, #-204]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	r3, [fp, #-208]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	lr, [fp, #-212]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	r7, [fp, #-216]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs
	ldr	r8, [fp, #-220]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-224]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r2, [fp, #-228]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	r3, [fp, #-232]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.fs
	ldr	lr, [fp, #-236]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	r7, [fp, #-240]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r8, [fp, #-244]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	ip, [fp, #-248]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs
	ldr	r2, [fp, #-252]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	r3, [fp, #-256]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.fs_positive_ref
	mov	r3, #17	@ tmp330,
	ldr	lr, [fp, #-260]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	r7, [fp, #-264]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.DPB.fs
	ldr	r8, [fp, #-268]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-272]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.DPB.fs_positive_ref
	ldr	r2, [fp, #-276]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.fs_negative_ref
	ldr	lr, [fp, #-304]	@, %sfp
	str	r3, [r4, lr]	@ tmp330, <variable>.DPB.size
	ldr	r7, [fp, #-308]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.pListX
	ldr	r8, [fp, #-280]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.fs
	ldr	ip, [fp, #-312]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.pListX
	ldr	r2, [fp, #-284]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.used_size
	ldr	lr, [fp, #-316]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.pListX
	ldr	r3, [fp, #-288]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.max_long_term_pic_idx
	ldr	r7, [fp, #-320]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.pListX
	ldr	r8, [fp, #-292]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.DPB.ltref_frames_in_buffer
	ldr	ip, [fp, #-324]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.pListX
	ldr	r2, [fp, #-296]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.DPB.negative_ref_frames_in_buffer
	ldr	lr, [fp, #-328]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.pListX
	ldr	r3, [fp, #-300]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.DPB.positive_ref_frames_in_buffer
	ldr	r7, [fp, #-332]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.pListX
	ldr	r8, [fp, #-336]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.pListX
	ldr	ip, [fp, #-340]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.pListX
	ldr	r2, [fp, #-344]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.pListX
	ldr	lr, [fp, #-348]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.pListX
	ldr	r3, [fp, #-352]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.pListX
	ldr	r7, [fp, #-356]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.pListX
	ldr	r8, [fp, #-360]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.pListX
	ldr	ip, [fp, #-364]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.pListX
	ldr	r2, [fp, #-368]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.pListX
	ldr	lr, [fp, #-372]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.pListX
	ldr	r3, [fp, #-376]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.pListX
	ldr	r7, [fp, #-380]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.pListX
	ldr	r8, [fp, #-384]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.pListX
	ldr	ip, [fp, #-388]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.pListX
	ldr	r2, [fp, #-392]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.pListX
	ldr	lr, [fp, #-396]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.pListX
	ldr	r3, [fp, #-400]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.pListX
	ldr	r7, [fp, #-404]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.pListX
	ldr	r8, [fp, #-408]	@, %sfp
	str	r5, [r4, r8]	@ tmp446, <variable>.pListX
	ldr	ip, [fp, #-412]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.pListX
	ldr	r2, [fp, #-416]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.pListX
	ldr	lr, [fp, #-444]	@, %sfp
	str	r5, [r4, lr]	@ tmp446, <variable>.pCurrNal
	ldr	r3, [fp, #-420]	@, %sfp
	str	r5, [r4, r3]	@ tmp446, <variable>.pListX
	ldr	r7, [fp, #-424]	@, %sfp
	str	r5, [r4, r7]	@ tmp446, <variable>.pListX
	movw	r7, #:lower16:2126924	@ tmp409,
	ldr	r8, [fp, #-428]	@, %sfp
	movt	r7, #:upper16:2126924	@ tmp409,
	str	r5, [r4, r8]	@ tmp446, <variable>.pListX
	mvn	r8, #-2147483648	@ tmp424,
	ldr	ip, [fp, #-432]	@, %sfp
	str	r5, [r4, ip]	@ tmp446, <variable>.pListX
	ldr	r2, [fp, #-436]	@, %sfp
	str	r5, [r4, r2]	@ tmp446, <variable>.pListX
	ldr	lr, [fp, #-440]	@, %sfp
	str	r5, [r4, #200]	@ tmp446, <variable>.NumSlicePara
	str	r5, [r4, #216]	@ tmp446, <variable>.MaxBytesReceived
	str	r5, [r4, lr]	@ tmp446, <variable>.pListX
	str	r5, [r4, #208]	@ tmp446, <variable>.TotalSliceNum
	str	sl, [r4, #164]	@ tmp404, <variable>.CurrMsgSlotNum
	bl	__memzero	@
	movw	r1, #:lower16:2125420	@ tmp407,
	movt	r1, #:upper16:2125420	@ tmp407,
	mov	lr, #32	@ tmp434,
	mov	r2, #8	@ tmp422,
	mov	ip, #1	@ tmp410,
	str	sl, [r4, r1]	@ tmp404, <variable>.CurrSlice.slice_type
	mov	r3, #16	@,
	str	ip, [r4, r7]	@ tmp410, <variable>.CurrSlice.new_pic_type
	mov	r0, #64	@ tmp428,
	str	r3, [r4, #292]	@, <variable>.scalingListSizeX
	mov	r7, #20	@ tmp420,
	mov	r3, #6	@ tmp435,
	strb	ip, [r4, #2]	@ tmp410, <variable>.bNoRaslOutputFlag
	str	r2, [r4, #288]	@ tmp422, <variable>.scalingListSizeX
	mov	r1, lr	@, tmp434
	str	r8, [r4, #192]	@ tmp424, <variable>.PocRandomAccess
	mov	r8, #256	@ tmp429,
	str	r0, [r4, #272]	@ tmp428, <variable>.scalingListSize
	movw	r0, #1025	@ tmp430,
	str	r8, [r4, #276]	@ tmp429, <variable>.scalingListSize
	mov	r8, #4	@ tmp431,
	str	r0, [r4, #280]	@ tmp430, <variable>.scalingListSize
	mov	r0, r6	@, tmp439
	strb	ip, [r4, #0]	@ tmp410, <variable>.bNewSequence
	mov	ip, #16	@,
	str	r2, [r4, #184]	@ tmp422, <variable>.BitDepthY
	str	r2, [r4, #188]	@ tmp422, <variable>.BitDepthC
	strb	r5, [r4, #7]	@ tmp446, <variable>.PrevRAPIsBLA
	str	r7, [r4, #172]	@ tmp420, <variable>.TotalPmvNum
	str	r8, [r4, #284]	@ tmp431, <variable>.scalingListSizeX
	str	r3, [r4, #2180]	@ tmp435, <variable>.scalingListNum
	str	sl, [r4, #2184]	@ tmp404, <variable>.scalingListNum
	strb	r5, [r4, #3]	@ tmp446, <variable>.bPPicFound
	strb	r5, [r4, #1]	@ tmp446, <variable>.bNoOutputOfPriorPicsFlag
	str	r5, [r4, #160]	@ tmp446, <variable>.AllowStartDec
	str	r7, [r4, #168]	@ tmp420, <variable>.TotalFsNum
	str	ip, [r4, #268]	@, <variable>.scalingListSize
	str	lr, [r4, #296]	@ tmp434, <variable>.scalingListSizeX
	str	r3, [r4, #2172]	@ tmp435, <variable>.scalingListNum
	str	r3, [r4, #2176]	@ tmp435, <variable>.scalingListNum
	bl	__memzero	@
	movw	r2, #:lower16:1960172	@ tmp441,
	movt	r2, #:upper16:1960172	@ tmp441,
	str	r6, [r4, r2]	@ tmp439, <variable>.pBS
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	HEVC_InitDecPara, .-HEVC_InitDecPara
	.align	2
	.global	HEVCDEC_Init
	.type	HEVCDEC_Init, %function
HEVCDEC_Init:
	.fnstart
.LFB1670:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:2133080	@ tmp151,
	movt	r6, #:upper16:2133080	@ tmp151,
	mov	r5, r1	@ pstExtraData, pstExtraData
	movw	r1, #:lower16:4321232	@,
	movt	r1, #:upper16:4321232	@,
	ldr	r7, [r0, r6]	@ D.47438, <variable>.ImageQue.ResetMagicWord
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	bl	__memzero	@
	movw	r1, #:lower16:1960188	@ tmp154,
	movw	r0, #:lower16:1960192	@ tmp155,
	movt	r1, #:upper16:1960188	@ tmp154,
	movt	r0, #:upper16:1960192	@ tmp155,
	str	r7, [r4, r6]	@ D.47438, <variable>.ImageQue.ResetMagicWord
	str	r5, [r4, r1]	@ pstExtraData, <variable>.pstExtraData
	mov	r2, #0	@ tmp156,
	str	r2, [r4, r0]	@ tmp156, <variable>.pHevcDecParam
	ldr	r3, [r5, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r3, #25	@ <variable>.eCapLevel,
	beq	.L1252	@,
	mov	ip, #16	@ tmp162,
	mov	r1, #64	@ tmp164,
	mov	r0, #210	@ tmp165,
	str	ip, [r4, #152]	@ tmp162, <variable>.MaxSpsNum
	str	ip, [r4, #148]	@ tmp162, <variable>.MaxVpsNum
	str	r1, [r4, #156]	@ tmp164, <variable>.MaxPpsNum
	str	r0, [r4, #144]	@ tmp165, <variable>.MaxSliceNum
.L1240:
	ldr	r0, [r5, #676]	@, <variable>.s32ContextMemAddr
	bl	MEM_Phy2Vir	@
	subs	r3, r0, #0	@ D.47455,
	beq	.L1253	@,
	movw	r0, #:lower16:1960188	@ tmp171,
	movt	r0, #:upper16:1960188	@ tmp171,
	ldr	r8, [r4, #148]	@ <variable>.MaxVpsNum, <variable>.MaxVpsNum
	movw	lr, #23196	@ tmp176,
	ldr	r7, [r4, r0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r9, #36364	@ tmp180,
	ldr	ip, [r4, #152]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	movw	sl, #:lower16:1960176	@ tmp173,
	mul	r1, lr, r8	@ tmp174, tmp176, <variable>.MaxVpsNum
	ldr	r6, [r7, #672]	@ <variable>.s32BasicCtxSize, <variable>.s32BasicCtxSize
	movt	sl, #:upper16:1960176	@ tmp173,
	ldr	lr, [r4, #156]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	add	r3, r3, r6	@ D.47463, D.47455, <variable>.s32BasicCtxSize
	movw	r7, #:lower16:1960184	@ tmp181,
	add	r0, r3, r1	@ prephitmp.4739, D.47463, tmp174
	str	r3, [r4, sl]	@ D.47463, <variable>.pVPS
	movw	sl, #7704	@ tmp184,
	movw	r6, #:lower16:1960180	@ tmp177,
	mla	r9, r9, ip, r0	@ D.47475, tmp180, <variable>.MaxSpsNum, prephitmp.4739
	movt	r6, #:upper16:1960180	@ tmp177,
	movt	r7, #:upper16:1960184	@ tmp181,
	movw	r2, #:lower16:2358440	@ tmp185,
	movt	r2, #:upper16:2358440	@ tmp185,
	str	r0, [r4, r6]	@ prephitmp.4739, <variable>.pSPS
	mla	sl, sl, lr, r9	@ D.47481, tmp184, <variable>.MaxPpsNum, D.47475
	str	r9, [r4, r7]	@ D.47475, <variable>.pPPS
	str	sl, [r4, r2]	@ D.47481, <variable>.pDecSlicePara
	ldr	r2, [r5, #696]	@ <variable>.s32KeepSPSPPS, <variable>.s32KeepSPSPPS
	cmp	r2, #0	@ <variable>.s32KeepSPSPPS,
	bne	.L1243	@,
	cmp	r3, #0	@ D.47463,
	beq	.L1243	@,
	cmp	r0, #0	@ prephitmp.4739,
	beq	.L1243	@,
	cmp	r9, #0	@ D.47475,
	beq	.L1243	@,
	cmp	sl, #0	@ D.47481,
	beq	.L1243	@,
	cmp	r1, #0	@ tmp174,
	bne	.L1254	@,
.L1244:
	movw	r8, #36364	@ tmp191,
	mul	r1, r8, ip	@ __n, tmp191, <variable>.MaxSpsNum
	cmp	r1, #0	@ __n,
	bne	.L1255	@,
.L1245:
	ldr	ip, [r4, #156]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movw	r1, #7704	@ tmp194,
	movw	r3, #:lower16:1960184	@ tmp192,
	movt	r3, #:upper16:1960184	@ tmp192,
	mul	r1, r1, ip	@ __n, tmp194, <variable>.MaxPpsNum
	ldr	r0, [r4, r3]	@ __p, <variable>.pPPS
	cmp	r1, #0	@ __n,
	bne	.L1256	@,
.L1246:
	ldr	r2, [r4, #144]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	mov	r0, #1296	@ tmp197,
	movw	lr, #:lower16:2358440	@ tmp195,
	movt	lr, #:upper16:2358440	@ tmp195,
	mul	r1, r0, r2	@ __n, tmp197, <variable>.MaxSliceNum
	ldr	r0, [r4, lr]	@ __p, <variable>.pDecSlicePara
	cmp	r1, #0	@ __n,
	bne	.L1250	@,
.L1251:
	add	r8, r4, #148
	ldmia	r8, {r8, ip, lr}	@ phole ldm
.L1243:
	movw	r1, #:lower16:2021188	@ tmp198,
	movw	r2, #:lower16:2117132	@ tmp200,
	movt	r1, #:upper16:2021188	@ tmp198,
	movt	r2, #:upper16:2117132	@ tmp200,
	movw	r3, #:lower16:2044436	@ tmp202,
	movt	r3, #:upper16:2044436	@ tmp202,
	str	r8, [r4, r1]	@ <variable>.MaxVpsNum, <variable>.CurrVPS.video_parameter_set_id
	mov	r0, r4	@, pHevcCtx
	str	ip, [r4, r2]	@ <variable>.MaxSpsNum, <variable>.CurrPPS.pic_parameter_set_id
	str	lr, [r4, r3]	@ <variable>.MaxPpsNum, <variable>.CurrSPS.seq_parameter_set_id
	bl	HEVC_InitScalingOrderTable	@
	mov	r0, r4	@, pHevcCtx
	bl	VCTRL_GetChanIDByCtx	@
	cmn	r0, #1	@ D.47517,
	str	r0, [r4, #236]	@ D.47517, <variable>.ChanID
	beq	.L1257	@,
	mov	lr, #-2147483647	@ tmp207,
	mov	r0, r4	@, pHevcCtx
	str	lr, [r4, #204]	@ tmp207, <variable>.LastDisplayPoc
	bl	HEVC_InitDecPara	@
	ldr	r1, [r4, #156]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movw	r3, #:lower16:2133088	@ tmp208,
	movt	r3, #:upper16:2133088	@ tmp208,
	mov	ip, #0	@ tmp209,
	movw	r2, #9999	@ tmp211,
	mov	r0, ip	@ D.47459, tmp209
	str	r1, [r4, #264]	@ <variable>.MaxPpsNum, <variable>.prev_pic_parameter_set_id
	str	r2, [r4, #244]	@ tmp211, <variable>.prev_poc
	str	ip, [r4, r3]	@ tmp209, <variable>.FirstFrameState
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1252:
	ldr	r2, [r5, #756]	@ <variable>.stChanOption.s32MaxVpsNum, <variable>.stChanOption.s32MaxVpsNum
	str	r2, [r4, #148]	@ <variable>.stChanOption.s32MaxVpsNum, <variable>.MaxVpsNum
	ldr	r3, [r5, #760]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.stChanOption.s32MaxSpsNum
	str	r3, [r4, #152]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.MaxSpsNum
	ldr	lr, [r5, #764]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.stChanOption.s32MaxPpsNum
	str	lr, [r4, #156]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.MaxPpsNum
	ldr	ip, [r5, #752]	@ <variable>.stChanOption.s32MaxSliceNum, <variable>.stChanOption.s32MaxSliceNum
	str	ip, [r4, #144]	@ <variable>.stChanOption.s32MaxSliceNum, <variable>.MaxSliceNum
	b	.L1240	@
.L1250:
	bl	__memzero	@
	b	.L1251	@
.L1256:
	bl	__memzero	@
	b	.L1246	@
.L1255:
	bl	__memzero	@
	b	.L1245	@
.L1254:
	mov	r0, r3	@, D.47463
	bl	__memzero	@
	ldr	r0, [r4, r6]	@ prephitmp.4739, <variable>.pSPS
	ldr	ip, [r4, #152]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	b	.L1244	@
.L1257:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC197	@,
	ldr	r2, .L1258	@,
	movt	r1, #:upper16:.LC197	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.47459,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1253:
	movw	r1, #:lower16:.LC196	@,
	ldr	r2, .L1258	@,
	movt	r1, #:upper16:.LC196	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.47459,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1259:
	.align	2
.L1258:
	.word	.LANCHOR1+264
	.fnend
	.size	HEVCDEC_Init, .-HEVCDEC_Init
	.align	2
	.global	HEVC_ClearAllSlice
	.type	HEVC_ClearAllSlice, %function
HEVC_ClearAllSlice:
	.fnstart
.LFB1680:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:4300592	@ ivtmp.4794,
	movw	r8, #:lower16:4306472	@ D.52512,
	movt	r4, #:upper16:4300592	@ ivtmp.4794,
	movt	r8, #:upper16:4306472	@ D.52512,
	add	r4, r0, r4	@ ivtmp.4794, pHevcCtx, ivtmp.4794
	add	r8, r0, r8	@ D.52512, pHevcCtx, D.52512
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	mov	r7, #0	@ tmp147,
.L1262:
	ldr	r1, [r4, #0]	@ D.47623, <variable>.slice_nal
	add	r5, r4, #28	@ tmp148, ivtmp.4794,
	cmp	r1, #0	@ D.47623,
	beq	.L1261	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	HEVC_ReleaseNAL	@
	str	r7, [r4, #0]	@ tmp147, <variable>.slice_nal
.L1261:
	ldr	r1, [r4, #28]	@ D.47623, <variable>.slice_nal
	cmp	r1, #0	@ D.47623,
	beq	.L1265	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	HEVC_ReleaseNAL	@
	str	r7, [r4, #28]	@ tmp147, <variable>.slice_nal
.L1265:
	add	r4, r5, #28	@ ivtmp.4794, tmp148,
	cmp	r4, r8	@ ivtmp.4794, D.52512
	bne	.L1262	@,
	mov	r1, #0	@ tmp142,
	mov	r3, #2	@ tmp145,
	str	r1, [r6, #200]	@ tmp142, <variable>.NumSlicePara
	mov	r0, r1	@, tmp142
	str	r1, [r6, #216]	@ tmp142, <variable>.MaxBytesReceived
	str	r1, [r6, #208]	@ tmp142, <variable>.TotalSliceNum
	str	r3, [r6, #164]	@ tmp145, <variable>.CurrMsgSlotNum
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	HEVC_ClearAllSlice, .-HEVC_ClearAllSlice
	.align	2
	.global	HEVC_ClearCurrPic
	.type	HEVC_ClearCurrPic, %function
HEVC_ClearCurrPic:
	.fnstart
.LFB1682:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:2124852	@ tmp136,
	movt	r4, #:upper16:2124852	@ tmp136,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	bl	HEVC_ClearAllSlice	@
	ldr	r3, [r5, r4]	@ D.47647, <variable>.CurrPic.frame_store
	cmp	r3, #0	@ D.47647,
	beq	.L1270	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	ldr	r2, [r5, r4]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r3, #0	@ tmp141,
	str	r3, [r2, #4]	@ tmp141, <variable>.eFrameStoreState
	str	r3, [r5, r4]	@ tmp141, <variable>.CurrPic.frame_store
.L1270:
	movw	r1, #:lower16:2124809	@ tmp144,
	movt	r1, #:upper16:2124809	@ tmp144,
	mov	r0, #0	@ tmp145,
	strb	r0, [r5, r1]	@ tmp145, <variable>.CurrPic.state
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_ClearCurrPic, .-HEVC_ClearCurrPic
	.align	2
	.global	HEVC_HaveSliceToDec
	.type	HEVC_HaveSliceToDec, %function
HEVC_HaveSliceToDec:
	.fnstart
.LFB1686:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r0, [r0, #200]	@ <variable>.NumSlicePara, <variable>.NumSlicePara
	cmp	r0, #0	@ <variable>.NumSlicePara,
	movne	r0, #0	@ D.47777,
	ldmnefd	sp, {r3, r4, fp, sp, pc}	@
	movw	r1, #:lower16:2124809	@ tmp137,
	movt	r1, #:upper16:2124809	@ tmp137,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	cmp	r3, #0	@ <variable>.CurrPic.state,
	mvneq	r0, #0	@ D.47777,
	ldmeqfd	sp, {r3, r4, fp, sp, pc}	@
	ldr	r2, .L1277	@,
	movw	r1, #:lower16:.LC198	@,
	movt	r1, #:upper16:.LC198	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrPic	@
	mvn	r0, #0	@ D.47777,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1278:
	.align	2
.L1277:
	.word	.LANCHOR1+280
	.fnend
	.size	HEVC_HaveSliceToDec, .-HEVC_HaveSliceToDec
	.align	2
	.global	HEVC_ClearCurrNal
	.type	HEVC_ClearCurrNal, %function
HEVC_ClearCurrNal:
	.fnstart
.LFB1676:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:1960196	@ tmp136,
	movt	r4, #:upper16:1960196	@ tmp136,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	ldr	r1, [r0, r4]	@ D.47591, <variable>.pCurrNal
	cmp	r1, #0	@ D.47591,
	beq	.L1280	@,
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	bl	HEVC_ReleaseNAL	@
	mov	r3, #0	@ tmp139,
	str	r3, [r5, r4]	@ tmp139, <variable>.pCurrNal
.L1280:
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_ClearCurrNal, .-HEVC_ClearCurrNal
	.align	2
	.global	HEVC_ClearCurrSlice
	.type	HEVC_ClearCurrSlice, %function
HEVC_ClearCurrSlice:
	.fnstart
.LFB1679:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	bl	HEVC_ClearCurrNal	@
	mov	r0, #0	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HEVC_ClearCurrSlice, .-HEVC_ClearCurrSlice
	.align	2
	.global	Hevc_InitDecBuffers
	.type	Hevc_InitDecBuffers, %function
Hevc_InitDecBuffers:
	.fnstart
.LFB1602:
	@ args = 0, pretend = 0, frame = 264
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #268
	sub	sp, sp, #268	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	lr, #:lower16:2044612	@ tmp143,
	movt	lr, #:upper16:2044612	@ tmp143,
	movw	r8, #:lower16:1960368	@ tmp145,
	movt	r8, #:upper16:1960368	@ tmp145,
	movw	r6, #:lower16:4306716	@ ivtmp.4953,
	ldr	ip, [r0, lr]	@ <variable>.CurrSPS.dpb_size, <variable>.CurrSPS.dpb_size
	movt	r6, #:upper16:4306716	@ ivtmp.4953,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	add	r6, r0, r6	@ ivtmp.4953, pHevcCtx, ivtmp.4953
	add	r3, ip, #1	@ D.44498, <variable>.CurrSPS.dpb_size,
	movw	r1, #:lower16:1960384	@,
	cmp	r3, #17	@ D.44498,
	str	r3, [r0, r8]	@ D.44498, <variable>.DPB.size
	movt	r1, #:upper16:1960384	@,
	movw	r2, #:lower16:1960388	@,
	movhi	r3, #17	@ tmp147,
	movt	r2, #:upper16:1960388	@,
	strhi	r3, [r0, r8]	@ tmp147, <variable>.DPB.size
	movw	sl, #:lower16:1960380	@,
	str	r1, [fp, #-52]	@, %sfp
	movt	sl, #:upper16:1960380	@,
	str	r2, [fp, #-56]	@, %sfp
	movw	r0, #:lower16:1960372	@,
	str	sl, [fp, #-60]	@, %sfp
	movt	r0, #:upper16:1960372	@,
	movw	r9, #:lower16:1960376	@,
	str	r0, [fp, #-48]	@, %sfp
	movt	r9, #:upper16:1960376	@,
	movw	r7, #:lower16:1960596	@ tmp158,
	str	r9, [fp, #-64]	@, %sfp
	movt	r7, #:upper16:1960596	@ tmp158,
	movw	lr, #:lower16:1960460	@ tmp160,
	movw	ip, #:lower16:1960528	@ tmp162,
	movt	lr, #:upper16:1960460	@ tmp160,
	movt	ip, #:upper16:1960528	@ tmp162,
	movw	r0, #:lower16:1960392	@ tmp164,
	movw	r1, #:lower16:1960600	@ tmp166,
	movt	r0, #:upper16:1960392	@ tmp164,
	movt	r1, #:upper16:1960600	@ tmp166,
	movw	r2, #:lower16:1960464	@ tmp168,
	movw	sl, #:lower16:1960532	@ tmp170,
	movt	r2, #:upper16:1960464	@ tmp168,
	movt	sl, #:upper16:1960532	@ tmp170,
	movw	r9, #:lower16:1960396	@ tmp172,
	movt	r9, #:upper16:1960396	@ tmp172,
	mov	r3, #0	@ tmp149,
	movw	r5, #:lower16:1960604	@,
	movt	r5, #:upper16:1960604	@,
	str	r5, [fp, #-68]	@, %sfp
	movw	r5, #:lower16:1960468	@,
	movt	r5, #:upper16:1960468	@,
	str	r5, [fp, #-72]	@, %sfp
	movw	r5, #:lower16:1960536	@,
	movt	r5, #:upper16:1960536	@,
	str	r5, [fp, #-76]	@, %sfp
	movw	r5, #:lower16:1960400	@,
	movt	r5, #:upper16:1960400	@,
	str	r5, [fp, #-80]	@, %sfp
	movw	r5, #:lower16:1960608	@,
	movt	r5, #:upper16:1960608	@,
	str	r5, [fp, #-84]	@, %sfp
	movw	r5, #:lower16:1960472	@,
	movt	r5, #:upper16:1960472	@,
	str	r5, [fp, #-88]	@, %sfp
	movw	r5, #:lower16:1960540	@,
	movt	r5, #:upper16:1960540	@,
	str	r5, [fp, #-92]	@, %sfp
	movw	r5, #:lower16:1960404	@,
	movt	r5, #:upper16:1960404	@,
	str	r5, [fp, #-96]	@, %sfp
	movw	r5, #:lower16:1960612	@,
	movt	r5, #:upper16:1960612	@,
	str	r5, [fp, #-100]	@, %sfp
	movw	r5, #:lower16:1960476	@,
	movt	r5, #:upper16:1960476	@,
	str	r5, [fp, #-104]	@, %sfp
	movw	r5, #:lower16:1960544	@,
	movt	r5, #:upper16:1960544	@,
	str	r5, [fp, #-108]	@, %sfp
	movw	r5, #:lower16:1960408	@,
	movt	r5, #:upper16:1960408	@,
	str	r5, [fp, #-112]	@, %sfp
	movw	r5, #:lower16:1960616	@,
	movt	r5, #:upper16:1960616	@,
	str	r5, [fp, #-116]	@, %sfp
	movw	r5, #:lower16:1960480	@,
	movt	r5, #:upper16:1960480	@,
	str	r5, [fp, #-120]	@, %sfp
	movw	r5, #:lower16:1960548	@,
	movt	r5, #:upper16:1960548	@,
	str	r5, [fp, #-124]	@, %sfp
	movw	r5, #:lower16:1960412	@,
	movt	r5, #:upper16:1960412	@,
	str	r5, [fp, #-128]	@, %sfp
	movw	r5, #:lower16:1960620	@,
	movt	r5, #:upper16:1960620	@,
	str	r5, [fp, #-132]	@, %sfp
	movw	r5, #:lower16:1960484	@,
	movt	r5, #:upper16:1960484	@,
	str	r5, [fp, #-136]	@, %sfp
	movw	r5, #:lower16:1960552	@,
	movt	r5, #:upper16:1960552	@,
	str	r5, [fp, #-140]	@, %sfp
	movw	r5, #:lower16:1960416	@,
	movt	r5, #:upper16:1960416	@,
	str	r5, [fp, #-144]	@, %sfp
	movw	r5, #:lower16:1960624	@,
	movt	r5, #:upper16:1960624	@,
	str	r5, [fp, #-148]	@, %sfp
	movw	r5, #:lower16:1960488	@,
	movt	r5, #:upper16:1960488	@,
	str	r5, [fp, #-152]	@, %sfp
	movw	r5, #:lower16:1960556	@,
	movt	r5, #:upper16:1960556	@,
	str	r5, [fp, #-156]	@, %sfp
	movw	r5, #:lower16:1960420	@,
	movt	r5, #:upper16:1960420	@,
	str	r5, [fp, #-160]	@, %sfp
	movw	r5, #:lower16:1960628	@,
	movt	r5, #:upper16:1960628	@,
	str	r5, [fp, #-164]	@, %sfp
	movw	r5, #:lower16:1960492	@,
	movt	r5, #:upper16:1960492	@,
	str	r5, [fp, #-168]	@, %sfp
	movw	r5, #:lower16:1960560	@,
	movt	r5, #:upper16:1960560	@,
	str	r5, [fp, #-172]	@, %sfp
	movw	r5, #:lower16:1960424	@,
	movt	r5, #:upper16:1960424	@,
	str	r5, [fp, #-176]	@, %sfp
	movw	r5, #:lower16:1960632	@,
	movt	r5, #:upper16:1960632	@,
	str	r5, [fp, #-180]	@, %sfp
	movw	r5, #:lower16:1960496	@,
	movt	r5, #:upper16:1960496	@,
	str	r5, [fp, #-184]	@, %sfp
	movw	r5, #:lower16:1960564	@,
	movt	r5, #:upper16:1960564	@,
	str	r5, [fp, #-188]	@, %sfp
	movw	r5, #:lower16:1960428	@,
	movt	r5, #:upper16:1960428	@,
	str	r5, [fp, #-192]	@, %sfp
	movw	r5, #:lower16:1960636	@,
	movt	r5, #:upper16:1960636	@,
	str	r5, [fp, #-196]	@, %sfp
	movw	r5, #:lower16:1960500	@,
	movt	r5, #:upper16:1960500	@,
	str	r5, [fp, #-200]	@, %sfp
	movw	r5, #:lower16:1960568	@,
	movt	r5, #:upper16:1960568	@,
	str	r5, [fp, #-204]	@, %sfp
	movw	r5, #:lower16:1960432	@,
	movt	r5, #:upper16:1960432	@,
	str	r5, [fp, #-208]	@, %sfp
	movw	r5, #:lower16:1960640	@,
	movt	r5, #:upper16:1960640	@,
	str	r5, [fp, #-212]	@, %sfp
	movw	r5, #:lower16:1960504	@,
	movt	r5, #:upper16:1960504	@,
	str	r5, [fp, #-216]	@, %sfp
	movw	r5, #:lower16:1960572	@,
	movt	r5, #:upper16:1960572	@,
	str	r5, [fp, #-220]	@, %sfp
	movw	r5, #:lower16:1960436	@,
	movt	r5, #:upper16:1960436	@,
	str	r5, [fp, #-224]	@, %sfp
	movw	r5, #:lower16:1960644	@,
	movt	r5, #:upper16:1960644	@,
	str	r5, [fp, #-228]	@, %sfp
	movw	r5, #:lower16:1960508	@,
	movt	r5, #:upper16:1960508	@,
	str	r5, [fp, #-232]	@, %sfp
	movw	r5, #:lower16:1960576	@,
	movt	r5, #:upper16:1960576	@,
	str	r5, [fp, #-236]	@, %sfp
	movw	r5, #:lower16:1960440	@,
	movt	r5, #:upper16:1960440	@,
	str	r5, [fp, #-240]	@, %sfp
	movw	r5, #:lower16:1960648	@,
	movt	r5, #:upper16:1960648	@,
	str	r5, [fp, #-244]	@, %sfp
	movw	r5, #:lower16:1960512	@,
	movt	r5, #:upper16:1960512	@,
	str	r5, [fp, #-248]	@, %sfp
	movw	r5, #:lower16:1960580	@,
	movt	r5, #:upper16:1960580	@,
	str	r5, [fp, #-252]	@, %sfp
	movw	r5, #:lower16:1960444	@,
	movt	r5, #:upper16:1960444	@,
	str	r5, [fp, #-256]	@, %sfp
	movw	r5, #:lower16:1960652	@,
	movt	r5, #:upper16:1960652	@,
	str	r5, [fp, #-260]	@, %sfp
	movw	r5, #:lower16:1960516	@,
	movt	r5, #:upper16:1960516	@,
	str	r5, [fp, #-264]	@, %sfp
	movw	r5, #:lower16:1960584	@,
	movt	r5, #:upper16:1960584	@,
	str	r5, [fp, #-268]	@, %sfp
	movw	r5, #:lower16:1960448	@,
	movt	r5, #:upper16:1960448	@,
	str	r5, [fp, #-272]	@, %sfp
	movw	r5, #:lower16:1960656	@,
	movt	r5, #:upper16:1960656	@,
	str	r5, [fp, #-276]	@, %sfp
	movw	r5, #:lower16:1960520	@,
	movt	r5, #:upper16:1960520	@,
	str	r5, [fp, #-280]	@, %sfp
	movw	r5, #:lower16:1960588	@,
	movt	r5, #:upper16:1960588	@,
	str	r5, [fp, #-284]	@, %sfp
	movw	r5, #:lower16:1960452	@,
	movt	r5, #:upper16:1960452	@,
	str	r5, [fp, #-288]	@, %sfp
	movw	r5, #:lower16:1960660	@,
	movt	r5, #:upper16:1960660	@,
	str	r5, [fp, #-292]	@, %sfp
	movw	r5, #:lower16:1960524	@,
	movt	r5, #:upper16:1960524	@,
	str	r5, [fp, #-296]	@, %sfp
	movw	r5, #:lower16:1960592	@,
	movt	r5, #:upper16:1960592	@,
	str	r5, [fp, #-300]	@, %sfp
	movw	r5, #:lower16:1960456	@,
	movt	r5, #:upper16:1960456	@,
	str	r5, [fp, #-304]	@, %sfp
	mov	r8, r3	@ i, tmp149
	str	r3, [r4, r7]	@ tmp149, <variable>.DPB.fs_ltref
	mov	r5, r3	@ tmp413, i
	str	r3, [r4, lr]	@ tmp149, <variable>.DPB.fs_negative_ref
	str	r3, [r4, ip]	@ tmp149, <variable>.DPB.fs_positive_ref
	str	r3, [r4, r0]	@ tmp149, <variable>.DPB.fs
	str	r3, [r4, r1]	@ tmp149, <variable>.DPB.fs_ltref
	str	r3, [r4, r2]	@ tmp149, <variable>.DPB.fs_negative_ref
	str	r3, [r4, sl]	@ tmp149, <variable>.DPB.fs_positive_ref
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.fs
	ldr	r9, [fp, #-68]	@, %sfp
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	lr, [fp, #-72]	@, %sfp
	str	r3, [r4, lr]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	ip, [fp, #-76]	@, %sfp
	str	r3, [r4, ip]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	sl, [fp, #-80]	@, %sfp
	str	r3, [r4, sl]	@ tmp149, <variable>.DPB.fs
	ldr	r7, [fp, #-84]	@, %sfp
	str	r3, [r4, r7]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	r1, [fp, #-88]	@, %sfp
	str	r3, [r4, r1]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	r0, [fp, #-92]	@, %sfp
	str	r3, [r4, r0]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r2, [fp, #-96]	@, %sfp
	str	r3, [r4, r2]	@ tmp149, <variable>.DPB.fs
	ldr	r9, [fp, #-100]	@, %sfp
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	lr, [fp, #-104]	@, %sfp
	str	r3, [r4, lr]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	ip, [fp, #-108]	@, %sfp
	str	r3, [r4, ip]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	sl, [fp, #-112]	@, %sfp
	str	r3, [r4, sl]	@ tmp149, <variable>.DPB.fs
	ldr	r7, [fp, #-116]	@, %sfp
	str	r3, [r4, r7]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	r1, [fp, #-120]	@, %sfp
	str	r3, [r4, r1]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	r0, [fp, #-124]	@, %sfp
	str	r3, [r4, r0]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r2, [fp, #-128]	@, %sfp
	str	r3, [r4, r2]	@ tmp149, <variable>.DPB.fs
	ldr	r9, [fp, #-48]	@, %sfp
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.used_size
	ldr	lr, [fp, #-52]	@, %sfp
	str	r3, [r4, lr]	@ tmp149, <variable>.DPB.negative_ref_frames_in_buffer
	ldr	ip, [fp, #-56]	@, %sfp
	str	r3, [r4, ip]	@ tmp149, <variable>.DPB.positive_ref_frames_in_buffer
	ldr	sl, [fp, #-60]	@, %sfp
	str	r3, [r4, sl]	@ tmp149, <variable>.DPB.ltref_frames_in_buffer
	ldr	r7, [fp, #-64]	@, %sfp
	str	r3, [r4, r7]	@ tmp149, <variable>.DPB.max_long_term_pic_idx
	ldr	r1, [fp, #-132]	@, %sfp
	str	r3, [r4, r1]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	r0, [fp, #-136]	@, %sfp
	str	r3, [r4, r0]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	r2, [fp, #-140]	@, %sfp
	str	r3, [r4, r2]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r9, [fp, #-144]	@, %sfp
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.fs
	ldr	lr, [fp, #-148]	@, %sfp
	str	r3, [r4, lr]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-152]	@, %sfp
	str	r3, [r4, ip]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	sl, [fp, #-156]	@, %sfp
	str	r3, [r4, sl]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r7, [fp, #-160]	@, %sfp
	str	r3, [r4, r7]	@ tmp149, <variable>.DPB.fs
	ldr	r1, [fp, #-164]	@, %sfp
	str	r3, [r4, r1]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	r0, [fp, #-168]	@, %sfp
	str	r3, [r4, r0]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	r2, [fp, #-172]	@, %sfp
	str	r3, [r4, r2]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r9, [fp, #-176]	@, %sfp
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.fs
	ldr	lr, [fp, #-180]	@, %sfp
	str	r3, [r4, lr]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-184]	@, %sfp
	str	r3, [r4, ip]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	sl, [fp, #-188]	@, %sfp
	str	r3, [r4, sl]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r7, [fp, #-192]	@, %sfp
	str	r3, [r4, r7]	@ tmp149, <variable>.DPB.fs
	ldr	r1, [fp, #-196]	@, %sfp
	str	r3, [r4, r1]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	r0, [fp, #-200]	@, %sfp
	str	r3, [r4, r0]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	r2, [fp, #-204]	@, %sfp
	str	r3, [r4, r2]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r9, [fp, #-208]	@, %sfp
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.fs
	ldr	lr, [fp, #-212]	@, %sfp
	str	r3, [r4, lr]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-216]	@, %sfp
	str	r3, [r4, ip]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	sl, [fp, #-220]	@, %sfp
	str	r3, [r4, sl]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r7, [fp, #-224]	@, %sfp
	str	r3, [r4, r7]	@ tmp149, <variable>.DPB.fs
	ldr	r1, [fp, #-228]	@, %sfp
	str	r3, [r4, r1]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	r0, [fp, #-232]	@, %sfp
	str	r3, [r4, r0]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	r2, [fp, #-236]	@, %sfp
	str	r3, [r4, r2]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r9, [fp, #-240]	@, %sfp
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.fs
	ldr	lr, [fp, #-244]	@, %sfp
	str	r3, [r4, lr]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-248]	@, %sfp
	str	r3, [r4, ip]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	sl, [fp, #-252]	@, %sfp
	str	r3, [r4, sl]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r7, [fp, #-256]	@, %sfp
	str	r3, [r4, r7]	@ tmp149, <variable>.DPB.fs
	ldr	r1, [fp, #-260]	@, %sfp
	str	r3, [r4, r1]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	r0, [fp, #-264]	@, %sfp
	str	r3, [r4, r0]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	r2, [fp, #-268]	@, %sfp
	str	r3, [r4, r2]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r9, [fp, #-272]	@, %sfp
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.fs
	ldr	lr, [fp, #-276]	@, %sfp
	str	r3, [r4, lr]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	ip, [fp, #-280]	@, %sfp
	str	r3, [r4, ip]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	sl, [fp, #-284]	@, %sfp
	str	r3, [r4, sl]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r7, [fp, #-288]	@, %sfp
	str	r3, [r4, r7]	@ tmp149, <variable>.DPB.fs
	ldr	r1, [fp, #-292]	@, %sfp
	str	r3, [r4, r1]	@ tmp149, <variable>.DPB.fs_ltref
	ldr	r0, [fp, #-296]	@, %sfp
	str	r3, [r4, r0]	@ tmp149, <variable>.DPB.fs_negative_ref
	ldr	r2, [fp, #-300]	@, %sfp
	str	r3, [r4, r2]	@ tmp149, <variable>.DPB.fs_positive_ref
	ldr	r9, [fp, #-304]	@, %sfp
	str	r3, [r4, r9]	@ tmp149, <variable>.DPB.fs
.L1286:
	add	ip, r8, r8, asl #3	@, tmp297, i, i,
	movw	r7, #:lower16:4306520	@ tmp299,
	movt	r7, #:upper16:4306520	@ tmp299,
	add	sl, r8, #1	@ tmp423, i,
	mov	r9, ip, asl #6	@ tmp298, tmp297,
	mov	r1, #504	@,
	add	lr, r9, r7	@ tmp299, tmp298, tmp299
	add	r7, r6, #576	@ tmp424, ivtmp.4953,
	add	r0, r4, lr	@, pHevcCtx, tmp299
	bl	__memzero	@
	add	r3, sl, sl, asl #3	@, tmp428, tmp423, tmp423,
	movw	r1, #:lower16:4306448	@ tmp316,
	movw	r0, #:lower16:4306520	@ tmp431,
	mov	ip, r3, asl #6	@ tmp429, tmp428,
	movt	r1, #:upper16:4306448	@ tmp316,
	movt	r0, #:upper16:4306520	@ tmp431,
	add	r2, r9, r1	@ tmp316, tmp298, tmp316
	add	r1, ip, r0	@ tmp431, tmp429, tmp431
	str	r8, [r6, #0]	@ i, <variable>.fs_image.image_id
	strb	r5, [r6, #-268]	@ tmp413, <variable>.non_existing
	add	r8, r4, r2	@ tmp318, pHevcCtx, tmp316
	add	r0, r4, r1	@, pHevcCtx, tmp431
	str	r8, [r6, #-200]	@ tmp318, <variable>.frame.frame_store
	str	r5, [r6, #-264]	@ tmp413, <variable>.eFrameStoreState
	mov	r1, #504	@,
	strb	r5, [r6, #-267]	@ tmp413, <variable>.is_reference
	mov	r9, #20	@,
	str	r5, [r6, #-256]	@ tmp413, <variable>.poc
	add	r8, sl, #1	@ i, tmp423,
	str	r9, [r6, #-244]	@, <variable>.pmv_address_idc
	mov	r9, #16	@,
	strb	r5, [r6, #-266]	@ tmp413, <variable>.is_displayed
	str	r9, [r6, #-240]	@, <variable>.apc_idc
	str	r5, [r6, #-220]	@ tmp413, <variable>.frame.structure
	str	ip, [fp, #-308]	@,
	bl	__memzero	@
	ldr	r3, [fp, #-308]	@,
	movw	r0, #:lower16:4306448	@ tmp437,
	cmp	r8, #20	@ i,
	movt	r0, #:upper16:4306448	@ tmp437,
	add	r1, r3, r0	@ tmp437, tmp429, tmp437
	str	sl, [r6, #576]	@ tmp423, <variable>.fs_image.image_id
	add	r2, r4, r1	@ tmp438, pHevcCtx, tmp437
	mov	sl, #20	@,
	str	r5, [r7, #-220]	@ tmp413, <variable>.frame.structure
	add	r6, r6, #1152	@ ivtmp.4953, ivtmp.4953,
	str	r2, [r7, #-200]	@ tmp438, <variable>.frame.frame_store
	strb	r5, [r7, #-268]	@ tmp413, <variable>.non_existing
	str	r5, [r7, #-264]	@ tmp413, <variable>.eFrameStoreState
	strb	r5, [r7, #-267]	@ tmp413, <variable>.is_reference
	str	r5, [r7, #-256]	@ tmp413, <variable>.poc
	strb	r5, [r7, #-266]	@ tmp413, <variable>.is_displayed
	str	sl, [r7, #-244]	@, <variable>.pmv_address_idc
	str	r9, [r7, #-240]	@, <variable>.apc_idc
	bne	.L1286	@,
	movw	lr, #:lower16:1960664	@,
	movt	lr, #:upper16:1960664	@,
	add	r0, r4, lr	@, pHevcCtx,
	mov	r1, #200	@,
	bl	__memzero	@
	movw	r8, #:lower16:1960664	@ tmp321,
	movw	sl, #:lower16:1960668	@,
	movt	r8, #:upper16:1960664	@ tmp321,
	movt	sl, #:upper16:1960668	@,
	movw	r7, #:lower16:1960200	@ tmp326,
	str	sl, [fp, #-48]	@, %sfp
	movt	r7, #:upper16:1960200	@ tmp326,
	movw	r6, #:lower16:1960204	@ tmp328,
	movw	ip, #:lower16:1960208	@ tmp330,
	movt	r6, #:upper16:1960204	@ tmp328,
	movt	ip, #:upper16:1960208	@ tmp330,
	movw	r0, #:lower16:1960212	@ tmp332,
	movw	r1, #:lower16:1960216	@ tmp334,
	movt	r0, #:upper16:1960212	@ tmp332,
	movt	r1, #:upper16:1960216	@ tmp334,
	movw	r2, #:lower16:1960220	@ tmp336,
	movw	r3, #:lower16:1960224	@ tmp338,
	movt	r2, #:upper16:1960220	@ tmp336,
	movt	r3, #:upper16:1960224	@ tmp338,
	movw	sl, #:lower16:1960228	@ tmp340,
	movt	sl, #:upper16:1960228	@ tmp340,
	movw	r9, #:lower16:1960232	@,
	movt	r9, #:upper16:1960232	@,
	str	r9, [fp, #-144]	@, %sfp
	movw	r9, #:lower16:1960236	@,
	movt	r9, #:upper16:1960236	@,
	str	r9, [fp, #-52]	@, %sfp
	movw	r9, #:lower16:1960240	@,
	movt	r9, #:upper16:1960240	@,
	str	r9, [fp, #-56]	@, %sfp
	movw	r9, #:lower16:1960244	@,
	movt	r9, #:upper16:1960244	@,
	str	r9, [fp, #-60]	@, %sfp
	movw	r9, #:lower16:1960248	@,
	movt	r9, #:upper16:1960248	@,
	str	r9, [fp, #-64]	@, %sfp
	movw	r9, #:lower16:1960252	@,
	movt	r9, #:upper16:1960252	@,
	str	r9, [fp, #-68]	@, %sfp
	movw	r9, #:lower16:1960256	@,
	movt	r9, #:upper16:1960256	@,
	str	r9, [fp, #-72]	@, %sfp
	movw	r9, #:lower16:1960260	@,
	movt	r9, #:upper16:1960260	@,
	str	r9, [fp, #-76]	@, %sfp
	movw	r9, #:lower16:1960264	@,
	movt	r9, #:upper16:1960264	@,
	str	r9, [fp, #-80]	@, %sfp
	movw	r9, #:lower16:2125520	@,
	movt	r9, #:upper16:2125520	@,
	str	r9, [fp, #-84]	@, %sfp
	movw	r9, #:lower16:1960268	@,
	movt	r9, #:upper16:1960268	@,
	str	r9, [fp, #-88]	@, %sfp
	movw	r9, #:lower16:1960272	@,
	movt	r9, #:upper16:1960272	@,
	str	r9, [fp, #-92]	@, %sfp
	movw	r9, #:lower16:1960276	@,
	movt	r9, #:upper16:1960276	@,
	str	r9, [fp, #-96]	@, %sfp
	movw	r9, #:lower16:1960280	@,
	movt	r9, #:upper16:1960280	@,
	str	r9, [fp, #-100]	@, %sfp
	movw	r9, #:lower16:1960284	@,
	movt	r9, #:upper16:1960284	@,
	str	r9, [fp, #-104]	@, %sfp
	movw	r9, #:lower16:1960288	@,
	movt	r9, #:upper16:1960288	@,
	str	r9, [fp, #-108]	@, %sfp
	movw	r9, #:lower16:1960292	@,
	movt	r9, #:upper16:1960292	@,
	str	r9, [fp, #-112]	@, %sfp
	movw	r9, #:lower16:1960296	@,
	movt	r9, #:upper16:1960296	@,
	str	r9, [fp, #-116]	@, %sfp
	movw	r9, #:lower16:1960300	@,
	movt	r9, #:upper16:1960300	@,
	str	r9, [fp, #-120]	@, %sfp
	movw	r9, #:lower16:1960304	@,
	movt	r9, #:upper16:1960304	@,
	str	r9, [fp, #-124]	@, %sfp
	movw	r9, #:lower16:1960308	@,
	movt	r9, #:upper16:1960308	@,
	str	r9, [fp, #-128]	@, %sfp
	movw	r9, #:lower16:1960312	@,
	movt	r9, #:upper16:1960312	@,
	str	r9, [fp, #-132]	@, %sfp
	movw	r9, #:lower16:1960316	@,
	movt	r9, #:upper16:1960316	@,
	str	r9, [fp, #-136]	@, %sfp
	movw	r9, #:lower16:1960320	@,
	movt	r9, #:upper16:1960320	@,
	str	r9, [fp, #-140]	@, %sfp
	str	r5, [r4, r7]	@ tmp413, <variable>.pListX
	mov	r9, #16	@,
	str	r5, [r4, r6]	@ tmp413, <variable>.pListX
	movw	r7, #:lower16:1960324	@ tmp390,
	str	r5, [r4, ip]	@ tmp413, <variable>.pListX
	movt	r7, #:upper16:1960324	@ tmp390,
	str	r5, [r4, r0]	@ tmp413, <variable>.pListX
	movw	ip, #:lower16:1960328	@ tmp392,
	str	r5, [r4, r1]	@ tmp413, <variable>.pListX
	movt	ip, #:upper16:1960328	@ tmp392,
	str	r9, [r4, r8]	@, <variable>.APC.size
	movw	r6, #:lower16:1960332	@ tmp394,
	str	r5, [r4, r2]	@ tmp413, <variable>.pListX
	movt	r6, #:upper16:1960332	@ tmp394,
	str	r5, [r4, r3]	@ tmp413, <variable>.pListX
	movw	r8, #:lower16:2125524	@ tmp396,
	str	r5, [r4, sl]	@ tmp413, <variable>.pListX
	movt	r8, #:upper16:2125524	@ tmp396,
	ldr	r3, [fp, #-144]	@, %sfp
	str	r5, [r4, r3]	@ tmp413, <variable>.pListX
	ldr	r9, [fp, #-48]	@, %sfp
	str	r5, [r4, r9]	@ tmp413, <variable>.APC.used_size
	ldr	r1, [fp, #-52]	@, %sfp
	str	r5, [r4, r1]	@ tmp413, <variable>.pListX
	ldr	r0, [fp, #-84]	@, %sfp
	str	r5, [r4, r0]	@ tmp413, <variable>.CurrSlice.listXsize
	ldr	r2, [fp, #-56]	@, %sfp
	str	r5, [r4, r2]	@ tmp413, <variable>.pListX
	ldr	sl, [fp, #-60]	@, %sfp
	str	r5, [r4, sl]	@ tmp413, <variable>.pListX
	ldr	r3, [fp, #-64]	@, %sfp
	str	r5, [r4, r3]	@ tmp413, <variable>.pListX
	ldr	r9, [fp, #-68]	@, %sfp
	str	r5, [r4, r9]	@ tmp413, <variable>.pListX
	ldr	r1, [fp, #-72]	@, %sfp
	str	r5, [r4, r1]	@ tmp413, <variable>.pListX
	ldr	r0, [fp, #-76]	@, %sfp
	str	r5, [r4, r0]	@ tmp413, <variable>.pListX
	ldr	r2, [fp, #-80]	@, %sfp
	str	r5, [r4, r2]	@ tmp413, <variable>.pListX
	ldr	sl, [fp, #-88]	@, %sfp
	str	r5, [r4, sl]	@ tmp413, <variable>.pListX
	ldr	r3, [fp, #-92]	@, %sfp
	str	r5, [r4, r3]	@ tmp413, <variable>.pListX
	ldr	r9, [fp, #-96]	@, %sfp
	str	r5, [r4, r9]	@ tmp413, <variable>.pListX
	ldr	r1, [fp, #-100]	@, %sfp
	str	r5, [r4, r1]	@ tmp413, <variable>.pListX
	ldr	r0, [fp, #-104]	@, %sfp
	str	r5, [r4, r0]	@ tmp413, <variable>.pListX
	ldr	r2, [fp, #-108]	@, %sfp
	str	r5, [r4, r2]	@ tmp413, <variable>.pListX
	ldr	sl, [fp, #-112]	@, %sfp
	str	r5, [r4, sl]	@ tmp413, <variable>.pListX
	ldr	r3, [fp, #-116]	@, %sfp
	str	r5, [r4, r3]	@ tmp413, <variable>.pListX
	ldr	r9, [fp, #-120]	@, %sfp
	str	r5, [r4, r9]	@ tmp413, <variable>.pListX
	ldr	r1, [fp, #-124]	@, %sfp
	str	r5, [r4, r1]	@ tmp413, <variable>.pListX
	ldr	r0, [fp, #-128]	@, %sfp
	str	r5, [r4, r0]	@ tmp413, <variable>.pListX
	ldr	r2, [fp, #-132]	@, %sfp
	ldr	r0, [r4, #172]	@ D.44517, <variable>.TotalPmvNum
	str	r5, [r4, r2]	@ tmp413, <variable>.pListX
	cmp	r0, #0	@ D.44517,
	ldr	r9, [fp, #-136]	@, %sfp
	str	r5, [r4, r9]	@ tmp413, <variable>.pListX
	ldr	sl, [fp, #-140]	@, %sfp
	str	r5, [r4, r8]	@ tmp413, <variable>.CurrSlice.listXsize
	str	r5, [r4, sl]	@ tmp413, <variable>.pListX
	str	r5, [r4, r7]	@ tmp413, <variable>.pListX
	str	r5, [r4, ip]	@ tmp413, <variable>.pListX
	str	r5, [r4, r6]	@ tmp413, <variable>.pListX
	beq	.L1287	@,
	add	r3, r4, #2080	@ tmp398, pHevcCtx,
	mov	r2, #1	@ i.4965,
	add	r1, r3, #12	@ ivtmp.4945, tmp398,
	cmp	r2, r0	@ i.4965, D.44517
	sub	ip, r0, #1	@ tmp418, D.44517,
	str	r5, [r1, #0]	@ tmp410, <variable>.PmvStoreUsedFlag
	and	ip, ip, r2	@ tmp420, tmp418,
	add	r1, r3, #16	@ ivtmp.4945, tmp398,
	bcs	.L1287	@,
	cmp	ip, #0	@ tmp420,
	beq	.L1288	@,
	mov	r2, #2	@ i.4965,
	cmp	r2, r0	@ i.4965, D.44517
	str	r5, [r1, #0]	@ tmp410, <variable>.PmvStoreUsedFlag
	add	r1, r3, #20	@ ivtmp.4945, tmp398,
	bcs	.L1287	@,
.L1288:
	add	r2, r2, #2	@ i.4965, i.4965,
	mov	r3, r1	@ tmp422, ivtmp.4945
	cmp	r2, r0	@ i.4965, D.44517
	str	r5, [r3], #4	@ tmp410, <variable>.PmvStoreUsedFlag
	str	r5, [r1, #4]	@ tmp410, <variable>.PmvStoreUsedFlag
	add	r1, r3, #4	@ ivtmp.4945, tmp422,
	bcc	.L1288	@,
.L1287:
	movw	r5, #:lower16:4300592	@ ivtmp.4940,
	movw	r2, #:lower16:4306472	@ D.52661,
	movt	r5, #:upper16:4300592	@ ivtmp.4940,
	movt	r2, #:upper16:4306472	@ D.52661,
	movw	r7, #:lower16:1960196	@ tmp408,
	add	r5, r4, r5	@ ivtmp.4940, pHevcCtx, ivtmp.4940
	add	sl, r4, r2	@ D.52661, pHevcCtx, D.52661
	movt	r7, #:upper16:1960196	@ tmp408,
	mov	r8, #0	@ tmp409,
.L1290:
	ldr	r3, [r5, #0]	@ D.44518, <variable>.slice_nal
	add	r6, r5, #28	@ tmp417, ivtmp.4940,
	cmp	r3, #0	@ D.44518,
	mov	r1, r3	@, D.44518
	beq	.L1289	@,
	ldr	r0, [r4, r7]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r3, r0	@ D.44518, <variable>.pCurrNal
	beq	.L1289	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	HEVC_ReleaseNAL	@
	str	r8, [r5, #0]	@ tmp409, <variable>.slice_nal
.L1289:
	ldr	r3, [r5, #28]	@ D.44518, <variable>.slice_nal
	cmp	r3, #0	@ D.44518,
	mov	r1, r3	@, D.44518
	beq	.L1295	@,
	ldr	lr, [r4, r7]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r3, lr	@ D.44518, <variable>.pCurrNal
	beq	.L1295	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	HEVC_ReleaseNAL	@
	str	r8, [r6, #0]	@ tmp409, <variable>.slice_nal
.L1295:
	add	r5, r6, #28	@ ivtmp.4940, tmp417,
	cmp	r5, sl	@ ivtmp.4940, D.52661
	bne	.L1290	@,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	Hevc_InitDecBuffers, .-Hevc_InitDecBuffers
	.align	2
	.global	HEVC_EmptyFrmFromDPB
	.type	HEVC_EmptyFrmFromDPB, %function
HEVC_EmptyFrmFromDPB:
	.fnstart
.LFB1627:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r6, r0, #0	@ pHevcCtx, pHevcCtx
	mvneq	r0, #0	@ D.45388,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	movw	ip, #:lower16:1960372	@ tmp145,
	movt	ip, #:upper16:1960372	@ tmp145,
	ldr	r3, [r6, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L1310	@,
	movw	r0, #:lower16:1960392	@ ivtmp.5010,
	movt	r0, #:upper16:1960392	@ ivtmp.5010,
	add	r3, r6, r0	@ ivtmp.5010, pHevcCtx, ivtmp.5010
	mov	r2, #0	@ i,
	mov	lr, #1	@ tmp173,
.L1312:
	ldr	r4, [r3, #0]	@ D.45390, <variable>.DPB.fs
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.5010, ivtmp.5010,
	ldrb	r5, [r4, #2]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r5, #0	@ <variable>.is_displayed,
	streqb	lr, [r4, #2]	@ tmp173, <variable>.is_displayed
	ldr	r1, [r6, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, r2	@ <variable>.DPB.used_size, i
	bhi	.L1312	@,
.L1310:
	movw	r7, #:lower16:1960392	@ ivtmp.5002,
	movt	r7, #:upper16:1960392	@ ivtmp.5002,
	add	r5, r6, r7	@ ivtmp.5002, pHevcCtx, ivtmp.5002
	mov	r7, #0	@ tmp172,
	movw	r8, #:lower16:1960460	@ D.52731,
	movt	r8, #:upper16:1960460	@ D.52731,
	ldr	r3, [r5, #0]	@ temp.5013, <variable>.DPB.fs
	mov	r2, #-2147483647	@ tmp153,
	add	r8, r6, r8	@ D.52731, pHevcCtx, D.52731
	str	r2, [r6, #204]	@ tmp153, <variable>.LastDisplayPoc
	cmp	r3, r7	@ temp.5013,
	beq	.L1322	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1322:
	ldr	r3, [r5, #68]	@ D.45399, <variable>.DPB.fs_negative_ref
	cmp	r3, #0	@ D.45399,
	beq	.L1323	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1323:
	ldr	r3, [r5, #136]	@ D.45403, <variable>.DPB.fs_positive_ref
	cmp	r3, #0	@ D.45403,
	beq	.L1324	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1324:
	ldr	r3, [r5, #204]	@ D.45407, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ D.45407,
	beq	.L1325	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1325:
	mov	r4, r5	@ ivtmp.5002, ivtmp.5002
	str	r7, [r5, #204]	@ tmp172, <variable>.DPB.fs_ltref
	str	r7, [r5, #136]	@ tmp172, <variable>.DPB.fs_positive_ref
	str	r7, [r5, #68]	@ tmp172, <variable>.DPB.fs_negative_ref
	str	r7, [r4], #4	@ tmp172, <variable>.DPB.fs
.L1317:
	ldr	r3, [r4, #0]	@ temp.5013, <variable>.DPB.fs
	cmp	r3, #0	@ temp.5013,
	beq	.L1313	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1313:
	ldr	r3, [r4, #68]	@ D.45399, <variable>.DPB.fs_negative_ref
	cmp	r3, #0	@ D.45399,
	beq	.L1314	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1314:
	ldr	r3, [r4, #136]	@ D.45403, <variable>.DPB.fs_positive_ref
	cmp	r3, #0	@ D.45403,
	beq	.L1315	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1315:
	ldr	r3, [r4, #204]	@ D.45407, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ D.45407,
	beq	.L1316	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1316:
	mov	r5, r4	@ tmp175, ivtmp.5002
	str	r7, [r4, #204]	@ tmp172, <variable>.DPB.fs_ltref
	str	r7, [r5], #4	@ tmp172, <variable>.DPB.fs
	ldr	r3, [r4, #4]	@ temp.5013, <variable>.DPB.fs
	str	r7, [r4, #136]	@ tmp172, <variable>.DPB.fs_positive_ref
	cmp	r3, #0	@ temp.5013,
	str	r7, [r4, #68]	@ tmp172, <variable>.DPB.fs_negative_ref
	beq	.L1327	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1327:
	ldr	r3, [r5, #68]	@ D.45399, <variable>.DPB.fs_negative_ref
	cmp	r3, #0	@ D.45399,
	beq	.L1328	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1328:
	ldr	r3, [r5, #136]	@ D.45403, <variable>.DPB.fs_positive_ref
	cmp	r3, #0	@ D.45403,
	beq	.L1329	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1329:
	ldr	r3, [r5, #204]	@ D.45407, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ D.45407,
	beq	.L1330	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L1330:
	mov	r4, r5	@ ivtmp.5002, tmp175
	str	r7, [r5, #204]	@ tmp172, <variable>.DPB.fs_ltref
	str	r7, [r4], #4	@ tmp172, <variable>.DPB.fs
	cmp	r4, r8	@ ivtmp.5002, D.52731
	str	r7, [r5, #136]	@ tmp172, <variable>.DPB.fs_positive_ref
	str	r7, [r5, #68]	@ tmp172, <variable>.DPB.fs_negative_ref
	bne	.L1317	@,
	mov	r0, r6	@, pHevcCtx
	bl	Hevc_InitDecBuffers	@
	mov	r0, r7	@ D.45388, tmp172
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	HEVC_EmptyFrmFromDPB, .-HEVC_EmptyFrmFromDPB
	.align	2
	.global	HEVC_FindTrailZeros
	.type	HEVC_FindTrailZeros, %function
HEVC_FindTrailZeros:
	.fnstart
.LFB1661:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:1960196	@ tmp146,
	movt	r7, #:upper16:1960196	@ tmp146,
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	mov	r1, #0	@ zero_byte,
.L1352:
	ldr	r2, [r6, r7]	@ temp.5048, <variable>.pCurrNal
	ldr	r8, [r2, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	sub	ip, r8, #1	@ NalSegmentMinus1, <variable>.nal_segment,
	mov	r8, ip, asl #3	@ tmp235, NalSegmentMinus1,
	rsb	r4, ip, r8	@ tmp203, NalSegmentMinus1, tmp235
	add	r5, r2, r4, asl #2	@, tmp205, temp.5048, tmp203,
	ldr	r3, [r5, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [r5, #44]	@ <variable>.streamBuffer, <variable>.streamBuffer
	sub	r4, r3, #1	@ tmp214, <variable>.bitstream_length,
	add	r3, r4, r2	@ last_byte, tmp214, <variable>.streamBuffer
.L1351:
	ldrb	r4, [r3, #0]	@ zero_extendqisi2	@ D.47172,* last_byte
	rsb	r5, ip, r8	@ tmp171, NalSegmentMinus1, tmp235
	cmp	r4, #0	@ D.47172,
	mov	r5, r5, asl #2	@ tmp172, tmp171,
	bne	.L1353	@,
	ldr	r2, [r6, r7]	@ temp.5043, <variable>.pCurrNal
	add	r1, r1, #1	@ zero_byte, zero_byte,
	add	r0, r5, r2	@ tmp173, tmp172, temp.5043
	ldr	r2, [r2, #44]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r2, r3	@ <variable>.streamBuffer, last_byte
	beq	.L1354	@,
	ldr	r2, [r0, #44]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r2, r3	@ <variable>.streamBuffer, last_byte
	sub	r3, r3, #1	@ last_byte, last_byte,
	bne	.L1351	@,
	ldr	r1, [r0, #68]	@, <variable>.StreamID
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	ip, [r6, r7]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r1, r4	@ zero_byte, D.47172
	add	r8, r5, ip	@ tmp192, tmp172, <variable>.pCurrNal
	str	r4, [r8, #44]	@ D.47172, <variable>.streamBuffer
	ldr	r3, [r6, r7]	@ temp.5046, <variable>.pCurrNal
	ldr	r5, [r3, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	sub	r4, r5, #1	@ tmp197, <variable>.nal_segment,
	str	r4, [r3, #8]	@ tmp197, <variable>.nal_segment
	b	.L1352	@
.L1353:
	tst	r4, #1	@ D.47172,
	movne	r0, #0	@ bitoffset,
	bne	.L1342	@,
	tst	r4, #2	@ D.47172,
	movne	r0, #1	@ bitoffset,
	bne	.L1342	@,
	tst	r4, #4	@ D.47172,
	movne	r0, #2	@ bitoffset,
	bne	.L1342	@,
	tst	r4, #8	@ D.47172,
	movne	r0, #3	@ bitoffset,
	bne	.L1342	@,
	tst	r4, #16	@ D.47172,
	movne	r0, #4	@ bitoffset,
	bne	.L1342	@,
	tst	r4, #32	@ D.47172,
	movne	r0, #5	@ bitoffset,
	bne	.L1342	@,
	tst	r4, #64	@ D.47172,
	movne	r0, #6	@ bitoffset,
	bne	.L1342	@,
	tst	r4, #128	@ D.47172,
	bne	.L1355	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC200	@,
	movt	r1, #:upper16:.LC200	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.47165,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1354:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC199	@,
	movt	r1, #:upper16:.LC199	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.47165,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1355:
	mov	r0, #7	@ bitoffset,
.L1342:
	movw	r3, #:lower16:1960196	@ tmp227,
	movt	r3, #:upper16:1960196	@ tmp227,
	mov	r2, #0	@ tmp228,
	add	r1, r0, r1, asl #3	@, tmp232, bitoffset, zero_byte,
	ldr	ip, [r6, r3]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r1, r1, #1	@ tmp233, tmp232,
	mov	r0, r2	@ D.47165, tmp228
	str	r2, [ip, #4]	@ tmp228, <variable>.nal_bitoffset
	ldr	ip, [r6, r3]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r1, [ip, #12]	@ tmp233, <variable>.nal_trail_zero_bit_num
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	HEVC_FindTrailZeros, .-HEVC_FindTrailZeros
	.align	2
	.global	HEVC_CombinePacket
	.type	HEVC_CombinePacket, %function
HEVC_CombinePacket:
	.fnstart
.LFB1664:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:1960196	@ tmp142,
	movt	r4, #:upper16:1960196	@ tmp142,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	ldr	r0, [r0, r4]	@ D.47236, <variable>.pCurrNal
	cmp	r0, #0	@ D.47236,
	beq	.L1360	@,
	ldr	r3, [r0, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r3, #4096	@ <variable>.bitstream_length,
	ldmcsfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC202	@,
	movt	r1, #:upper16:.LC202	@,
	mov	r6, #0	@ tmp160,
	bl	dprint_vfmw	@
	ldr	r2, [r5, r4]	@ temp.5087, <variable>.pCurrNal
	ldr	ip, [r2, #48]	@ temp.5088, <variable>.bitstream_length
	ldr	r0, [r2, #72]	@ <variable>.streamBuffer, <variable>.streamBuffer
	ldr	r1, [r2, #44]	@, <variable>.streamBuffer
	rsb	r0, ip, r0	@, temp.5088, <variable>.streamBuffer
	mov	r2, ip	@, temp.5088
	bl	memcpy	@
	ldr	r3, [r5, r4]	@ temp.5089, <variable>.pCurrNal
	ldr	ip, [r3, #96]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r1, [r3, #68]	@ StreamId, <variable>.StreamID
	str	ip, [r3, #68]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r2, [r5, r4]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r6, [r2, #60]	@ tmp160, <variable>.bitsoffset
	ldr	ip, [r5, r4]	@ temp.5091, <variable>.pCurrNal
	ldr	r3, [ip, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r0, [ip, #72]	@ <variable>.streamBuffer, <variable>.streamBuffer
	rsb	r2, r3, r0	@ tmp165, <variable>.bitstream_length, <variable>.streamBuffer
	str	r2, [ip, #44]	@ tmp165, <variable>.streamBuffer
	ldr	ip, [r5, r4]	@ temp.5096, <variable>.pCurrNal
	ldr	r3, [ip, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r0, [ip, #80]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	rsb	r2, r3, r0	@ tmp169, <variable>.bitstream_length, <variable>.stream_phy_addr
	str	r2, [ip, #52]	@ tmp169, <variable>.stream_phy_addr
	ldr	ip, [r5, r4]	@ temp.5098, <variable>.pCurrNal
	ldr	r0, [ip, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r3, [ip, #76]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r2, r0, r3	@ tmp173, <variable>.bitstream_length, <variable>.bitstream_length
	str	r2, [ip, #48]	@ tmp173, <variable>.bitstream_length
	ldr	r3, [r5, r4]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #1	@ tmp176,
	str	ip, [r3, #8]	@ tmp176, <variable>.nal_segment
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r2, [r5, r4]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r6, [r2, #72]	@ tmp160, <variable>.streamBuffer
	ldr	r1, [r5, r4]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r6, [r1, #88]	@ tmp160, <variable>.bitsoffset
	ldr	r0, [r5, r4]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r6, [r0, #76]	@ tmp160, <variable>.bitstream_length
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1360:
	movw	r1, #:lower16:.LC201	@,
	movt	r1, #:upper16:.LC201	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	HEVC_CombinePacket, .-HEVC_CombinePacket
	.align	2
	.global	HEVC_SetDefaultScalingList
	.type	HEVC_SetDefaultScalingList, %function
HEVC_SetDefaultScalingList:
	.fnstart
.LFB1651:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r8, r0, #2160	@ ivtmp.5145, pHevcCtx,
	add	r8, r8, #12	@ ivtmp.5145, ivtmp.5145,
	add	r2, r0, #556	@, pHevcCtx,
	mov	r7, #0	@ i,
	add	r3, r2, #1152	@,,
	str	r0, [fp, #-56]	@ pHevcCtx, %sfp
	str	r2, [fp, #-52]	@, %sfp
	str	r2, [fp, #-48]	@, %sfp
	str	r3, [fp, #-60]	@, %sfp
.L1362:
	ldr	r0, [r8, #0]	@ tmp175, <variable>.scalingListNum
	cmp	r0, #0	@ tmp175,
	beq	.L1372	@,
	add	r5, r7, r7, asl #1	@, tmp178, i, i,
	ldr	sl, [fp, #-56]	@, %sfp
	movw	r6, #:lower16:1837196	@ ivtmp.5132,
	movt	r6, #:upper16:1837196	@ ivtmp.5132,
	add	r4, sl, r5, asl #3	@, tmp182,, tmp178,
	ldr	r9, [fp, #-60]	@ ivtmp.5137, %sfp
	add	r6, r4, r6	@ ivtmp.5132, tmp182, ivtmp.5132
	ldr	r5, [fp, #-48]	@ ivtmp.5152, %sfp
	ldr	sl, [fp, #-52]	@ ivtmp.5150, %sfp
	mov	r4, #0	@ j,
	b	.L1370	@
.L1363:
	cmp	r7, #3	@ i,
	beq	.L1375	@,
	ldr	ip, .L1376	@,
	cmp	r4, #2	@ j,
	ldr	r1, .L1376+4	@,
	movhi	r1, ip	@,
	bl	memcpy	@
.L1364:
	ldr	r1, [r8, #0]	@ tmp174, <variable>.scalingListNum
	add	r4, r4, #1	@ j, j,
	mov	lr, #16	@,
	add	sl, sl, #64	@ ivtmp.5150, ivtmp.5150,
	cmp	r1, r4	@ tmp174, j
	str	lr, [r6], #4	@, <variable>.scalingListDC
	add	r9, r9, #64	@ ivtmp.5137, ivtmp.5137,
	add	r5, r5, #64	@ ivtmp.5152, ivtmp.5152,
	bls	.L1372	@,
.L1370:
	cmp	r7, #0	@ i,
	mov	r0, r5	@, ivtmp.5152
	mov	r2, #64	@,
	bne	.L1363	@,
	mov	r0, sl	@, ivtmp.5150
	ldr	r1, .L1376+8	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L1364	@
.L1375:
	ldr	r0, .L1376	@,
	cmp	r4, #0	@ j,
	ldr	r1, .L1376+4	@,
	mov	r2, #64	@,
	movne	r1, r0	@,
	mov	r0, r9	@, ivtmp.5137
	bl	memcpy	@
	b	.L1364	@
.L1372:
	add	r7, r7, #1	@ i, i,
	ldr	r2, [fp, #-48]	@, %sfp
	cmp	r7, #4	@ i,
	add	r8, r8, #4	@ ivtmp.5145, ivtmp.5145,
	add	r3, r2, #384	@,,
	str	r3, [fp, #-48]	@, %sfp
	bne	.L1362	@,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1377:
	.align	2
.L1376:
	.word	.LANCHOR1+316
	.word	.LANCHOR0+576
	.word	.LANCHOR1+300
	.fnend
	.size	HEVC_SetDefaultScalingList, .-HEVC_SetDefaultScalingList
	.align	2
	.global	HEVC_SetScalingList
	.type	HEVC_SetScalingList, %function
HEVC_SetScalingList:
	.fnstart
.LFB1650:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:2044382	@ tmp150,
	movt	r1, #:upper16:2044382	@ tmp150,
	mov	r7, r0	@ pHevcCtx, pHevcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSPS.scaling_list_enabled_flag, <variable>.CurrSPS.scaling_list_enabled_flag
	cmp	r3, #0	@ <variable>.CurrSPS.scaling_list_enabled_flag,
	beq	.L1379	@,
	movw	ip, #:lower16:2044383	@ tmp152,
	movt	ip, #:upper16:2044383	@ tmp152,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrSPS.sps_scaling_list_data_present_flag, <variable>.CurrSPS.sps_scaling_list_data_present_flag
	cmp	r2, #0	@ <variable>.CurrSPS.sps_scaling_list_data_present_flag,
	bne	.L1380	@,
	movw	r3, #:lower16:2117125	@ tmp154,
	movt	r3, #:upper16:2117125	@ tmp154,
	ldrb	lr, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPPS.pic_scaling_list_data_present_flag, <variable>.CurrPPS.pic_scaling_list_data_present_flag
	cmp	lr, #0	@ <variable>.CurrPPS.pic_scaling_list_data_present_flag,
	beq	.L1396	@,
.L1381:
	add	r0, r7, #556	@, pHevcCtx,
	mov	r1, #1536	@,
	bl	__memzero	@
	add	r6, r7, #2160	@ ivtmp.5192, pHevcCtx,
	movw	sl, #:lower16:2118568	@ ivtmp.5218,
	movt	sl, #:upper16:2118568	@ ivtmp.5218,
	add	r6, r6, #12	@ ivtmp.5192, ivtmp.5192,
	add	sl, r7, sl	@ ivtmp.5218, pHevcCtx, ivtmp.5218
	mov	r8, #0	@ i,
.L1383:
	ldr	r2, [r6, #0]	@ tmp162, <variable>.scalingListNum
	cmp	r2, #0	@ tmp162,
	movne	r5, sl	@ ivtmp.5185, ivtmp.5218
	movne	r4, #0	@ j,
	beq	.L1387	@,
.L1384:
	mov	r1, r5	@, ivtmp.5185
	mov	r3, r4	@, j
	mov	r0, r7	@, pHevcCtx
	mov	r2, r8	@, i
	bl	HEVC_CalScalingList	@
	ldr	r1, [r6, #0]	@ tmp161, <variable>.scalingListNum
	add	r4, r4, #1	@ j, j,
	add	r5, r5, #256	@ ivtmp.5185, ivtmp.5185,
	cmp	r1, r4	@ tmp161, j
	bhi	.L1384	@,
.L1387:
	add	r8, r8, #1	@ i, i,
	add	r6, r6, #4	@ ivtmp.5192, ivtmp.5192,
	cmp	r8, #4	@ i,
	add	sl, sl, #1536	@ ivtmp.5218, ivtmp.5218,
	bne	.L1383	@,
	movw	ip, #:lower16:1837196	@,
	movw	lr, #:lower16:2118280	@,
	movt	ip, #:upper16:1837196	@,
	movt	lr, #:upper16:2118280	@,
	add	r1, r7, lr	@, pHevcCtx,
	add	r0, r7, ip	@, pHevcCtx,
	mov	r2, #96	@,
	bl	memcpy	@
.L1379:
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1380:
	movw	r0, #:lower16:2117125	@ tmp156,
	movt	r0, #:upper16:2117125	@ tmp156,
	ldrb	r8, [r7, r0]	@ zero_extendqisi2	@ <variable>.CurrPPS.pic_scaling_list_data_present_flag, <variable>.CurrPPS.pic_scaling_list_data_present_flag
	cmp	r8, #0	@ <variable>.CurrPPS.pic_scaling_list_data_present_flag,
	bne	.L1381	@,
	add	r0, r7, #556	@, pHevcCtx,
	mov	r1, #1536	@,
	bl	__memzero	@
	add	r6, r7, #2160	@ ivtmp.5206, pHevcCtx,
	movw	sl, #:lower16:2045584	@ ivtmp.5220,
	movt	sl, #:upper16:2045584	@ ivtmp.5220,
	add	r6, r6, #12	@ ivtmp.5206, ivtmp.5206,
	add	sl, r7, sl	@ ivtmp.5220, pHevcCtx, ivtmp.5220
.L1388:
	ldr	r0, [r6, #0]	@ tmp175, <variable>.scalingListNum
	cmp	r0, #0	@ tmp175,
	movne	r5, sl	@ ivtmp.5199, ivtmp.5220
	movne	r4, #0	@ j.5212,
	beq	.L1392	@,
.L1389:
	mov	r3, r4	@, j.5212
	mov	r1, r5	@, ivtmp.5199
	mov	r0, r7	@, pHevcCtx
	mov	r2, r8	@, i.5214
	bl	HEVC_CalScalingList	@
	ldr	r3, [r6, #0]	@ tmp174, <variable>.scalingListNum
	add	r4, r4, #1	@ j.5212, j.5212,
	add	r5, r5, #256	@ ivtmp.5199, ivtmp.5199,
	cmp	r3, r4	@ tmp174, j.5212
	bhi	.L1389	@,
.L1392:
	add	r8, r8, #1	@ i.5214, i.5214,
	add	r6, r6, #4	@ ivtmp.5206, ivtmp.5206,
	cmp	r8, #4	@ i.5214,
	add	sl, sl, #1536	@ ivtmp.5220, ivtmp.5220,
	bne	.L1388	@,
	movw	r2, #:lower16:1837196	@,
	movw	r1, #:lower16:2045296	@,
	movt	r2, #:upper16:1837196	@,
	movt	r1, #:upper16:2045296	@,
	add	r0, r7, r2	@, pHevcCtx,
	add	r1, r7, r1	@, pHevcCtx,
	mov	r2, #96	@,
	bl	memcpy	@
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1396:
	bl	HEVC_SetDefaultScalingList	@
	b	.L1379	@
	.fnend
	.size	HEVC_SetScalingList, .-HEVC_SetScalingList
	.align	2
	.global	HEVC_DecScalingListData
	.type	HEVC_DecScalingListData, %function
HEVC_DecScalingListData:
	.fnstart
.LFB1649:
	@ args = 0, pretend = 0, frame = 56
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #60
	sub	sp, sp, #60	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r3, r1, #348	@, pScalingList,
	str	r3, [fp, #-76]	@, %sfp
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	lr, [fp, #-76]	@, %sfp
	mov	r2, #64	@,
	mov	r6, r1	@ pScalingList, pScalingList
	add	r1, r3, #4864	@,,
	add	r0, lr, #5376	@,,
	bl	memcpy	@
	add	r1, r4, #2176	@ tmp179, pHevcCtx,
	add	ip, r1, #12	@ tmp179, tmp179,
	ldr	r3, [fp, #-76]	@, %sfp
	add	r5, ip, #1441792	@, tmp179,
	str	r5, [fp, #-84]	@, %sfp
	movw	r5, #:lower16:1960172	@ tmp253,
	movt	r5, #:upper16:1960172	@ tmp253,
	mov	r2, #0	@,
	add	r0, r4, #300	@, pHevcCtx,
	str	r2, [fp, #-88]	@, %sfp
	add	r1, r4, #268	@, pHevcCtx,
	mov	r2, #0	@,
	str	r0, [fp, #-80]	@, %sfp
	str	r3, [fp, #-92]	@, %sfp
	str	r1, [fp, #-72]	@, %sfp
	str	r2, [fp, #-60]	@, %sfp
.L1398:
	ldr	r1, [fp, #-72]	@, %sfp
	ldr	r2, [r1, #1904]	@ tmp226, <variable>.scalingListNum
	cmp	r2, #0	@ tmp226,
	beq	.L1418	@,
	ldr	r0, [fp, #-60]	@, %sfp
	mov	r2, #0	@,
	ldr	r9, [fp, #-92]	@, %sfp
	str	r2, [fp, #-56]	@, %sfp
	add	r1, r0, r0, asl #1	@, tmp229,,,
	str	r9, [fp, #-48]	@, %sfp
	mov	r9, r1, asl #1	@ tmp230, tmp229,
	add	r3, r6, r1, asl #3	@, tmp237, pScalingList, tmp229,
	add	lr, r6, r9	@ tmp232, pScalingList, tmp230
	add	ip, r3, #156	@, tmp237,
	add	r0, lr, #25	@, tmp232,
	str	ip, [fp, #-64]	@, %sfp
	str	r0, [fp, #-68]	@, %sfp
	str	r9, [fp, #-96]	@ tmp230, %sfp
.L1416:
	mov	r1, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r2, #:lower16:.LC210	@,
	movt	r2, #:upper16:.LC210	@,
	bl	HEVC_u_v	@
	ldr	r1, [fp, #-68]	@, %sfp
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r9, [fp, #-84]	@ pScan, %sfp
	ldr	r3, [fp, #-80]	@, %sfp
	cmp	ip, #0	@,
	movne	r9, r3	@ pScan,
	uxtb	r0, r0	@ scalingListPredModeFlag,
	strb	r0, [r1, #0]	@ scalingListPredModeFlag, <variable>.scaling_list_pred_mode_flag
	ldr	r2, [fp, #-72]	@, %sfp
	ldr	ip, [r2, #0]	@ tmp184, <variable>.scalingListSize
	cmp	ip, #64	@ tmp184,
	movge	ip, #64	@ tmp184,
	cmp	r0, #0	@ scalingListPredModeFlag,
	str	ip, [fp, #-52]	@ tmp184, %sfp
	beq	.L1433	@,
	ldr	r0, [fp, #-60]	@, %sfp
	cmp	r0, #1	@,
	movls	r7, #8	@ nextCoef,
	bls	.L1412	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r1, #:lower16:.LC206	@,
	movt	r1, #:upper16:.LC206	@,
	bl	HEVC_se_v	@
	add	r2, r0, #7	@ tmp211, D.46243,
	str	r0, [r6, #52]	@ D.46243, <variable>.scaling_list_dc_coef_minus8
	cmp	r2, #254	@ tmp211,
	bhi	.L1434	@,
	ldr	lr, [fp, #-64]	@, %sfp
	add	r7, r0, #8	@ nextCoef, D.46243,
	str	r7, [lr, #-96]	@ nextCoef, <variable>.scalingListDC
.L1412:
	ldr	r3, [fp, #-52]	@, %sfp
	cmp	r3, #0	@,
	ble	.L1410	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r1, #:lower16:.LC208	@,
	movt	r1, #:upper16:.LC208	@,
	sub	sl, r3, #1	@ tmp260,,
	bl	HEVC_se_v	@
	and	sl, sl, #1	@ tmp262, tmp260,
	add	r3, r0, #128	@ tmp215, D.46252,
	str	r0, [r6, #56]	@ D.46252, <variable>.scaling_list_delta_coef
	cmp	r3, #255	@ tmp215,
	bhi	.L1430	@,
	add	r0, r7, r0	@ tmp276, nextCoef, D.46252
	ldr	r8, [fp, #-52]	@, %sfp
	add	r2, r0, #256	@ D.46260, tmp276,
	ldr	ip, [r9, #0]	@ tmp283,* pScan
	mov	r7, #1	@ i,
	cmp	r8, r7	@, i
	mov	lr, r2, asr #31	@ tmp278, D.46260,
	mov	r3, lr, lsr #24	@ tmp279, tmp278,
	ldr	lr, [fp, #-48]	@, %sfp
	add	r1, r2, r3	@ tmp280, D.46260, tmp279
	and	r8, r1, #255	@ tmp281, tmp280,
	rsb	r8, r3, r8	@ nextCoef, tmp279, tmp281
	str	r8, [lr, ip, asl #2]	@ nextCoef,
	ble	.L1410	@,
	cmp	sl, #0	@ tmp262,
	beq	.L1415	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r1, #:lower16:.LC208	@,
	movt	r1, #:upper16:.LC208	@,
	bl	HEVC_se_v	@
	add	ip, r0, #128	@ tmp287, D.46252,
	str	r0, [r6, #56]	@ D.46252, <variable>.scaling_list_delta_coef
	cmp	ip, #255	@ tmp287,
	bhi	.L1430	@,
	add	r7, r8, r0	@ tmp288, nextCoef, D.46252
	ldr	r3, [fp, #-52]	@, %sfp
	add	r0, r7, #256	@ D.46260, tmp288,
	ldr	r1, [r9, #4]	@ tmp295,
	mov	r7, #2	@ i,
	cmp	r3, r7	@, i
	mov	ip, r0, asr #31	@ tmp290, D.46260,
	ldr	r3, [fp, #-48]	@, %sfp
	mov	lr, ip, lsr #24	@ tmp291, tmp290,
	add	r8, r0, lr	@ tmp292, D.46260, tmp291
	and	r2, r8, #255	@ tmp293, tmp292,
	rsb	r8, lr, r2	@ nextCoef, tmp291, tmp293
	str	r8, [r3, r1, asl #2]	@ nextCoef,
	bgt	.L1415	@,
	b	.L1410	@
.L1414:
	ldr	lr, [r9, r7, asl #2]	@ tmp224,* pScan
	add	r7, r3, r0	@ tmp220, D.46260, tmp219
	and	r3, r7, #255	@ tmp221, tmp220,
	add	r7, sl, #1	@ i, tmp263,
	rsb	r8, r0, r3	@ nextCoef, tmp219, tmp221
	ldr	r0, [fp, #-48]	@, %sfp
	str	r8, [r0, lr, asl #2]	@ nextCoef,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	bl	HEVC_se_v	@
	add	r8, r8, r0	@ tmp296, nextCoef, D.46252
	add	r1, r0, #128	@ tmp275, D.46252,
	add	r3, r8, #256	@ D.46260, tmp296,
	cmp	r1, #255	@ tmp275,
	str	r0, [r6, #56]	@ D.46252, <variable>.scaling_list_delta_coef
	mov	r8, r3, asr #31	@ tmp298, D.46260,
	bhi	.L1430	@,
	ldr	r1, [fp, #-52]	@, %sfp
	mov	lr, r8, lsr #24	@ tmp299, tmp298,
	ldr	r2, [r9, sl, asl #2]	@ tmp303,* pScan
	add	ip, r3, lr	@ tmp300, D.46260, tmp299
	cmp	r1, r7	@, i
	ldr	r1, [fp, #-48]	@, %sfp
	and	r0, ip, #255	@ tmp301, tmp300,
	rsb	r8, lr, r0	@ nextCoef, tmp299, tmp301
	str	r8, [r1, r2, asl #2]	@ nextCoef,
	ble	.L1410	@,
.L1415:
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r1, #:lower16:.LC208	@,
	movt	r1, #:upper16:.LC208	@,
	add	sl, r7, #1	@ tmp263, i,
	bl	HEVC_se_v	@
	movw	r1, #:lower16:.LC208	@,
	movt	r1, #:upper16:.LC208	@,
	add	r8, r8, r0	@ tmp217, nextCoef, D.46252
	add	r2, r0, #128	@ tmp267, D.46252,
	add	r3, r8, #256	@ D.46260, tmp217,
	cmp	r2, #255	@ tmp267,
	str	r0, [r6, #56]	@ D.46252, <variable>.scaling_list_delta_coef
	mov	ip, r3, asr #31	@ tmp218, D.46260,
	mov	r0, ip, lsr #24	@ tmp219, tmp218,
	bls	.L1414	@,
.L1430:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC209	@,
	movt	r1, #:upper16:.LC209	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46216,
.L1403:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1433:
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r1, #:lower16:.LC203	@,
	movt	r1, #:upper16:.LC203	@,
	bl	HEVC_ue_v	@
	ldr	r2, [fp, #-56]	@, %sfp
	cmp	r0, r2	@ code,
	bhi	.L1435	@,
	ldr	r3, [fp, #-64]	@, %sfp
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	ip, [fp, #-60]	@, %sfp
	add	lr, r3, #6336	@ tmp189,,
	rsb	r3, r0, r1	@ D.46217, code,
	ldr	r1, [fp, #-64]	@, %sfp
	cmp	ip, #1	@,
	str	r0, [lr, #0]	@ code, <variable>.scaling_list_pred_matrix_id_delta
	str	r3, [r1, #0]	@ D.46217, <variable>.refMatrixId
	bls	.L1404	@,
	ldr	r2, [fp, #-56]	@, %sfp
	ldr	r0, [fp, #-64]	@, %sfp
	cmp	r2, r3	@, D.46217
	ldrne	r1, [fp, #-96]	@, %sfp
	moveq	r2, #16	@ prephitmp.5240,
	addne	r2, r1, r3	@ tmp194,, D.46217
	addne	r2, r6, r2, asl #2	@, tmp198, pScalingList, tmp194,
	ldrne	r2, [r2, #60]	@ prephitmp.5240, <variable>.scalingListDC
	str	r2, [r0, #-96]	@ prephitmp.5240, <variable>.scalingListDC
.L1404:
	ldr	r2, [fp, #-56]	@, %sfp
	cmp	r3, r2	@ D.46217,
	beq	.L1436	@,
	ldr	r1, [fp, #-88]	@, %sfp
	ldr	lr, [fp, #-76]	@, %sfp
	add	r3, r3, r1	@ tmp200, D.46217,
	add	r1, lr, r3, asl #8	@, pMatrixAddress,, tmp200,
.L1408:
	cmp	r1, #0	@ pMatrixAddress,
	beq	.L1437	@,
	ldr	ip, [fp, #-52]	@, %sfp
	ldr	r0, [fp, #-48]	@, %sfp
	mov	r2, ip, asl #2	@,,
	bl	memcpy	@
.L1410:
	ldr	r3, [fp, #-72]	@, %sfp
	ldr	r0, [fp, #-56]	@, %sfp
	ldr	r2, [fp, #-68]	@, %sfp
	ldr	lr, [r3, #1904]	@ tmp225, <variable>.scalingListNum
	add	r1, r0, #1	@,,
	str	r1, [fp, #-56]	@, %sfp
	add	ip, r2, #1	@,,
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	r3, [fp, #-48]	@, %sfp
	ldr	r2, [fp, #-64]	@, %sfp
	cmp	lr, r1	@ tmp225,
	str	ip, [fp, #-68]	@, %sfp
	add	r0, r3, #256	@,,
	add	ip, r2, #4	@,,
	str	r0, [fp, #-48]	@, %sfp
	str	ip, [fp, #-64]	@, %sfp
	bhi	.L1416	@,
.L1418:
	ldr	r3, [fp, #-60]	@, %sfp
	ldr	ip, [fp, #-92]	@, %sfp
	add	r0, r3, #1	@,,
	ldr	r1, [fp, #-72]	@, %sfp
	add	lr, ip, #1536	@,,
	cmp	r0, #4	@,
	ldr	ip, [fp, #-88]	@, %sfp
	add	r2, r1, #4	@,,
	str	lr, [fp, #-92]	@, %sfp
	str	r0, [fp, #-60]	@, %sfp
	add	lr, ip, #6	@,,
	str	r2, [fp, #-72]	@, %sfp
	str	lr, [fp, #-88]	@, %sfp
	bne	.L1398	@,
	mov	r0, #0	@ D.46216,
	b	.L1403	@
.L1436:
	mov	r1, r2	@,
	ldr	r0, [fp, #-60]	@, %sfp
	bl	HEVC_GetScalingListDefaultAddress	@
	mov	r1, r0	@ pMatrixAddress,
	b	.L1408	@
.L1434:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC207	@,
	movt	r1, #:upper16:.LC207	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46216,
	b	.L1403	@
.L1437:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC205	@,
	movt	r1, #:upper16:.LC205	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46216,
	b	.L1403	@
.L1435:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC204	@,
	movt	r1, #:upper16:.LC204	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46216,
	b	.L1403	@
	.fnend
	.size	HEVC_DecScalingListData, .-HEVC_DecScalingListData
	.align	2
	.global	HEVC_GetImagePara
	.type	HEVC_GetImagePara, %function
HEVC_GetImagePara:
	.fnstart
.LFB1630:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r1	@ pFrameStore, pFrameStore
	ldr	r2, [r1, #232]	@ <variable>.fs_image.format, <variable>.fs_image.format
	ldr	lr, [r4, #4]	@ <variable>.eFrameStoreState, <variable>.eFrameStoreState
	ldr	r1, [r1, #16]	@ pic_type, <variable>.pic_type
	bic	r3, r2, #16128	@ D.45491, <variable>.fs_image.format,
	cmp	lr, #0	@ <variable>.eFrameStoreState,
	bic	r5, r3, #3	@ D.45491, D.45491,
	and	ip, r1, #3	@ tmp142, pic_type,
	mov	r2, #25600	@ tmp141,
	orr	r1, r5, ip	@ tmp143, D.45491, tmp142
	str	r2, [r4, #260]	@ tmp141, <variable>.fs_image.frame_rate
	orr	r3, r1, #11264	@ tmp144, tmp143,
	str	r3, [r4, #232]	@ tmp144, <variable>.fs_image.format
	ldrne	r3, [r4, #20]	@ <variable>.err_level, <variable>.err_level
	ldr	r1, [r4, #32]	@, <variable>.logic_fs_id
	strne	r3, [r4, #272]	@ <variable>.err_level, <variable>.fs_image.error_level
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	bl	FSP_GetFsImagePtr	@
	subs	r5, r0, #0	@ pstLogicFsImage,
	ldmeqfd	sp, {r4, r5, fp, sp, pc}	@
	add	r1, r4, #72	@, pFrameStore,
	mov	r2, #504	@,
	bl	memcpy	@
	mov	r1, #16	@ tmp154,
	str	r1, [r5, #384]	@ tmp154, <variable>.ImageDnr.video_standard
	mov	ip, #1	@ tmp157,
	ldr	r0, [r4, #48]	@ <variable>.frame.structure, <variable>.frame.structure
	strb	ip, [r5, #377]	@ tmp157, <variable>.ImageDnr.chroma_format_idc
	cmp	r0, #0	@ <variable>.frame.structure,
	strb	ip, [r5, #379]	@ tmp157, <variable>.ImageDnr.use_pic_qp_en
	movne	r0, #4	@, iftmp.730,
	strb	r0, [r5, #372]	@ iftmp.730, <variable>.ImageDnr.pic_structure
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_GetImagePara, .-HEVC_GetImagePara
	.align	2
	.global	HEVC_OutputCurrPic
	.type	HEVC_OutputCurrPic, %function
HEVC_OutputCurrPic:
	.fnstart
.LFB1613:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:2124852	@ tmp141,
	movw	r6, #:lower16:2124848	@ tmp142,
	movt	r2, #:upper16:2124852	@ tmp141,
	movt	r6, #:upper16:2124848	@ tmp142,
	movw	r1, #:lower16:2124856	@,
	ldr	r5, [r0, r2]	@ pOutFrameStore, <variable>.CurrPic.frame_store
	movt	r1, #:upper16:2124856	@,
	ldr	r3, [r0, r6]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	add	r1, r0, r1	@, pHevcCtx,
	mov	r2, #504	@,
	add	r0, r5, #72	@, pOutFrameStore,
	str	r3, [r5, #20]	@ <variable>.CurrPic.err_level, <variable>.err_level
	bl	memcpy	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, r5	@, pOutFrameStore
	bl	HEVC_GetImagePara	@
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r6, r0, #0	@ pImg,
	beq	.L1454	@,
	ldr	r3, [r5, #20]	@ D.44918, <variable>.err_level
	cmp	r3, #0	@ D.44918,
	str	r3, [r6, #200]	@ D.44918, <variable>.error_level
	bne	.L1455	@,
.L1447:
	movw	r2, #:lower16:2124808	@ tmp164,
	movt	r2, #:upper16:2124808	@ tmp164,
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.is_ref_idc, <variable>.CurrPic.is_ref_idc
	cmp	r1, #0	@ <variable>.CurrPic.is_ref_idc,
	bne	.L1456	@,
.L1451:
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	add	r3, r4, #2129920	@, pHevcCtx,
	ldr	r0, [r4, #236]	@ <variable>.ChanID, <variable>.ChanID
	mov	r1, #16	@,
	add	r3, r3, #2816	@,,
	mov	r2, r4	@, pHevcCtx
	str	r6, [sp, #0]	@ pImg,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@,
	bne	.L1457	@,
	mov	r1, r6	@, pImg
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_SetFrmRepeatCount	@
	ldr	r3, [r4, #260]	@ <variable>.OutputFrameNum, <variable>.OutputFrameNum
	ldr	r1, [r4, #252]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	mov	r0, #0	@ D.44916,
	add	r2, r3, #1	@ tmp179, <variable>.OutputFrameNum,
	str	r2, [r4, #260]	@ tmp179, <variable>.OutputFrameNum
	add	ip, r1, #1	@ tmp181, <variable>.PicOutCounter,
	str	ip, [r4, #252]	@ tmp181, <variable>.PicOutCounter
.L1446:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L1455:
	movw	r0, #:lower16:2124820	@ tmp154,
	movt	r0, #:upper16:2124820	@ tmp154,
	ldr	r7, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r7, #0	@ <variable>.CurrPic.pic_type,
	beq	.L1458	@,
.L1448:
	movw	r7, #:lower16:1960188	@ tmp162,
	movt	r7, #:upper16:1960188	@ tmp162,
	ldr	lr, [r4, r7]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [lr, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	cmp	ip, r3	@ <variable>.s32OutErrThr, D.44918
	bcs	.L1447	@,
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	mov	r2, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	ldr	r2, [r4, r7]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r6, #200]	@ <variable>.error_level, <variable>.error_level
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC214	@,
	movt	r1, #:upper16:.LC214	@,
	ldr	ip, [r2, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	ldr	r2, .L1459	@,
	str	ip, [sp, #0]	@ <variable>.s32OutErrThr,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44916,
	b	.L1446	@
.L1456:
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	b	.L1451	@
.L1458:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC212	@,
	ldr	r2, .L1459	@,
	movt	r1, #:upper16:.LC212	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:g_event_report	@ tmp159,
	movt	r3, #:upper16:g_event_report	@ tmp159,
	ldr	ip, [r3, #0]	@ g_event_report.689, g_event_report
	cmp	ip, #0	@ g_event_report.689,
	beq	.L1449	@,
	mov	r2, r7	@, <variable>.CurrPic.pic_type
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #111	@,
	mov	r3, r7	@, tmp2
	blx	ip	@ g_event_report.689
.L1449:
	ldr	r3, [r6, #200]	@ D.44918, <variable>.error_level
	cmp	r3, #0	@ D.44918,
	bne	.L1448	@,
	b	.L1447	@
.L1457:
	ldr	r2, .L1459	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC213	@,
	movt	r1, #:upper16:.LC213	@,
	bl	dprint_vfmw	@
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	mov	r2, #0	@,
	bl	FSP_SetDisplay	@
	mvn	r0, #0	@ D.44916,
	b	.L1446	@
.L1454:
	movw	r1, #:lower16:.LC211	@,
	ldr	r2, .L1459	@,
	movt	r1, #:upper16:.LC211	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44916,
	b	.L1446	@
.L1460:
	.align	2
.L1459:
	.word	.LANCHOR1+380
	.fnend
	.size	HEVC_OutputCurrPic, .-HEVC_OutputCurrPic
	.align	2
	.global	HEVC_FirstFrameFastOut
	.type	HEVC_FirstFrameFastOut, %function
HEVC_FirstFrameFastOut:
	.fnstart
.LFB1614:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	bl	HEVC_OutputCurrPic	@
	subs	r4, r0, #0	@ ret,
	bne	.L1465	@,
	movw	r0, #:lower16:2124852	@ tmp140,
	movt	r0, #:upper16:2124852	@ tmp140,
	movw	r3, #:lower16:2133088	@ tmp142,
	movt	r3, #:upper16:2133088	@ tmp142,
	ldr	r1, [r5, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@ tmp141,
	mov	r0, r4	@, ret
	str	r2, [r1, #8]	@ tmp141, <variable>.eFirstFrameState
	str	r2, [r5, r3]	@ tmp141, <variable>.FirstFrameState
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1465:
	ldr	r2, .L1466	@,
	movw	r1, #:lower16:.LC215	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC215	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, ret
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1467:
	.align	2
.L1466:
	.word	.LANCHOR1+400
	.fnend
	.size	HEVC_FirstFrameFastOut, .-HEVC_FirstFrameFastOut
	.global	__aeabi_uidivmod
	.align	2
	.global	HEVC_InitListX
	.type	HEVC_InitListX, %function
HEVC_InitListX:
	.fnstart
.LFB1599:
	@ args = 0, pretend = 0, frame = 144
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #148
	sub	sp, sp, #148	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r0, #0	@ pHevcCtx, pHevcCtx
	mvneq	r0, #0	@ D.44272,
	beq	.L1470	@,
	sub	r5, fp, #180	@ tmp314,,
	movw	r6, #:lower16:1960384	@ tmp181,
	movt	r6, #:upper16:1960384	@ tmp181,
	mov	r1, #136	@,
	mov	r0, r5	@, tmp314
	bl	__memzero	@
	ldr	ip, [r4, r6]	@ <variable>.DPB.negative_ref_frames_in_buffer, <variable>.DPB.negative_ref_frames_in_buffer
	cmp	ip, #0	@ <variable>.DPB.negative_ref_frames_in_buffer,
	beq	.L1582	@,
	movw	r3, #:lower16:1960460	@ ivtmp.5463,
	mov	ip, #0	@ idx.5466,
	movt	r3, #:upper16:1960460	@ ivtmp.5463,
	mov	r2, ip	@ i, idx.5466
	add	r3, r4, r3	@ ivtmp.5463, pHevcCtx, ivtmp.5463
	b	.L1474	@
.L1473:
	ldr	r1, [r4, r6]	@ <variable>.DPB.negative_ref_frames_in_buffer, <variable>.DPB.negative_ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.negative_ref_frames_in_buffer, i
	bls	.L1582	@,
.L1474:
	ldr	r1, [r3, #0]	@ D.44279, <variable>.DPB.fs_negative_ref
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.5463, ivtmp.5463,
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #1	@ <variable>.is_reference,
	bne	.L1473	@,
	ldr	r8, [r1, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r8, #0	@ <variable>.frame.is_long_term,
	bne	.L1473	@,
	ldr	lr, [r1, #56]	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	cmp	lr, #1	@ <variable>.frame.is_short_term,
	subeq	r7, fp, #44	@,,
	addeq	r1, r1, #36	@ tmp191, D.44279,
	addeq	lr, r7, ip, asl #2	@, tmp189,, idx.5466,
	addeq	ip, ip, #1	@ idx.5466, idx.5466,
	streq	r1, [lr, #-136]	@ tmp191, pTempListX
	ldr	r1, [r4, r6]	@ <variable>.DPB.negative_ref_frames_in_buffer, <variable>.DPB.negative_ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.negative_ref_frames_in_buffer, i
	bhi	.L1474	@,
.L1582:
	movw	r7, #:lower16:1960388	@ tmp194,
	movt	r7, #:upper16:1960388	@ tmp194,
	mov	r8, ip	@ idx.5470, idx.5466
	ldr	r2, [r4, r7]	@ <variable>.DPB.positive_ref_frames_in_buffer, <variable>.DPB.positive_ref_frames_in_buffer
	cmp	r2, #0	@ <variable>.DPB.positive_ref_frames_in_buffer,
	streq	r2, [fp, #-184]	@ <variable>.DPB.positive_ref_frames_in_buffer, %sfp
	moveq	r6, ip	@ idx.5467, idx.5470
	beq	.L1476	@,
	movw	r6, #:lower16:1960528	@ ivtmp.5458,
	movt	r6, #:upper16:1960528	@ ivtmp.5458,
	add	r3, r4, r6	@ ivtmp.5458, pHevcCtx, ivtmp.5458
	mov	r2, #0	@ i.5471,
	mov	r6, ip	@ idx.5467, idx.5470
	b	.L1478	@
.L1477:
	ldr	r1, [r4, r7]	@ <variable>.DPB.positive_ref_frames_in_buffer, <variable>.DPB.positive_ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.positive_ref_frames_in_buffer, i.5471
	bls	.L1583	@,
.L1478:
	ldr	r1, [r3, #0]	@ D.44292, <variable>.DPB.fs_positive_ref
	add	r2, r2, #1	@ i.5471, i.5471,
	add	r3, r3, #4	@ ivtmp.5458, ivtmp.5458,
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #1	@ <variable>.is_reference,
	bne	.L1477	@,
	ldr	r0, [r1, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r0, #0	@ <variable>.frame.is_long_term,
	bne	.L1477	@,
	ldr	lr, [r1, #56]	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	cmp	lr, #1	@ <variable>.frame.is_short_term,
	subeq	r9, fp, #44	@,,
	addeq	r1, r1, #36	@ tmp204, D.44292,
	addeq	lr, r9, r6, asl #2	@, tmp202,, idx.5467,
	addeq	r6, r6, #1	@ idx.5467, idx.5467,
	streq	r1, [lr, #-136]	@ tmp204, pTempListX
	ldr	r1, [r4, r7]	@ <variable>.DPB.positive_ref_frames_in_buffer, <variable>.DPB.positive_ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.positive_ref_frames_in_buffer, i.5471
	bhi	.L1478	@,
.L1583:
	rsb	sl, r8, r6	@, idx.5470, idx.5467
	str	sl, [fp, #-184]	@, %sfp
.L1476:
	movw	r0, #:lower16:1960380	@ tmp207,
	movt	r0, #:upper16:1960380	@ tmp207,
	ldr	r7, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r7, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	beq	.L1480	@,
	movw	r7, #:lower16:1960596	@ ivtmp.5453,
	movt	r7, #:upper16:1960596	@ ivtmp.5453,
	add	r3, r4, r7	@ ivtmp.5453, pHevcCtx, ivtmp.5453
	mov	r2, #0	@ i.5472,
	b	.L1482	@
.L1481:
	ldr	lr, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	lr, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.5472
	bls	.L1584	@,
.L1482:
	ldr	r1, [r3, #0]	@ D.44304, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ i.5472, i.5472,
	add	r3, r3, #4	@ ivtmp.5453, ivtmp.5453,
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #1	@ <variable>.is_reference,
	bne	.L1481	@,
	ldr	lr, [r1, #52]	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	lr, #1	@ <variable>.frame.is_long_term,
	bne	.L1481	@,
	sub	r9, fp, #44	@,,
	ldr	r7, [r1, #56]	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	add	sl, r9, r6, asl #2	@, tmp215,, idx.5467,
	add	r1, r1, #36	@ tmp217, D.44304,
	cmp	r7, #0	@ <variable>.frame.is_short_term,
	streq	r1, [sl, #-136]	@ tmp217, pTempListX
	addeq	r6, r6, #1	@ idx.5467, idx.5467,
	ldr	lr, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	lr, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.5472
	bhi	.L1482	@,
.L1584:
	ldr	sl, [fp, #-184]	@, %sfp
	rsb	r3, r8, r6	@ tmp220, idx.5470, idx.5467
	rsb	r7, sl, r3	@ prephitmp.5393,, tmp220
.L1480:
	cmp	r6, #0	@ idx.5467,
	beq	.L1585	@,
	movw	r0, #:lower16:2125420	@ tmp236,
	movt	r0, #:upper16:2125420	@ tmp236,
	ldr	r9, [r4, r0]	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r9, #0	@ <variable>.CurrSlice.slice_type,
	bne	.L1485	@,
	ldr	r0, [fp, #-184]	@, %sfp
	cmp	r0, #0	@,
	beq	.L1486	@,
	add	r1, r5, ip, asl #2	@, ivtmp.5446, tmp314, idx.5466,
	add	sl, r5, r0, asl #2	@, D.53245, tmp314,,
	add	r3, r5, #4	@ ivtmp.5449, tmp314,
	rsb	r9, r5, sl	@ tmp361, tmp314, D.53245
	ldr	lr, [r1], #4	@ tmp241, pTempListX
	cmp	r3, sl	@ ivtmp.5449, D.53245
	sub	r2, r9, #4	@ tmp362, tmp361,
	ubfx	r2, r2, #2, #1	@ tmp363, tmp362,,
	str	lr, [r5, #68]	@ tmp241, pTempListX
	beq	.L1486	@,
	cmp	r2, #0	@ tmp363,
	beq	.L1581	@,
	ldr	r0, [r1], #4	@ tmp451, pTempListX
	str	r0, [r3, #68]	@ tmp451, pTempListX
	add	r3, r3, #4	@ ivtmp.5449, ivtmp.5449,
	cmp	r3, sl	@ ivtmp.5449, D.53245
	beq	.L1486	@,
.L1581:
	mov	r9, r8	@ idx.5470, idx.5470
.L1487:
	mov	lr, r1	@ tmp365, ivtmp.5446
	add	r0, r3, #4	@ tmp364, ivtmp.5449,
	ldr	r2, [lr], #4	@ tmp368, pTempListX
	str	r2, [r3, #68]	@ tmp368, pTempListX
	add	r3, r0, #4	@ ivtmp.5449, tmp364,
	ldr	r8, [r1, #4]	@ tmp371, pTempListX
	cmp	r3, sl	@ ivtmp.5449, D.53245
	add	r1, lr, #4	@ ivtmp.5446, tmp365,
	str	r8, [r0, #68]	@ tmp371, pTempListX
	bne	.L1487	@,
	mov	r8, r9	@ idx.5470, idx.5470
.L1486:
	cmp	ip, #0	@ idx.5466,
	ldr	r3, [fp, #-184]	@ idx.5469, %sfp
	beq	.L1488	@,
	mov	sl, ip, asl #2	@ D.53235, idx.5466,
	ldr	r0, [r5, #0]	@ tmp245, pTempListX
	add	r9, r5, r3, asl #2	@, ivtmp.5443, tmp314, idx.5469,
	mov	r3, #4	@ ivtmp.5440,
	cmp	r3, sl	@ ivtmp.5440, D.53235
	sub	r1, sl, #4	@ tmp356, D.53235,
	str	r0, [r9, #68]	@ tmp245, pTempListX
	ubfx	r1, r1, #2, #1	@ tmp357, tmp356,,
	add	r2, r9, r3	@ ivtmp.5443, ivtmp.5443,
	beq	.L1555	@,
	cmp	r1, #0	@ tmp357,
	beq	.L1579	@,
	ldr	r1, [r5, #4]	@ tmp450, pTempListX
	mov	r3, #8	@ ivtmp.5440,
	cmp	r3, sl	@ ivtmp.5440, D.53235
	str	r1, [r2, #68]	@ tmp450, pTempListX
	add	r2, r2, #4	@ ivtmp.5443, ivtmp.5443,
	beq	.L1555	@,
.L1579:
	mov	r9, r8	@ idx.5470, idx.5470
.L1489:
	ldr	r0, [r5, r3]	@ tmp374, pTempListX
	add	r1, r3, #4	@ tmp358, ivtmp.5440,
	add	r3, r1, #4	@ ivtmp.5440, tmp358,
	add	lr, r2, #4	@ tmp359, ivtmp.5443,
	cmp	r3, sl	@ ivtmp.5440, D.53235
	str	r0, [r2, #68]	@ tmp374, pTempListX
	add	r2, lr, #4	@ ivtmp.5443, tmp359,
	ldr	r8, [r5, r1]	@ tmp377, pTempListX
	str	r8, [lr, #68]	@ tmp377, pTempListX
	bne	.L1489	@,
	mov	r8, r9	@ idx.5470, idx.5470
.L1555:
	ldr	r2, [fp, #-184]	@, %sfp
	add	r3, r2, ip	@ idx.5469,, idx.5466
.L1488:
	cmp	r7, #0	@ prephitmp.5393,
	beq	.L1485	@,
	ldr	ip, [fp, #-184]	@, %sfp
	add	r3, r5, r3, asl #2	@, ivtmp.5434, tmp314, idx.5469,
	mov	r2, #1	@ i.5473,
	cmp	r2, r7	@ i.5473, prephitmp.5393
	add	r8, ip, r8	@ tmp247,, idx.5470
	sub	lr, r7, #1	@ tmp348, prephitmp.5393,
	and	ip, lr, r2	@ tmp350, tmp348,
	add	r1, r3, #4	@ ivtmp.5434, ivtmp.5434,
	add	r5, r5, r8, asl #2	@, ivtmp.5431, tmp314, tmp247,
	ldr	r9, [r5], #4	@ tmp251, pTempListX
	str	r9, [r3, #68]	@ tmp251, pTempListX
	beq	.L1485	@,
	cmp	ip, #0	@ tmp350,
	beq	.L1490	@,
	ldr	r9, [r5], #4	@ tmp449, pTempListX
	mov	r2, #2	@ i.5473,
	cmp	r2, r7	@ i.5473, prephitmp.5393
	str	r9, [r1, #68]	@ tmp449, pTempListX
	add	r1, r1, #4	@ ivtmp.5434, ivtmp.5434,
	beq	.L1485	@,
.L1490:
	mov	r3, r5	@ tmp352, ivtmp.5431
	add	r2, r2, #2	@ i.5473, i.5473,
	ldr	lr, [r3], #4	@ tmp381, pTempListX
	add	r0, r1, #4	@ tmp353, ivtmp.5434,
	cmp	r2, r7	@ i.5473, prephitmp.5393
	str	lr, [r1, #68]	@ tmp381, pTempListX
	add	r1, r0, #4	@ ivtmp.5434, tmp353,
	ldr	r9, [r5, #4]	@ tmp385, pTempListX
	add	r5, r3, #4	@ ivtmp.5431, tmp352,
	str	r9, [r0, #68]	@ tmp385, pTempListX
	bne	.L1490	@,
.L1485:
	movw	r3, #:lower16:2125528	@ tmp252,
	movt	r3, #:upper16:2125528	@ tmp252,
	movw	r0, #:lower16:2125532	@ tmp255,
	movt	r0, #:upper16:2125532	@ tmp255,
	ldr	r9, [r4, r3]	@ D.44339, <variable>.CurrSlice.num_ref_idx
	movw	r2, #:lower16:2125520	@ tmp253,
	ldr	r1, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx, <variable>.CurrSlice.num_ref_idx
	movt	r2, #:upper16:2125520	@ tmp253,
	movw	ip, #:lower16:2125524	@ tmp254,
	cmp	r9, #0	@ D.44339,
	movt	ip, #:upper16:2125524	@ tmp254,
	str	r9, [r4, r2]	@ D.44339, <variable>.CurrSlice.listXsize
	str	r1, [r4, ip]	@ <variable>.CurrSlice.num_ref_idx, <variable>.CurrSlice.listXsize
	beq	.L1491	@,
	movw	r7, #:lower16:2128788	@ tmp257,
	movt	r7, #:upper16:2128788	@ tmp257,
	sub	r2, r9, #1	@ tmp343, D.44347,
	movw	r5, #:lower16:1960200	@ ivtmp.5423,
	ldrb	sl, [r4, r7]	@ zero_extendqisi2	@ D.44342, <variable>.CurrSlice.ref_pic_lists_modification.ref_pic_list_modification_flag_l0
	movt	r5, #:upper16:1960200	@ ivtmp.5423,
	and	r1, r2, #1	@ tmp345, tmp343,
	add	r3, r4, r5	@ ivtmp.5423, pHevcCtx, ivtmp.5423
	cmp	sl, #0	@ D.44342,
	moveq	r2, sl	@ idx, D.44342
	addne	ip, r3, #167936	@ tmp432, ivtmp.5423,
	addne	r7, ip, #656	@ tmp432, tmp432,
	ldrne	r2, [r7, #0]	@ idx, <variable>.CurrSlice.ref_pic_lists_modification.list_entry_l0
.L1564:
	sub	r5, fp, #44	@,,
	mov	r7, #1	@ i.5474,
	add	lr, r5, r2, asl #2	@, tmp434,, idx,
	cmp	r9, r7	@ D.44347, i.5474
	mov	r5, r3	@ ivtmp.5423, ivtmp.5423
	ldr	r0, [lr, #-136]	@ tmp436, pTempListX
	str	r0, [r5], #4	@ tmp436, <variable>.pListX
	bls	.L1491	@,
	cmp	r1, #0	@ tmp345,
	beq	.L1575	@,
	cmp	sl, #0	@ D.44342,
	bne	.L1565	@,
	mov	r0, r7	@, i.5474
	mov	r1, r6	@, idx.5467
	bl	__aeabi_uidivmod	@
.L1566:
	sub	r0, fp, #44	@,,
	add	r7, r7, #1	@ i.5474, i.5474,
	add	ip, r0, r1, asl #2	@, tmp440,, idx,
	cmp	r9, r7	@ D.44347, i.5474
	ldr	r2, [ip, #-136]	@ tmp442, pTempListX
	str	r2, [r5], #4	@ tmp442, <variable>.pListX
	bls	.L1491	@,
.L1575:
	mov	r8, r4	@ pHevcCtx, pHevcCtx
	b	.L1494	@
.L1587:
	add	r5, r5, #167936	@ tmp444, ivtmp.5423,
	sub	r2, fp, #44	@,,
	add	lr, r5, #660	@ tmp444, tmp444,
	add	r7, r7, #1	@ i.5474, tmp346,
	mov	r5, r4	@ ivtmp.5423, tmp347
	cmp	r9, r7	@ D.44347, i.5474
	ldr	r1, [lr, #0]	@ idx, <variable>.CurrSlice.ref_pic_lists_modification.list_entry_l0
	add	r3, r2, r1, asl #2	@, tmp446,, idx,
	ldr	r4, [r3, #-136]	@ tmp448, pTempListX
	str	r4, [r5], #4	@ tmp448, <variable>.pListX
	bls	.L1586	@,
.L1494:
	add	lr, r5, #167936	@ tmp260, ivtmp.5423,
	cmp	sl, #0	@ D.44342,
	add	r4, lr, #656	@ tmp260, tmp260,
	mov	r1, r6	@, idx.5467
	mov	r0, r7	@, i.5474
	ldrne	r1, [r4, #0]	@ idx, <variable>.CurrSlice.ref_pic_lists_modification.list_entry_l0
	bne	.L1493	@,
	bl	__aeabi_uidivmod	@
.L1493:
	sub	r0, fp, #44	@,,
	add	r7, r7, #1	@ tmp346, i.5474,
	add	r2, r0, r1, asl #2	@, tmp269,, idx,
	cmp	sl, #0	@ D.44342,
	mov	r4, r5	@ tmp347, ivtmp.5423
	mov	r1, r6	@, idx.5467
	ldr	ip, [r2, #-136]	@ tmp271, pTempListX
	mov	r0, r7	@, tmp346
	str	ip, [r4], #4	@ tmp271, <variable>.pListX
	bne	.L1587	@,
	bl	__aeabi_uidivmod	@
	sub	r2, fp, #44	@,,
	mov	r5, r4	@ ivtmp.5423, tmp347
	add	r7, r7, #1	@ i.5474, tmp346,
	cmp	r9, r7	@ D.44347, i.5474
	add	r3, r2, r1, asl #2	@, tmp446,, idx,
	ldr	r4, [r3, #-136]	@ tmp448, pTempListX
	str	r4, [r5], #4	@ tmp448, <variable>.pListX
	bhi	.L1494	@,
.L1586:
	mov	r4, r8	@ pHevcCtx, pHevcCtx
.L1491:
	movw	r3, #:lower16:2125420	@ tmp272,
	movt	r3, #:upper16:2125420	@ tmp272,
	ldr	r1, [r4, r3]	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #0	@ <variable>.CurrSlice.slice_type,
	bne	.L1495	@,
	movw	r5, #:lower16:2125524	@ tmp274,
	movt	r5, #:upper16:2125524	@ tmp274,
	ldr	r9, [r4, r5]	@ D.44356, <variable>.CurrSlice.listXsize
	cmp	r9, #0	@ D.44356,
	beq	.L1496	@,
	movw	r2, #:lower16:2128789	@ tmp275,
	movt	r2, #:upper16:2128789	@ tmp275,
	movw	r7, #:lower16:1960268	@ ivtmp.5417,
	sub	r5, r9, #1	@ tmp338, D.44356,
	ldrb	sl, [r4, r2]	@ zero_extendqisi2	@ D.44351, <variable>.CurrSlice.ref_pic_lists_modification.ref_pic_list_modification_flag_l1
	movt	r7, #:upper16:1960268	@ ivtmp.5417,
	add	r3, r4, r7	@ ivtmp.5417, pHevcCtx, ivtmp.5417
	and	r1, r5, #1	@ tmp340, tmp338,
	cmp	sl, #0	@ D.44351,
	moveq	r2, sl	@ idx.5468, D.44351
	bne	.L1588	@,
.L1560:
	sub	r5, fp, #44	@,,
	mov	r7, #1	@ i.5476,
	add	lr, r5, r2, asl #2	@, tmp414,, idx.5468,
	cmp	r7, r9	@ i.5476, D.44356
	mov	r5, r3	@ ivtmp.5417, ivtmp.5417
	ldr	r0, [lr, #-68]	@ tmp416, pTempListX
	str	r0, [r5], #4	@ tmp416, <variable>.pListX
	bcs	.L1495	@,
	cmp	r1, #0	@ tmp340,
	beq	.L1573	@,
	cmp	sl, #0	@ D.44351,
	bne	.L1561	@,
	mov	r0, r7	@, i.5476
	mov	r1, r6	@, idx.5467
	bl	__aeabi_uidivmod	@
.L1562:
	sub	r0, fp, #44	@,,
	add	r7, r7, #1	@ i.5476, i.5476,
	add	ip, r0, r1, asl #2	@, tmp421,, idx.5468,
	cmp	r7, r9	@ i.5476, D.44356
	ldr	r2, [ip, #-68]	@ tmp423, pTempListX
	str	r2, [r5], #4	@ tmp423, <variable>.pListX
	bcs	.L1495	@,
.L1573:
	mov	r8, r4	@ pHevcCtx, pHevcCtx
	b	.L1499	@
.L1590:
	add	r5, r5, #167936	@ tmp425, ivtmp.5417,
	sub	r2, fp, #44	@,,
	add	lr, r5, #720	@ tmp425, tmp425,
	add	r7, r7, #1	@ i.5476, tmp341,
	mov	r5, r4	@ ivtmp.5417, tmp342
	cmp	r7, r9	@ i.5476, D.44356
	ldr	r1, [lr, #0]	@ idx.5468, <variable>.CurrSlice.ref_pic_lists_modification.list_entry_l1
	add	r3, r2, r1, asl #2	@, tmp428,, idx.5468,
	ldr	r4, [r3, #-68]	@ tmp430, pTempListX
	str	r4, [r5], #4	@ tmp430, <variable>.pListX
	bcs	.L1589	@,
.L1499:
	add	lr, r5, #167936	@ tmp277, ivtmp.5417,
	cmp	sl, #0	@ D.44351,
	add	r4, lr, #716	@ tmp277, tmp277,
	mov	r1, r6	@, idx.5467
	mov	r0, r7	@, i.5476
	ldrne	r1, [r4, #0]	@ idx.5468, <variable>.CurrSlice.ref_pic_lists_modification.list_entry_l1
	bne	.L1498	@,
	bl	__aeabi_uidivmod	@
.L1498:
	sub	r2, fp, #44	@,,
	add	r7, r7, #1	@ tmp341, i.5476,
	add	r0, r2, r1, asl #2	@, tmp287,, idx.5468,
	cmp	sl, #0	@ D.44351,
	mov	r4, r5	@ tmp342, ivtmp.5417
	mov	r1, r6	@, idx.5467
	ldr	ip, [r0, #-68]	@ tmp289, pTempListX
	mov	r0, r7	@, tmp341
	str	ip, [r4], #4	@ tmp289, <variable>.pListX
	bne	.L1590	@,
	bl	__aeabi_uidivmod	@
	sub	r2, fp, #44	@,,
	mov	r5, r4	@ ivtmp.5417, tmp342
	add	r7, r7, #1	@ i.5476, tmp341,
	cmp	r7, r9	@ i.5476, D.44356
	add	r3, r2, r1, asl #2	@, tmp428,, idx.5468,
	ldr	r4, [r3, #-68]	@ tmp430, pTempListX
	str	r4, [r5], #4	@ tmp430, <variable>.pListX
	bcc	.L1499	@,
.L1589:
	mov	r4, r8	@ pHevcCtx, pHevcCtx
.L1495:
	movw	ip, #:lower16:2125520	@ tmp299,
	movt	ip, #:upper16:2125520	@ tmp299,
	ldr	r2, [r4, ip]	@ i.5478, <variable>.CurrSlice.listXsize
	cmp	r2, #16	@ i.5478,
	bhi	.L1500	@,
	movw	r1, #:lower16:490050	@ tmp300,
	movt	r1, #:upper16:490050	@ tmp300,
	add	r3, r2, r1	@ tmp300, i.5478, tmp300
	movw	r1, #:lower16:1960200	@ tmp324,
	movt	r1, #:upper16:1960200	@ tmp324,
	movw	ip, #:lower16:1960268	@ D.53198,
	add	r2, r4, r3, asl #2	@, ivtmp.5413, pHevcCtx, tmp300,
	movt	ip, #:upper16:1960268	@ D.53198,
	ldr	r0, [r4, r1]	@ <variable>.pListX, <variable>.pListX
	add	ip, r4, ip	@ D.53198, pHevcCtx, D.53198
	mov	r3, r2	@ ivtmp.5413, ivtmp.5413
	rsb	lr, r2, ip	@ tmp334, ivtmp.5413, D.53198
	sub	r2, lr, #4	@ tmp335, tmp334,
	str	r0, [r3], #4	@ <variable>.pListX, <variable>.pListX
	cmp	r3, ip	@ ivtmp.5413, D.53198
	ubfx	r2, r2, #2, #1	@ tmp336, tmp335,,
	beq	.L1500	@,
	cmp	r2, #0	@ tmp336,
	beq	.L1501	@,
	ldr	r2, [r4, r1]	@ <variable>.pListX, <variable>.pListX
	str	r2, [r3], #4	@ <variable>.pListX, <variable>.pListX
	cmp	r3, ip	@ ivtmp.5413, D.53198
	beq	.L1500	@,
.L1501:
	ldr	r2, [r4, r1]	@ <variable>.pListX, <variable>.pListX
	mov	lr, r3	@ tmp337, ivtmp.5413
	str	r2, [lr], #4	@ <variable>.pListX, <variable>.pListX
	ldr	r0, [r4, r1]	@ <variable>.pListX, <variable>.pListX
	str	r0, [r3, #4]	@ <variable>.pListX, <variable>.pListX
	add	r3, lr, #4	@ ivtmp.5413, tmp337,
	cmp	r3, ip	@ ivtmp.5413, D.53198
	bne	.L1501	@,
.L1500:
	movw	ip, #:lower16:2125524	@ tmp306,
	movt	ip, #:upper16:2125524	@ tmp306,
	ldr	r2, [r4, ip]	@ i.5479, <variable>.CurrSlice.listXsize
	cmp	r2, #16	@ i.5479,
	bhi	.L1484	@,
	movw	r1, #:lower16:490050	@ tmp307,
	movt	r1, #:upper16:490050	@ tmp307,
	add	r3, r2, r1	@ tmp307, i.5479, tmp307
	movw	r1, #:lower16:1960268	@ tmp323,
	movt	r1, #:upper16:1960268	@ tmp323,
	add	r2, r4, r3, asl #2	@, ivtmp.5409, pHevcCtx, tmp307,
	add	ip, r4, r1	@ D.53190, pHevcCtx, D.53190
	add	r3, r2, #4	@ ivtmp.5409, ivtmp.5409,
	ldr	r5, [r4, r1]	@ <variable>.pListX, <variable>.pListX
	rsb	r0, r2, ip	@ tmp329, ivtmp.5409, D.53190
	cmp	r3, ip	@ ivtmp.5409, D.53190
	sub	lr, r0, #4	@ tmp330, tmp329,
	str	r5, [r2, #68]	@ <variable>.pListX, <variable>.pListX
	ubfx	r0, lr, #2, #1	@ tmp331, tmp330,,
	beq	.L1484	@,
	cmp	r0, #0	@ tmp331,
	beq	.L1502	@,
	ldr	lr, [r4, r1]	@ <variable>.pListX, <variable>.pListX
	str	lr, [r3, #68]	@ <variable>.pListX, <variable>.pListX
	add	r3, r3, #4	@ ivtmp.5409, ivtmp.5409,
	cmp	r3, ip	@ ivtmp.5409, D.53190
	beq	.L1484	@,
.L1502:
	ldr	r0, [r4, r1]	@ <variable>.pListX, <variable>.pListX
	add	r2, r3, #4	@ tmp332, ivtmp.5409,
	str	r0, [r3, #68]	@ <variable>.pListX, <variable>.pListX
	add	r3, r2, #4	@ ivtmp.5409, tmp332,
	ldr	lr, [r4, r1]	@ <variable>.pListX, <variable>.pListX
	cmp	r3, ip	@ ivtmp.5409, D.53190
	str	lr, [r2, #68]	@ <variable>.pListX, <variable>.pListX
	bne	.L1502	@,
.L1484:
	mov	r0, #0	@ D.44272,
.L1470:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1565:
	add	r1, r3, #167936	@ tmp438, ivtmp.5423,
	add	r3, r1, #660	@ tmp438, tmp438,
	ldr	r1, [r3, #0]	@ idx, <variable>.CurrSlice.ref_pic_lists_modification.list_entry_l0
	b	.L1566	@
.L1585:
	movw	r5, #:lower16:2125520	@ tmp221,
	movw	r2, #:lower16:2125524	@ tmp223,
	movt	r5, #:upper16:2125520	@ tmp221,
	movt	r2, #:upper16:2125524	@ tmp223,
	movw	lr, #:lower16:1960200	@,
	movt	lr, #:upper16:1960200	@,
	str	r6, [r4, r5]	@ idx.5467, <variable>.CurrSlice.listXsize
	add	r0, r4, lr	@, pHevcCtx,
	str	r6, [r4, r2]	@ idx.5467, <variable>.CurrSlice.listXsize
	mov	r1, #136	@,
	bl	__memzero	@
	movw	r1, #:lower16:1960188	@ tmp228,
	movt	r1, #:upper16:1960188	@ tmp228,
	movw	r2, #:lower16:1960200	@ tmp226,
	movt	r2, #:upper16:1960200	@ tmp226,
	ldr	r0, [r4, r1]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r0, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	ip, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1484	@,
	movw	lr, #:lower16:2124852	@ tmp233,
	movt	lr, #:upper16:2124852	@ tmp233,
	mov	r1, #1	@ tmp231,
	mov	r0, r6	@ D.44272, idx.5467
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r1, [r4, r5]	@ tmp231, <variable>.CurrSlice.listXsize
	add	r3, ip, #36	@ tmp235, <variable>.CurrPic.frame_store,
	str	r3, [r4, r2]	@ tmp235, <variable>.pListX
	b	.L1470	@
.L1588:
	movw	ip, #:lower16:2128920	@ tmp411,
	movt	ip, #:upper16:2128920	@ tmp411,
	add	r7, r4, ip	@ tmp411, pHevcCtx, tmp411
	ldr	r2, [r7, #0]	@ idx.5468, <variable>.CurrSlice.ref_pic_lists_modification.list_entry_l1
	b	.L1560	@
.L1561:
	add	r1, r3, #167936	@ tmp418, ivtmp.5417,
	add	r3, r1, #720	@ tmp418, tmp418,
	ldr	r1, [r3, #0]	@ idx.5468, <variable>.CurrSlice.ref_pic_lists_modification.list_entry_l1
	b	.L1562	@
.L1496:
	movw	lr, #:lower16:1960200	@ D.44359,
	movt	lr, #:upper16:1960200	@ D.44359,
	add	r1, r4, lr	@ D.44359, pHevcCtx, D.44359
	mov	r2, #68	@,
	add	r0, r1, r2	@, D.44359,
	bl	memcpy	@
	movw	r3, #:lower16:2125520	@ tmp297,
	movt	r3, #:upper16:2125520	@ tmp297,
	ldr	r1, [r4, r3]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	str	r1, [r4, r5]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	b	.L1495	@
	.fnend
	.size	HEVC_InitListX, .-HEVC_InitListX
	.align	2
	.global	HEVC_DecList
	.type	HEVC_DecList, %function
HEVC_DecList:
	.fnstart
.LFB1598:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:2125420	@ tmp138,
	movt	r1, #:upper16:2125420	@ tmp138,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r1]	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L1597	@,
	bl	HEVC_InitListX	@
	cmp	r0, #0	@,
	bne	.L1598	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RepairList	@
	cmp	r0, #0	@ ret.5510
	ldmeqfd	sp, {r3, r4, fp, sp, pc}	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC217	@,
	movt	r1, #:upper16:.LC217	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44214,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1597:
	movw	r2, #:lower16:2125520	@ tmp140,
	movw	ip, #:lower16:2125524	@ tmp142,
	movt	r2, #:upper16:2125520	@ tmp140,
	movt	ip, #:upper16:2125524	@ tmp142,
	mov	r0, #0	@ tmp141,
	str	r0, [r4, r2]	@ tmp141, <variable>.CurrSlice.listXsize
	str	r0, [r4, ip]	@ tmp141, <variable>.CurrSlice.listXsize
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1598:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC216	@,
	movt	r1, #:upper16:.LC216	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44214,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	HEVC_DecList, .-HEVC_DecList
	.align	2
	.global	HEVC_WriteSliceMsg
	.type	HEVC_WriteSliceMsg, %function
HEVC_WriteSliceMsg:
	.fnstart
.LFB1590:
	@ args = 0, pretend = 0, frame = 88
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #92
	sub	sp, sp, #92	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	bl	HEVC_CheckListX	@
	cmp	r0, #0	@ D.43598
	bne	.L1659	@,
	ldr	r5, [r4, #200]	@ temp.5600, <variable>.NumSlicePara
	ldr	r3, [r4, #144]	@ D.43608, <variable>.MaxSliceNum
	cmp	r5, r3	@ temp.5600, D.43608
	bcs	.L1660	@,
	movw	r2, #:lower16:2358440	@ tmp188,
	movt	r2, #:upper16:2358440	@ tmp188,
	add	r6, r5, #1	@ D.43615, temp.5600,
	mov	r1, #1296	@ tmp190,
	ldr	lr, [r4, r2]	@ <variable>.pDecSlicePara, <variable>.pDecSlicePara
	cmp	r6, r3	@ D.43615, D.43608
	str	r6, [r4, #200]	@ D.43615, <variable>.NumSlicePara
	movw	sl, #3688	@ tmp202,
	movw	r7, #:lower16:2125436	@ tmp205,
	movt	r7, #:upper16:2125436	@ tmp205,
	mla	r5, r1, r5, lr	@ pCurrSlicePara, tmp190, temp.5600, <variable>.pDecSlicePara
	movw	ip, #:lower16:2125420	@ tmp217,
	mlacc	lr, r1, r6, lr	@ tmp197, tmp190, D.43615, <variable>.pDecSlicePara
	movt	ip, #:upper16:2125420	@ tmp217,
	strcs	r0, [r5, #1292]	@ D.43598, <variable>.pNextSlice
	strcc	lr, [r5, #1292]	@ tmp197, <variable>.pNextSlice
	ldr	r8, [r4, #208]	@ <variable>.TotalSliceNum, <variable>.TotalSliceNum
	ldr	r0, [r4, r7]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	ldr	r7, [r4, ip]	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	ip, #:lower16:1960196	@ tmp219,
	mla	r9, sl, r8, r4	@ tmp203, tmp202, <variable>.TotalSliceNum, pHevcCtx
	movt	ip, #:upper16:1960196	@ tmp219,
	movw	r8, #:lower16:4300576	@ tmp210,
	movt	r8, #:upper16:4300576	@ tmp210,
	add	r1, r9, #2408448	@ tmp204, tmp203,
	add	r2, r1, #3936	@ tmp204, tmp204,
	str	r0, [r2, #4]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r6, [r4, #164]	@ <variable>.CurrMsgSlotNum, <variable>.CurrMsgSlotNum
	ldr	r3, [r4, #208]	@ <variable>.TotalSliceNum, <variable>.TotalSliceNum
	add	r6, r6, #1	@ D.43621, <variable>.CurrMsgSlotNum,
	str	r6, [r4, #164]	@ D.43621, <variable>.CurrMsgSlotNum
	add	lr, r3, #1	@ tmp209, <variable>.TotalSliceNum,
	str	lr, [r4, #208]	@ tmp209, <variable>.TotalSliceNum
	mov	sl, r6, asl #3	@, D.43621,
	str	sl, [fp, #-120]	@, %sfp
	rsb	r9, r6, sl	@ tmp213, D.43621,
	add	r0, r4, r9, asl #2	@, tmp215, pHevcCtx, tmp213,
	str	r7, [r0, r8]	@ <variable>.CurrSlice.slice_type, <variable>.slice_type
	ldr	r1, [r4, ip]	@ D.43626, <variable>.pCurrNal
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ i, <variable>.nal_used_segment
	ldr	r0, [r1, #8]	@ i.5635, <variable>.nal_segment
	cmp	r3, #1	@ i,
	cmpls	r3, r0	@, i, i.5635
	bcs	.L1605	@,
	add	r0, r3, #2	@ tmp227, i,
	add	r2, r5, r0, asl #2	@, ivtmp.5596, pCurrSlicePara, tmp227,
.L1606:
	rsb	r0, r3, r3, asl #3	@, tmp232, i, i,
	add	r3, r3, #1	@ i, i,
	mov	sl, r0, asl #2	@ tmp233, tmp232,
	add	lr, sl, r1	@ tmp234, tmp233, D.43626
	ldr	r8, [lr, #60]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	r8, [r2, #0]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	r7, [r4, ip]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r9, sl, r7	@ tmp244, tmp233, <variable>.pCurrNal
	ldr	r1, [r9, #56]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	cmp	r3, #1	@ i,
	movhi	r9, #0	@, tmp264
	movls	r9, #1	@, tmp264
	str	r1, [r2, #-8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	lr, [r4, ip]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r8, sl, lr	@ tmp254, tmp233, <variable>.pCurrNal
	ldr	r7, [r8, #64]	@ <variable>.bytespos, <variable>.bytespos
	str	r7, [r2, #8]	@ <variable>.bytespos, <variable>.bytespos
	add	r2, r2, #4	@ ivtmp.5596, ivtmp.5596,
	ldr	r1, [r4, ip]	@ D.43626, <variable>.pCurrNal
	ldr	r0, [r1, #8]	@ i.5635, <variable>.nal_segment
	cmp	r0, r3	@ i.5635, i
	movls	r9, #0	@, tmp264,
	cmp	r9, #0	@ tmp264,
	bne	.L1606	@,
.L1605:
	cmp	r0, #1	@ i.5635,
	bhi	.L1607	@,
	add	r3, r0, #2	@ tmp265, i.5635,
	add	r1, r5, #16	@ D.53398, pCurrSlicePara,
	mov	r2, #0	@ tmp578,
	add	sl, r5, r3, asl #2	@, ivtmp.5589, pCurrSlicePara, tmp265,
	add	r3, sl, #4	@ ivtmp.5589, ivtmp.5589,
	rsb	r9, sl, r1	@ tmp586, ivtmp.5589, D.53398
	cmp	r3, r1	@ ivtmp.5589, D.53398
	sub	ip, r9, #4	@ tmp587, tmp586,
	ubfx	ip, ip, #2, #1	@ tmp588, tmp587,,
	str	r2, [sl, #0]	@ tmp578, <variable>.bitsoffset
	str	r2, [sl, #-8]	@ tmp578, <variable>.valid_bitlen
	str	r2, [sl, #8]	@ tmp578, <variable>.bytespos
	beq	.L1607	@,
	cmp	ip, #0	@ tmp588,
	beq	.L1608	@,
	str	r2, [r3, #0]	@ tmp578, <variable>.bitsoffset
	str	r2, [r3, #-8]	@ tmp578, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp578, <variable>.bytespos
	add	r3, r3, #4	@ ivtmp.5589, ivtmp.5589,
	cmp	r3, r1	@ ivtmp.5589, D.53398
	beq	.L1607	@,
.L1608:
	add	r7, r3, #4	@ tmp589, ivtmp.5589,
	str	r2, [r3, #-8]	@ tmp578, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp578, <variable>.bytespos
	str	r2, [r3, #4]	@ tmp578, <variable>.bitsoffset
	str	r2, [r3, #0]	@ tmp578, <variable>.bitsoffset
	add	r3, r7, #4	@ ivtmp.5589, tmp589,
	cmp	r3, r1	@ ivtmp.5589, D.53398
	str	r2, [r7, #-8]	@ tmp578, <variable>.valid_bitlen
	str	r2, [r7, #8]	@ tmp578, <variable>.bytespos
	bne	.L1608	@,
.L1607:
	movw	r1, #:lower16:2125363	@ tmp270,
	movt	r1, #:upper16:2125363	@ tmp270,
	ldrb	r2, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.dependent_slice_segment_flag, <variable>.CurrSlice.dependent_slice_segment_flag
	cmp	r2, #0	@ <variable>.CurrSlice.dependent_slice_segment_flag,
	beq	.L1661	@,
.L1609:
	movw	r7, #:lower16:2129208	@ tmp280,
	movt	r7, #:upper16:2129208	@ tmp280,
	ldr	r0, [r4, r7]	@ <variable>.IndependentSlice.listXsize, <variable>.IndependentSlice.listXsize
	cmp	r0, #0	@ <variable>.IndependentSlice.listXsize,
	beq	.L1610	@,
	movw	sl, #:lower16:1960200	@ ivtmp.5580,
	movt	sl, #:upper16:1960200	@ ivtmp.5580,
	add	r1, r4, sl	@ ivtmp.5580, pHevcCtx, ivtmp.5580
	mov	r2, r5	@ ivtmp.5584, pCurrSlicePara
	mov	r0, #0	@ i.5621,
.L1611:
	ldr	sl, [r1, #0]	@ D.43641, <variable>.pListX
	movw	r9, #:lower16:533666	@ tmp288,
	movt	r9, #:upper16:533666	@ tmp288,
	sub	r8, fp, #44	@,,
	add	r0, r0, #1	@ i.5621, i.5621,
	ldr	lr, [sl, #32]	@ D.43642, <variable>.frame_store
	ldr	r3, [lr, #24]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	lr, [lr, #28]	@ <variable>.apc_idc, <variable>.apc_idc
	add	ip, r3, r9	@ tmp288, <variable>.pmv_address_idc, tmp288
	add	r3, r4, ip, asl #2	@, tmp293, pHevcCtx, tmp288,
	add	r9, r8, lr, asl #2	@, tmp286,, <variable>.apc_idc,
	ldr	ip, [r3, #8]	@ tmp295, <variable>.DecPicPara.PmvPhyAddr
	str	ip, [r9, #-64]	@ tmp295, Apc2MvAddr
	ldr	lr, [sl, #16]	@ <variable>.is_long_term, <variable>.is_long_term
	str	lr, [r2, #116]	@ <variable>.is_long_term, <variable>.IsLongTerm
	ldr	r8, [r1], #4	@ tmp297, <variable>.pListX
	ldr	r3, [r8, #32]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r9, [r3, #28]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r9, [r2, #356]	@ <variable>.apc_idc, <variable>.Idx2Apc
	add	r2, r2, #4	@ ivtmp.5584, ivtmp.5584,
	ldr	ip, [r4, r7]	@ <variable>.IndependentSlice.listXsize, <variable>.IndependentSlice.listXsize
	cmp	ip, r0	@ <variable>.IndependentSlice.listXsize, i.5621
	bhi	.L1611	@,
.L1610:
	movw	r7, #:lower16:2129212	@ tmp302,
	movt	r7, #:upper16:2129212	@ tmp302,
	ldr	r3, [r4, r7]	@ D.43656, <variable>.IndependentSlice.listXsize
	cmp	r3, #0	@ D.43656,
	beq	.L1612	@,
	movw	r2, #:lower16:1960268	@ ivtmp.5572,
	movt	r2, #:upper16:1960268	@ ivtmp.5572,
	add	r1, r4, r2	@ ivtmp.5572, pHevcCtx, ivtmp.5572
	mov	r0, #0	@ i.5622,
	mov	r2, r5	@ ivtmp.5576, pCurrSlicePara
.L1613:
	ldr	sl, [r1, #0]	@ D.43649, <variable>.pListX
	movw	r9, #:lower16:533666	@ tmp309,
	movt	r9, #:upper16:533666	@ tmp309,
	add	r0, r0, #1	@ i.5622, i.5622,
	ldr	lr, [sl, #32]	@ D.43650, <variable>.frame_store
	ldr	r8, [lr, #24]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	ip, [lr, #28]	@ <variable>.apc_idc, <variable>.apc_idc
	add	r3, r8, r9	@ tmp309, <variable>.pmv_address_idc, tmp309
	sub	r9, fp, #44	@,,
	add	r8, r4, r3, asl #2	@, tmp314, pHevcCtx, tmp309,
	add	lr, r9, ip, asl #2	@, tmp307,, <variable>.apc_idc,
	ldr	r3, [r8, #8]	@ tmp316, <variable>.DecPicPara.PmvPhyAddr
	str	r3, [lr, #-64]	@ tmp316, Apc2MvAddr
	ldr	r9, [sl, #16]	@ <variable>.is_long_term, <variable>.is_long_term
	str	r9, [r2, #176]	@ <variable>.is_long_term, <variable>.IsLongTerm
	ldr	ip, [r1], #4	@ tmp318, <variable>.pListX
	ldr	r8, [ip, #32]	@ <variable>.frame_store, <variable>.frame_store
	ldr	sl, [r8, #28]	@ <variable>.apc_idc, <variable>.apc_idc
	str	sl, [r2, #420]	@ <variable>.apc_idc, <variable>.Idx2Apc
	add	r2, r2, #4	@ ivtmp.5576, ivtmp.5576,
	ldr	r3, [r4, r7]	@ D.43656, <variable>.IndependentSlice.listXsize
	cmp	r3, r0	@ D.43656, i.5622
	bhi	.L1613	@,
.L1612:
	movw	r7, #:lower16:2129208	@ tmp322,
	movt	r7, #:upper16:2129208	@ tmp322,
	ldr	r8, [r4, r7]	@ D.43648, <variable>.IndependentSlice.listXsize
	cmp	r8, #0	@ D.43648,
	beq	.L1614	@,
	ldr	ip, [r5, #356]	@ <variable>.Idx2Apc, <variable>.Idx2Apc
	movw	sl, #:lower16:490200	@ tmp324,
	movt	sl, #:upper16:490200	@ tmp324,
	movw	r1, #:lower16:2124816	@ tmp323,
	add	r2, ip, sl	@ tmp324, <variable>.Idx2Apc, tmp324
	movt	r1, #:upper16:2124816	@ tmp323,
	ldr	r0, [r4, r2, asl #2]	@ tmp327, <variable>.APC.poc
	ldr	r7, [r4, r1]	@ D.43657, <variable>.CurrPic.thispoc
	cmp	r7, r0	@ D.43657, tmp327
	blt	.L1615	@,
	tst	r8, #1	@ D.43648,
	mov	r0, r5	@ ivtmp.5569, pCurrSlicePara
	mov	ip, #0	@ i.5617,
	bne	.L1616	@,
	ldr	r0, [r5, #360]	@ tmp613, <variable>.Idx2Apc
	movw	r9, #:lower16:490200	@ tmp614,
	movt	r9, #:upper16:490200	@ tmp614,
	mov	ip, #1	@ i.5617,
	add	sl, r0, r9	@ tmp614, tmp613, tmp614
	add	r0, r5, #4	@ ivtmp.5569, pCurrSlicePara,
	ldr	lr, [r4, sl, asl #2]	@ temp.5627, <variable>.APC.poc
	cmp	r7, lr	@ D.43657, temp.5627
	bge	.L1616	@,
.L1615:
	mov	r0, #0	@ IsLowDelay,
	b	.L1618	@
.L1617:
	ldr	sl, [r0, #360]	@ tmp330, <variable>.Idx2Apc
	add	r0, lr, #4	@ ivtmp.5569, tmp583,
	add	r2, sl, r2	@ tmp328, tmp330, tmp328
	ldr	r9, [r4, r2, asl #2]	@ temp.5627, <variable>.APC.poc
	cmp	r7, r9	@ D.43657, temp.5627
	blt	.L1615	@,
	ldr	sl, [lr, #360]	@ tmp617, <variable>.Idx2Apc
	add	r1, sl, r1	@ tmp618, tmp617, tmp618
	ldr	r2, [r4, r1, asl #2]	@ temp.5627, <variable>.APC.poc
	cmp	r7, r2	@ D.43657, temp.5627
	blt	.L1615	@,
.L1616:
	add	ip, ip, #1	@ tmp584, i.5617,
	movw	r2, #:lower16:490200	@ tmp328,
	cmp	r8, ip	@ D.43648, tmp584
	movt	r2, #:upper16:490200	@ tmp328,
	add	lr, r0, #4	@ tmp583, ivtmp.5569,
	add	ip, ip, #1	@ i.5617, tmp584,
	mov	r1, r2	@ tmp618, tmp328
	bhi	.L1617	@,
.L1614:
	mov	r0, #1	@ IsLowDelay,
.L1618:
	movw	r8, #:lower16:2129108	@ tmp331,
	movt	r8, #:upper16:2129108	@ tmp331,
	ldr	r1, [r4, r8]	@ <variable>.IndependentSlice.slice_type, <variable>.IndependentSlice.slice_type
	cmp	r1, #0	@ <variable>.IndependentSlice.slice_type,
	bne	.L1619	@,
	cmp	r3, #0	@ D.43656,
	moveq	lr, #0	@, tmp337
	andne	lr, r0, #1	@,, tmp337, IsLowDelay
	cmp	lr, #0	@ tmp337,
	beq	.L1619	@,
	ldr	sl, [r5, #420]	@ <variable>.Idx2Apc, <variable>.Idx2Apc
	movw	r2, #:lower16:490200	@ tmp339,
	movt	r2, #:upper16:490200	@ tmp339,
	movw	r0, #:lower16:2124816	@ tmp338,
	add	r9, sl, r2	@ tmp339, <variable>.Idx2Apc, tmp339
	movt	r0, #:upper16:2124816	@ tmp338,
	ldr	r7, [r4, r9, asl #2]	@ tmp342, <variable>.APC.poc
	ldr	lr, [r4, r0]	@ temp.5659, <variable>.CurrPic.thispoc
	cmp	r7, lr	@ tmp342, temp.5659
	movle	r0, r5	@ ivtmp.5564, pCurrSlicePara
	ble	.L1621	@,
	b	.L1620	@
.L1622:
	ldr	r7, [r0, #424]	@ tmp345, <variable>.Idx2Apc
	add	r0, r0, #4	@ ivtmp.5564, ivtmp.5564,
	add	r8, r7, r2	@ tmp343, tmp345, tmp343
	ldr	ip, [r4, r8, asl #2]	@ D.43666, <variable>.APC.poc
	cmp	ip, lr	@ D.43666, temp.5659
	bgt	.L1620	@,
.L1621:
	add	r1, r1, #1	@ i.5628, i.5628,
	movw	r2, #:lower16:490200	@ tmp343,
	cmp	r1, r3	@ i.5628, D.43656
	movt	r2, #:upper16:490200	@ tmp343,
	bcc	.L1622	@,
	mov	r0, #1	@ IsLowDelay,
.L1619:
	movw	ip, #:lower16:2125363	@ tmp352,
	movt	ip, #:upper16:2125363	@ tmp352,
	strb	r0, [r5, #24]	@ IsLowDelay, <variable>.IsLowDelay
	movw	r0, #:lower16:2129104	@ tmp355,
	ldrb	sl, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.dependent_slice_segment_flag, <variable>.CurrSlice.dependent_slice_segment_flag
	movt	r0, #:upper16:2129104	@ tmp355,
	movw	r2, #:lower16:2129058	@ tmp357,
	movt	r2, #:upper16:2129058	@ tmp357,
	movw	lr, #:lower16:2129128	@ tmp360,
	movt	lr, #:upper16:2129128	@ tmp360,
	strb	sl, [r5, #25]	@ <variable>.CurrSlice.dependent_slice_segment_flag, <variable>.dependent_slice_segment_flag
	movw	r3, #:lower16:2129108	@ tmp362,
	ldr	r0, [r4, r0]	@ <variable>.IndependentSlice.slice_qp, <variable>.IndependentSlice.slice_qp
	movt	r3, #:upper16:2129108	@ tmp362,
	str	r0, [r5, #28]	@ <variable>.IndependentSlice.slice_qp, <variable>.SliceQpY
	ldrb	r9, [r4, r2]	@ zero_extendqisi2	@ <variable>.IndependentSlice.cabac_init_flag, <variable>.IndependentSlice.cabac_init_flag
	strb	r9, [r5, #32]	@ <variable>.IndependentSlice.cabac_init_flag, <variable>.cabac_init_flag
	ldr	r1, [r4, lr]	@ <variable>.IndependentSlice.slice_segment_address, <variable>.IndependentSlice.slice_segment_address
	str	r1, [r5, #36]	@ <variable>.IndependentSlice.slice_segment_address, <variable>.IndependentSliceSegmentAddr
	ldr	r3, [r4, r3]	@ temp.5630, <variable>.IndependentSlice.slice_type
	cmp	r3, #0	@ temp.5630,
	beq	.L1662	@,
	cmp	r3, #1	@ temp.5630,
	movne	r0, #0	@,
	strne	r0, [fp, #-124]	@, %sfp
	beq	.L1624	@,
.L1625:
	ldr	lr, [fp, #-124]	@, %sfp
	movw	r7, #:lower16:2129160	@ tmp379,
	movt	r7, #:upper16:2129160	@ tmp379,
	movw	r8, #:lower16:2129059	@ tmp381,
	movt	r8, #:upper16:2129059	@ tmp381,
	movw	r9, #:lower16:2129164	@ tmp384,
	str	lr, [r5, #40]	@, <variable>.ColPicApc
	movt	r9, #:upper16:2129164	@ tmp384,
	ldr	sl, [r4, r7]	@ <variable>.IndependentSlice.collocated_ref_idx, <variable>.IndependentSlice.collocated_ref_idx
	movw	ip, #:lower16:2129216	@ tmp386,
	movt	ip, #:upper16:2129216	@ tmp386,
	movw	r3, #:lower16:2129220	@ tmp389,
	movt	r3, #:upper16:2129220	@ tmp389,
	movw	r7, #:lower16:2129055	@ tmp392,
	str	sl, [r5, #48]	@ <variable>.IndependentSlice.collocated_ref_idx, <variable>.collocated_ref_idx
	movt	r7, #:upper16:2129055	@ tmp392,
	ldrb	r0, [r4, r8]	@ zero_extendqisi2	@ <variable>.IndependentSlice.collocated_from_l0_flag, <variable>.IndependentSlice.collocated_from_l0_flag
	movw	r8, #:lower16:2129057	@ tmp395,
	movt	r8, #:upper16:2129057	@ tmp395,
	strb	r0, [r5, #52]	@ <variable>.IndependentSlice.collocated_from_l0_flag, <variable>.collocated_from_l0_flag
	ldr	r1, [r4, r9]	@ <variable>.IndependentSlice.max_num_merge_cand, <variable>.IndependentSlice.max_num_merge_cand
	movw	r9, #:lower16:2129208	@ tmp398,
	movt	r9, #:upper16:2129208	@ tmp398,
	str	r1, [r5, #44]	@ <variable>.IndependentSlice.max_num_merge_cand, <variable>.MaxNumMergeCand
	ldr	r2, [r4, ip]	@ D.43692, <variable>.IndependentSlice.num_ref_idx
	movw	ip, #:lower16:2129212	@ tmp400,
	movt	ip, #:upper16:2129212	@ tmp400,
	cmp	r2, #0	@ D.43692,
	subne	r2, r2, #1	@ tmp387, D.43692,
	str	r2, [r5, #60]	@ D.43692, <variable>.num_ref_idx_l0_active_minus1
	ldr	lr, [r4, r3]	@ D.43697, <variable>.IndependentSlice.num_ref_idx
	cmp	lr, #0	@ D.43697,
	subne	lr, lr, #1	@ tmp390, D.43697,
	str	lr, [r5, #56]	@ D.43697, <variable>.num_ref_idx_l1_active_minus1
	ldrb	sl, [r4, r7]	@ zero_extendqisi2	@ <variable>.IndependentSlice.slice_temporal_mvp_enable_flag, <variable>.IndependentSlice.slice_temporal_mvp_enable_flag
	movw	r7, #:lower16:2129108	@ tmp402,
	movt	r7, #:upper16:2129108	@ tmp402,
	strb	sl, [r5, #64]	@ <variable>.IndependentSlice.slice_temporal_mvp_enable_flag, <variable>.slice_temporal_mvp_enabled_flag
	movw	sl, #:lower16:2044616	@ tmp407,
	ldrb	r0, [r4, r8]	@ zero_extendqisi2	@ <variable>.IndependentSlice.mvd_l1_zero_flag, <variable>.IndependentSlice.mvd_l1_zero_flag
	movw	r8, #:lower16:2125440	@ tmp404,
	movt	r8, #:upper16:2125440	@ tmp404,
	movt	sl, #:upper16:2044616	@ tmp407,
	strb	r0, [r5, #65]	@ <variable>.IndependentSlice.mvd_l1_zero_flag, <variable>.mvd_l1_zero_flag
	ldr	r1, [r4, r9]	@ <variable>.IndependentSlice.listXsize, <variable>.IndependentSlice.listXsize
	movw	r9, #:lower16:2129061	@,
	movt	r9, #:upper16:2129061	@,
	str	r1, [r5, #68]	@ <variable>.IndependentSlice.listXsize, <variable>.listXsize
	ldr	r2, [r4, ip]	@ <variable>.IndependentSlice.listXsize, <variable>.IndependentSlice.listXsize
	str	r2, [r5, #72]	@ <variable>.IndependentSlice.listXsize, <variable>.listXsize
	ldr	r3, [r4, r7]	@ <variable>.IndependentSlice.slice_type, <variable>.IndependentSlice.slice_type
	str	r3, [r5, #76]	@ <variable>.IndependentSlice.slice_type, <variable>.SliceType
	ldr	lr, [r4, r8]	@ <variable>.CurrSlice.slice_segment_address, <variable>.CurrSlice.slice_segment_address
	str	lr, [r5, #80]	@ <variable>.CurrSlice.slice_segment_address, <variable>.slice_segment_address
	ldr	r0, [r4, r8]	@, <variable>.CurrSlice.slice_segment_address
	ldr	r1, [r4, sl]	@, <variable>.CurrSPS.ctb_num_width
	bl	__aeabi_uidivmod	@
	str	r1, [r5, #84]	@, <variable>.SliceSegmentAddressX
	ldr	r1, [r4, sl]	@, <variable>.CurrSPS.ctb_num_width
	movw	sl, #:lower16:2129053	@ tmp434,
	ldr	r0, [r4, r8]	@, <variable>.CurrSlice.slice_segment_address
	movt	sl, #:upper16:2129053	@ tmp434,
	bl	__aeabi_uidiv	@
	str	r0, [r5, #88]	@, <variable>.SliceSegmentAddressY
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [r4, r8]	@, <variable>.CurrSlice.slice_segment_address
	movw	r8, #:lower16:2129172	@ tmp423,
	bl	HEVC_CtbRsAddrToTsAddr	@
	movt	r8, #:upper16:2129172	@ tmp423,
	str	r9, [fp, #-128]	@, %sfp
	movw	r9, #:lower16:2129062	@,
	movt	r9, #:upper16:2129062	@,
	str	r9, [fp, #-112]	@, %sfp
	movw	ip, #:lower16:2129176	@ tmp425,
	movt	ip, #:upper16:2129176	@ tmp425,
	movw	r1, #:lower16:2129184	@ tmp427,
	movt	r1, #:upper16:2129184	@ tmp427,
	movw	r2, #:lower16:2129180	@ tmp429,
	movt	r2, #:upper16:2129180	@ tmp429,
	movw	r3, #:lower16:2129054	@ tmp431,
	movt	r3, #:upper16:2129054	@ tmp431,
	movw	r9, #:lower16:2117114	@,
	movt	r9, #:upper16:2117114	@,
	str	r0, [r5, #92]	@, <variable>.SliceSegmentTileAddress
	ldr	r0, [r4, r8]	@ <variable>.IndependentSlice.slice_cb_qp_offset, <variable>.IndependentSlice.slice_cb_qp_offset
	str	r0, [r5, #96]	@ <variable>.IndependentSlice.slice_cb_qp_offset, <variable>.slice_cb_qp_offset
	ldr	r0, [r4, ip]	@ <variable>.IndependentSlice.slice_cr_qp_offset, <variable>.IndependentSlice.slice_cr_qp_offset
	str	r0, [r5, #100]	@ <variable>.IndependentSlice.slice_cr_qp_offset, <variable>.slice_cr_qp_offset
	ldr	ip, [r4, r1]	@ <variable>.IndependentSlice.slice_tc_offset_div2, <variable>.IndependentSlice.slice_tc_offset_div2
	str	ip, [r5, #104]	@ <variable>.IndependentSlice.slice_tc_offset_div2, <variable>.slice_tc_offset_div2
	ldr	r2, [r4, r2]	@ <variable>.IndependentSlice.slice_beta_offset_div2, <variable>.IndependentSlice.slice_beta_offset_div2
	str	r2, [r5, #108]	@ <variable>.IndependentSlice.slice_beta_offset_div2, <variable>.slice_beta_offset_div2
	ldrb	r1, [r4, r3]	@ zero_extendqisi2	@ <variable>.IndependentSlice.slice_sao_chroma_flag, <variable>.IndependentSlice.slice_sao_chroma_flag
	strb	r1, [r5, #112]	@ <variable>.IndependentSlice.slice_sao_chroma_flag, <variable>.slice_sao_chroma_flag
	ldrb	r0, [r4, sl]	@ zero_extendqisi2	@ <variable>.IndependentSlice.slice_sao_luma_flag, <variable>.IndependentSlice.slice_sao_luma_flag
	strb	r0, [r5, #113]	@ <variable>.IndependentSlice.slice_sao_luma_flag, <variable>.slice_sao_luma_flag
	ldr	r3, [fp, #-128]	@, %sfp
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.IndependentSlice.slice_disable_deblocking_filter_flag, <variable>.IndependentSlice.slice_disable_deblocking_filter_flag
	strb	ip, [r5, #114]	@ <variable>.IndependentSlice.slice_disable_deblocking_filter_flag, <variable>.slice_deblocking_filter_disabled_flag
	ldr	r1, [fp, #-112]	@, %sfp
	ldrb	r0, [r4, r1]	@ zero_extendqisi2	@ <variable>.IndependentSlice.slice_loop_filter_across_slices_enabled_flag, <variable>.IndependentSlice.slice_loop_filter_across_slices_enabled_flag
	strb	r0, [r5, #115]	@ <variable>.IndependentSlice.slice_loop_filter_across_slices_enabled_flag, <variable>.slice_loop_filter_across_slices_enabled_flag
	ldrb	r3, [r4, r9]	@ zero_extendqisi2	@ <variable>.CurrPPS.weighted_pred_flag, <variable>.CurrPPS.weighted_pred_flag
	cmp	r3, #0	@ <variable>.CurrPPS.weighted_pred_flag,
	beq	.L1630	@,
	ldr	r3, [r4, r7]	@ <variable>.IndependentSlice.slice_type, <variable>.IndependentSlice.slice_type
	cmp	r3, #1	@ <variable>.IndependentSlice.slice_type,
	beq	.L1631	@,
.L1630:
	movw	r1, #:lower16:2117115	@ tmp447,
	movt	r1, #:upper16:2117115	@ tmp447,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPPS.weighted_bipred_flag, <variable>.CurrPPS.weighted_bipred_flag
	cmp	ip, #1	@ <variable>.CurrPPS.weighted_bipred_flag,
	beq	.L1663	@,
.L1632:
	movw	ip, #:lower16:2129055	@ tmp507,
	movt	ip, #:upper16:2129055	@ tmp507,
	movw	r1, #:lower16:4300592	@ tmp514,
	movw	r3, #:lower16:2133309	@ tmp525,
	ldrb	r9, [r4, ip]	@ zero_extendqisi2	@ <variable>.IndependentSlice.slice_temporal_mvp_enable_flag, <variable>.IndependentSlice.slice_temporal_mvp_enable_flag
	movw	ip, #:lower16:1960196	@ tmp521,
	movt	ip, #:upper16:1960196	@ tmp521,
	movt	r1, #:upper16:4300592	@ tmp514,
	cmp	r9, #0	@ <variable>.IndependentSlice.slice_temporal_mvp_enable_flag,
	movt	r3, #:upper16:2133309	@ tmp525,
	subne	r2, fp, #44	@,,
	ldrne	r8, [fp, #-124]	@, %sfp
	addne	r9, r2, r8, asl #2	@, tmp511,,,
	mov	r2, #0	@ tmp524,
	ldrne	r9, [r9, #-64]	@ tmp513, Apc2MvAddr
	strne	r9, [r5, #548]	@ tmp513, <variable>.Apc2MvAddr
	ldr	r9, [fp, #-120]	@, %sfp
	ldr	r0, [r4, ip]	@ <variable>.pCurrNal, <variable>.pCurrNal
	rsb	r6, r6, r9	@ tmp517, D.43621,
	add	r6, r4, r6, asl #2	@, tmp519, pHevcCtx, tmp517,
	str	r0, [r6, r1]	@ <variable>.pCurrNal, <variable>.slice_nal
	ldrb	r0, [r4, r3]	@ zero_extendqisi2	@ <variable>.DecPicPara.tiles_enabled_flag, <variable>.DecPicPara.tiles_enabled_flag
	str	r2, [r4, ip]	@ tmp524, <variable>.pCurrNal
	cmp	r0, r2	@ <variable>.DecPicPara.tiles_enabled_flag,
	beq	.L1601	@,
	ldr	r3, [r4, #208]	@ <variable>.TotalSliceNum, <variable>.TotalSliceNum
	cmp	r3, #1	@ <variable>.TotalSliceNum,
	beq	.L1664	@,
	sub	r2, r3, #-536870910	@ tmp529, <variable>.TotalSliceNum,
	movw	r1, #:lower16:2356836	@ tmp533,
	movt	r1, #:upper16:2356836	@ tmp533,
	ldr	r0, [r5, #92]	@ <variable>.SliceSegmentTileAddress, <variable>.SliceSegmentTileAddress
	add	ip, r4, r2, asl #3	@, tmp532, pHevcCtx, tmp529,
	movw	r2, #:lower16:294603	@ tmp536,
	add	r1, ip, r1	@ tmp533, tmp532, tmp533
	movt	r2, #:upper16:294603	@ tmp536,
	add	r2, r3, r2	@ tmp536, <variable>.TotalSliceNum, tmp536
	sub	r0, r0, #1	@ tmp535, <variable>.SliceSegmentTileAddress,
	str	r0, [r1, #8]	@ tmp535, <variable>.DecPicPara.SliceGroup
	ldr	r1, [r5, #92]	@ <variable>.SliceSegmentTileAddress, <variable>.SliceSegmentTileAddress
	add	ip, r4, r2, asl #3	@, tmp541, pHevcCtx, tmp536,
	str	r1, [ip, #8]	@ <variable>.SliceSegmentTileAddress, <variable>.DecPicPara.SliceGroup
.L1636:
	movw	r1, #:lower16:2133112	@ tmp553,
	movt	r1, #:upper16:2133112	@ tmp553,
	movw	r2, #:lower16:2133108	@ tmp550,
	movt	r2, #:upper16:2133108	@ tmp550,
	ldr	ip, [r4, r1]	@ <variable>.DecPicPara.PicWidthInCtbsYMinus1, <variable>.DecPicPara.PicWidthInCtbsYMinus1
	sub	r0, r3, #-536870911	@ tmp544, <variable>.TotalSliceNum,
	ldr	r1, [r4, r2]	@ <variable>.DecPicPara.PicHightInCtbsYMinus1, <variable>.DecPicPara.PicHightInCtbsYMinus1
	movw	r3, #:lower16:2356836	@ tmp549,
	add	r2, ip, #1	@ tmp554, <variable>.DecPicPara.PicWidthInCtbsYMinus1,
	add	r4, r4, r0, asl #3	@, tmp548, pHevcCtx, tmp544,
	movt	r3, #:upper16:2356836	@ tmp549,
	mov	r0, #0	@ D.43607,
	mla	ip, r1, r2, r2	@ tmp556, <variable>.DecPicPara.PicHightInCtbsYMinus1, tmp554, tmp554
	add	r3, r4, r3	@ tmp549, tmp548, tmp549
	sub	r1, ip, #1	@ tmp557, tmp556,
	str	r1, [r3, #8]	@ tmp557, <variable>.DecPicPara.SliceGroup
.L1601:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1662:
	movw	r7, #:lower16:2129059	@ tmp363,
	movt	r7, #:upper16:2129059	@ tmp363,
	ldrb	r8, [r4, r7]	@ zero_extendqisi2	@ <variable>.IndependentSlice.collocated_from_l0_flag, <variable>.IndependentSlice.collocated_from_l0_flag
	cmp	r8, #0	@ <variable>.IndependentSlice.collocated_from_l0_flag,
	bne	.L1624	@,
	movw	r9, #:lower16:2129160	@ tmp367,
	movt	r9, #:upper16:2129160	@ tmp367,
	ldr	lr, [r4, r9]	@ <variable>.IndependentSlice.collocated_ref_idx, <variable>.IndependentSlice.collocated_ref_idx
	add	r1, r5, lr, asl #2	@, tmp370, pCurrSlicePara, <variable>.IndependentSlice.collocated_ref_idx,
	ldr	r3, [r1, #420]	@, <variable>.Idx2Apc
	str	r3, [fp, #-124]	@, %sfp
	b	.L1625	@
.L1624:
	movw	ip, #:lower16:2129160	@ tmp374,
	movt	ip, #:upper16:2129160	@ tmp374,
	ldr	sl, [r4, ip]	@ <variable>.IndependentSlice.collocated_ref_idx, <variable>.IndependentSlice.collocated_ref_idx
	add	r0, r5, sl, asl #2	@, tmp377, pCurrSlicePara, <variable>.IndependentSlice.collocated_ref_idx,
	ldr	r2, [r0, #356]	@, <variable>.Idx2Apc
	str	r2, [fp, #-124]	@, %sfp
	b	.L1625	@
.L1661:
	movw	lr, #:lower16:2129048	@,
	movw	r8, #:lower16:2125360	@,
	movt	lr, #:upper16:2129048	@,
	movt	r8, #:upper16:2125360	@,
	add	r0, r4, lr	@, pHevcCtx,
	add	r1, r4, r8	@, pHevcCtx,
	movw	r2, #3688	@,
	bl	memcpy	@
	b	.L1609	@
.L1663:
	movw	r0, #:lower16:2129108	@ tmp449,
	movt	r0, #:upper16:2129108	@ tmp449,
	ldr	r9, [r4, r0]	@ <variable>.IndependentSlice.slice_type, <variable>.IndependentSlice.slice_type
	cmp	r9, #0	@ <variable>.IndependentSlice.slice_type,
	bne	.L1632	@,
.L1631:
	movw	ip, #:lower16:2130616	@ tmp451,
	movt	ip, #:upper16:2130616	@ tmp451,
	movw	sl, #:lower16:2131584	@ tmp453,
	movt	sl, #:upper16:2131584	@ tmp453,
	ldr	r2, [r4, ip]	@ <variable>.IndependentSlice.pred_weight_table.luma_log2_weight_denom, <variable>.IndependentSlice.pred_weight_table.luma_log2_weight_denom
	movw	r1, #:lower16:2131588	@ tmp456,
	movt	r1, #:upper16:2131588	@ tmp456,
	add	r0, r4, #2129920	@ tmp461, pHevcCtx,
	add	r7, r4, r1	@ tmp456, pHevcCtx, tmp456
	add	ip, r0, #884	@ tmp461, tmp461,
	str	r2, [r5, #564]	@ <variable>.IndependentSlice.pred_weight_table.luma_log2_weight_denom, <variable>.luma_log2_weight_denom
	add	lr, r5, #572	@ tmp455, pCurrSlicePara,
	ldr	r8, [r4, sl]	@ <variable>.IndependentSlice.pred_weight_table.chroma_log2_weight_denom, <variable>.IndependentSlice.pred_weight_table.chroma_log2_weight_denom
	add	sl, r5, #692	@ tmp460, pCurrSlicePara,
	str	r8, [r5, #568]	@ <variable>.IndependentSlice.pred_weight_table.chroma_log2_weight_denom, <variable>.chroma_log2_weight_denom
	mov	r8, lr	@ tmp458, tmp455
	ldmia	r7!, {r0, r1, r2, r3}	@ tmp459,,,,
	mov	lr, sl	@ tmp463, tmp460
	mov	r9, r7	@ tmp596, tmp459
	stmia	r8!, {r0, r1, r2, r3}	@ tmp458,,,,
	mov	r7, r8	@ tmp597, tmp458
	ldmia	r9!, {r0, r1, r2, r3}	@ tmp596,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ tmp597,,,,
	ldmia	r9!, {r0, r1, r2, r3}	@ tmp598,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ tmp597,,,,
	ldmia	r9, {r0, r1, r2}	@ tmp598,,,
	stmia	r7, {r0, r1, r2}	@ tmp599,,,
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp464,,,,
	stmia	lr!, {r0, r1, r2, r3}	@ tmp463,,,,
	mov	r7, lr	@ tmp601, tmp463
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp600,,,,
	add	lr, r4, #2129920	@, pHevcCtx,
	stmia	r7!, {r0, r1, r2, r3}	@ tmp601,,,,
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp602,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ tmp601,,,,
	ldmia	ip, {r0, r1, r2}	@ tmp602,,,
	stmia	r7, {r0, r1, r2}	@ tmp603,,,
	add	r1, lr, #1728	@,,
	mov	r2, #120	@,
	add	r0, r5, #812	@, pCurrSlicePara,
	bl	memcpy	@
	add	r1, r5, #1040	@, pCurrSlicePara,
	movw	ip, #:lower16:2131768	@,
	movt	ip, #:upper16:2131768	@,
	add	r0, r1, #12	@,,
	mov	r2, #120	@,
	add	r1, r4, ip	@, pHevcCtx,
	bl	memcpy	@
	movw	r3, #:lower16:2129108	@ tmp480,
	movt	r3, #:upper16:2129108	@ tmp480,
	ldr	r2, [r4, r3]	@ <variable>.IndependentSlice.slice_type, <variable>.IndependentSlice.slice_type
	cmp	r2, #0	@ <variable>.IndependentSlice.slice_type,
	bne	.L1632	@,
	add	sl, r4, #2129920	@ tmp483, pHevcCtx,
	add	lr, r5, #632	@ tmp482, pCurrSlicePara,
	add	r9, sl, #1968	@ tmp483, tmp483,
	movw	r8, #:lower16:2131284	@ tmp488,
	movt	r8, #:upper16:2131284	@ tmp488,
	add	sl, r5, #752	@ tmp487, pCurrSlicePara,
	ldmia	r9!, {r0, r1, r2, r3}	@ tmp486,,,,
	add	ip, r4, r8	@ tmp488, pHevcCtx, tmp488
	mov	r8, lr	@ tmp485, tmp482
	mov	lr, r9	@ tmp604, tmp486
	mov	r9, sl	@ tmp490, tmp487
	stmia	r8!, {r0, r1, r2, r3}	@ tmp485,,,,
	mov	r7, r8	@ tmp605, tmp485
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp604,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ tmp605,,,,
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp606,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ tmp605,,,,
	ldmia	lr, {r0, r1, r2}	@ tmp606,,,
	movw	lr, #:lower16:2131948	@,
	movt	lr, #:upper16:2131948	@,
	stmia	r7, {r0, r1, r2}	@ tmp607,,,
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp491,,,,
	stmia	r9!, {r0, r1, r2, r3}	@ tmp490,,,,
	mov	r7, r9	@ tmp609, tmp490
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp608,,,,
	add	r9, r5, #1168	@, pCurrSlicePara,
	stmia	r7!, {r0, r1, r2, r3}	@ tmp609,,,,
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp610,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ tmp609,,,,
	ldmia	ip, {r0, r1, r2}	@ tmp610,,,
	stmia	r7, {r0, r1, r2}	@ tmp611,,,
	add	r1, r4, lr	@, pHevcCtx,
	mov	r2, #120	@,
	add	r0, r5, #932	@, pCurrSlicePara,
	bl	memcpy	@
	movw	r3, #:lower16:2132068	@,
	movt	r3, #:upper16:2132068	@,
	add	r0, r9, #4	@,,
	add	r1, r4, r3	@, pHevcCtx,
	mov	r2, #120	@,
	bl	memcpy	@
	b	.L1632	@
.L1620:
	mov	r0, #0	@ IsLowDelay,
	b	.L1619	@
.L1664:
	ldr	r0, [r5, #92]	@ <variable>.SliceSegmentTileAddress, <variable>.SliceSegmentTileAddress
	movw	r2, #:lower16:2356840	@ tmp527,
	movt	r2, #:upper16:2356840	@ tmp527,
	str	r0, [r4, r2]	@ <variable>.SliceSegmentTileAddress, <variable>.DecPicPara.SliceGroup
	b	.L1636	@
.L1659:
	ldr	r1, [r4, #200]	@ <variable>.NumSlicePara, <variable>.NumSlicePara
	mvn	r0, #0	@ D.43607,
	ldr	r2, [r4, #164]	@ <variable>.CurrMsgSlotNum, <variable>.CurrMsgSlotNum
.L1658:
	ldr	ip, [r4, #208]	@ <variable>.TotalSliceNum, <variable>.TotalSliceNum
	add	r1, r1, r0	@ tmp183, <variable>.NumSlicePara,
	add	r2, r2, r0	@ tmp185, <variable>.CurrMsgSlotNum,
	str	r1, [r4, #200]	@ tmp183, <variable>.NumSlicePara
	add	r3, ip, r0	@ tmp187, <variable>.TotalSliceNum,
	str	r2, [r4, #164]	@ tmp185, <variable>.CurrMsgSlotNum
	str	r3, [r4, #208]	@ tmp187, <variable>.TotalSliceNum
	b	.L1601	@
.L1660:
	mov	r2, r5	@, temp.5600
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC218	@,
	movt	r1, #:upper16:.LC218	@,
	bl	dprint_vfmw	@
	ldr	r1, [r4, #200]	@ <variable>.NumSlicePara, <variable>.NumSlicePara
	ldr	r2, [r4, #164]	@ <variable>.CurrMsgSlotNum, <variable>.CurrMsgSlotNum
	mvn	r0, #0	@ D.43607,
	b	.L1658	@
	.fnend
	.size	HEVC_WriteSliceMsg, .-HEVC_WriteSliceMsg
	.align	2
	.global	HEVC_Sei_Payload_Extension_Present
	.type	HEVC_Sei_Payload_Extension_Present, %function
HEVC_Sei_Payload_Extension_Present:
	.fnstart
.LFB1556:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:1960172	@ tmp142,
	movt	r5, #:upper16:1960172	@ tmp142,
	sub	r4, fp, #60	@ tmp158,,
	ldr	r6, [r0, r5]	@ <variable>.pBS, <variable>.pBS
	mov	r5, r1, asl #3	@ D.40857, payloadSize,
	mov	ip, r4	@ tmp143, tmp158
	ldmia	r6!, {r0, r1, r2, r3}	@ <variable>.pBS,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ tmp143,,,,
	ldmia	r6, {r0, r1, r2, r3}	@ <variable>.pBS,,,,
	stmia	ip, {r0, r1, r2, r3}	@ tmp143,,,,
	ldr	r1, [fp, #-32]	@ Bs.HistoryPos, Bs.HistoryPos
	ldr	r2, [fp, #-36]	@ Bs.TotalPos, Bs.TotalPos
	rsb	r3, r1, r2	@ tmp145, Bs.HistoryPos, Bs.TotalPos
	cmp	r3, r5	@ tmp145, D.40857
	movcs	r0, #0	@ D.40867,
	bcc	.L1673	@,
.L1667:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L1673:
	mov	r0, r4	@, tmp158
	mov	r1, #1	@,
	bl	BsShow	@
	cmp	r0, #0	@,
	moveq	r0, #1	@ D.40867,
	beq	.L1667	@,
	mov	r0, r4	@, tmp158
	mov	r1, #1	@,
	bl	BsSkip	@
	ldr	r0, [fp, #-32]	@ Bs.HistoryPos, Bs.HistoryPos
	ldr	r6, [fp, #-36]	@ Bs.TotalPos, Bs.TotalPos
	rsb	r6, r0, r6	@ pos, Bs.HistoryPos, Bs.TotalPos
	b	.L1669	@
.L1674:
	cmp	r6, r5	@ pos, D.40857
	bcs	.L1670	@,
	bl	BsSkip	@
	ldr	r3, [fp, #-32]	@ Bs.HistoryPos, Bs.HistoryPos
	ldr	r1, [fp, #-36]	@ Bs.TotalPos, Bs.TotalPos
	rsb	r6, r3, r1	@ pos, Bs.HistoryPos, Bs.TotalPos
.L1669:
	mov	r1, #1	@,
	mov	r0, r4	@, tmp158
	bl	BsShow	@
	mov	r1, #1	@,
	cmp	r0, #0	@,
	mov	r0, r4	@, tmp158
	beq	.L1674	@,
.L1670:
	cmp	r5, r6	@ D.40857, pos
	movls	r0, #0	@, D.40867
	movhi	r0, #1	@, D.40867
	b	.L1667	@
	.fnend
	.size	HEVC_Sei_Payload_Extension_Present, .-HEVC_Sei_Payload_Extension_Present
	.align	2
	.global	HEVC_MoreRbspData
	.type	HEVC_MoreRbspData, %function
HEVC_MoreRbspData:
	.fnstart
.LFB1659:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:1960172	@ tmp137,
	movt	r3, #:upper16:1960172	@ tmp137,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r0, [r0, r3]	@, <variable>.pBS
	bl	BsResidBits	@
	cmp	r0, #0	@ bitsLeft
	movle	r0, #0	@ ret,
	ldmlefd	sp, {r3, r4, fp, sp, pc}	@
	movw	lr, #:lower16:1960196	@ tmp140,
	movt	lr, #:upper16:1960196	@ tmp140,
	ldr	ip, [r4, lr]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [ip, #12]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	add	r1, r2, #3	@ tmp141, <variable>.nal_trail_zero_bit_num,
	cmp	r0, r1	@ bitsLeft, tmp141
	movls	r0, #0	@, ret
	movhi	r0, #1	@, ret
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	HEVC_MoreRbspData, .-HEVC_MoreRbspData
	.align	2
	.global	HEVC_ProcessPPS
	.type	HEVC_ProcessPPS, %function
HEVC_ProcessPPS:
	.fnstart
.LFB1550:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:1960172	@ tmp248,
	movt	r7, #:upper16:1960172	@ tmp248,
	mov	r5, r1	@ pPPS, pPPS
	mov	r8, #1	@ tmp244,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	strb	r8, [r1, #16]	@ tmp244, <variable>.loop_filter_across_tiles_enabled_flag
	str	r8, [r1, #68]	@ tmp244, <variable>.num_tile_columns
	movw	r1, #:lower16:.LC219	@,
	str	r8, [r5, #72]	@ tmp244, <variable>.num_tile_rows
	movt	r1, #:upper16:.LC219	@,
	ldr	r0, [r0, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #0	@ D.40313,
	mov	r2, r0	@ D.40313,
	str	r0, [r5, #32]	@ D.40313, <variable>.seq_parameter_set_id
	blt	.L1680	@,
	ldr	r3, [r4, #156]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	cmp	r0, r3	@ D.40313, <variable>.MaxPpsNum
	bge	.L1680	@,
	movw	ip, #:lower16:1960180	@ tmp253,
	movt	ip, #:upper16:1960180	@ tmp253,
	movw	r6, #36364	@ tmp255,
	ldr	r1, [r4, ip]	@ <variable>.pSPS, <variable>.pSPS
	mla	r6, r6, r0, r1	@ D.40325, tmp255, D.40313, <variable>.pSPS
	ldrb	r0, [r6, #1]	@ zero_extendqisi2	@ <variable>.valid, <variable>.valid
	cmp	r0, #0	@ <variable>.valid,
	beq	.L1812	@,
	mov	r1, r8	@, tmp244
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC222	@,
	movt	r2, #:upper16:.LC222	@,
	bl	HEVC_u_v	@
	mov	r1, r8	@, tmp244
	movw	r2, #:lower16:.LC223	@,
	movt	r2, #:upper16:.LC223	@,
	strb	r0, [r5, #2]	@, <variable>.dependent_slice_segments_enabled_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #3	@,
	movw	r2, #:lower16:.LC224	@,
	movt	r2, #:upper16:.LC224	@,
	strb	r0, [r5, #4]	@, <variable>.output_flag_present_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, r8	@, tmp244
	movw	r2, #:lower16:.LC225	@,
	movt	r2, #:upper16:.LC225	@,
	str	r0, [r5, #36]	@, <variable>.num_extra_slice_header_bits
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, r8	@, tmp244
	movw	r2, #:lower16:.LC226	@,
	movt	r2, #:upper16:.LC226	@,
	strb	r0, [r5, #3]	@, <variable>.sign_data_hiding_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC227	@,
	movt	r1, #:upper16:.LC227	@,
	strb	r0, [r5, #5]	@, <variable>.cabac_init_present_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	add	r2, r0, #1	@ D.40346,,
	str	r2, [r5, #40]	@ D.40346, <variable>.num_ref_idx_l0_default_active
	cmp	r2, #15	@ D.40346,
	bhi	.L1813	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC229	@,
	movt	r1, #:upper16:.LC229	@,
	bl	HEVC_ue_v	@
	add	r3, r0, #1	@ D.40355,,
	str	r3, [r5, #44]	@ D.40355, <variable>.num_ref_idx_l1_default_active
	cmp	r3, #15	@ D.40355,
	bhi	.L1814	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC231	@,
	movt	r1, #:upper16:.LC231	@,
	bl	HEVC_se_v	@
	add	r2, r0, #26	@ D.40364,,
	str	r2, [r5, #48]	@ D.40364, <variable>.pic_init_qp
	ldr	r3, [r6, #104]	@ D.40368, <variable>.qp_bdOffset_y
	rsb	r0, r3, #0	@ tmp289, D.40368
	cmp	r2, r0	@ D.40364, tmp289
	blt	.L1686	@,
	cmp	r2, #51	@ D.40364,
	bgt	.L1686	@,
	mov	r1, r8	@, tmp244
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC233	@,
	movt	r2, #:upper16:.LC233	@,
	bl	HEVC_u_v	@
	mov	r1, r8	@, tmp244
	movw	r2, #:lower16:.LC234	@,
	movt	r2, #:upper16:.LC234	@,
	strb	r0, [r5, #6]	@, <variable>.constrained_intra_pred_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, r8	@, tmp244
	movw	r2, #:lower16:.LC235	@,
	movt	r2, #:upper16:.LC235	@,
	strb	r0, [r5, #7]	@, <variable>.transform_skip_enabled_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.40381,
	strb	r0, [r5, #8]	@ D.40381, <variable>.cu_qp_delta_enabled_flag
	cmp	r0, #0	@ D.40381,
	streq	r0, [r5, #52]	@ D.40381, <variable>.diff_cu_qp_delta_depth
	bne	.L1815	@,
.L1690:
	movw	r8, #:lower16:1960172	@ tmp308,
	movt	r8, #:upper16:1960172	@ tmp308,
	str	r0, [r5, #56]	@ D.40389, <variable>.max_cu_qp_delta_depth
	movw	r1, #:lower16:.LC238	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movt	r1, #:upper16:.LC238	@,
	bl	HEVC_se_v	@
	add	r1, r0, #12	@ tmp311, D.40395,
	str	r0, [r5, #60]	@ D.40395, <variable>.pic_cb_qp_offset
	cmp	r1, #24	@ tmp311,
	bhi	.L1816	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r1, #:lower16:.LC240	@,
	movt	r1, #:upper16:.LC240	@,
	bl	HEVC_se_v	@
	add	ip, r0, #12	@ tmp316, D.40403,
	str	r0, [r5, #64]	@ D.40403, <variable>.pic_cr_qp_offset
	cmp	ip, #24	@ tmp316,
	bhi	.L1817	@,
	mov	r1, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC242	@,
	movt	r2, #:upper16:.LC242	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC243	@,
	movt	r2, #:upper16:.LC243	@,
	strb	r0, [r5, #9]	@, <variable>.pic_slice_chroma_qp_offsets_present_flag
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC244	@,
	movt	r2, #:upper16:.LC244	@,
	strb	r0, [r5, #10]	@, <variable>.weighted_pred_flag
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC245	@,
	movt	r2, #:upper16:.LC245	@,
	strb	r0, [r5, #11]	@, <variable>.weighted_bipred_flag
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC246	@,
	movt	r2, #:upper16:.LC246	@,
	strb	r0, [r5, #12]	@, <variable>.transquant_bypass_enable_flag
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC247	@,
	movt	r2, #:upper16:.LC247	@,
	strb	r0, [r5, #13]	@, <variable>.tiles_enabled_flag
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldrb	r2, [r5, #13]	@ zero_extendqisi2	@ <variable>.tiles_enabled_flag, <variable>.tiles_enabled_flag
	cmp	r2, #0	@ <variable>.tiles_enabled_flag,
	strb	r0, [r5, #14]	@, <variable>.entropy_coding_sync_enabled_flag
	bne	.L1818	@,
	ldr	r1, [r6, #240]	@ <variable>.ctb_num_width, <variable>.ctb_num_width
	str	r1, [r5, #604]	@ <variable>.ctb_num_width, <variable>.column_bd
	ldr	r2, [r6, #244]	@ <variable>.ctb_num_height, <variable>.ctb_num_height
	str	r2, [r5, #860]	@ <variable>.ctb_num_height, <variable>.row_bd
.L1723:
	ldr	r7, [r5, #68]	@ temp.5873, <variable>.num_tile_columns
	cmp	r7, #0	@ temp.5873,
	ble	.L1722	@,
.L1721:
	ldr	ip, [r6, #160]	@ pretmp.5751, <variable>.max_cu_width
	sub	r3, r7, #1	@ tmp547, temp.5873,
	ldr	lr, [r5, #604]	@ tmp629, <variable>.column_bd
	and	r0, r3, #1	@ tmp549, tmp547,
	mul	r2, lr, ip	@ D.40537, tmp629, pretmp.5751
	cmp	r2, #64	@ D.40537,
	bhi	.L1754	@,
	ldr	lr, [r6, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	cmp	lr, #64	@ <variable>.pic_width_in_luma_samples,
	bhi	.L1791	@,
.L1754:
	mov	r3, #1	@ i.5848,
	cmp	r3, r7	@ i.5848, temp.5873
	add	r1, r5, #4	@ ivtmp.5781, pPPS,
	bge	.L1722	@,
	cmp	r0, #0	@ tmp549,
	beq	.L1725	@,
	ldr	r0, [r1, #604]	@ tmp633, <variable>.column_bd
	mul	r2, r0, ip	@ D.40537, tmp633, pretmp.5751
	cmp	r2, #64	@ D.40537,
	bhi	.L1756	@,
	ldr	lr, [r6, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	cmp	lr, #64	@ <variable>.pic_width_in_luma_samples,
	bhi	.L1791	@,
.L1756:
	add	r3, r3, #1	@ i.5848, i.5848,
	add	r1, r1, #4	@ ivtmp.5781, ivtmp.5781,
	cmp	r3, r7	@ i.5848, temp.5873
	bge	.L1722	@,
.L1725:
	ldr	lr, [r1, #604]	@ tmp457, <variable>.column_bd
	add	r0, r1, #4	@ tmp551, ivtmp.5781,
	add	r3, r3, #1	@ tmp550, i.5848,
	mul	r2, lr, ip	@ D.40537, tmp457, pretmp.5751
	cmp	r2, #64	@ D.40537,
	bhi	.L1724	@,
	ldr	r1, [r6, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	cmp	r1, #64	@ <variable>.pic_width_in_luma_samples,
	bhi	.L1791	@,
.L1724:
	ldr	r2, [r0, #604]	@ tmp624, <variable>.column_bd
	mul	r2, r2, ip	@ D.40537, tmp624, pretmp.5751
	cmp	r2, #64	@ D.40537,
	bhi	.L1759	@,
	ldr	r1, [r6, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	cmp	r1, #64	@ <variable>.pic_width_in_luma_samples,
	bhi	.L1791	@,
.L1759:
	add	r3, r3, #1	@ i.5848, tmp550,
	add	r1, r0, #4	@ ivtmp.5781, tmp551,
	cmp	r3, r7	@ i.5848, temp.5873
	blt	.L1725	@,
.L1722:
	ldr	lr, [r5, #72]	@ temp.5892, <variable>.num_tile_rows
	cmp	lr, #0	@ temp.5892,
	ble	.L1726	@,
	ldr	r0, [r6, #160]	@ D.40536, <variable>.max_cu_width
	ldr	ip, [r5, #860]	@ <variable>.row_bd, <variable>.row_bd
	mul	r2, ip, r0	@ D.40547, <variable>.row_bd, D.40536
	cmp	r2, #63	@ D.40547,
	bls	.L1727	@,
	tst	lr, #1	@ temp.5892,
	mov	r3, r5	@ ivtmp.5776, pPPS
	mov	ip, #0	@ i.5846,
	bne	.L1729	@,
	ldr	r1, [r5, #864]	@ tmp630, <variable>.row_bd
	mov	ip, #1	@ i.5846,
	add	r3, r5, #4	@ ivtmp.5776, pPPS,
	mul	r2, r1, r0	@ D.40547, tmp630, D.40536
	cmp	r2, #63	@ D.40547,
	bhi	.L1729	@,
.L1727:
	movw	r1, #:lower16:.LC263	@,
	movt	r1, #:upper16:.LC263	@,
	mov	r0, #1	@,
.L1808:
	bl	dprint_vfmw	@
.L1810:
	movw	r3, #:lower16:g_event_report	@ tmp465,
	movt	r3, #:upper16:g_event_report	@ tmp465,
	ldr	ip, [r3, #0]	@ g_event_report.5883, g_event_report
	cmp	ip, #0	@ g_event_report.5883,
	mvneq	r0, #0	@ D.40321,
	beq	.L1682	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #102	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.5883
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1730:
	ldr	r2, [r3, #864]	@ tmp463, <variable>.row_bd
	add	r3, r1, #4	@ ivtmp.5776, tmp546,
	mul	r2, r2, r0	@ D.40547, tmp463, D.40536
	cmp	r2, #63	@ D.40547,
	bls	.L1727	@,
	ldr	r2, [r1, #864]	@ tmp631, <variable>.row_bd
	mul	r2, r2, r0	@ D.40547, tmp631, D.40536
	cmp	r2, #63	@ D.40547,
	bls	.L1727	@,
.L1729:
	add	ip, ip, #1	@ tmp545, i.5846,
	add	r1, r3, #4	@ tmp546, ivtmp.5776,
	cmp	ip, lr	@ tmp545, temp.5892
	add	ip, ip, #1	@ i.5846, tmp545,
	blt	.L1730	@,
.L1726:
	movw	r7, #:lower16:1960172	@ tmp467,
	movt	r7, #:upper16:1960172	@ tmp467,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC264	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC264	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC265	@,
	movt	r2, #:upper16:.LC265	@,
	strb	r0, [r5, #17]	@, <variable>.loop_filter_across_slices_enabled_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.40558,
	strb	r0, [r5, #18]	@ D.40558, <variable>.deblocking_filter_control_present_flag
	cmp	r0, #0	@ D.40558,
	bne	.L1819	@,
.L1731:
	movw	r3, #:lower16:1960172	@ tmp495,
	movt	r3, #:upper16:1960172	@ tmp495,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC272	@,
	ldr	r0, [r4, r3]	@, <variable>.pBS
	movt	r2, #:upper16:.LC272	@,
	bl	HEVC_u_v	@
	uxtb	ip, r0	@ D.40589,
	strb	ip, [r5, #21]	@ D.40589, <variable>.pic_scaling_list_data_present_flag
	cmp	ip, #0	@ D.40589,
	beq	.L1733	@,
	add	r1, r5, #1104	@, pPPS,
	mov	r0, r4	@, pHevcCtx
	add	r1, r1, #12	@,,
	bl	HEVC_DecScalingListData	@
	cmp	r0, #0	@,
	bne	.L1820	@,
.L1733:
	movw	r7, #:lower16:1960172	@ tmp502,
	movt	r7, #:upper16:1960172	@ tmp502,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC274	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC274	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC275	@,
	movt	r1, #:upper16:.LC275	@,
	strb	r0, [r5, #22]	@, <variable>.lists_modification_present_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	add	r2, r0, #2	@ D.40603,,
	str	r2, [r5, #84]	@ D.40603, <variable>.log2_parallel_merge_level
	cmp	r2, #1	@ D.40603,
	ble	.L1734	@,
	ldr	r0, [r6, #148]	@ <variable>.log2_ctb_sizeY, <variable>.log2_ctb_sizeY
	cmp	r2, r0	@ D.40603, <variable>.log2_ctb_sizeY
	bhi	.L1734	@,
	mov	r1, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC277	@,
	movt	r2, #:upper16:.LC277	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC278	@,
	movt	r2, #:upper16:.LC278	@,
	strb	r0, [r5, #23]	@, <variable>.slice_segment_header_extension_present_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r2, r0	@ D.40617,
	strb	r2, [r5, #24]	@ D.40617, <variable>.pps_extension_flag
	cmp	r2, #0	@ D.40617,
	bne	.L1789	@,
	b	.L1737	@
.L1738:
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	strb	r0, [r5, #25]	@, <variable>.pps_extension_data_flag
.L1789:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_MoreRbspData	@
	movw	r2, #:lower16:.LC279	@,
	mov	r1, #1	@,
	movt	r2, #:upper16:.LC279	@,
	cmp	r0, #0	@,
	bne	.L1738	@,
.L1737:
	mov	r0, #0	@ D.40321,
.L1682:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1815:
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC236	@,
	movt	r1, #:upper16:.LC236	@,
	bl	HEVC_ue_v	@
	cmp	r0, #3	@ D.40389,
	str	r0, [r5, #52]	@ D.40389, <variable>.diff_cu_qp_delta_depth
	bls	.L1690	@,
	mov	r0, r8	@, tmp244
	movw	r1, #:lower16:.LC237	@,
	movt	r1, #:upper16:.LC237	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1818:
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r1, #:lower16:.LC248	@,
	movt	r1, #:upper16:.LC248	@,
	bl	HEVC_ue_v	@
	cmp	r0, #63	@ D.40432,
	add	r2, r0, #1	@ D.40434, D.40432,
	str	r2, [r5, #68]	@ D.40434, <variable>.num_tile_columns
	bhi	.L1821	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r1, #:lower16:.LC250	@,
	movt	r1, #:upper16:.LC250	@,
	bl	HEVC_ue_v	@
	cmp	r0, #63	@ D.40442,
	add	r2, r0, #1	@ D.40444, D.40442,
	str	r2, [r5, #72]	@ D.40444, <variable>.num_tile_rows
	bhi	.L1822	@,
	ldr	r3, [r5, #68]	@ D.40435, <variable>.num_tile_columns
	cmp	r3, #20	@ D.40435,
	bgt	.L1823	@,
	cmp	r2, #22	@ D.40444,
	bgt	.L1824	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC254	@,
	movt	r2, #:upper16:.LC254	@,
	bl	HEVC_u_v	@
	uxtb	sl, r0	@ D.40465,
	strb	sl, [r5, #15]	@ D.40465, <variable>.uniform_spacing_flag
	cmp	sl, #0	@ D.40465,
	beq	.L1781	@,
	ldr	r7, [r5, #68]	@ temp.5873, <variable>.num_tile_columns
	ldr	r8, [r5, #72]	@ <variable>.num_tile_rows, <variable>.num_tile_rows
.L1699:
	cmp	r7, #0	@ temp.5873,
	ble	.L1711	@,
	tst	r7, #1	@ temp.5873,
	ldr	r9, [r6, #240]	@ prephitmp.5903, <variable>.ctb_num_width
	mov	r3, r5	@ ivtmp.5800, pPPS
	mov	r2, #0	@ i.5862,
	bne	.L1802	@,
	mov	r0, r9	@, prephitmp.5903
	mov	r1, r7	@, temp.5873
	bl	__aeabi_uidiv	@
	mov	r1, r7	@, temp.5873
	mov	r9, r0	@ tmp643,
	mov	r0, #0	@,
	bl	__aeabi_uidiv	@
	add	r3, r5, #4	@ ivtmp.5800, pPPS,
	mov	r2, #1	@ i.5862,
	rsb	ip, r0, r9	@ tmp647,, tmp643
	str	ip, [r5, #604]	@ tmp647, <variable>.column_bd
	ldr	r9, [r6, #240]	@ prephitmp.5903, <variable>.ctb_num_width
.L1802:
	str	r5, [fp, #-52]	@ pPPS, %sfp
	mov	r5, r2	@ i.5862, i.5862
	str	r8, [fp, #-56]	@ <variable>.num_tile_rows, %sfp
	mov	r8, r3	@ ivtmp.5800, ivtmp.5800
	str	r4, [fp, #-48]	@ pHevcCtx, %sfp
	b	.L1712	@
.L1825:
	ldr	lr, [r6, #240]	@ prephitmp.5903, <variable>.ctb_num_width
	mul	r0, r5, lr	@, i.5862, prephitmp.5903
	str	lr, [fp, #-60]	@,
	bl	__aeabi_uidiv	@
	ldr	r1, [fp, #-60]	@,
	mov	r9, r0	@ tmp576,
	mul	r0, r4, r1	@, tmp560, prephitmp.5903
	mov	r1, r7	@, temp.5873
	bl	__aeabi_uidiv	@
	rsb	r4, r0, r9	@ tmp580,, tmp576
	str	r4, [sl, #604]	@ tmp580, <variable>.column_bd
	ldr	r9, [r6, #240]	@ prephitmp.5903, <variable>.ctb_num_width
.L1712:
	add	r4, r5, #1	@ tmp560, i.5862,
	mov	r1, r7	@, temp.5873
	add	sl, r8, #4	@ tmp561, ivtmp.5800,
	mul	r0, r4, r9	@, tmp560, prephitmp.5903
	bl	__aeabi_uidiv	@
	mov	r1, r7	@, temp.5873
	mov	ip, r0	@ tmp378,
	str	ip, [fp, #-60]	@,
	mul	r0, r5, r9	@, i.5862, prephitmp.5903
	bl	__aeabi_uidiv	@
	ldr	r3, [fp, #-60]	@,
	cmp	r7, r4	@ temp.5873, tmp560
	add	r5, r4, #1	@ i.5862, tmp560,
	mov	r1, r7	@, temp.5873
	rsb	r2, r0, r3	@ tmp385,, tmp378
	str	r2, [r8, #604]	@ tmp385, <variable>.column_bd
	add	r8, sl, #4	@ ivtmp.5800, tmp561,
	bgt	.L1825	@,
	ldr	r4, [fp, #-48]	@ pHevcCtx, %sfp
	ldr	r5, [fp, #-52]	@ pPPS, %sfp
	ldr	r8, [fp, #-56]	@ <variable>.num_tile_rows, %sfp
.L1711:
	cmp	r8, #0	@ <variable>.num_tile_rows,
	ble	.L1713	@,
	tst	r8, #1	@ <variable>.num_tile_rows,
	ldr	r9, [r6, #244]	@ prephitmp.5902, <variable>.ctb_num_height
	mov	r3, r5	@ ivtmp.5790, pPPS
	mov	r2, #0	@ i.5863,
	bne	.L1803	@,
	mov	r0, r9	@, prephitmp.5902
	mov	r1, r8	@, <variable>.num_tile_rows
	bl	__aeabi_uidiv	@
	mov	r1, r8	@, <variable>.num_tile_rows
	mov	sl, r0	@ tmp637,
	mov	r0, #0	@,
	bl	__aeabi_uidiv	@
	add	r3, r5, #4	@ ivtmp.5790, pPPS,
	mov	r2, #1	@ i.5863,
	rsb	r9, r0, sl	@ tmp641,, tmp637
	str	r9, [r5, #860]	@ tmp641, <variable>.row_bd
	ldr	r9, [r6, #244]	@ prephitmp.5902, <variable>.ctb_num_height
.L1803:
	str	r5, [fp, #-52]	@ pPPS, %sfp
	mov	r5, r2	@ i.5863, i.5863
	str	r7, [fp, #-56]	@ temp.5873, %sfp
	mov	r7, r3	@ ivtmp.5790, ivtmp.5790
	str	r4, [fp, #-48]	@ pHevcCtx, %sfp
	b	.L1714	@
.L1826:
	ldr	lr, [r6, #244]	@ prephitmp.5902, <variable>.ctb_num_height
	mul	r0, lr, r5	@, prephitmp.5902, i.5863
	str	lr, [fp, #-60]	@,
	bl	__aeabi_uidiv	@
	ldr	r1, [fp, #-60]	@,
	mov	r9, r0	@ tmp585,
	mul	r0, r1, r4	@, prephitmp.5902, tmp555
	mov	r1, r8	@, <variable>.num_tile_rows
	bl	__aeabi_uidiv	@
	rsb	r0, r0, r9	@ tmp589,, tmp585
	str	r0, [sl, #860]	@ tmp589, <variable>.row_bd
	ldr	r9, [r6, #244]	@ prephitmp.5902, <variable>.ctb_num_height
.L1714:
	add	r4, r5, #1	@ tmp555, i.5863,
	mov	r1, r8	@, <variable>.num_tile_rows
	add	sl, r7, #4	@ tmp556, ivtmp.5790,
	mul	r0, r9, r4	@, prephitmp.5902, tmp555
	bl	__aeabi_uidiv	@
	mov	r1, r8	@, <variable>.num_tile_rows
	mov	ip, r0	@ tmp390,
	str	ip, [fp, #-60]	@,
	mul	r0, r9, r5	@, prephitmp.5902, i.5863
	bl	__aeabi_uidiv	@
	ldr	r3, [fp, #-60]	@,
	cmp	r8, r4	@ <variable>.num_tile_rows, tmp555
	add	r5, r4, #1	@ i.5863, tmp555,
	mov	r1, r8	@, <variable>.num_tile_rows
	rsb	r2, r0, r3	@ tmp397,, tmp390
	str	r2, [r7, #860]	@ tmp397, <variable>.row_bd
	add	r7, sl, #4	@ ivtmp.5790, tmp556,
	bgt	.L1826	@,
	ldr	r4, [fp, #-48]	@ pHevcCtx, %sfp
	ldr	r5, [fp, #-52]	@ pPPS, %sfp
	ldr	r7, [fp, #-56]	@ temp.5873, %sfp
.L1713:
	cmp	r7, #1	@ temp.5873,
	bne	.L1720	@,
	cmp	r8, #1	@ <variable>.num_tile_rows,
	beq	.L1721	@,
.L1720:
	movw	r7, #:lower16:1960172	@ tmp451,
	movt	r7, #:upper16:1960172	@ tmp451,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC261	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC261	@,
	bl	HEVC_u_v	@
	strb	r0, [r5, #16]	@, <variable>.loop_filter_across_tiles_enabled_flag
	b	.L1723	@
.L1791:
	movw	r1, #:lower16:.LC262	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC262	@,
	b	.L1808	@
.L1686:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC232	@,
	movt	r1, #:upper16:.LC232	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1781:
	ldr	r7, [r5, #68]	@ temp.5873, <variable>.num_tile_columns
	sub	lr, r7, #1	@ tmp359, temp.5873,
	cmp	lr, #0	@ tmp359,
	ble	.L1700	@,
	mov	r9, r8	@ tmp540, tmp308
	mov	r8, r5	@ ivtmp.5823, pPPS
	b	.L1704	@
.L1701:
	ldr	ip, [r6, #240]	@ prephitmp.5901, <variable>.ctb_num_width
	cmp	r0, ip	@ D.40473, prephitmp.5901
	bhi	.L1702	@,
	ldr	r7, [r5, #68]	@ temp.5873, <variable>.num_tile_columns
	add	sl, sl, #1	@ i.5832, i.5832,
	sub	r3, r7, #1	@ tmp364, temp.5873,
	cmp	r3, sl	@ tmp364, i.5832
	ble	.L1700	@,
.L1704:
	ldr	r0, [r4, r9]	@, <variable>.pBS
	movw	r1, #:lower16:.LC255	@,
	movt	r1, #:upper16:.LC255	@,
	bl	HEVC_ue_v	@
	add	r0, r0, #1	@ D.40473,,
	str	r0, [r8, #92]	@ D.40473, <variable>.column_width
	cmp	r0, #0	@ D.40473,
	add	r8, r8, #4	@ ivtmp.5823, ivtmp.5823,
	bge	.L1701	@,
	ldr	ip, [r6, #240]	@ prephitmp.5901, <variable>.ctb_num_width
.L1702:
	mov	r3, r0	@, D.40473
	mov	r2, sl	@, i.5832
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC256	@,
	movt	r1, #:upper16:.LC256	@,
	str	ip, [sp, #0]	@ prephitmp.5901,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1819:
	mov	r1, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC266	@,
	movt	r2, #:upper16:.LC266	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC267	@,
	movt	r2, #:upper16:.LC267	@,
	strb	r0, [r5, #19]	@, <variable>.deblocking_filter_override_enabled_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r8, r0	@ D.40567,
	strb	r8, [r5, #20]	@ D.40567, <variable>.pic_disable_deblocking_filter_flag
	cmp	r8, #0	@ D.40567,
	bne	.L1731	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC268	@,
	movt	r1, #:upper16:.LC268	@,
	bl	HEVC_se_v	@
	add	r1, r0, #6	@ tmp486, D.40572,
	mov	r2, r0	@ D.40572,
	cmp	r1, #12	@ tmp486,
	str	r0, [r5, #76]	@ D.40572, <variable>.pps_beta_offset_div2
	bhi	.L1827	@,
.L1732:
	movw	lr, #:lower16:1960172	@ tmp489,
	movt	lr, #:upper16:1960172	@ tmp489,
	movw	r1, #:lower16:.LC270	@,
	movt	r1, #:upper16:.LC270	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	HEVC_se_v	@
	add	r3, r0, #6	@ tmp492, D.40580,
	mov	r2, r0	@ D.40580,
	cmp	r3, #12	@ tmp492,
	str	r0, [r5, #80]	@ D.40580, <variable>.pps_tc_offset_div2
	bls	.L1731	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC271	@,
	movt	r1, #:upper16:.LC271	@,
	bl	dprint_vfmw	@
	mov	r2, #0	@ tmp494,
	str	r2, [r5, #80]	@ tmp494, <variable>.pps_tc_offset_div2
	b	.L1731	@
.L1680:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC220	@,
	movt	r1, #:upper16:.LC220	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1812:
	mov	r0, r8	@, tmp244
	movw	r1, #:lower16:.LC221	@,
	movt	r1, #:upper16:.LC221	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1813:
	mov	r0, r8	@, tmp244
	movw	r1, #:lower16:.LC228	@,
	movt	r1, #:upper16:.LC228	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1814:
	mov	r0, r8	@, tmp244
	movw	r1, #:lower16:.LC230	@,
	movt	r1, #:upper16:.LC230	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1700:
	ldr	r8, [r5, #72]	@ <variable>.num_tile_rows, <variable>.num_tile_rows
	sub	r0, r8, #1	@ tmp366, <variable>.num_tile_rows,
	cmp	r0, #0	@ tmp366,
	ble	.L1705	@,
	movw	r9, #:lower16:1960172	@ tmp538,
	mov	r7, r5	@ ivtmp.5818, pPPS
	movt	r9, #:upper16:1960172	@ tmp538,
	mov	sl, #0	@ i,
	b	.L1709	@
.L1706:
	ldr	ip, [r6, #244]	@ prephitmp.5752, <variable>.ctb_num_height
	cmp	r0, ip	@ D.40485, prephitmp.5752
	bhi	.L1828	@,
	ldr	r8, [r5, #72]	@ <variable>.num_tile_rows, <variable>.num_tile_rows
	add	sl, sl, #1	@ i, i,
	sub	r1, r8, #1	@ tmp371, <variable>.num_tile_rows,
	cmp	r1, sl	@ tmp371, i
	ble	.L1829	@,
.L1709:
	ldr	r0, [r4, r9]	@, <variable>.pBS
	movw	r1, #:lower16:.LC257	@,
	movt	r1, #:upper16:.LC257	@,
	bl	HEVC_ue_v	@
	add	r0, r0, #1	@ D.40485,,
	str	r0, [r7, #348]	@ D.40485, <variable>.row_height
	cmp	r0, #0	@ D.40485,
	add	r7, r7, #4	@ ivtmp.5818, ivtmp.5818,
	bge	.L1706	@,
	ldr	ip, [r6, #244]	@ prephitmp.5752, <variable>.ctb_num_height
	mov	r3, r0	@ D.40485, D.40485
.L1707:
	mov	r2, sl	@, i
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC258	@,
	movt	r1, #:upper16:.LC258	@,
	str	ip, [sp, #0]	@ prephitmp.5752,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1816:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC239	@,
	movt	r1, #:upper16:.LC239	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1817:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC241	@,
	movt	r1, #:upper16:.LC241	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1734:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC276	@,
	movt	r1, #:upper16:.LC276	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1829:
	ldr	r7, [r5, #68]	@ temp.5873, <variable>.num_tile_columns
.L1705:
	ldrb	ip, [r5, #15]	@ zero_extendqisi2	@ <variable>.uniform_spacing_flag, <variable>.uniform_spacing_flag
	cmp	ip, #0	@ <variable>.uniform_spacing_flag,
	bne	.L1699	@,
	add	r3, r7, #149	@ tmp398, temp.5873,
	ldr	ip, [r6, #240]	@ <variable>.ctb_num_width, <variable>.ctb_num_width
	sub	r2, r7, #1	@ temp.5868, temp.5873,
	cmp	r2, #0	@ temp.5868,
	add	r3, r5, r3, asl #2	@, tmp402, pPPS, tmp398,
	str	ip, [r3, #4]	@ <variable>.ctb_num_width, <variable>.column_bd
	addle	ip, r7, #149	@, temp.5873,
	strle	ip, [fp, #-48]	@, %sfp
	ble	.L1715	@,
	ldr	r0, [r5, #92]	@ D.40476, <variable>.column_width
	sub	sl, r2, #1	@ tmp567, temp.5868,
	mov	ip, #1	@ i.5864,
	add	r1, r7, #149	@, temp.5873,
	and	lr, sl, ip	@ tmp569, tmp567,
	str	r1, [fp, #-48]	@, %sfp
	str	r0, [r5, #604]	@ D.40476, <variable>.column_bd
	cmp	ip, r2	@ i.5864, temp.5868
	ldr	sl, [r3, #4]!	@ tmp416, <variable>.column_bd
	add	r1, r5, #4	@ ivtmp.5812, pPPS,
	rsb	r0, r0, sl	@ tmp417, D.40476, tmp416
	str	r0, [r3, #0]	@ tmp417, <variable>.column_bd
	bge	.L1715	@,
	cmp	lr, #0	@ tmp569,
	beq	.L1716	@,
	ldr	r0, [r1, #92]	@ D.40476, <variable>.column_width
	mov	ip, #2	@ i.5864,
	cmp	ip, r2	@ i.5864, temp.5868
	str	r0, [r1, #604]	@ D.40476, <variable>.column_bd
	add	r1, r1, #4	@ ivtmp.5812, ivtmp.5812,
	ldr	lr, [r3, #0]	@ tmp658, <variable>.column_bd
	rsb	r0, r0, lr	@ tmp659, D.40476, tmp658
	str	r0, [r3, #0]	@ tmp659, <variable>.column_bd
	bge	.L1715	@,
.L1716:
	add	r0, r1, #4	@ tmp571, ivtmp.5812,
	ldr	sl, [r1, #92]	@ D.40476, <variable>.column_width
	add	ip, ip, #2	@ i.5864, i.5864,
	ldr	lr, [r0, #92]	@ D.40476, <variable>.column_width
	cmp	ip, r2	@ i.5864, temp.5868
	str	sl, [r1, #604]	@ D.40476, <variable>.column_bd
	add	r1, r0, #4	@ ivtmp.5812, tmp571,
	ldr	r9, [r3, #0]	@ tmp596, <variable>.column_bd
	rsb	sl, sl, r9	@ tmp597, D.40476, tmp596
	str	sl, [r3, #0]	@ tmp597, <variable>.column_bd
	str	lr, [r0, #604]	@ D.40476, <variable>.column_bd
	ldr	r0, [r3, #0]	@ tmp604, <variable>.column_bd
	rsb	lr, lr, r0	@ tmp605, D.40476, tmp604
	str	lr, [r3, #0]	@ tmp605, <variable>.column_bd
	blt	.L1716	@,
.L1715:
	ldr	r3, [fp, #-48]	@, %sfp
	add	ip, r5, r3, asl #2	@, tmp421, pPPS,,
	ldr	r3, [ip, #4]	@ temp.5869, <variable>.column_bd
	cmp	r3, #0	@ temp.5869,
	ble	.L1830	@,
	add	lr, r8, #213	@ tmp424, <variable>.num_tile_rows,
	ldr	r1, [r6, #244]	@ <variable>.ctb_num_height, <variable>.ctb_num_height
	sub	r2, r8, #1	@ temp.5880, <variable>.num_tile_rows,
	add	r3, r5, lr, asl #2	@, tmp428, pPPS, tmp424,
	cmp	r2, #0	@ temp.5880,
	str	r1, [r3, #4]	@ <variable>.ctb_num_height, <variable>.row_bd
	addle	r3, r8, #213	@, <variable>.num_tile_rows,
	strle	r3, [fp, #-48]	@, %sfp
	ble	.L1718	@,
	ldr	r0, [r5, #348]	@ D.40488, <variable>.row_height
	sub	sl, r2, #1	@ tmp562, temp.5880,
	mov	ip, #1	@ i.5860,
	add	r1, r8, #213	@, <variable>.num_tile_rows,
	and	lr, sl, ip	@ tmp564, tmp562,
	str	r1, [fp, #-48]	@, %sfp
	str	r0, [r5, #860]	@ D.40488, <variable>.row_bd
	cmp	ip, r2	@ i.5860, temp.5880
	ldr	sl, [r3, #4]!	@ tmp442, <variable>.row_bd
	add	r1, r5, #4	@ ivtmp.5806, pPPS,
	rsb	r0, r0, sl	@ tmp443, D.40488, tmp442
	str	r0, [r3, #0]	@ tmp443, <variable>.row_bd
	bge	.L1718	@,
	cmp	lr, #0	@ tmp564,
	beq	.L1719	@,
	ldr	r0, [r1, #348]	@ D.40488, <variable>.row_height
	mov	ip, #2	@ i.5860,
	cmp	ip, r2	@ i.5860, temp.5880
	str	r0, [r1, #860]	@ D.40488, <variable>.row_bd
	add	r1, r1, #4	@ ivtmp.5806, ivtmp.5806,
	ldr	lr, [r3, #0]	@ tmp652, <variable>.row_bd
	rsb	r0, r0, lr	@ tmp653, D.40488, tmp652
	str	r0, [r3, #0]	@ tmp653, <variable>.row_bd
	bge	.L1718	@,
.L1719:
	add	r0, r1, #4	@ tmp566, ivtmp.5806,
	ldr	sl, [r1, #348]	@ D.40488, <variable>.row_height
	add	ip, ip, #2	@ i.5860, i.5860,
	ldr	lr, [r0, #348]	@ D.40488, <variable>.row_height
	cmp	ip, r2	@ i.5860, temp.5880
	str	sl, [r1, #860]	@ D.40488, <variable>.row_bd
	add	r1, r0, #4	@ ivtmp.5806, tmp566,
	ldr	r9, [r3, #0]	@ tmp612, <variable>.row_bd
	rsb	sl, sl, r9	@ tmp613, D.40488, tmp612
	str	sl, [r3, #0]	@ tmp613, <variable>.row_bd
	str	lr, [r0, #860]	@ D.40488, <variable>.row_bd
	ldr	r0, [r3, #0]	@ tmp620, <variable>.row_bd
	rsb	lr, lr, r0	@ tmp621, D.40488, tmp620
	str	lr, [r3, #0]	@ tmp621, <variable>.row_bd
	blt	.L1719	@,
.L1718:
	ldr	r3, [fp, #-48]	@, %sfp
	add	ip, r5, r3, asl #2	@, tmp447, pPPS,,
	ldr	r3, [ip, #4]	@ temp.5872, <variable>.row_bd
	cmp	r3, #0	@ temp.5872,
	bgt	.L1713	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC260	@,
	movt	r1, #:upper16:.LC260	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1828:
	mov	r3, r0	@ D.40485, D.40485
	b	.L1707	@
.L1821:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC249	@,
	mov	r3, #64	@,
	movt	r1, #:upper16:.LC249	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1824:
	mov	r3, r2	@, D.40444
	movw	r1, #:lower16:.LC253	@,
	mov	r2, #22	@,
	movt	r1, #:upper16:.LC253	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	b	.L1810	@
.L1827:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC269	@,
	movt	r1, #:upper16:.LC269	@,
	bl	dprint_vfmw	@
	str	r8, [r5, #76]	@ D.40567, <variable>.pps_beta_offset_div2
	b	.L1732	@
.L1823:
	movw	r1, #:lower16:.LC252	@,
	mov	r2, #20	@,
	movt	r1, #:upper16:.LC252	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	b	.L1810	@
.L1822:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC251	@,
	mov	r3, #64	@,
	movt	r1, #:upper16:.LC251	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1820:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
.L1830:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC259	@,
	movt	r1, #:upper16:.LC259	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40321,
	b	.L1682	@
	.fnend
	.size	HEVC_ProcessPPS, .-HEVC_ProcessPPS
	.align	2
	.global	HEVC_ProcessSPS
	.type	HEVC_ProcessSPS, %function
HEVC_ProcessSPS:
	.fnstart
.LFB1548:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #16
	sub	sp, sp, #16	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:1960172	@ tmp229,
	movt	r6, #:upper16:1960172	@ tmp229,
	mov	r4, r1	@ pSPS, pSPS
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	movw	r1, #:lower16:.LC280	@,
	ldr	r0, [r0, r6]	@, <variable>.pBS
	movt	r1, #:upper16:.LC280	@,
	bl	HEVC_ue_v	@
	cmp	r0, #1	@ D.39829,
	mov	r7, r0	@ D.39829,
	str	r0, [r4, #64]	@ D.39829, <variable>.chroma_format_idc
	beq	.L1832	@,
	cmp	r0, #3	@ D.39829,
	bhi	.L1916	@,
	mov	r2, r0	@, D.39829
	movw	r1, #:lower16:.LC282	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC282	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
.L1834:
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
.L1916:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC281	@,
	movt	r1, #:upper16:.LC281	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1832:
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC283	@,
	movt	r1, #:upper16:.LC283	@,
	bl	HEVC_ue_v	@
	cmp	r0, #8192	@ D.39847,
	str	r0, [r4, #72]	@ D.39847, <variable>.pic_width_in_luma_samples
	bhi	.L1917	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC285	@,
	movt	r1, #:upper16:.LC285	@,
	bl	HEVC_ue_v	@
	cmp	r0, #4096	@ D.39853,
	str	r0, [r4, #76]	@ D.39853, <variable>.pic_height_in_luma_samples
	bhi	.L1918	@,
	ldr	r2, [r4, #760]	@ D.39858, <variable>.profile_tier_level.general_level_idc
	ldr	r3, [r4, #72]	@ D.39848, <variable>.pic_width_in_luma_samples
	cmp	r2, #120	@ D.39858,
	beq	.L1843	@,
	bgt	.L1846	@,
	cmp	r2, #60	@ D.39858,
	beq	.L1839	@,
	ble	.L1919	@,
	cmp	r2, #90	@ D.39858,
	beq	.L1841	@,
	cmp	r2, #93	@ D.39858,
	beq	.L1842	@,
	cmp	r2, #63	@ D.39858,
	bne	.L1837	@,
	mov	r2, #61440	@ prephitmp.5921,
	mov	r1, #245760	@ size,
	b	.L1849	@
.L1846:
	cmp	r2, #156	@ D.39858,
	beq	.L1844	@,
	ble	.L1920	@,
	cmp	r2, #183	@ D.39858,
	beq	.L1845	@,
	cmp	r2, #186	@ D.39858,
	beq	.L1845	@,
	cmp	r2, #180	@ D.39858,
	bne	.L1837	@,
.L1845:
	mov	r2, #8912896	@ prephitmp.5921,
	mov	r1, #35651584	@ size,
	b	.L1849	@
.L1920:
	cmp	r2, #150	@ D.39858,
	beq	.L1844	@,
	cmp	r2, #153	@ D.39858,
	beq	.L1844	@,
	cmp	r2, #123	@ D.39858,
	bne	.L1837	@,
.L1843:
	mov	r2, #557056	@ prephitmp.5921,
	mov	r1, #2228224	@ size,
.L1849:
	mul	r0, r3, r0	@ pic_size, D.39848, D.39853
	cmp	r0, r2	@ pic_size, prephitmp.5921
	movls	r3, #16	@ tmp243,
	strls	r3, [r4, #236]	@ tmp243, <variable>.dpb_size
	bls	.L1851	@,
	cmp	r0, r1, lsr #1	@ pic_size, size,
	movls	r3, #12	@ tmp245,
	strls	r3, [r4, #236]	@ tmp245, <variable>.dpb_size
	bls	.L1851	@,
	add	r1, r1, r1, asl #1	@, tmp248, size, size,
	cmp	r0, r1, lsr #2	@ pic_size, tmp248,
	movls	r3, #8	@ tmp250,
	movhi	r3, #6	@ tmp251,
	str	r3, [r4, #236]	@ tmp251, <variable>.dpb_size
.L1851:
	movw	r6, #:lower16:1960172	@ tmp252,
	movt	r6, #:upper16:1960172	@ tmp252,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC288	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC288	@,
	bl	HEVC_u_v	@
	cmp	r0, #0	@ D.39874,
	str	r0, [r4, #80]	@ D.39874, <variable>.conformance_window_flag
	beq	.L1854	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC289	@,
	movt	r1, #:upper16:.LC289	@,
	movw	r7, #:lower16:.LANCHOR1	@ tmp258,
	bl	HEVC_ue_v	@
	ldr	r3, [r4, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	movt	r7, #:upper16:.LANCHOR1	@ tmp258,
	movw	r1, #:lower16:.LC290	@,
	movt	r1, #:upper16:.LC290	@,
	add	ip, r7, r3, asl #2	@, tmp262, tmp258, <variable>.chroma_format_idc,
	ldr	r2, [ip, #424]	@ tmp264, g_CropUnitX
	mul	r3, r2, r0	@ tmp265, tmp264,
	str	r3, [r4, #84]	@ tmp265, <variable>.conf_win_left_offset
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldr	r1, [r4, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	ldr	r2, [r4, #84]	@ <variable>.conf_win_left_offset, <variable>.conf_win_left_offset
	ldr	r3, [r4, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	add	ip, r7, r1, asl #2	@, tmp273, tmp258, <variable>.chroma_format_idc,
	ldr	r1, [ip, #424]	@ tmp275, g_CropUnitX
	mul	ip, r1, r0	@ D.39887, tmp275,
	add	r2, ip, r2	@ tmp276, D.39887, <variable>.conf_win_left_offset
	cmp	r3, r2	@ <variable>.pic_width_in_luma_samples, tmp276
	str	ip, [r4, #88]	@ D.39887, <variable>.conf_win_right_offset
	bcc	.L1921	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC292	@,
	movt	r1, #:upper16:.LC292	@,
	bl	HEVC_ue_v	@
	ldr	ip, [r4, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	movw	r1, #:lower16:.LC293	@,
	movt	r1, #:upper16:.LC293	@,
	add	r3, r7, ip, asl #2	@, tmp287, tmp258, <variable>.chroma_format_idc,
	ldr	r2, [r3, #440]	@ tmp289, g_CropUnitY
	mul	ip, r2, r0	@ tmp290, tmp289,
	str	ip, [r4, #92]	@ tmp290, <variable>.conf_win_top_offset
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldr	r1, [r4, #64]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	ldr	r2, [r4, #92]	@ <variable>.conf_win_top_offset, <variable>.conf_win_top_offset
	ldr	ip, [r4, #76]	@ <variable>.pic_height_in_luma_samples, <variable>.pic_height_in_luma_samples
	add	r7, r7, r1, asl #2	@, tmp298, tmp258, <variable>.chroma_format_idc,
	ldr	r3, [r7, #440]	@ tmp300, g_CropUnitY
	mul	r1, r3, r0	@ D.39901, tmp300,
	add	r0, r1, r2	@ tmp301, D.39901, <variable>.conf_win_top_offset
	cmp	ip, r0	@ <variable>.pic_height_in_luma_samples, tmp301
	str	r1, [r4, #96]	@ D.39901, <variable>.conf_win_bottom_offset
	bcc	.L1922	@,
.L1854:
	movw	lr, #:lower16:1960172	@ tmp305,
	movt	lr, #:upper16:1960172	@ tmp305,
	movw	r1, #:lower16:.LC295	@,
	movt	r1, #:upper16:.LC295	@,
	ldr	r0, [r5, lr]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	add	r2, r0, #8	@ D.39908, D.39907,
	str	r2, [r4, #100]	@ D.39908, <variable>.bit_depth_luma
	cmp	r2, #8	@ D.39908,
	beq	.L1856	@,
	cmp	r0, #6	@ D.39907,
	bhi	.L1923	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC297	@,
	movt	r1, #:upper16:.LC297	@,
	bl	dprint_vfmw	@
	movw	r0, #:lower16:g_event_report	@ tmp310,
	movt	r0, #:upper16:g_event_report	@ tmp310,
	ldr	ip, [r0, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L1856	@,
	ldr	r3, [r4, #100]	@ <variable>.bit_depth_luma, <variable>.bit_depth_luma
	mov	r1, #0	@ tmp312,
	sub	r2, fp, #44	@,,
	str	r1, [fp, #-44]	@ tmp312, para
	mov	r1, #119	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	str	r3, [fp, #-40]	@ <variable>.bit_depth_luma, para
	mov	r3, #8	@,
	blx	ip	@ g_event_report
.L1856:
	movw	r2, #:lower16:1960172	@ tmp318,
	movt	r2, #:upper16:1960172	@ tmp318,
	movw	r1, #:lower16:.LC298	@,
	movt	r1, #:upper16:.LC298	@,
	ldr	r0, [r5, r2]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	add	r2, r0, #8	@ D.39923, D.39922,
	str	r2, [r4, #108]	@ D.39923, <variable>.bit_depth_chroma
	cmp	r2, #8	@ D.39923,
	beq	.L1858	@,
	cmp	r0, #6	@ D.39922,
	bhi	.L1924	@,
	movw	r6, #:lower16:g_event_report	@ tmp323,
	movt	r6, #:upper16:g_event_report	@ tmp323,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC300	@,
	movt	r1, #:upper16:.LC300	@,
	bl	dprint_vfmw	@
	ldr	ip, [r6, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L1858	@,
	ldr	lr, [r4, #108]	@ <variable>.bit_depth_chroma, <variable>.bit_depth_chroma
	mov	r0, #0	@ tmp325,
	mov	r1, #119	@,
	str	r0, [fp, #-44]	@ tmp325, para
	sub	r2, fp, #44	@,,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	mov	r3, #8	@,
	str	lr, [fp, #-40]	@ <variable>.bit_depth_chroma, para
	blx	ip	@ g_event_report
.L1858:
	ldr	r0, [r4, #100]	@ <variable>.bit_depth_luma, <variable>.bit_depth_luma
	movw	r6, #:lower16:1960172	@ tmp345,
	movt	r6, #:upper16:1960172	@ tmp345,
	movw	r1, #:lower16:.LC301	@,
	movt	r1, #:upper16:.LC301	@,
	str	r0, [r5, #184]	@ <variable>.bit_depth_luma, <variable>.BitDepthY
	ldr	lr, [r4, #108]	@ <variable>.bit_depth_chroma, <variable>.bit_depth_chroma
	str	lr, [r5, #188]	@ <variable>.bit_depth_chroma, <variable>.BitDepthC
	ldr	r2, [r4, #100]	@ <variable>.bit_depth_luma, <variable>.bit_depth_luma
	ldr	r3, [r4, #108]	@ <variable>.bit_depth_chroma, <variable>.bit_depth_chroma
	add	ip, r2, r2, asl #1	@, tmp336, <variable>.bit_depth_luma, <variable>.bit_depth_luma,
	add	r0, r3, r3, asl #1	@, tmp342, <variable>.bit_depth_chroma, <variable>.bit_depth_chroma,
	mov	lr, ip, asl #1	@ tmp337, tmp336,
	mov	r3, r0, asl #1	@ tmp343, tmp342,
	sub	r2, lr, #48	@ tmp338, tmp337,
	sub	ip, r3, #48	@ tmp344, tmp343,
	str	r2, [r4, #104]	@ tmp338, <variable>.qp_bdOffset_y
	str	ip, [r4, #112]	@ tmp344, <variable>.qp_bdOffset_c
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #12	@ log2_max_pic_order_cnt_lsb_minus4,
	bhi	.L1925	@,
	add	r7, r0, #4	@ D.39943, log2_max_pic_order_cnt_lsb_minus4,
	mov	r1, #1	@,
	str	r7, [r4, #132]	@ D.39943, <variable>.bits_for_poc
	movw	r2, #:lower16:.LC303	@,
	str	r7, [r4, #128]	@ D.39943, <variable>.max_pic_order_cnt_lsb
	movt	r2, #:upper16:.LC303	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	mov	r7, r4	@ ivtmp.5962, pSPS
	bl	HEVC_u_v	@
	mov	r8, r4	@ ivtmp.6002, pSPS
	mov	sl, #0	@ i.6019,
	strb	r0, [r4, #4]	@, <variable>.sps_sub_layer_ordering_info_present_flag
	b	.L1864	@
.L1861:
	ldr	r0, [r4, #56]	@ <variable>.sps_max_sub_layers_minus1, <variable>.sps_max_sub_layers_minus1
	add	sl, sl, #1	@ i.6019, i.6019,
	add	r8, r8, #4	@ ivtmp.6002, ivtmp.6002,
	cmp	r0, sl	@ <variable>.sps_max_sub_layers_minus1, i.6019
	bcc	.L1862	@,
.L1864:
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC304	@,
	movt	r1, #:upper16:.LC304	@,
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC305	@,
	movt	r1, #:upper16:.LC305	@,
	add	r2, r0, #1	@ tmp355,,
	str	r2, [r8, #380]	@ tmp355, <variable>.max_dec_pic_buffering
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldr	r3, [r8, #380]	@ tmp359, <variable>.max_dec_pic_buffering
	ldr	ip, [r4, #236]	@ <variable>.dpb_size, <variable>.dpb_size
	movw	r1, #:lower16:.LC306	@,
	movt	r1, #:upper16:.LC306	@,
	cmp	ip, r3	@ <variable>.dpb_size, tmp359
	strls	ip, [r4, #236]	@, <variable>.dpb_size, <variable>.dpb_size
	strhi	r3, [r4, #236]	@, tmp359, <variable>.dpb_size
	str	r0, [r8, #412]	@, <variable>.num_reorder_pics
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldrb	r1, [r4, #4]	@ zero_extendqisi2	@ <variable>.sps_sub_layer_ordering_info_present_flag, <variable>.sps_sub_layer_ordering_info_present_flag
	cmp	r1, #0	@ <variable>.sps_sub_layer_ordering_info_present_flag,
	str	r0, [r8, #444]	@, <variable>.max_latency_increase
	bne	.L1861	@,
	ldr	r0, [r4, #56]	@ temp.6025, <variable>.sps_max_sub_layers_minus1
	add	r3, sl, #1	@ i.5997, i.6019,
	cmp	r3, r0	@ i.5997, temp.6025
	bhi	.L1862	@,
	add	r1, r3, #1	@ i.5997, i.5997,
	ldr	lr, [r4, #380]	@ <variable>.max_dec_pic_buffering, <variable>.max_dec_pic_buffering
	add	sl, r4, sl, asl #2	@, tmp366, pSPS, i.6019,
	ldr	ip, [r4, #412]	@ <variable>.num_reorder_pics, <variable>.num_reorder_pics
	ldr	r6, [r4, #444]	@ <variable>.max_latency_increase, <variable>.max_latency_increase
	add	sl, sl, #380	@ ivtmp.5952, tmp366,
	cmp	r1, r0	@ i.5997, temp.6025
	rsb	r3, r3, r0	@ tmp592, i.5997, temp.6025
	str	lr, [sl, #4]	@ <variable>.max_dec_pic_buffering, <variable>.max_dec_pic_buffering
	and	lr, r3, #1	@ tmp593, tmp592,
	str	ip, [sl, #36]	@ <variable>.num_reorder_pics, <variable>.num_reorder_pics
	add	r3, sl, #4	@ ivtmp.5952, ivtmp.5952,
	str	r6, [sl, #68]	@ <variable>.max_latency_increase, <variable>.max_latency_increase
	bhi	.L1862	@,
	cmp	lr, #0	@ tmp593,
	beq	.L1863	@,
	add	r1, r1, #1	@ i.5997, i.5997,
	ldr	ip, [r4, #380]	@ <variable>.max_dec_pic_buffering, <variable>.max_dec_pic_buffering
	ldr	r2, [r4, #412]	@ <variable>.num_reorder_pics, <variable>.num_reorder_pics
	cmp	r1, r0	@ i.5997, temp.6025
	ldr	r6, [r4, #444]	@ <variable>.max_latency_increase, <variable>.max_latency_increase
	str	ip, [r3, #4]	@ <variable>.max_dec_pic_buffering, <variable>.max_dec_pic_buffering
	str	r2, [r3, #36]	@ <variable>.num_reorder_pics, <variable>.num_reorder_pics
	str	r6, [r3, #68]	@ <variable>.max_latency_increase, <variable>.max_latency_increase
	add	r3, r3, #4	@ ivtmp.5952, ivtmp.5952,
	bhi	.L1862	@,
.L1863:
	ldr	r6, [r4, #380]	@ <variable>.max_dec_pic_buffering, <variable>.max_dec_pic_buffering
	add	r1, r1, #2	@ i.5997, i.5997,
	ldr	lr, [r4, #412]	@ <variable>.num_reorder_pics, <variable>.num_reorder_pics
	add	r2, r3, #4	@ tmp595, ivtmp.5952,
	ldr	ip, [r4, #444]	@ <variable>.max_latency_increase, <variable>.max_latency_increase
	cmp	r1, r0	@ i.5997, temp.6025
	str	r6, [r3, #4]	@ <variable>.max_dec_pic_buffering, <variable>.max_dec_pic_buffering
	str	lr, [r3, #36]	@ <variable>.num_reorder_pics, <variable>.num_reorder_pics
	str	ip, [r3, #68]	@ <variable>.max_latency_increase, <variable>.max_latency_increase
	add	r3, r2, #4	@ ivtmp.5952, tmp595,
	ldr	r6, [r4, #380]	@ <variable>.max_dec_pic_buffering, <variable>.max_dec_pic_buffering
	ldr	lr, [r4, #412]	@ <variable>.num_reorder_pics, <variable>.num_reorder_pics
	ldr	ip, [r4, #444]	@ <variable>.max_latency_increase, <variable>.max_latency_increase
	str	r6, [r2, #4]	@ <variable>.max_dec_pic_buffering, <variable>.max_dec_pic_buffering
	str	lr, [r2, #36]	@ <variable>.num_reorder_pics, <variable>.num_reorder_pics
	str	ip, [r2, #68]	@ <variable>.max_latency_increase, <variable>.max_latency_increase
	bls	.L1863	@,
.L1862:
	movw	r6, #:lower16:1960172	@ tmp371,
	movt	r6, #:upper16:1960172	@ tmp371,
	movw	r1, #:lower16:.LC307	@,
	movt	r1, #:upper16:.LC307	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #3	@ D.39967,
	str	r0, [r4, #136]	@ D.39967, <variable>.log2_min_luma_coding_block_size_minus3
	bhi	.L1926	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC309	@,
	movt	r1, #:upper16:.LC309	@,
	bl	HEVC_ue_v	@
	cmp	r0, #3	@ D.39973,
	str	r0, [r4, #144]	@ D.39973, <variable>.log2_diff_max_min_luma_coding_block_size
	bhi	.L1927	@,
	ldr	r3, [r4, #136]	@ <variable>.log2_min_luma_coding_block_size_minus3, <variable>.log2_min_luma_coding_block_size_minus3
	add	r3, r3, #3	@ D.39978, <variable>.log2_min_luma_coding_block_size_minus3,
	str	r3, [r4, #140]	@ D.39978, <variable>.log2_min_cb_sizeY
	add	r6, r0, r3	@ D.39980, D.39973, D.39978
	str	r6, [r4, #148]	@ D.39980, <variable>.log2_ctb_sizeY
	sub	r1, r6, #4	@ tmp380, D.39980,
	cmp	r1, #2	@ tmp380,
	bhi	.L1928	@,
	mov	r2, #1	@ tmp382,
	ldr	r8, [r4, #72]	@ temp.6000, <variable>.pic_width_in_luma_samples
	mov	r6, r2, asl r6	@ D.39991, tmp382,
	mov	ip, r2, asl r3	@ tmp383, tmp382,
	str	r6, [r4, #156]	@ D.39991, <variable>.ctb_sizeY
	str	ip, [r4, #152]	@ tmp383, <variable>.min_cb_sizeY
	mov	r0, r8	@, temp.6000
	str	r6, [r4, #160]	@ D.39991, <variable>.max_cu_width
	mov	r1, r6	@, D.39991
	str	r6, [r4, #164]	@ D.39991, <variable>.max_cu_height
	bl	__aeabi_uidivmod	@
	cmp	r1, #0	@,
	beq	.L1868	@,
	mov	r0, r8	@, temp.6000
	mov	r1, r6	@, D.39991
	bl	__aeabi_uidiv	@
	add	r0, r0, #1	@ iftmp.514,,
.L1869:
	ldr	r8, [r4, #76]	@ temp.6001, <variable>.pic_height_in_luma_samples
	mov	r1, r6	@, D.39991
	str	r0, [r4, #240]	@ iftmp.514, <variable>.ctb_num_width
	mov	r0, r8	@, temp.6001
	bl	__aeabi_uidivmod	@
	cmp	r1, #0	@,
	beq	.L1870	@,
	mov	r0, r8	@, temp.6001
	mov	r1, r6	@, D.39991
	bl	__aeabi_uidiv	@
	add	r0, r0, #1	@ iftmp.515,,
.L1871:
	movw	r6, #:lower16:1960172	@ tmp411,
	movt	r6, #:upper16:1960172	@ tmp411,
	str	r0, [r4, #244]	@ iftmp.515, <variable>.ctb_num_height
	movw	r1, #:lower16:.LC312	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r1, #:upper16:.LC312	@,
	bl	HEVC_ue_v	@
	cmp	r0, #3	@ D.40007,
	str	r0, [r4, #168]	@ D.40007, <variable>.log2_min_transform_block_size_minus2
	bhi	.L1929	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC314	@,
	movt	r1, #:upper16:.LC314	@,
	bl	HEVC_ue_v	@
	cmp	r0, #3	@ D.40013,
	str	r0, [r4, #176]	@ D.40013, <variable>.log2_diff_max_min_transform_block_size
	bhi	.L1930	@,
	ldr	r1, [r4, #168]	@ <variable>.log2_min_transform_block_size_minus2, <variable>.log2_min_transform_block_size_minus2
	ldr	lr, [r4, #140]	@ <variable>.log2_min_cb_sizeY, <variable>.log2_min_cb_sizeY
	add	r3, r1, #2	@ D.40018, <variable>.log2_min_transform_block_size_minus2,
	str	r3, [r4, #172]	@ D.40018, <variable>.quadtree_tu_log2_min_size
	cmp	r3, lr	@ D.40018, <variable>.log2_min_cb_sizeY
	bcs	.L1931	@,
	add	r0, r0, r3	@ D.40023, D.40013, D.40018
	str	r0, [r4, #180]	@ D.40023, <variable>.quadtree_tu_log2_max_size
	cmp	r0, #5	@ D.40023,
	bhi	.L1875	@,
	ldr	r3, [r4, #148]	@ <variable>.log2_ctb_sizeY, <variable>.log2_ctb_sizeY
	cmp	r0, r3	@ D.40023, <variable>.log2_ctb_sizeY
	bhi	.L1875	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC318	@,
	movt	r1, #:upper16:.LC318	@,
	bl	HEVC_ue_v	@
	ldr	r2, [r4, #148]	@ <variable>.log2_ctb_sizeY, <variable>.log2_ctb_sizeY
	ldr	r1, [r4, #172]	@ <variable>.quadtree_tu_log2_min_size, <variable>.quadtree_tu_log2_min_size
	rsb	ip, r1, r2	@ tmp427, <variable>.quadtree_tu_log2_min_size, <variable>.log2_ctb_sizeY
	cmp	r0, ip	@ D.40030, tmp427
	str	r0, [r4, #200]	@ D.40030, <variable>.max_transform_hierarchy_depth_inter
	bhi	.L1932	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC320	@,
	movt	r1, #:upper16:.LC320	@,
	bl	HEVC_ue_v	@
	ldr	r1, [r4, #148]	@ <variable>.log2_ctb_sizeY, <variable>.log2_ctb_sizeY
	ldr	ip, [r4, #172]	@ <variable>.quadtree_tu_log2_min_size, <variable>.quadtree_tu_log2_min_size
	rsb	r3, ip, r1	@ tmp434, <variable>.quadtree_tu_log2_min_size, <variable>.log2_ctb_sizeY
	cmp	r0, r3	@ D.40037, tmp434
	str	r0, [r4, #208]	@ D.40037, <variable>.max_transform_hierarchy_depth_intra
	bhi	.L1933	@,
	ldr	r3, [r4, #200]	@ <variable>.max_transform_hierarchy_depth_inter, <variable>.max_transform_hierarchy_depth_inter
	add	ip, r0, #1	@ tmp440, D.40037,
	mov	r8, #0	@ tmp441,
	str	ip, [r4, #212]	@ tmp440, <variable>.quadtree_tu_max_depth_intra
	add	r2, r3, #1	@ tmp439, <variable>.max_transform_hierarchy_depth_inter,
	str	r2, [r4, #204]	@ tmp439, <variable>.quadtree_tu_max_depth_inter
	str	r8, [r5, #220]	@ tmp441, <variable>.uiAddCuDepth
	mov	r3, #1	@ tmp445,
	ldr	lr, [r4, #160]	@ <variable>.max_cu_width, <variable>.max_cu_width
	ldr	r0, [r4, #172]	@ <variable>.quadtree_tu_log2_min_size, <variable>.quadtree_tu_log2_min_size
	ldr	r2, [r4, #144]	@ D.39974, <variable>.log2_diff_max_min_luma_coding_block_size
	mov	r6, r3, asl r0	@ tmp444, tmp445,
	cmp	r6, lr, lsr r2	@ tmp444, <variable>.max_cu_width,
	movcs	r3, r8	@ ivtmp.6033, tmp441
	bcs	.L1880	@,
	mov	lr, r3	@ tmp587, ivtmp.6033
	b	.L1881	@
.L1934:
	mov	r3, ip	@ ivtmp.6033, ivtmp.5946
.L1881:
	str	r3, [r5, #220]	@ ivtmp.6033, <variable>.uiAddCuDepth
	add	ip, r3, #1	@ ivtmp.5946, ivtmp.6033,
	ldr	r0, [r4, #172]	@ <variable>.quadtree_tu_log2_min_size, <variable>.quadtree_tu_log2_min_size
	ldr	r8, [r4, #160]	@ <variable>.max_cu_width, <variable>.max_cu_width
	add	r6, r3, r0	@ tmp449, ivtmp.6033, <variable>.quadtree_tu_log2_min_size
	ldr	r2, [r4, #144]	@ D.39974, <variable>.log2_diff_max_min_luma_coding_block_size
	mov	r1, lr, asl r6	@ tmp451, tmp587,
	cmp	r1, r8, lsr r2	@ tmp451, <variable>.max_cu_width,
	bcc	.L1934	@,
.L1880:
	movw	r6, #:lower16:1960172	@ tmp456,
	movt	r6, #:upper16:1960172	@ tmp456,
	mov	r8, #1	@ tmp455,
	add	r3, r2, r3	@ tmp453, D.39974, ivtmp.6033
	mov	lr, #0	@ tmp454,
	str	r3, [r4, #216]	@ tmp453, <variable>.max_cu_depth
	str	lr, [r4, #220]	@ tmp454, <variable>.min_tr_depth
	mov	r1, r8	@, tmp455
	str	r8, [r4, #224]	@ tmp455, <variable>.max_tr_depth
	movw	r2, #:lower16:.LC322	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC322	@,
	bl	HEVC_u_v	@
	uxtb	r2, r0	@ D.40055,
	strb	r2, [r4, #6]	@ D.40055, <variable>.scaling_list_enabled_flag
	cmp	r2, #0	@ D.40055,
	beq	.L1882	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	mov	r1, r8	@, tmp455
	movw	r2, #:lower16:.LC323	@,
	movt	r2, #:upper16:.LC323	@,
	bl	HEVC_u_v	@
	uxtb	ip, r0	@ D.40061,
	strb	ip, [r4, #7]	@ D.40061, <variable>.sps_scaling_list_data_present_flag
	cmp	ip, #0	@ D.40061,
	bne	.L1935	@,
.L1882:
	movw	r6, #:lower16:1960172	@ tmp466,
	movt	r6, #:upper16:1960172	@ tmp466,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC325	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC325	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC326	@,
	movt	r2, #:upper16:.LC326	@,
	strb	r0, [r4, #8]	@, <variable>.amp_enabled_flag
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r6, r0	@ D.40075,
	strb	r6, [r4, #9]	@ D.40075, <variable>.sample_adaptive_offset_enabled_flag
	cmp	r6, #0	@ D.40075,
	bne	.L1883	@,
	ldr	r2, [r4, #76]	@ temp.6024, <variable>.pic_height_in_luma_samples
	cmp	r2, #64	@ temp.6024,
	bls	.L1936	@,
.L1883:
	movw	r6, #:lower16:1960172	@ tmp476,
	movt	r6, #:upper16:1960172	@ tmp476,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC328	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC328	@,
	bl	HEVC_u_v	@
	cmp	r0, #0	@ D.40085,
	str	r0, [r4, #116]	@ D.40085, <variable>.pcm_enabled_flag
	beq	.L1885	@,
	mov	r1, #4	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC329	@,
	movt	r2, #:upper16:.LC329	@,
	bl	HEVC_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC330	@,
	movt	r2, #:upper16:.LC330	@,
	add	r3, r0, #1	@ tmp482,,
	str	r3, [r4, #120]	@ tmp482, <variable>.pcm_bit_depth_luma
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC331	@,
	movt	r1, #:upper16:.LC331	@,
	add	r0, r0, #1	@ tmp486,,
	str	r0, [r4, #124]	@ tmp486, <variable>.pcm_bit_depth_chroma
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #2	@ D.40096,
	str	r0, [r4, #184]	@ D.40096, <variable>.log2_min_pcm_coding_block_size_minus3
	bhi	.L1937	@,
.L1886:
	movw	r2, #:lower16:1960172	@ tmp491,
	movt	r2, #:upper16:1960172	@ tmp491,
	movw	r1, #:lower16:.LC333	@,
	movt	r1, #:upper16:.LC333	@,
	ldr	r0, [r5, r2]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #2	@ D.40102,
	str	r0, [r4, #192]	@ D.40102, <variable>.log2_diff_max_min_pcm_coding_block_size
	bhi	.L1938	@,
.L1887:
	ldr	r1, [r4, #184]	@ <variable>.log2_min_pcm_coding_block_size_minus3, <variable>.log2_min_pcm_coding_block_size_minus3
	ldr	ip, [r4, #192]	@ <variable>.log2_diff_max_min_pcm_coding_block_size, <variable>.log2_diff_max_min_pcm_coding_block_size
	add	lr, r1, #3	@ D.40107, <variable>.log2_min_pcm_coding_block_size_minus3,
	str	lr, [r4, #188]	@ D.40107, <variable>.pcm_log2_min_size
	add	r3, lr, ip	@ D.40109, D.40107, <variable>.log2_diff_max_min_pcm_coding_block_size
	str	r3, [r4, #196]	@ D.40109, <variable>.pcm_log2_max_size
	cmp	r3, #5	@ D.40109,
	bhi	.L1888	@,
	ldr	r0, [r4, #148]	@ <variable>.log2_ctb_sizeY, <variable>.log2_ctb_sizeY
	cmp	r3, r0	@ D.40109, <variable>.log2_ctb_sizeY
	bhi	.L1888	@,
	movw	r3, #:lower16:1960172	@ tmp499,
	movt	r3, #:upper16:1960172	@ tmp499,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC336	@,
	ldr	r0, [r5, r3]	@, <variable>.pBS
	movt	r2, #:upper16:.LC336	@,
	bl	HEVC_u_v	@
	strb	r0, [r4, #10]	@, <variable>.pcm_loop_filter_disable_flag
.L1885:
	movw	r2, #:lower16:1960172	@ tmp503,
	movt	r2, #:upper16:1960172	@ tmp503,
	movw	r1, #:lower16:.LC337	@,
	movt	r1, #:upper16:.LC337	@,
	ldr	r0, [r5, r2]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #64	@ D.40119,
	str	r0, [r4, #228]	@ D.40119, <variable>.num_short_term_ref_pic_sets
	bhi	.L1890	@,
	cmp	r0, #0	@ D.40119,
	movne	r6, #0	@ i,
	bne	.L1894	@,
	b	.L1892	@
.L1893:
	ldr	r1, [r4, #228]	@ <variable>.num_short_term_ref_pic_sets, <variable>.num_short_term_ref_pic_sets
	cmp	r1, r6	@ <variable>.num_short_term_ref_pic_sets, i
	bls	.L1892	@,
.L1894:
	add	r2, r6, r6, asl #3	@, tmp509, i, i,
	mov	r3, r6	@, i
	mov	r0, r5	@, pHevcCtx
	mov	r1, r4	@, pSPS
	add	ip, r4, r2, asl #5	@, tmp513, pSPS, tmp509,
	add	r6, r6, #1	@ i, i,
	add	lr, ip, #17920	@, tmp513,
	add	r2, lr, #12	@,,
	bl	HEVC_DecShortTermRefPicSet	@
	cmp	r0, #0	@,
	beq	.L1893	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC339	@,
	movt	r1, #:upper16:.LC339	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1919:
	cmp	r2, #0	@ D.39858,
	beq	.L1838	@,
	cmp	r2, #30	@ D.39858,
	beq	.L1838	@,
.L1837:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC287	@,
	movt	r1, #:upper16:.LC287	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1870:
	mov	r0, r8	@, temp.6001
	mov	r1, r6	@, D.39991
	bl	__aeabi_uidiv	@
	b	.L1871	@
.L1868:
	mov	r0, r8	@, temp.6000
	mov	r1, r6	@, D.39991
	bl	__aeabi_uidiv	@
	b	.L1869	@
.L1892:
	movw	sl, #:lower16:1960172	@ tmp517,
	movt	sl, #:upper16:1960172	@ tmp517,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC340	@,
	ldr	r0, [r5, sl]	@, <variable>.pBS
	movt	r2, #:upper16:.LC340	@,
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.40133,
	strb	r0, [r4, #11]	@ D.40133, <variable>.long_term_ref_pics_present_flag
	cmp	r0, #0	@ D.40133,
	beq	.L1895	@,
	ldr	r0, [r5, sl]	@, <variable>.pBS
	movw	r1, #:lower16:.LC341	@,
	movt	r1, #:upper16:.LC341	@,
	bl	HEVC_ue_v	@
	cmp	r0, #32	@ D.40138,
	str	r0, [r4, #232]	@ D.40138, <variable>.num_long_term_ref_pic_sps
	bhi	.L1896	@,
	cmp	r0, #0	@ D.40138,
	movne	r8, r4	@ ivtmp.6041, pSPS
	movne	r6, #0	@ i.5966,
	beq	.L1895	@,
.L1898:
	ldr	r1, [r4, #128]	@, <variable>.max_pic_order_cnt_lsb
	movw	r2, #:lower16:.LC343	@,
	ldr	r0, [r5, sl]	@, <variable>.pBS
	movt	r2, #:upper16:.LC343	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC344	@,
	movt	r2, #:upper16:.LC344	@,
	add	r6, r6, r1	@ i.5966, i.5966,
	str	r0, [r8, #248]	@, <variable>.lt_ref_pic_poc_lsb_sps
	add	r8, r8, #4	@ ivtmp.6041, ivtmp.6041,
	ldr	r0, [r5, sl]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r3, [r4, #232]	@ <variable>.num_long_term_ref_pic_sps, <variable>.num_long_term_ref_pic_sps
	cmp	r3, r6	@ <variable>.num_long_term_ref_pic_sps, i.5966
	strb	r0, [r7, #17]	@, <variable>.used_by_curr_pic_lt_sps_flag
	add	r7, r7, #1	@ ivtmp.5962, ivtmp.5962,
	bhi	.L1898	@,
.L1895:
	movw	r6, #:lower16:1960172	@ tmp532,
	movt	r6, #:upper16:1960172	@ tmp532,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC345	@,
	ldr	r0, [r5, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC345	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC346	@,
	movt	r2, #:upper16:.LC346	@,
	strb	r0, [r4, #12]	@, <variable>.sps_temporal_mvp_enable_flag
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC347	@,
	movt	r2, #:upper16:.LC347	@,
	strb	r0, [r4, #13]	@, <variable>.sps_strong_intra_smoothing_enable_flag
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	ip, r0	@ D.40157,
	strb	ip, [r4, #14]	@ D.40157, <variable>.vui_parameters_present_flag
	cmp	ip, #0	@ D.40157,
	beq	.L1899	@,
	add	lr, r4, #7424	@, pSPS,
	mov	r0, r5	@, pHevcCtx
	add	r1, lr, #24	@,,
	mov	r2, r4	@, pSPS
	bl	HEVC_DecVuiParam	@
	cmp	r0, #0	@,
	bne	.L1939	@,
.L1899:
	ldr	ip, [r4, #76]	@ <variable>.pic_height_in_luma_samples, <variable>.pic_height_in_luma_samples
	movw	lr, #7480	@ tmp551,
	movw	r1, #7472	@ tmp547,
	movw	r6, #7476	@ tmp549,
	ldr	r2, [r4, lr]	@ <variable>.vui_parameters.sar_height, <variable>.vui_parameters.sar_height
	ldr	r0, [r4, r1]	@ <variable>.vui_parameters.aspect_ratio_idc, <variable>.vui_parameters.aspect_ratio_idc
	ldr	r3, [r4, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	ldr	r1, [r4, r6]	@ <variable>.vui_parameters.sar_width, <variable>.vui_parameters.sar_width
	movw	r6, #:lower16:1960172	@ tmp556,
	str	ip, [sp, #0]	@ <variable>.pic_height_in_luma_samples,
	bl	HEVCGetDar	@
	movt	r6, #:upper16:1960172	@ tmp556,
	movw	r3, #7468	@ tmp555,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC349	@,
	movt	r2, #:upper16:.LC349	@,
	str	r0, [r4, r3]	@, <variable>.vui_parameters.aspect_ratio
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r2, r0	@ D.40178,
	strb	r2, [r4, #15]	@ D.40178, <variable>.sps_extension_flag
	cmp	r2, #0	@ D.40178,
	bne	.L1914	@,
.L1901:
	movw	lr, #:lower16:1960180	@ tmp568,
	movt	lr, #:upper16:1960180	@ tmp568,
	mov	r2, #1	@ tmp564,
	ldr	r3, [r4, #60]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	strb	r2, [r4, #0]	@ tmp564, <variable>.is_refresh
	movw	ip, #36364	@ tmp570,
	ldr	r0, [r5, lr]	@ <variable>.pSPS, <variable>.pSPS
	ldr	lr, [r4, #236]	@ <variable>.dpb_size, <variable>.dpb_size
	mla	r1, ip, r3, r0	@ tmp571, tmp570, <variable>.seq_parameter_set_id, <variable>.pSPS
	ldr	r3, [r1, #236]	@ <variable>.dpb_size, <variable>.dpb_size
	cmp	lr, r3	@ <variable>.dpb_size, <variable>.dpb_size
	strneb	r2, [r4, #2]	@ tmp564, <variable>.dpbsize_changed
	moveq	r0, #0	@ tmp576,
	movne	r0, #0	@ D.39836,
	streqb	r0, [r4, #2]	@ tmp576, <variable>.dpbsize_changed
	b	.L1834	@
.L1902:
	ldr	r0, [r5, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	strb	r0, [r4, #16]	@, <variable>.sps_extension_data_flag
.L1914:
	mov	r0, r5	@, pHevcCtx
	bl	HEVC_MoreRbspData	@
	movw	r2, #:lower16:.LC279	@,
	mov	r1, #1	@,
	movt	r2, #:upper16:.LC279	@,
	cmp	r0, #0	@,
	bne	.L1902	@,
	b	.L1901	@
.L1839:
	mov	r2, #30720	@ prephitmp.5921,
	mov	r1, #122880	@ size,
	b	.L1849	@
.L1838:
	mov	r2, #9216	@ prephitmp.5921,
	mov	r1, #36864	@ size,
	b	.L1849	@
.L1844:
	mov	r2, #2228224	@ prephitmp.5921,
	mov	r1, #8912896	@ size,
	b	.L1849	@
.L1842:
	mov	r2, #245760	@ prephitmp.5921,
	mov	r1, #983040	@ size,
	b	.L1849	@
.L1841:
	mov	r2, #138240	@ prephitmp.5921,
	mov	r1, #552960	@ size,
	b	.L1849	@
.L1935:
	mov	r0, r5	@, pHevcCtx
	add	r1, r4, #860	@, pSPS,
	bl	HEVC_DecScalingListData	@
	cmp	r0, #0	@,
	beq	.L1882	@,
	mov	r0, r8	@, tmp455
	movw	r1, #:lower16:.LC324	@,
	movt	r1, #:upper16:.LC324	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1938:
	mov	r2, r0	@, D.40102
	movw	r1, #:lower16:.LC334	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC334	@,
	bl	dprint_vfmw	@
	b	.L1887	@
.L1937:
	mov	r2, r0	@, D.40096
	movw	r1, #:lower16:.LC332	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC332	@,
	bl	dprint_vfmw	@
	b	.L1886	@
.L1875:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC317	@,
	movt	r1, #:upper16:.LC317	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1917:
	mov	r0, r7	@, D.39829
	movw	r1, #:lower16:.LC284	@,
	movt	r1, #:upper16:.LC284	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1925:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC302	@,
	movt	r1, #:upper16:.LC302	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1926:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC308	@,
	movt	r1, #:upper16:.LC308	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1923:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC296	@,
	movt	r1, #:upper16:.LC296	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1888:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC335	@,
	movt	r1, #:upper16:.LC335	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1929:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC313	@,
	movt	r1, #:upper16:.LC313	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1924:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC299	@,
	movt	r1, #:upper16:.LC299	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1932:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC319	@,
	movt	r1, #:upper16:.LC319	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1921:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC291	@,
	movt	r1, #:upper16:.LC291	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1918:
	mov	r0, r7	@, D.39829
	movw	r1, #:lower16:.LC286	@,
	movt	r1, #:upper16:.LC286	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1928:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC311	@,
	movt	r1, #:upper16:.LC311	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1927:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC310	@,
	movt	r1, #:upper16:.LC310	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1930:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC315	@,
	movt	r1, #:upper16:.LC315	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1931:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC316	@,
	movt	r1, #:upper16:.LC316	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1933:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC321	@,
	movt	r1, #:upper16:.LC321	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1890:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC338	@,
	movt	r1, #:upper16:.LC338	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1936:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC327	@,
	movt	r1, #:upper16:.LC327	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:g_event_report	@ tmp475,
	movt	r1, #:upper16:g_event_report	@ tmp475,
	ldr	ip, [r1, #0]	@ g_event_report.6026, g_event_report
	cmp	ip, #0	@ g_event_report.6026,
	mvneq	r0, #0	@ D.39836,
	beq	.L1834	@
.L1884:
	mov	r2, r6	@, D.40075
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	mov	r1, #102	@,
	mov	r3, r6	@, tmp2
	blx	ip	@ g_event_report.6026
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1922:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC294	@,
	movt	r1, #:upper16:.LC294	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1896:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC342	@,
	movt	r1, #:upper16:.LC342	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
.L1939:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC348	@,
	movt	r1, #:upper16:.LC348	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39836,
	b	.L1834	@
	.fnend
	.size	HEVC_ProcessSPS, .-HEVC_ProcessSPS
	.align	2
	.global	HEVC_DecPTL
	.type	HEVC_DecPTL, %function
HEVC_DecPTL:
	.fnstart
.LFB1648:
	@ args = 0, pretend = 0, frame = 128
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #132
	sub	sp, sp, #132	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #0	@
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	str	r2, [fp, #-160]	@, %sfp
	mov	r9, r1	@ pPTL, pPTL
	str	r3, [fp, #-152]	@ MaxNumSubLayersMinus1, %sfp
	bne	.L1991	@,
.L1941:
	movw	r7, #:lower16:1960172	@ tmp221,
	movt	r7, #:upper16:1960172	@ tmp221,
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC361	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC361	@,
	bl	HEVC_u_v	@
	ldr	r2, [fp, #-152]	@, %sfp
	cmp	r2, #0	@,
	str	r0, [r9, #284]	@, <variable>.general_level_idc
	ble	.L1943	@,
	ldr	r5, [fp, #-160]	@, %sfp
	sub	r8, r2, #1	@ tmp313,,
	and	r8, r8, #1	@ tmp315, tmp313,
	str	r9, [fp, #-156]	@ pPTL, %sfp
	cmp	r5, #0	@,
	bne	.L1992	@,
.L1972:
	ldr	r0, [r4, r7]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC362	@,
	movt	r2, #:upper16:.LC362	@,
	bl	HEVC_u_v	@
	ldr	r6, [fp, #-152]	@, %sfp
	mov	r5, #1	@ i.6137,
	cmp	r6, r5	@, i.6137
	add	r6, r9, r5	@ ivtmp.6114, pPTL,
	strb	r0, [r9, #43]	@, <variable>.sub_layer_level_present_flag
	ble	.L1986	@,
	cmp	r8, #0	@ tmp315,
	beq	.L1990	@,
	ldr	r2, [fp, #-160]	@, %sfp
	cmp	r2, #0	@,
	bne	.L1993	@,
.L1974:
	mov	r1, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC362	@,
	movt	r2, #:upper16:.LC362	@,
	bl	HEVC_u_v	@
	ldr	r1, [fp, #-152]	@, %sfp
	add	r5, r5, #1	@ i.6137, i.6137,
	cmp	r1, r5	@, i.6137
	strb	r0, [r6, #43]	@, <variable>.sub_layer_level_present_flag
	add	r6, r6, #1	@ ivtmp.6114, ivtmp.6114,
	ble	.L1986	@,
.L1990:
	ldr	sl, [fp, #-160]	@ ProfilePresentFlag, %sfp
	b	.L1945	@
.L1944:
	mov	r1, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC362	@,
	movt	r2, #:upper16:.LC362	@,
	bl	HEVC_u_v	@
	cmp	sl, #0	@ ProfilePresentFlag,
	strb	r0, [r6, #43]	@, <variable>.sub_layer_level_present_flag
	bne	.L1994	@,
.L1977:
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC362	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC362	@,
	bl	HEVC_u_v	@
	ldr	r3, [fp, #-152]	@, %sfp
	add	r5, r5, #1	@ i.6137, tmp316,
	add	r6, r8, #1	@ ivtmp.6114, tmp317,
	cmp	r3, r5	@, i.6137
	strb	r0, [r8, #43]	@, <variable>.sub_layer_level_present_flag
	ble	.L1986	@,
.L1945:
	cmp	sl, #0	@ ProfilePresentFlag,
	add	r8, r6, #1	@ tmp317, ivtmp.6114,
	add	r5, r5, #1	@ tmp316, i.6137,
	beq	.L1944	@,
	mov	r1, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC363	@,
	movt	r2, #:upper16:.LC363	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC362	@,
	movt	r2, #:upper16:.LC362	@,
	strb	r0, [r6, #37]	@, <variable>.sub_layer_profile_present_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	cmp	sl, #0	@ ProfilePresentFlag,
	strb	r0, [r6, #43]	@, <variable>.sub_layer_level_present_flag
	beq	.L1977	@,
.L1994:
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC363	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC363	@,
	bl	HEVC_u_v	@
	strb	r0, [r8, #37]	@, <variable>.sub_layer_profile_present_flag
	b	.L1977	@
.L1986:
	ldr	ip, [fp, #-152]	@, %sfp
	cmp	ip, #7	@,
	bgt	.L1946	@,
	movw	r6, #:lower16:1960172	@ tmp295,
	movt	r6, #:upper16:1960172	@ tmp295,
	rsb	lr, ip, #7	@ tmp310,,
	mov	r1, #2	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC364	@,
	movt	r2, #:upper16:.LC364	@,
	and	r7, lr, #1	@ tmp311, tmp310,
	bl	HEVC_u_v	@
	cmp	r0, #0	@,
	bne	.L1985	@,
	ldr	r0, [fp, #-152]	@, %sfp
	add	r5, r0, #1	@ i.6140,,
	cmp	r5, #7	@ i.6140,
	bgt	.L1946	@,
	cmp	r7, #0	@ tmp311,
	beq	.L1949	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC364	@,
	movt	r2, #:upper16:.LC364	@,
	bl	HEVC_u_v	@
	cmp	r0, #0	@,
	bne	.L1985	@,
	add	r5, r5, #1	@ i.6140, i.6140,
	cmp	r5, #7	@ i.6140,
	ble	.L1949	@,
	b	.L1946	@
.L1947:
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	cmp	r0, #0	@,
	bne	.L1985	@,
	cmp	r5, #7	@ i.6140,
	bgt	.L1946	@,
.L1949:
	mov	r1, #2	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC364	@,
	movt	r2, #:upper16:.LC364	@,
	bl	HEVC_u_v	@
	add	r3, r5, #1	@ tmp312, i.6140,
	movw	r2, #:lower16:.LC364	@,
	mov	r1, #2	@,
	movt	r2, #:upper16:.LC364	@,
	add	r5, r3, #1	@ i.6140, tmp312,
	cmp	r0, #0	@,
	beq	.L1947	@,
.L1985:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC365	@,
	movt	r1, #:upper16:.LC365	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46132,
	b	.L1948	@
.L1943:
	mov	r0, #0	@ D.46132,
.L1948:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1946:
	mov	lr, #0	@ i.6160,
	movw	r8, #:lower16:1960172	@ tmp287,
	mov	sl, r9	@ ivtmp.6139, pPTL
	str	r9, [fp, #-164]	@ pPTL, %sfp
	movt	r8, #:upper16:1960172	@ tmp287,
	mov	r9, lr	@ i.6160, i.6160
	b	.L1953	@
.L1952:
	ldr	ip, [fp, #-152]	@, %sfp
	add	r9, r9, #1	@ i.6160, i.6160,
	ldr	r3, [fp, #-156]	@, %sfp
	add	sl, sl, #1	@ ivtmp.6139, ivtmp.6139,
	cmp	ip, r9	@, i.6160
	add	r1, r3, #4	@,,
	str	r1, [fp, #-156]	@, %sfp
	ble	.L1943	@,
.L1953:
	ldr	r2, [fp, #-160]	@, %sfp
	cmp	r2, #0	@,
	beq	.L1950	@,
	ldrb	r1, [sl, #37]	@ zero_extendqisi2	@ tmp234, <variable>.sub_layer_profile_present_flag
	cmp	r1, #0	@ tmp234,
	bne	.L1995	@,
.L1950:
	ldrb	r0, [sl, #43]	@ zero_extendqisi2	@ tmp276, <variable>.sub_layer_level_present_flag
	cmp	r0, #0	@ tmp276,
	beq	.L1952	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC370	@,
	movt	r2, #:upper16:.LC370	@,
	bl	HEVC_u_v	@
	ldr	r2, [fp, #-156]	@, %sfp
	str	r0, [r2, #360]	@, <variable>.sub_layer_level_idc
	b	.L1952	@
.L1995:
	mov	r1, #2	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC366	@,
	movt	r2, #:upper16:.LC366	@,
	bl	HEVC_u_v	@
	ldr	r5, [fp, #-156]	@, %sfp
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC367	@,
	movt	r2, #:upper16:.LC367	@,
	mov	r7, #2	@ j,
	str	r0, [r5, #288]	@, <variable>.sub_layer_profile_space
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC368	@,
	movt	r2, #:upper16:.LC368	@,
	strb	r0, [sl, #241]	@, <variable>.sub_layer_tier_flag
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	r2, [fp, #-164]	@, %sfp
	ldr	ip, [fp, #-156]	@, %sfp
	mov	r1, #1	@,
	add	r3, r2, r9, asl #5	@, tmp246,, i.6160,
	movw	r2, #:lower16:.LC369	@,
	add	r5, r3, #48	@ tmp247, tmp246,
	movt	r2, #:upper16:.LC369	@,
	add	r3, r5, r1	@ ivtmp.6091, tmp247,
	add	r6, r3, r1	@ ivtmp.6091, ivtmp.6091,
	add	r6, r6, r1	@ ivtmp.6091, ivtmp.6091,
	str	r0, [ip, #312]	@, <variable>.sub_layer_profile_idc
	ldr	r0, [r4, r8]	@, <variable>.pBS
	str	r3, [fp, #-168]	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC369	@,
	movt	r2, #:upper16:.LC369	@,
	strb	r0, [r5, #1]	@, <variable>.sub_layer_profile_compatibility_flag
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	ip, [fp, #-168]	@,
	strb	r0, [ip, #1]	@, <variable>.sub_layer_profile_compatibility_flag
.L1951:
	mov	r1, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC369	@,
	movt	r2, #:upper16:.LC369	@,
	bl	HEVC_u_v	@
	mov	r5, r6	@ tmp309, ivtmp.6091
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC369	@,
	add	r7, r7, r1	@ tmp308, j,
	movt	r2, #:upper16:.LC369	@,
	add	r7, r7, r1	@ j, tmp308,
	strb	r0, [r5], #1	@, <variable>.sub_layer_profile_compatibility_flag
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	cmp	r7, #32	@ j,
	strb	r0, [r6, #1]	@, <variable>.sub_layer_profile_compatibility_flag
	add	r6, r5, #1	@ ivtmp.6091, tmp309,
	bne	.L1951	@,
	movw	lr, #:lower16:1960172	@,
	movt	lr, #:upper16:1960172	@,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC354	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	movt	r2, #:upper16:.LC354	@,
	bl	HEVC_u_v	@
	movw	ip, #:lower16:1960172	@,
	movt	ip, #:upper16:1960172	@,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC355	@,
	movt	r2, #:upper16:.LC355	@,
	strb	r0, [sl, #247]	@, <variable>.sub_layer_progressive_source_flag
	ldr	r0, [r4, ip]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r3, #:lower16:1960172	@,
	movt	r3, #:upper16:1960172	@,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC356	@,
	movt	r2, #:upper16:.LC356	@,
	strb	r0, [sl, #253]	@, <variable>.sub_layer_interlaced_source_flag
	ldr	r0, [r4, r3]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	ip, #:lower16:1960172	@,
	movt	ip, #:upper16:1960172	@,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC357	@,
	movt	r2, #:upper16:.LC357	@,
	strb	r0, [sl, #259]	@, <variable>.sub_layer_non_packed_constraint_flag
	ldr	r0, [r4, ip]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r3, #:lower16:1960172	@,
	movt	r3, #:upper16:1960172	@,
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC358	@,
	movt	r2, #:upper16:.LC358	@,
	strb	r0, [sl, #265]	@, <variable>.sub_layer_frame_only_constraint_flag
	ldr	r0, [r4, r3]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	ip, #:lower16:1960172	@,
	movt	ip, #:upper16:1960172	@,
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC359	@,
	movt	r2, #:upper16:.LC359	@,
	ldr	r0, [r4, ip]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r1, #:lower16:1960172	@,
	movt	r1, #:upper16:1960172	@,
	movw	r2, #:lower16:.LC360	@,
	movt	r2, #:upper16:.LC360	@,
	ldr	r0, [r4, r1]	@, <variable>.pBS
	mov	r1, #12	@,
	bl	HEVC_u_v	@
	b	.L1950	@
.L1991:
	movw	r7, #:lower16:1960172	@ tmp174,
	movt	r7, #:upper16:1960172	@ tmp174,
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC350	@,
	ldr	r0, [r0, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC350	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC351	@,
	movt	r2, #:upper16:.LC351	@,
	sub	r6, fp, #144	@ tmp281,,
	mov	sl, r7	@ tmp304, tmp174
	mov	r5, #0	@ i,
	str	r0, [r9, #276]	@, <variable>.general_profile_space
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC352	@,
	movt	r2, #:upper16:.LC352	@,
	strb	r0, [r9, #0]	@, <variable>.general_tier_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	mov	r7, r4	@ pHevcCtx, pHevcCtx
	bl	HEVC_u_v	@
	str	r0, [r9, #272]	@, <variable>.general_profile_idc
.L1942:
	mov	r3, r5	@, i
	mov	r1, #100	@,
	mov	r0, r6	@, tmp281
	movw	r2, #:lower16:.LC353	@,
	movt	r2, #:upper16:.LC353	@,
	add	r4, r5, #1	@ tmp318, i,
	bl	snprintf	@
	mov	r1, #1	@,
	mov	r2, r6	@, tmp281
	ldr	r0, [r7, sl]	@, <variable>.pBS
	bl	HEVC_u_v	@
	add	ip, r9, r5	@ tmp188, pPTL, i
	mov	r3, r4	@, tmp318
	mov	r1, #100	@,
	movw	r2, #:lower16:.LC353	@,
	movt	r2, #:upper16:.LC353	@,
	add	r5, r4, #1	@ i, tmp318,
	add	r4, r9, r4	@ tmp323, pPTL, tmp318
	movw	r8, #:lower16:1960172	@ tmp320,
	movt	r8, #:upper16:1960172	@ tmp320,
	strb	r0, [ip, #1]	@, <variable>.general_profile_compatibility_flag
	mov	r0, r6	@, tmp281
	bl	snprintf	@
	ldr	r0, [r7, sl]	@, <variable>.pBS
	mov	r1, #1	@,
	mov	r2, r6	@, tmp281
	bl	HEVC_u_v	@
	cmp	r5, #32	@ i,
	strb	r0, [r4, #1]	@, <variable>.general_profile_compatibility_flag
	bne	.L1942	@,
	mov	r1, #1	@,
	ldr	r0, [r7, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC354	@,
	movt	r2, #:upper16:.LC354	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC355	@,
	movt	r2, #:upper16:.LC355	@,
	mov	r4, r7	@ pHevcCtx, pHevcCtx
	strb	r0, [r9, #33]	@, <variable>.general_progressive_source_flag
	ldr	r0, [r7, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC356	@,
	movt	r2, #:upper16:.LC356	@,
	strb	r0, [r9, #34]	@, <variable>.general_interlaced_source_flag
	ldr	r0, [r7, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC357	@,
	movt	r2, #:upper16:.LC357	@,
	strb	r0, [r9, #35]	@, <variable>.general_non_packed_constraint_flag
	ldr	r0, [r7, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC358	@,
	movt	r2, #:upper16:.LC358	@,
	strb	r0, [r9, #36]	@, <variable>.general_frame_only_constraint_flag
	ldr	r0, [r7, r8]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	ldr	r0, [r7, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC359	@,
	movt	r2, #:upper16:.LC359	@,
	bl	HEVC_u_v	@
	ldr	r0, [r7, r8]	@, <variable>.pBS
	mov	r1, #12	@,
	movw	r2, #:lower16:.LC360	@,
	movt	r2, #:upper16:.LC360	@,
	bl	HEVC_u_v	@
	ldr	r7, [r9, #272]	@ <variable>.general_profile_idc, <variable>.general_profile_idc
	movw	ip, #:lower16:4321216	@ tmp215,
	movt	ip, #:upper16:4321216	@ tmp215,
	movw	r0, #:lower16:4321220	@ tmp217,
	movt	r0, #:upper16:4321220	@ tmp217,
	str	r7, [r4, ip]	@ <variable>.general_profile_idc, <variable>.general_profile_idc
	movw	r3, #:lower16:4321224	@ tmp219,
	ldrb	r1, [r9, #2]	@ zero_extendqisi2	@ <variable>.general_profile_compatibility_flag, <variable>.general_profile_compatibility_flag
	movt	r3, #:upper16:4321224	@ tmp219,
	str	r1, [r4, r0]	@ <variable>.general_profile_compatibility_flag, <variable>.general_profile_compatibility_flag_1
	ldrb	r2, [r9, #3]	@ zero_extendqisi2	@ <variable>.general_profile_compatibility_flag, <variable>.general_profile_compatibility_flag
	str	r2, [r4, r3]	@ <variable>.general_profile_compatibility_flag, <variable>.general_profile_compatibility_flag_2
	b	.L1941	@
.L1992:
	ldr	r0, [r4, r7]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC363	@,
	movt	r2, #:upper16:.LC363	@,
	bl	HEVC_u_v	@
	strb	r0, [r9, #37]	@, <variable>.sub_layer_profile_present_flag
	b	.L1972	@
.L1993:
	ldr	r0, [r4, r7]	@, <variable>.pBS
	mov	r1, r5	@, i.6137
	movw	r2, #:lower16:.LC363	@,
	movt	r2, #:upper16:.LC363	@,
	bl	HEVC_u_v	@
	strb	r0, [r6, #37]	@, <variable>.sub_layer_profile_present_flag
	b	.L1974	@
	.fnend
	.size	HEVC_DecPTL, .-HEVC_DecPTL
	.align	2
	.global	HEVC_ProcessVPS
	.type	HEVC_ProcessVPS, %function
HEVC_ProcessVPS:
	.fnstart
.LFB1545:
	@ args = 0, pretend = 0, frame = 112
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #124
	sub	sp, sp, #124	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:1960172	@ tmp188,
	movt	r3, #:upper16:1960172	@ tmp188,
	mov	r6, r1	@ pVPS, pVPS
	mov	sl, r0	@ pHevcCtx, pHevcCtx
	mov	r1, #2	@,
	ldr	r0, [r0, r3]	@, <variable>.pBS
	movw	r2, #:lower16:.LC371	@,
	movt	r2, #:upper16:.LC371	@,
	bl	HEVC_u_v	@
	cmp	r0, #3	@ D.39504,
	str	r0, [r6, #12]	@ D.39504, <variable>.vps_reserved_three_2bits
	beq	.L1997	@,
	mov	r2, r0	@, D.39504
	movw	r1, #:lower16:.LC372	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC372	@,
	bl	dprint_vfmw	@
.L1997:
	movw	r4, #:lower16:1960172	@ tmp192,
	movt	r4, #:upper16:1960172	@ tmp192,
	mov	r1, #6	@,
	movw	r2, #:lower16:.LC373	@,
	ldr	r0, [sl, r4]	@, <variable>.pBS
	movt	r2, #:upper16:.LC373	@,
	bl	HEVC_u_v	@
	cmp	r0, #63	@ D.39511,
	str	r0, [r6, #16]	@ D.39511, <variable>.vps_max_layers_minus1
	bhi	.L2041	@,
	ldr	r0, [sl, r4]	@, <variable>.pBS
	mov	r1, #3	@,
	movw	r2, #:lower16:.LC375	@,
	movt	r2, #:upper16:.LC375	@,
	bl	HEVC_u_v	@
	cmp	r0, #6	@,
	str	r0, [fp, #-152]	@, %sfp
	bhi	.L2042	@,
	ldr	r2, [fp, #-152]	@, %sfp
	mov	r1, #1	@,
	add	r0, r2, r1	@ tmp200,,
	movw	r2, #:lower16:.LC377	@,
	str	r0, [r6, #20]	@ tmp200, <variable>.vps_max_sub_layers_minus1
	movt	r2, #:upper16:.LC377	@,
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC378	@,
	movt	r2, #:upper16:.LC378	@,
	strb	r0, [r6, #1]	@, <variable>.vps_temporal_id_nesting_flag
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r1, #65535	@ tmp208,
	cmp	r0, r1	@ D.39530, tmp208
	str	r0, [r6, #24]	@ D.39530, <variable>.vps_reserved_0xffff_16bits
	bne	.L2043	@,
	add	r5, r6, #12416	@, pVPS,
	mov	r0, sl	@, pHevcCtx
	add	r1, r5, #20	@,,
	mov	r2, #1	@,
	ldr	r3, [fp, #-152]	@, %sfp
	bl	HEVC_DecPTL	@
	subs	r5, r0, #0	@ ret,
	bne	.L2044	@,
	mov	r1, #1	@,
	ldr	r0, [sl, r4]	@, <variable>.pBS
	movw	r2, #:lower16:.LC381	@,
	movt	r2, #:upper16:.LC381	@,
	bl	HEVC_u_v	@
	ldr	r3, [fp, #-152]	@, %sfp
	movw	r1, #:lower16:.LC382	@,
	movt	r1, #:upper16:.LC382	@,
	and	r8, r3, #1	@ tmp330,,
	strb	r0, [r6, #7]	@, <variable>.vps_sub_layer_ordering_info_present_flag
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC383	@,
	movt	r1, #:upper16:.LC383	@,
	add	ip, r0, #1	@ tmp219,,
	str	ip, [r6, #52]	@ tmp219, <variable>.vps_max_dec_pic_buffering
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC384	@,
	movt	r1, #:upper16:.LC384	@,
	str	r0, [r6, #84]	@, <variable>.vps_num_reorder_pics
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldrb	r9, [r6, #7]	@ zero_extendqisi2	@ <variable>.vps_sub_layer_ordering_info_present_flag, <variable>.vps_sub_layer_ordering_info_present_flag
	cmp	r9, #0	@ <variable>.vps_sub_layer_ordering_info_present_flag,
	str	r0, [r6, #116]	@, <variable>.vps_max_latency_increase
	beq	.L2039	@,
	ldr	r7, [fp, #-152]	@, %sfp
	mov	r5, #1	@ i.6236,
	cmp	r7, r5	@, i.6236
	add	r7, r6, #4	@ ivtmp.6223, pVPS,
	blt	.L2004	@,
	cmp	r8, #0	@ tmp330,
	beq	.L2006	@,
	ldr	r0, [sl, r4]	@, <variable>.pBS
	movw	r1, #:lower16:.LC382	@,
	movt	r1, #:upper16:.LC382	@,
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC383	@,
	movt	r1, #:upper16:.LC383	@,
	add	r2, r0, r5	@ tmp367,,
	str	r2, [r7, #52]	@ tmp367, <variable>.vps_max_dec_pic_buffering
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC384	@,
	movt	r1, #:upper16:.LC384	@,
	str	r0, [r7, #84]	@, <variable>.vps_num_reorder_pics
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldrb	r3, [r6, #7]	@ zero_extendqisi2	@ <variable>.vps_sub_layer_ordering_info_present_flag, <variable>.vps_sub_layer_ordering_info_present_flag
	cmp	r3, #0	@ <variable>.vps_sub_layer_ordering_info_present_flag,
	str	r0, [r7, #116]	@, <variable>.vps_max_latency_increase
	beq	.L2039	@,
	ldr	lr, [fp, #-152]	@, %sfp
	mov	r5, #2	@ i.6236,
	add	r7, r7, #4	@ ivtmp.6223, ivtmp.6223,
	cmp	lr, r5	@, i.6236
	bge	.L2006	@,
	b	.L2004	@
.L2003:
	ldr	r0, [sl, r4]	@, <variable>.pBS
	add	r5, r5, #1	@ i.6236, i.6236,
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC383	@,
	movt	r1, #:upper16:.LC383	@,
	add	r7, r8, #4	@ ivtmp.6223, tmp332,
	add	r3, r0, #1	@ tmp355,,
	str	r3, [r8, #52]	@ tmp355, <variable>.vps_max_dec_pic_buffering
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC384	@,
	movt	r1, #:upper16:.LC384	@,
	str	r0, [r8, #84]	@, <variable>.vps_num_reorder_pics
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldrb	r1, [r6, #7]	@ zero_extendqisi2	@ <variable>.vps_sub_layer_ordering_info_present_flag, <variable>.vps_sub_layer_ordering_info_present_flag
	cmp	r1, #0	@ <variable>.vps_sub_layer_ordering_info_present_flag,
	str	r0, [r8, #116]	@, <variable>.vps_max_latency_increase
	beq	.L2039	@,
	ldr	r1, [fp, #-152]	@, %sfp
	add	r5, r5, #1	@ i.6236, i.6236,
	cmp	r1, r5	@, i.6236
	blt	.L2004	@,
.L2006:
	ldr	r0, [sl, r4]	@, <variable>.pBS
	movw	r1, #:lower16:.LC382	@,
	movt	r1, #:upper16:.LC382	@,
	add	r8, r7, #4	@ tmp332, ivtmp.6223,
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC383	@,
	movt	r1, #:upper16:.LC383	@,
	add	r0, r0, #1	@ tmp336,,
	str	r0, [r7, #52]	@ tmp336, <variable>.vps_max_dec_pic_buffering
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC384	@,
	movt	r1, #:upper16:.LC384	@,
	str	r0, [r7, #84]	@, <variable>.vps_num_reorder_pics
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldrb	r2, [r6, #7]	@ zero_extendqisi2	@ <variable>.vps_sub_layer_ordering_info_present_flag, <variable>.vps_sub_layer_ordering_info_present_flag
	movw	r1, #:lower16:.LC382	@,
	movt	r1, #:upper16:.LC382	@,
	cmp	r2, #0	@ <variable>.vps_sub_layer_ordering_info_present_flag,
	str	r0, [r7, #116]	@, <variable>.vps_max_latency_increase
	bne	.L2003	@,
.L2039:
	ldr	lr, [fp, #-152]	@, %sfp
	add	r1, r5, #1	@ tmp225, i.6236,
	cmp	lr, r1	@, tmp225
	blt	.L2004	@,
	ldr	r3, [fp, #-152]	@, %sfp
	add	r2, r6, r5, asl #2	@, tmp228, pVPS, i.6236,
	add	r9, r2, #52	@ ivtmp.6213, tmp228,
	add	r4, r6, #52	@ tmp229, pVPS,
	ldr	lr, [r6, #84]	@ <variable>.vps_num_reorder_pics, <variable>.vps_num_reorder_pics
	add	r1, r4, r3, asl #2	@, D.54065, tmp229,,
	ldr	ip, [r6, #116]	@ <variable>.vps_max_latency_increase, <variable>.vps_max_latency_increase
	add	r3, r9, #4	@ ivtmp.6213, ivtmp.6213,
	ldr	r4, [r6, #52]	@ <variable>.vps_max_dec_pic_buffering, <variable>.vps_max_dec_pic_buffering
	rsb	r0, r9, r1	@ tmp325, ivtmp.6213, D.54065
	cmp	r3, r1	@ ivtmp.6213, D.54065
	sub	r0, r0, #4	@ tmp326, tmp325,
	str	lr, [r9, #36]	@ <variable>.vps_num_reorder_pics, <variable>.vps_num_reorder_pics
	str	r4, [r9, #4]	@ <variable>.vps_max_dec_pic_buffering, <variable>.vps_max_dec_pic_buffering
	ubfx	r0, r0, #2, #1	@ tmp327, tmp326,,
	str	ip, [r9, #68]	@ <variable>.vps_max_latency_increase, <variable>.vps_max_latency_increase
	beq	.L2004	@,
	cmp	r0, #0	@ tmp327,
	beq	.L2005	@,
	ldr	ip, [r6, #52]	@ <variable>.vps_max_dec_pic_buffering, <variable>.vps_max_dec_pic_buffering
	ldr	r0, [r6, #84]	@ <variable>.vps_num_reorder_pics, <variable>.vps_num_reorder_pics
	ldr	r9, [r6, #116]	@ <variable>.vps_max_latency_increase, <variable>.vps_max_latency_increase
	str	ip, [r3, #4]	@ <variable>.vps_max_dec_pic_buffering, <variable>.vps_max_dec_pic_buffering
	str	r0, [r3, #36]	@ <variable>.vps_num_reorder_pics, <variable>.vps_num_reorder_pics
	str	r9, [r3, #68]	@ <variable>.vps_max_latency_increase, <variable>.vps_max_latency_increase
	add	r3, r3, #4	@ ivtmp.6213, ivtmp.6213,
	cmp	r3, r1	@ ivtmp.6213, D.54065
	beq	.L2004	@,
.L2005:
	ldr	ip, [r6, #52]	@ <variable>.vps_max_dec_pic_buffering, <variable>.vps_max_dec_pic_buffering
	add	r2, r3, #4	@ tmp328, ivtmp.6213,
	ldr	r9, [r6, #84]	@ <variable>.vps_num_reorder_pics, <variable>.vps_num_reorder_pics
	ldr	r0, [r6, #116]	@ <variable>.vps_max_latency_increase, <variable>.vps_max_latency_increase
	str	ip, [r3, #4]	@ <variable>.vps_max_dec_pic_buffering, <variable>.vps_max_dec_pic_buffering
	str	r9, [r3, #36]	@ <variable>.vps_num_reorder_pics, <variable>.vps_num_reorder_pics
	str	r0, [r3, #68]	@ <variable>.vps_max_latency_increase, <variable>.vps_max_latency_increase
	add	r3, r2, #4	@ ivtmp.6213, tmp328,
	ldr	lr, [r6, #52]	@ <variable>.vps_max_dec_pic_buffering, <variable>.vps_max_dec_pic_buffering
	cmp	r3, r1	@ ivtmp.6213, D.54065
	ldr	ip, [r6, #84]	@ <variable>.vps_num_reorder_pics, <variable>.vps_num_reorder_pics
	ldr	r9, [r6, #116]	@ <variable>.vps_max_latency_increase, <variable>.vps_max_latency_increase
	str	lr, [r2, #4]	@ <variable>.vps_max_dec_pic_buffering, <variable>.vps_max_dec_pic_buffering
	str	ip, [r2, #36]	@ <variable>.vps_num_reorder_pics, <variable>.vps_num_reorder_pics
	str	r9, [r2, #68]	@ <variable>.vps_max_latency_increase, <variable>.vps_max_latency_increase
	bne	.L2005	@,
.L2004:
	movw	r9, #:lower16:1960172	@ tmp234,
	movt	r9, #:upper16:1960172	@ tmp234,
	mov	r1, #6	@,
	movw	r2, #:lower16:.LC385	@,
	ldr	r0, [sl, r9]	@, <variable>.pBS
	movt	r2, #:upper16:.LC385	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC386	@,
	movt	r1, #:upper16:.LC386	@,
	str	r0, [r6, #28]	@, <variable>.vps_max_layer_id
	ldr	r0, [sl, r9]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #1024	@ D.39565,
	str	r0, [r6, #32]	@ D.39565, <variable>.vps_num_layer_sets_minus1
	bcs	.L2007	@,
	cmp	r0, #0	@ D.39565,
	ble	.L2008	@,
	mov	r4, #1	@ i.6239,
	ldr	r3, [r6, #28]	@ <variable>.vps_max_layer_id, <variable>.vps_max_layer_id
	sub	r8, fp, #144	@ tmp313,,
	b	.L2009	@
.L2011:
	ldr	r2, [r6, #32]	@ <variable>.vps_num_layer_sets_minus1, <variable>.vps_num_layer_sets_minus1
	add	r4, r4, #1	@ i.6239, i.6239,
	cmp	r2, r4	@ <variable>.vps_num_layer_sets_minus1, i.6239
	blt	.L2008	@,
.L2009:
	cmp	r3, #0	@ <variable>.vps_max_layer_id,
	addge	r7, r6, r4, asl #2	@, tmp251, pVPS, i.6239,
	movge	r5, #0	@ j,
	addge	r7, r7, #148	@ ivtmp.6202, tmp251,
	blt	.L2011	@,
.L2010:
	mov	r3, r4	@, i.6239
	mov	r1, #100	@,
	mov	r0, r8	@, tmp313
	movw	r2, #:lower16:.LC388	@,
	movt	r2, #:upper16:.LC388	@,
	str	r5, [sp, #0]	@ j,
	bl	snprintf	@
	ldr	r0, [sl, r9]	@, <variable>.pBS
	mov	r1, #1	@,
	mov	r2, r8	@, tmp313
	bl	HEVC_u_v	@
	ldr	r3, [r6, #28]	@ <variable>.vps_max_layer_id, <variable>.vps_max_layer_id
	add	r5, r5, #1	@ j, j,
	cmp	r3, r5	@ <variable>.vps_max_layer_id, j
	str	r0, [r7], #4	@, <variable>.layer_id_included_flag
	bge	.L2010	@,
	b	.L2011	@
.L2008:
	movw	r4, #:lower16:1960172	@ tmp252,
	movt	r4, #:upper16:1960172	@ tmp252,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC389	@,
	ldr	r0, [sl, r4]	@, <variable>.pBS
	movt	r2, #:upper16:.LC389	@,
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.39579,
	strb	r0, [r6, #6]	@ D.39579, <variable>.vps_timing_info_present_flag
	cmp	r0, #0	@ D.39579,
	beq	.L2012	@,
	mov	r1, #32	@,
	ldr	r0, [sl, r4]	@, <variable>.pBS
	movw	r2, #:lower16:.LC390	@,
	movt	r2, #:upper16:.LC390	@,
	bl	HEVC_u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC391	@,
	movt	r2, #:upper16:.LC391	@,
	str	r0, [r6, #36]	@, <variable>.vps_num_units_in_tick
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC392	@,
	movt	r2, #:upper16:.LC392	@,
	str	r0, [r6, #40]	@, <variable>.vps_time_scale
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r7, r0	@ D.39591,
	strb	r7, [r6, #5]	@ D.39591, <variable>.vps_poc_proportional_to_timing_flag
	cmp	r7, #0	@ D.39591,
	bne	.L2045	@,
.L2013:
	movw	r7, #:lower16:1960172	@ tmp268,
	movt	r7, #:upper16:1960172	@ tmp268,
	movw	r1, #:lower16:.LC394	@,
	movt	r1, #:upper16:.LC394	@,
	ldr	r0, [sl, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #0	@ D.39599,
	str	r0, [r6, #48]	@ D.39599, <variable>.vps_num_hrd_parameters
	ble	.L2012	@,
	movw	r4, #8340	@ tmp271,
	mov	lr, #1	@ tmp272,
	movw	r1, #:lower16:.LC395	@,
	str	lr, [r6, r4]	@ tmp272, <variable>.cprms_present_flag
	movt	r1, #:upper16:.LC395	@,
	ldr	r0, [sl, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	add	r8, r6, #12800	@ D.39612, pVPS,
	add	r5, r6, #8320	@ ivtmp.6196, pVPS,
	add	r8, r8, #20	@ D.39612, D.39612,
	add	r5, r5, #24	@ ivtmp.6196, ivtmp.6196,
	ldr	r2, [r6, r4]	@ prephitmp.6177, <variable>.cprms_present_flag
	movw	ip, #4244	@ tmp275,
	mov	r4, #0	@ i.6237,
	str	r0, [r6, ip]	@, <variable>.hrd_layer_set_idx
.L2014:
	mov	r1, r8	@, D.39612
	uxtb	r2, r2	@, prephitmp.6177
	ldr	r3, [fp, #-152]	@, %sfp
	mov	r0, sl	@, pHevcCtx
	bl	HEVC_DecHrdParam	@
	add	r4, r4, #1	@ i.6237, i.6237,
	movw	r1, #:lower16:.LC395	@,
	movt	r1, #:upper16:.LC395	@,
	cmp	r0, #0	@,
	bne	.L2046	@,
	ldr	r2, [r6, #48]	@ <variable>.vps_num_hrd_parameters, <variable>.vps_num_hrd_parameters
	cmp	r2, r4	@ <variable>.vps_num_hrd_parameters, i.6237
	ble	.L2012	@,
	ldr	r0, [sl, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r4, #0	@ i.6237,
	sub	r3, r5, #4096	@ tmp281, ivtmp.6196,
	movw	r2, #:lower16:.LC396	@,
	mov	r1, #1	@,
	movt	r2, #:upper16:.LC396	@,
	ldrle	r2, [r5, #0]	@ prephitmp.6177, <variable>.cprms_present_flag
	str	r0, [r3, #0]	@, <variable>.hrd_layer_set_idx
	ble	.L2016	@,
	ldr	r0, [sl, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r2, r0	@ prephitmp.6177,
	str	r0, [r5, #0]	@ prephitmp.6177, <variable>.cprms_present_flag
.L2016:
	add	r5, r5, #4	@ ivtmp.6196, ivtmp.6196,
	b	.L2014	@
.L2012:
	movw	r4, #:lower16:1960172	@ tmp289,
	movt	r4, #:upper16:1960172	@ tmp289,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC398	@,
	ldr	r0, [sl, r4]	@, <variable>.pBS
	movt	r2, #:upper16:.LC398	@,
	bl	HEVC_u_v	@
	uxtb	r1, r0	@ D.39622,
	strb	r1, [r6, #3]	@ D.39622, <variable>.vps_extension_flag
	cmp	r1, #0	@ D.39622,
	bne	.L2040	@,
.L2020:
	mov	r0, #0	@ D.39518,
.L1999:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2021:
	ldr	r0, [sl, r4]	@, <variable>.pBS
	bl	HEVC_u_v	@
	strb	r0, [r6, #4]	@, <variable>.vps_extension_data_flag
.L2040:
	mov	r0, sl	@, pHevcCtx
	bl	HEVC_MoreRbspData	@
	movw	r2, #:lower16:.LC279	@,
	mov	r1, #1	@,
	movt	r2, #:upper16:.LC279	@,
	cmp	r0, #0	@,
	bne	.L2021	@,
	b	.L2020	@
.L2046:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC397	@,
	movt	r1, #:upper16:.LC397	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39518,
	b	.L1999	@
.L2045:
	ldr	r0, [sl, r4]	@, <variable>.pBS
	movw	r1, #:lower16:.LC393	@,
	movt	r1, #:upper16:.LC393	@,
	bl	HEVC_ue_v	@
	str	r0, [r6, #44]	@, <variable>.vps_num_ticks_poc_diff_one_minus1
	b	.L2013	@
.L2043:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC379	@,
	movt	r1, #:upper16:.LC379	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39518,
	b	.L1999	@
.L2041:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC374	@,
	movt	r1, #:upper16:.LC374	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39518,
	b	.L1999	@
.L2044:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC380	@,
	movt	r1, #:upper16:.LC380	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39518,
	b	.L1999	@
.L2042:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC376	@,
	movt	r1, #:upper16:.LC376	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39518,
	b	.L1999	@
.L2007:
	mov	r2, r0	@, D.39565
	movw	r1, #:lower16:.LC387	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC387	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39518,
	b	.L1999	@
	.fnend
	.size	HEVC_ProcessVPS, .-HEVC_ProcessVPS
	.align	2
	.global	HEVC_ReadByteAlignment
	.type	HEVC_ReadByteAlignment, %function
HEVC_ReadByteAlignment:
	.fnstart
.LFB1645:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:1960172	@ tmp140,
	movt	r4, #:upper16:1960172	@ tmp140,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC279	@,
	ldr	r0, [r0, r4]	@, <variable>.pBS
	movt	r2, #:upper16:.LC279	@,
	bl	HEVC_u_v	@
	cmp	r0, #0	@,
	beq	.L2052	@,
	ldr	r0, [r5, r4]	@, <variable>.pBS
	bl	BsBitsToNextByte	@
	subs	r1, r0, #0	@ skiplen,
	moveq	r0, r1	@ D.46034, skiplen
	ldmeqfd	sp, {r4, r5, fp, sp, pc}	@
	ldr	r0, [r5, r4]	@, <variable>.pBS
	movw	r2, #:lower16:.LC279	@,
	movt	r2, #:upper16:.LC279	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC400	@,
	movt	r1, #:upper16:.LC400	@,
	mov	r2, r0	@ D.46038,
	mov	r0, #19	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.46034,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L2052:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC399	@,
	movt	r1, #:upper16:.LC399	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46034,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_ReadByteAlignment, .-HEVC_ReadByteAlignment
	.align	2
	.global	HEVC_DecSliceSegmentHeader
	.type	HEVC_DecSliceSegmentHeader, %function
HEVC_DecSliceSegmentHeader:
	.fnstart
.LFB1580:
	@ args = 0, pretend = 0, frame = 64
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #76
	sub	sp, sp, #76	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:1960172	@ tmp284,
	movt	r5, #:upper16:1960172	@ tmp284,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	str	r1, [fp, #-80]	@ IsDecSlice, %sfp
	movw	r2, #:lower16:.LC401	@,
	mov	r1, #1	@,
	movt	r2, #:upper16:.LC401	@,
	ldr	r0, [r0, r5]	@, <variable>.pBS
	movw	r6, #:lower16:2125432	@ tmp289,
	bl	HEVC_u_v	@
	movt	r6, #:upper16:2125432	@ tmp289,
	movw	r3, #:lower16:2125361	@ tmp287,
	movt	r3, #:upper16:2125361	@ tmp287,
	ldr	r8, [r4, r6]	@ D.48066, <variable>.CurrSlice.nal_unit_type
	sub	r1, r8, #16	@ tmp290, D.48066,
	cmp	r1, #5	@ tmp290,
	movhi	r2, #0	@,
	movls	r2, #1	@,
	str	r2, [fp, #-56]	@, %sfp
	cmp	r2, #0	@,
	strb	r0, [r4, r3]	@, <variable>.CurrSlice.first_slice_segment_in_pic_flag
	bne	.L2241	@,
.L2054:
	movw	r6, #:lower16:1960172	@ tmp297,
	movt	r6, #:upper16:1960172	@ tmp297,
	movw	r1, #:lower16:.LC403	@,
	movt	r1, #:upper16:.LC403	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r5, #:lower16:2125436	@ tmp300,
	bl	HEVC_ue_v	@
	movt	r5, #:upper16:2125436	@ tmp300,
	cmp	r0, #0	@ D.41882,
	str	r0, [r4, r5]	@ D.41882, <variable>.CurrSlice.pic_parameter_set_id
	ldrlt	ip, [r4, #156]	@ prephitmp.6314, <variable>.MaxPpsNum
	blt	.L2056	@,
	ldr	ip, [r4, #156]	@ prephitmp.6314, <variable>.MaxPpsNum
	cmp	r0, ip	@ D.41882, prephitmp.6314
	bge	.L2056	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_VpsSpsPpsCheck	@
	cmp	r0, #0	@,
	bne	.L2242	@,
	movw	lr, #:lower16:1960184	@ tmp311,
	movt	lr, #:upper16:1960184	@ tmp311,
	ldr	ip, [r4, r5]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r9, #7704	@ tmp315,
	ldr	r0, [r4, lr]	@ <variable>.pPPS, <variable>.pPPS
	movw	r5, #:lower16:1960180	@ tmp317,
	movt	r5, #:upper16:1960180	@ tmp317,
	movw	r7, #36364	@ tmp320,
	mla	r9, r9, ip, r0	@ pPPS, tmp315, <variable>.CurrSlice.pic_parameter_set_id, <variable>.pPPS
	ldr	r3, [r4, r5]	@ <variable>.pSPS, <variable>.pSPS
	ldrb	r1, [r9, #2]	@ zero_extendqisi2	@ <variable>.dependent_slice_segments_enabled_flag, <variable>.dependent_slice_segments_enabled_flag
	ldr	r2, [r9, #32]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	r1, #0	@ <variable>.dependent_slice_segments_enabled_flag,
	mla	r5, r7, r2, r3	@ pSPS, tmp320, <variable>.seq_parameter_set_id, <variable>.pSPS
	bne	.L2243	@,
.L2062:
	movw	r3, #:lower16:2125363	@ tmp330,
	movt	r3, #:upper16:2125363	@ tmp330,
	mov	r1, #0	@ tmp331,
	strb	r1, [r4, r3]	@ tmp331, <variable>.CurrSlice.dependent_slice_segment_flag
.L2063:
	ldr	r7, [r5, #160]	@ D.41922, <variable>.max_cu_width
	cmp	r7, #0	@ D.41922,
	ldreq	r3, [r5, #164]	@ prephitmp.6316, <variable>.max_cu_height
	beq	.L2065	@,
	ldr	r3, [r5, #164]	@ D.41924, <variable>.max_cu_height
	cmp	r3, #0	@ D.41924,
	beq	.L2065	@,
	ldr	r2, [r5, #76]	@ <variable>.pic_height_in_luma_samples, <variable>.pic_height_in_luma_samples
	mov	r1, r3	@, D.41924
	add	lr, r3, r2	@ tmp334, D.41924, <variable>.pic_height_in_luma_samples
	sub	r0, lr, #1	@, tmp334,
	bl	__aeabi_uidiv	@
	mov	r1, r7	@, D.41922
	mov	r6, r0	@ tmp340,
	ldr	r0, [r5, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	add	r3, r7, r0	@ tmp341, D.41922, <variable>.pic_width_in_luma_samples
	sub	r0, r3, #1	@, tmp341,
	bl	__aeabi_uidiv	@
	ldr	r7, [r5, #216]	@ <variable>.max_cu_depth, <variable>.max_cu_depth
	mov	r3, #1	@ tmp350,
	mov	ip, r7, asl r3	@ tmp348, <variable>.max_cu_depth,
	mov	r7, r3, asl ip	@ maxParts, tmp350,
	mul	r6, r0, r6	@ numCUs,, tmp340
	cmp	r6, r3	@ numCUs,
	movle	r1, #0	@ reqBitsOuter,
	ble	.L2068	@,
	mov	r1, #0	@ reqBitsOuter,
.L2069:
	add	r1, r1, #1	@ reqBitsOuter, reqBitsOuter,
	cmp	r6, r3, asl r1	@ numCUs, tmp907,
	bgt	.L2069	@,
.L2068:
	movw	r3, #:lower16:2125361	@ tmp353,
	movt	r3, #:upper16:2125361	@ tmp353,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.first_slice_segment_in_pic_flag, <variable>.CurrSlice.first_slice_segment_in_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.first_slice_segment_in_pic_flag,
	movne	r0, #0	@ prephitmp.6446,
	beq	.L2244	@,
.L2073:
	mul	r7, r7, r6	@ tmp366, maxParts, numCUs
	movw	r1, #:lower16:2125363	@ tmp369,
	movt	r1, #:upper16:2125363	@ tmp369,
	ldr	ip, [r4, #180]	@ <variable>.LastSlicePoc, <variable>.LastSlicePoc
	movw	lr, #:lower16:2125512	@ tmp364,
	movw	r2, #:lower16:2125516	@ tmp365,
	ldrb	r6, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.dependent_slice_segment_flag, <variable>.CurrSlice.dependent_slice_segment_flag
	movt	lr, #:upper16:2125512	@ tmp364,
	movt	r2, #:upper16:2125516	@ tmp365,
	movw	r3, #:lower16:2125408	@ tmp367,
	cmp	r6, #0	@ <variable>.CurrSlice.dependent_slice_segment_flag,
	movt	r3, #:upper16:2125408	@ tmp367,
	str	r0, [r4, lr]	@ prephitmp.6446, <variable>.CurrSlice.dependent_slice_curstart_cuaddr
	str	r7, [r4, r2]	@ tmp366, <variable>.CurrSlice.dependent_slice_curend_cuaddr
	str	ip, [r4, r3]	@ <variable>.LastSlicePoc, <variable>.CurrSlice.poc
	beq	.L2245	@,
.L2074:
	ldr	r1, [r9, #12]	@ tmp773,
	bic	r3, r1, #-16777216	@ tmp771, tmp773,
	bic	lr, r3, #255	@ tmp771, tmp771,
	cmp	lr, #0	@ tmp771,
	movweq	r2, #:lower16:2125500	@ tmp801,
	movteq	r2, #:upper16:2125500	@ tmp801,
	streq	lr, [r4, r2]	@ tmp771, <variable>.CurrSlice.num_entry_point_offsets
	bne	.L2246	@,
.L2180:
	ldrb	r3, [r9, #23]	@ zero_extendqisi2	@ <variable>.slice_segment_header_extension_present_flag, <variable>.slice_segment_header_extension_present_flag
	cmp	r3, #0	@ <variable>.slice_segment_header_extension_present_flag,
	beq	.L2184	@,
	movw	r8, #:lower16:1960172	@ tmp804,
	movt	r8, #:upper16:1960172	@ tmp804,
	movw	r1, #:lower16:.LC470	@,
	movt	r1, #:upper16:.LC470	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r7, #:lower16:2125504	@ tmp807,
	bl	HEVC_ue_v	@
	movt	r7, #:upper16:2125504	@ tmp807,
	cmp	r0, #256	@ D.42440,
	str	r0, [r4, r7]	@ D.42440, <variable>.CurrSlice.slice_segment_header_extension_length
	bhi	.L2247	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	BsResidBits	@
	ldr	r3, [r4, r7]	@ D.42441, <variable>.CurrSlice.slice_segment_header_extension_length
	cmp	r0, r3	@ bitsLeft, D.42441
	bcc	.L2186	@,
	cmp	r3, #0	@ D.42441,
	movwne	r6, #:lower16:2125508	@ tmp884,
	movne	r5, #0	@ i.6529,
	movtne	r6, #:upper16:2125508	@ tmp884,
	beq	.L2184	@,
.L2188:
	mov	r1, #8	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC473	@,
	movt	r2, #:upper16:.LC473	@,
	bl	HEVC_u_v	@
	ldr	r1, [r4, r7]	@ <variable>.CurrSlice.slice_segment_header_extension_length, <variable>.CurrSlice.slice_segment_header_extension_length
	add	r5, r5, #1	@ i.6529, i.6529,
	cmp	r1, r5	@ <variable>.CurrSlice.slice_segment_header_extension_length, i.6529
	str	r0, [r4, r6]	@, <variable>.CurrSlice.slice_segment_header_extension_data_byte
	bhi	.L2188	@,
.L2184:
	movw	lr, #:lower16:2125512	@ tmp818,
	movt	lr, #:upper16:2125512	@ tmp818,
	ldr	r3, [r4, lr]	@ <variable>.CurrSlice.dependent_slice_curstart_cuaddr, <variable>.CurrSlice.dependent_slice_curstart_cuaddr
	cmp	r3, #0	@ <variable>.CurrSlice.dependent_slice_curstart_cuaddr,
	bne	.L2189	@,
	ldrb	r2, [r4, #0]	@ zero_extendqisi2	@ <variable>.bNewSequence, <variable>.bNewSequence
	cmp	r2, #0	@ <variable>.bNewSequence,
	beq	.L2190	@,
	ldr	r6, [fp, #-56]	@, %sfp
	cmp	r6, #0	@,
	beq	.L2189	@,
	ldr	r7, [fp, #-80]	@, %sfp
	mov	ip, #1	@ tmp823,
	strb	ip, [r4, #2]	@ tmp823, <variable>.bNoRaslOutputFlag
	cmp	r7, #0	@,
	strneb	r3, [r4, #0]	@ <variable>.CurrSlice.dependent_slice_curstart_cuaddr, <variable>.bNewSequence
.L2192:
	movw	lr, #:lower16:2125408	@ tmp828,
	movt	lr, #:upper16:2125408	@ tmp828,
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	r3, [r4, lr]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	cmp	r3, #0	@ <variable>.CurrSlice.poc,
	moveq	r1, #0	@,
	andne	r1, r1, #1	@,,,
	cmp	r1, #0	@ tmp835,
	bne	.L2248	@,
.L2193:
	mov	r2, #0	@ tmp842,
	strb	r2, [r4, #1]	@ tmp842, <variable>.bNoOutputOfPriorPicsFlag
.L2195:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_IsNewPic	@
	movw	r1, #:lower16:2126924	@ tmp844,
	movt	r1, #:upper16:2126924	@ tmp844,
	str	r0, [r4, r1]	@, <variable>.CurrSlice.new_pic_type
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ReadByteAlignment	@
	cmp	r0, #0	@ ret.6534
	mvnne	r0, #0	@, D.41889,
.L2058:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2243:
	movw	r2, #:lower16:2125361	@ tmp323,
	movt	r2, #:upper16:2125361	@ tmp323,
	ldrb	r7, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.first_slice_segment_in_pic_flag, <variable>.CurrSlice.first_slice_segment_in_pic_flag
	cmp	r7, #0	@ <variable>.CurrSlice.first_slice_segment_in_pic_flag,
	bne	.L2062	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC406	@,
	movt	r2, #:upper16:.LC406	@,
	bl	HEVC_u_v	@
	movw	r3, #:lower16:2125363	@ tmp328,
	movt	r3, #:upper16:2125363	@ tmp328,
	strb	r0, [r4, r3]	@, <variable>.CurrSlice.dependent_slice_segment_flag
	b	.L2063	@
.L2245:
	ldr	r0, [r9, #36]	@ <variable>.num_extra_slice_header_bits, <variable>.num_extra_slice_header_bits
	cmp	r0, #0	@ <variable>.num_extra_slice_header_bits,
	beq	.L2075	@,
	movw	r7, #:lower16:1960172	@ tmp902,
	movt	r7, #:upper16:1960172	@ tmp902,
.L2076:
	mov	r1, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC410	@,
	movt	r2, #:upper16:.LC410	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC411	@,
	movt	r1, #:upper16:.LC411	@,
	add	r6, r6, #1	@ i.6449, i.6449,
	mov	r2, r0	@ ue,
	mov	r0, #19	@,
	bl	dprint_vfmw	@
	ldr	r2, [r9, #36]	@ <variable>.num_extra_slice_header_bits, <variable>.num_extra_slice_header_bits
	cmp	r2, r6	@ <variable>.num_extra_slice_header_bits, i.6449
	bhi	.L2076	@,
.L2075:
	movw	r6, #:lower16:1960172	@ tmp375,
	movt	r6, #:upper16:1960172	@ tmp375,
	movw	r1, #:lower16:.LC412	@,
	movt	r1, #:upper16:.LC412	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r3, #:lower16:2125420	@ tmp378,
	movt	r3, #:upper16:2125420	@ tmp378,
	cmp	r0, #2	@ D.41968,
	str	r0, [r4, r3]	@ D.41968, <variable>.CurrSlice.slice_type
	bhi	.L2249	@,
	ldrb	ip, [r9, #4]	@ zero_extendqisi2	@ <variable>.output_flag_present_flag, <variable>.output_flag_present_flag
	cmp	ip, #0	@ <variable>.output_flag_present_flag,
	bne	.L2250	@,
	movw	r1, #:lower16:2125360	@ tmp386,
	movt	r1, #:upper16:2125360	@ tmp386,
	mov	lr, #1	@ tmp387,
	strb	lr, [r4, r1]	@ tmp387, <variable>.CurrSlice.pic_output_flag
.L2079:
	sub	r8, r8, #19	@ tmp389, D.48066,
	cmp	r8, #1	@ tmp389,
	movhi	r8, #0	@,
	movls	r8, #1	@,
	str	r8, [fp, #-76]	@, %sfp
	cmp	r8, #0	@,
	beq	.L2251	@,
	movw	r0, #:lower16:2125428	@ tmp575,
	movt	r0, #:upper16:2125428	@ tmp575,
	mov	r2, #0	@ tmp573,
	movw	r6, #:lower16:2125408	@ tmp572,
	ldr	r1, [r4, r0]	@ <variable>.CurrSlice.nuh_temporal_id, <variable>.CurrSlice.nuh_temporal_id
	movt	r6, #:upper16:2125408	@ tmp572,
	str	r2, [r4, #180]	@ tmp573, <variable>.LastSlicePoc
	cmp	r1, r2	@ <variable>.CurrSlice.nuh_temporal_id,
	str	r2, [r4, r6]	@ tmp573, <variable>.CurrSlice.poc
	streq	r1, [fp, #-64]	@ <variable>.CurrSlice.nuh_temporal_id, %sfp
	movweq	r6, #:lower16:2125412	@ tmp577,
	movteq	r6, #:upper16:2125412	@ tmp577,
	strne	r2, [fp, #-64]	@ tmp573, %sfp
	streq	r1, [r4, #176]	@ <variable>.CurrSlice.nuh_temporal_id, <variable>.PrevSlicePoc
	streq	r1, [r4, r6]	@ <variable>.CurrSlice.nuh_temporal_id, <variable>.CurrSlice.prev_poc
.L2122:
	ldrb	r3, [r5, #9]	@ zero_extendqisi2	@ <variable>.sample_adaptive_offset_enabled_flag, <variable>.sample_adaptive_offset_enabled_flag
	cmp	r3, #0	@ <variable>.sample_adaptive_offset_enabled_flag,
	bne	.L2252	@,
.L2124:
	ldr	r7, [fp, #-76]	@, %sfp
	movw	r6, #:lower16:2125420	@ tmp594,
	movt	r6, #:upper16:2125420	@ tmp594,
	cmp	r7, #0	@,
	movwne	r3, #:lower16:2125367	@ tmp591,
	movtne	r3, #:upper16:2125367	@ tmp591,
	movne	r2, #0	@ tmp592,
	strneb	r2, [r4, r3]	@ tmp592, <variable>.CurrSlice.slice_temporal_mvp_enable_flag
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L2126	@,
	movw	r7, #:lower16:1960172	@ tmp596,
	movt	r7, #:upper16:1960172	@ tmp596,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC434	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC434	@,
	bl	HEVC_u_v	@
	movw	r3, #:lower16:2125368	@ tmp599,
	movt	r3, #:upper16:2125368	@ tmp599,
	uxtb	r0, r0	@ D.42173,
	strb	r0, [r4, r3]	@ D.42173, <variable>.CurrSlice.num_ref_idx_active_override_flag
	cmp	r0, #0	@ D.42173,
	bne	.L2253	@,
	ldr	r1, [r4, r6]	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	lr, #:lower16:2125528	@ tmp618,
	ldr	ip, [r9, #40]	@ <variable>.num_ref_idx_l0_default_active, <variable>.num_ref_idx_l0_default_active
	movt	lr, #:upper16:2125528	@ tmp618,
	cmp	r1, #0	@ <variable>.CurrSlice.slice_type,
	str	ip, [r4, lr]	@ <variable>.num_ref_idx_l0_default_active, <variable>.CurrSlice.num_ref_idx
	movwne	lr, #:lower16:2125532	@ tmp624,
	movtne	lr, #:upper16:2125532	@ tmp624,
	strne	r0, [r4, lr]	@ D.42173, <variable>.CurrSlice.num_ref_idx
	bne	.L2131	@,
	ldr	r2, [r9, #44]	@ <variable>.num_ref_idx_l1_default_active, <variable>.num_ref_idx_l1_default_active
.L2239:
	movw	r0, #:lower16:2125532	@ tmp622,
	movt	r0, #:upper16:2125532	@ tmp622,
	str	r2, [r4, r0]	@ <variable>.num_ref_idx_l1_default_active, <variable>.CurrSlice.num_ref_idx
.L2131:
	movw	r3, #:lower16:2125420	@ tmp626,
	movt	r3, #:upper16:2125420	@ tmp626,
	ldr	r1, [r4, r3]	@ prephitmp.6328, <variable>.CurrSlice.slice_type
	cmp	r1, #2	@ prephitmp.6328,
	beq	.L2126	@,
	ldr	r8, [fp, #-64]	@, %sfp
	cmp	r8, #0	@,
	beq	.L2254	@,
	ldr	lr, [fp, #-64]	@, %sfp
	ldr	r2, [lr, #24]	@ D.42144, <variable>.num_of_pics
	cmp	r2, #15	@ D.42144,
	bhi	.L2134	@,
	cmp	r2, #0	@ D.42144,
	beq	.L2136	@,
	ldr	r0, [fp, #-64]	@, %sfp
	mov	r3, #0	@ numRpsCurrTempList,
	sub	ip, r2, #1	@ tmp908, D.42144,
	and	lr, ip, #1	@ tmp910, tmp908,
	ldr	r6, [r0, #100]	@ tmp629, <variable>.used_flag
	cmp	r6, r3	@ tmp629,
	movne	r3, #1	@ numRpsCurrTempList,
.L2209:
	mov	r0, #1	@ i,
	ldr	r6, [fp, #-64]	@, %sfp
	cmp	r0, r2	@ i, D.42144
	add	ip, r6, #4	@ ivtmp.6367,,
	beq	.L2229	@,
	cmp	lr, #0	@ tmp910,
	beq	.L2138	@,
	ldr	lr, [ip, #100]	@ tmp940, <variable>.used_flag
	add	ip, ip, #4	@ ivtmp.6367, ivtmp.6367,
	cmp	lr, #0	@ tmp940,
	addne	r3, r3, r0	@ numRpsCurrTempList, numRpsCurrTempList,
	add	r0, r0, #1	@ i, i,
	cmp	r0, r2	@ i, D.42144
	beq	.L2229	@,
.L2138:
	add	lr, ip, #4	@ tmp912, ivtmp.6367,
	ldr	ip, [ip, #100]	@ tmp935, <variable>.used_flag
	add	r0, r0, #1	@ tmp911, i,
	cmp	ip, #0	@ tmp935,
	ldr	ip, [lr, #100]	@ tmp939, <variable>.used_flag
	addne	r3, r3, #1	@ numRpsCurrTempList, numRpsCurrTempList,
	cmp	ip, #0	@ tmp939,
	addne	r3, r3, #1	@ numRpsCurrTempList, numRpsCurrTempList,
.L2214:
	add	r0, r0, #1	@ i, tmp911,
	add	ip, lr, #4	@ ivtmp.6367, tmp912,
	cmp	r0, r2	@ i, D.42144
	bne	.L2138	@,
.L2229:
	ldrb	r2, [r9, #22]	@ zero_extendqisi2	@ <variable>.lists_modification_present_flag, <variable>.lists_modification_present_flag
	cmp	r2, #0	@ <variable>.lists_modification_present_flag,
	cmpne	r3, #1	@, numRpsCurrTempList,
	bgt	.L2255	@,
.L2136:
	cmp	r1, #0	@ prephitmp.6328,
	bne	.L2141	@,
	movw	lr, #:lower16:1960172	@ tmp636,
	movt	lr, #:upper16:1960172	@ tmp636,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC442	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	movt	r2, #:upper16:.LC442	@,
	bl	HEVC_u_v	@
	movw	r2, #:lower16:2125420	@ tmp641,
	movt	r2, #:upper16:2125420	@ tmp641,
	movw	ip, #:lower16:2125369	@ tmp639,
	movt	ip, #:upper16:2125369	@ tmp639,
	ldr	r1, [r4, r2]	@ prephitmp.6328, <variable>.CurrSlice.slice_type
	strb	r0, [r4, ip]	@, <variable>.CurrSlice.mvd_l1_zero_flag
.L2141:
	cmp	r1, #2	@ prephitmp.6328,
	beq	.L2142	@,
	ldrb	r0, [r9, #5]	@ zero_extendqisi2	@ <variable>.cabac_init_present_flag, <variable>.cabac_init_present_flag
	cmp	r0, #0	@ <variable>.cabac_init_present_flag,
	beq	.L2142	@,
	movw	lr, #:lower16:1960172	@ tmp643,
	movt	lr, #:upper16:1960172	@ tmp643,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC443	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	movt	r2, #:upper16:.LC443	@,
	bl	HEVC_u_v	@
	movw	ip, #:lower16:2125420	@ tmp648,
	movw	r3, #:lower16:2125370	@ tmp646,
	movt	ip, #:upper16:2125420	@ tmp648,
	movt	r3, #:upper16:2125370	@ tmp646,
	ldr	r1, [r4, ip]	@ prephitmp.6328, <variable>.CurrSlice.slice_type
	strb	r0, [r4, r3]	@, <variable>.CurrSlice.cabac_init_flag
	b	.L2142	@
.L2190:
	ldr	r8, [fp, #-56]	@, %sfp
	cmp	r8, #0	@,
	strneb	r2, [r4, #2]	@ <variable>.bNewSequence, <variable>.bNoRaslOutputFlag
	bne	.L2193	@,
.L2189:
	ldrb	r0, [r4, #2]	@ zero_extendqisi2	@ <variable>.bNoRaslOutputFlag, <variable>.bNoRaslOutputFlag
	cmp	r0, #0	@ <variable>.bNoRaslOutputFlag,
	bne	.L2192	@,
	b	.L2193	@
.L2241:
	ldr	r0, [r4, r5]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC402	@,
	movt	r2, #:upper16:.LC402	@,
	bl	HEVC_u_v	@
	movw	r5, #:lower16:2125362	@ tmp295,
	movt	r5, #:upper16:2125362	@ tmp295,
	strb	r0, [r4, r5]	@, <variable>.CurrSlice.no_output_of_prior_pics_flag
	b	.L2054	@
.L2244:
	movw	lr, #:lower16:1960172	@ tmp355,
	movt	lr, #:upper16:1960172	@ tmp355,
	movw	r2, #:lower16:.LC408	@,
	movt	r2, #:upper16:.LC408	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r3, #:lower16:2125440	@ tmp358,
	movt	r3, #:upper16:2125440	@ tmp358,
	cmp	r0, #0	@ D.41944,
	str	r0, [r4, r3]	@ D.41944, <variable>.CurrSlice.slice_segment_address
	ldrlt	r2, [r5, #240]	@ <variable>.ctb_num_width, <variable>.ctb_num_width
	ldrlt	r3, [r5, #244]	@ <variable>.ctb_num_height, <variable>.ctb_num_height
	mullt	r3, r2, r3	@ prephitmp.6445, <variable>.ctb_num_width, <variable>.ctb_num_height
	blt	.L2072	@,
	ldr	r1, [r5, #244]	@ <variable>.ctb_num_height, <variable>.ctb_num_height
	ldr	r2, [r5, #240]	@ <variable>.ctb_num_width, <variable>.ctb_num_width
	mul	r3, r2, r1	@ prephitmp.6445, <variable>.ctb_num_width, <variable>.ctb_num_height
	cmp	r0, r3	@ D.41944, prephitmp.6445
	mulcc	r0, r7, r0	@ prephitmp.6446, maxParts, D.41944
	bcc	.L2073	@,
.L2072:
	mov	r2, r0	@, D.41944
	movw	r1, #:lower16:.LC409	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC409	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2246:
	movw	lr, #:lower16:1960172	@ tmp774,
	movt	lr, #:upper16:1960172	@ tmp774,
	movw	r1, #:lower16:.LC465	@,
	movt	r1, #:upper16:.LC465	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r3, #:lower16:2125500	@ tmp777,
	movt	r3, #:upper16:2125500	@ tmp777,
	str	r0, [r4, r3]	@ D.42402, <variable>.CurrSlice.num_entry_point_offsets
	ldr	ip, [r9, #12]	@ tmp779,
	bic	r2, ip, #-16777216	@ temp.6519, tmp779,
	bic	r3, r2, #255	@ temp.6519, temp.6519,
	cmp	r3, #65536	@ temp.6519,
	beq	.L2256	@,
	cmp	r3, #256	@ temp.6519,
	ldreq	r3, [r9, #72]	@ <variable>.num_tile_rows, <variable>.num_tile_rows
	ldrne	r3, [r9, #68]	@ <variable>.num_tile_columns, <variable>.num_tile_columns
	ldreq	r2, [r9, #68]	@ <variable>.num_tile_columns, <variable>.num_tile_columns
	ldrne	r2, [r5, #244]	@ <variable>.ctb_num_height, <variable>.ctb_num_height
	mul	ip, r2, r3	@ tmp784, <variable>.ctb_num_height, <variable>.num_tile_columns
	sub	r3, ip, #1	@ MaxNumEntryPointOffsets, tmp784,
.L2176:
	cmp	r3, #255	@ MaxNumEntryPointOffsets,
	movcs	r3, #255	@ D.42416,
	cmp	r0, r3	@ D.42402, D.42416
	bhi	.L2257	@,
	cmp	r0, #0	@ D.42402,
	beq	.L2180	@,
	movw	r8, #:lower16:1960172	@ tmp790,
	movt	r8, #:upper16:1960172	@ tmp790,
	movw	r1, #:lower16:.LC467	@,
	movt	r1, #:upper16:.LC467	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	sl, #:lower16:2125424	@ tmp793,
	bl	HEVC_ue_v	@
	movt	sl, #:upper16:2125424	@ tmp793,
	cmp	r0, #31	@ D.42423,
	add	r1, r0, #1	@ prephitmp.6506, D.42423,
	str	r1, [r4, sl]	@ prephitmp.6506, <variable>.CurrSlice.offset_len
	bhi	.L2258	@,
	movw	r7, #:lower16:2125500	@ tmp788,
	movt	r7, #:upper16:2125500	@ tmp788,
	ldr	r0, [r4, r7]	@ <variable>.CurrSlice.num_entry_point_offsets, <variable>.CurrSlice.num_entry_point_offsets
	cmp	r0, #0	@ <variable>.CurrSlice.num_entry_point_offsets,
	beq	.L2180	@,
	movw	r5, #:lower16:2125540	@ ivtmp.6357,
	movt	r5, #:upper16:2125540	@ ivtmp.6357,
	add	r6, r4, r5	@ ivtmp.6357, pHevcCtx, ivtmp.6357
	mov	r5, #0	@ i.6504,
	b	.L2183	@
.L2259:
	ldr	r1, [r4, sl]	@ prephitmp.6506, <variable>.CurrSlice.offset_len
.L2183:
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC469	@,
	movt	r2, #:upper16:.LC469	@,
	add	r5, r5, #1	@ i.6504, i.6504,
	bl	HEVC_u_v	@
	ldr	r2, [r4, r7]	@ <variable>.CurrSlice.num_entry_point_offsets, <variable>.CurrSlice.num_entry_point_offsets
	cmp	r2, r5	@ <variable>.CurrSlice.num_entry_point_offsets, i.6504
	str	r0, [r6], #4	@, <variable>.CurrSlice.entry_point_offset
	bhi	.L2259	@,
	b	.L2180	@
.L2186:
	mov	r2, r0	@, bitsLeft
	movw	r1, #:lower16:.LC472	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC472	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2126:
	mov	r1, #2	@ prephitmp.6328,
.L2142:
	movw	r0, #:lower16:2125367	@ tmp649,
	movt	r0, #:upper16:2125367	@ tmp649,
	ldrb	r2, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_temporal_mvp_enable_flag, <variable>.CurrSlice.slice_temporal_mvp_enable_flag
	cmp	r2, #0	@ <variable>.CurrSlice.slice_temporal_mvp_enable_flag,
	beq	.L2143	@,
	cmp	r1, #0	@ prephitmp.6328,
	beq	.L2260	@,
	movw	lr, #:lower16:2125371	@ tmp656,
	movt	lr, #:upper16:2125371	@ tmp656,
	mov	ip, #1	@ tmp657,
	strb	ip, [r4, lr]	@ tmp657, <variable>.CurrSlice.collocated_from_l0_flag
.L2145:
	movw	r2, #:lower16:2125420	@ tmp659,
	movt	r2, #:upper16:2125420	@ tmp659,
	ldr	r3, [r4, r2]	@ prephitmp.6320, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ prephitmp.6320,
	beq	.L2146	@,
	movw	r1, #:lower16:2125371	@ tmp660,
	movt	r1, #:upper16:2125371	@ tmp660,
	ldrb	r0, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.collocated_from_l0_flag, <variable>.CurrSlice.collocated_from_l0_flag
	cmp	r0, #0	@ <variable>.CurrSlice.collocated_from_l0_flag,
	bne	.L2261	@,
	movw	r0, #:lower16:2125532	@ tmp664,
	movt	r0, #:upper16:2125532	@ tmp664,
	ldr	r2, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx, <variable>.CurrSlice.num_ref_idx
	cmp	r2, #1	@ <variable>.CurrSlice.num_ref_idx,
	bls	.L2146	@,
.L2148:
	movw	lr, #:lower16:1960172	@ tmp666,
	movt	lr, #:upper16:1960172	@ tmp666,
	movw	r1, #:lower16:.LC445	@,
	movt	r1, #:upper16:.LC445	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	ip, #:lower16:2125371	@ tmp670,
	movt	ip, #:upper16:2125371	@ tmp670,
	movw	r3, #:lower16:2125472	@ tmp669,
	movt	r3, #:upper16:2125472	@ tmp669,
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ temp.6500, <variable>.CurrSlice.collocated_from_l0_flag
	cmp	r2, #0	@ temp.6500,
	str	r0, [r4, r3]	@ D.42261, <variable>.CurrSlice.collocated_ref_idx
	movwne	r3, #:lower16:2125464	@ tmp671,
	movweq	r3, #:lower16:2125468	@ tmp673,
	movtne	r3, #:upper16:2125464	@ tmp671,
	movteq	r3, #:upper16:2125468	@ tmp673,
	cmp	r0, #0	@ D.42261,
	ldr	r1, [r4, r3]	@ <variable>.CurrSlice.num_ref_idx_l1_active,
	sub	ip, r1, #1	@ MaxCollocatedRefIdx, <variable>.CurrSlice.num_ref_idx_l1_active,
	blt	.L2151	@,
	cmp	ip, r0	@ MaxCollocatedRefIdx, D.42261
	bcc	.L2151	@,
.L2143:
	movw	r2, #:lower16:2125420	@ tmp677,
	movt	r2, #:upper16:2125420	@ tmp677,
	ldr	r3, [r4, r2]	@ prephitmp.6320, <variable>.CurrSlice.slice_type
.L2146:
	ldrb	r0, [r9, #10]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r0, #0	@ <variable>.weighted_pred_flag,
	beq	.L2152	@,
	cmp	r3, #1	@ prephitmp.6320,
	beq	.L2153	@,
.L2152:
	ldrb	r1, [r9, #11]	@ zero_extendqisi2	@ <variable>.weighted_bipred_flag, <variable>.weighted_bipred_flag
	cmp	r1, #0	@ <variable>.weighted_bipred_flag,
	beq	.L2154	@,
	cmp	r3, #0	@ prephitmp.6320,
	bne	.L2155	@,
.L2153:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecPredWeightTable	@
	cmp	r0, #0	@,
	bne	.L2156	@,
.L2154:
	movw	r3, #:lower16:2125420	@ tmp682,
	movt	r3, #:upper16:2125420	@ tmp682,
	ldr	r3, [r4, r3]	@ prephitmp.6320, <variable>.CurrSlice.slice_type
.L2155:
	cmp	r3, #2	@ prephitmp.6320,
	beq	.L2157	@,
	movw	lr, #:lower16:1960172	@ tmp683,
	movt	lr, #:upper16:1960172	@ tmp683,
	movw	r1, #:lower16:.LC448	@,
	movt	r1, #:upper16:.LC448	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:2125476	@ tmp686,
	movt	r1, #:upper16:2125476	@ tmp686,
	rsb	r2, r0, #5	@ D.42288,,
	str	r2, [r4, r1]	@ D.42288, <variable>.CurrSlice.max_num_merge_cand
	sub	ip, r2, #1	@ tmp687, D.42288,
	cmp	ip, #4	@ tmp687,
	bhi	.L2262	@,
.L2157:
	movw	r6, #:lower16:1960172	@ tmp689,
	movt	r6, #:upper16:1960172	@ tmp689,
	movw	r1, #:lower16:.LC450	@,
	movt	r1, #:upper16:.LC450	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_se_v	@
	movw	ip, #:lower16:2125480	@ tmp692,
	movt	ip, #:upper16:2125480	@ tmp692,
	movw	r3, #:lower16:2125416	@ tmp694,
	movt	r3, #:upper16:2125416	@ tmp694,
	str	r0, [r4, ip]	@ D.42297, <variable>.CurrSlice.slice_qp_delta
	ldr	r2, [r9, #48]	@ <variable>.pic_init_qp, <variable>.pic_init_qp
	add	r2, r0, r2	@ D.42300, D.42297, <variable>.pic_init_qp
	str	r2, [r4, r3]	@ D.42300, <variable>.CurrSlice.slice_qp
	ldr	r3, [r5, #104]	@ D.42304, <variable>.qp_bdOffset_y
	rsb	r0, r3, #0	@ tmp695, D.42304
	cmp	r2, r0	@ D.42300, tmp695
	blt	.L2158	@,
	cmp	r2, #51	@ D.42300,
	bgt	.L2158	@,
	ldrb	r1, [r9, #9]	@ zero_extendqisi2	@ <variable>.pic_slice_chroma_qp_offsets_present_flag, <variable>.pic_slice_chroma_qp_offsets_present_flag
	cmp	r1, #0	@ <variable>.pic_slice_chroma_qp_offsets_present_flag,
	bne	.L2263	@,
.L2160:
	ldrb	r3, [r9, #18]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	cmp	r3, #0	@ <variable>.deblocking_filter_control_present_flag,
	beq	.L2240	@,
	ldrb	lr, [r9, #19]	@ zero_extendqisi2	@ <variable>.deblocking_filter_override_enabled_flag, <variable>.deblocking_filter_override_enabled_flag
	cmp	lr, #0	@ <variable>.deblocking_filter_override_enabled_flag,
	movweq	r3, #:lower16:2125372	@ tmp724,
	movteq	r3, #:upper16:2125372	@ tmp724,
	streqb	lr, [r4, r3]	@ <variable>.deblocking_filter_override_enabled_flag, <variable>.CurrSlice.deblocking_filter_override_flag
	bne	.L2264	@,
.L2168:
	ldrb	r0, [r9, #20]	@ zero_extendqisi2	@ prephitmp.6325, <variable>.pic_disable_deblocking_filter_flag
	movw	r1, #:lower16:2125373	@ tmp748,
	movt	r1, #:upper16:2125373	@ tmp748,
	movw	r3, #:lower16:2125492	@ tmp750,
	movt	r3, #:upper16:2125492	@ tmp750,
	movw	ip, #:lower16:2125496	@ tmp752,
	strb	r0, [r4, r1]	@ prephitmp.6325, <variable>.CurrSlice.slice_disable_deblocking_filter_flag
	movt	ip, #:upper16:2125496	@ tmp752,
	ldr	lr, [r9, #76]	@ <variable>.pps_beta_offset_div2, <variable>.pps_beta_offset_div2
	str	lr, [r4, r3]	@ <variable>.pps_beta_offset_div2, <variable>.CurrSlice.slice_beta_offset_div2
	ldr	r2, [r9, #80]	@ <variable>.pps_tc_offset_div2, <variable>.pps_tc_offset_div2
	str	r2, [r4, ip]	@ <variable>.pps_tc_offset_div2, <variable>.CurrSlice.slice_tc_offset_div2
.L2165:
	ldrb	r3, [r5, #9]	@ zero_extendqisi2	@ <variable>.sample_adaptive_offset_enabled_flag, <variable>.sample_adaptive_offset_enabled_flag
	cmp	r3, #0	@ <variable>.sample_adaptive_offset_enabled_flag,
	beq	.L2172	@,
	movw	r3, #:lower16:2125364	@ tmp755,
	movt	r3, #:upper16:2125364	@ tmp755,
	ldr	lr, [r4, r3]	@ tmp758,
	bic	ip, lr, #-16777216	@ tmp756, tmp758,
	bic	r2, ip, #255	@ tmp756, tmp756,
	subs	r3, r2, #0	@ prephitmp.6326, tmp756,
	movne	r3, #1	@ prephitmp.6326
.L2172:
	ldrb	r2, [r9, #17]	@ zero_extendqisi2	@ D.42390, <variable>.loop_filter_across_slices_enabled_flag
	cmp	r2, #0	@ D.42390,
	beq	.L2173	@,
	cmp	r0, #0	@ prephitmp.6325,
	orreq	r3, r3, #1	@,, tmp763, prephitmp.6326
	cmp	r3, #0	@ tmp763,
	bne	.L2265	@,
.L2173:
	movw	r0, #:lower16:2125374	@ tmp769,
	movt	r0, #:upper16:2125374	@ tmp769,
	strb	r2, [r4, r0]	@ D.42390, <variable>.CurrSlice.slice_loop_filter_across_slices_enabled_flag
	b	.L2074	@
.L2248:
	movw	r0, #:lower16:2125432	@ tmp836,
	movt	r0, #:upper16:2125432	@ tmp836,
	ldr	ip, [r4, r0]	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	ip, #21	@ <variable>.CurrSlice.nal_unit_type,
	moveq	ip, #1	@ tmp838,
	streqb	ip, [r4, #1]	@ tmp838, <variable>.bNoOutputOfPriorPicsFlag
	bne	.L2193	@,
	b	.L2195	@
.L2256:
	ldr	r1, [r5, #244]	@ <variable>.ctb_num_height, <variable>.ctb_num_height
	sub	r3, r1, #1	@ MaxNumEntryPointOffsets, <variable>.ctb_num_height,
	b	.L2176	@
.L2240:
	movw	lr, #:lower16:2125373	@ tmp743,
	movt	lr, #:upper16:2125373	@ tmp743,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ prephitmp.6325, <variable>.CurrSlice.slice_disable_deblocking_filter_flag
	b	.L2165	@
.L2251:
	movw	lr, #:lower16:1960172	@ tmp391,
	movt	lr, #:upper16:1960172	@ tmp391,
	ldr	r1, [r5, #132]	@, <variable>.bits_for_poc
	movw	r2, #:lower16:.LC415	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	movt	r2, #:upper16:.LC415	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:2125448	@ tmp395,
	movt	r1, #:upper16:2125448	@ tmp395,
	mov	r2, #1	@ tmp396,
	str	r0, [fp, #-84]	@, %sfp
	str	r0, [r4, r1]	@, <variable>.CurrSlice.pic_order_cnt_lsb
	ldr	ip, [r5, #128]	@ <variable>.max_pic_order_cnt_lsb, <variable>.max_pic_order_cnt_lsb
	ldr	r6, [r4, #176]	@ D.41994, <variable>.PrevSlicePoc
	mov	r3, r2, asl ip	@, tmp396,
	str	r3, [fp, #-88]	@, %sfp
	mov	r0, r6	@, D.41994
	mov	r1, r3	@,
	bl	__aeabi_uidivmod	@
	ldr	r0, [fp, #-84]	@, %sfp
	cmp	r0, r1	@, tmp402
	rsb	r6, r1, r6	@ PrePocMsb, tmp402, D.41994
	bcs	.L2081	@,
	rsb	r8, r0, r1	@ tmp403,, tmp402
	ldr	r0, [fp, #-88]	@, %sfp
	cmp	r8, r0, lsr #1	@ tmp403,,
	addcs	r6, r6, r0	@ PocMsb, PrePocMsb,
	bcc	.L2081	@,
.L2082:
	movw	r3, #:lower16:2125432	@ tmp407,
	movt	r3, #:upper16:2125432	@ tmp407,
	movw	r0, #:lower16:2125428	@ tmp411,
	movt	r0, #:upper16:2125428	@ tmp411,
	ldr	r1, [r4, r3]	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movw	r3, #:lower16:2125408	@ tmp410,
	ldr	lr, [r4, r0]	@ <variable>.CurrSlice.nuh_temporal_id, <variable>.CurrSlice.nuh_temporal_id
	movt	r3, #:upper16:2125408	@ tmp410,
	sub	r2, r1, #16	@ tmp408, <variable>.CurrSlice.nal_unit_type,
	ldr	r8, [fp, #-84]	@, %sfp
	cmp	r2, #2	@ tmp408,
	movhi	r2, r6	@ PocMsb, PocMsb
	movls	r2, #0	@ PocMsb,
	cmp	lr, #0	@ <variable>.CurrSlice.nuh_temporal_id,
	add	r2, r2, r8	@ D.42011, PocMsb,
	str	r2, [r4, r3]	@ D.42011, <variable>.CurrSlice.poc
	str	r2, [r4, #180]	@ D.42011, <variable>.LastSlicePoc
	bne	.L2085	@,
	cmp	r1, #15	@ D.48078,
	bhi	.L2086	@,
	tst	r1, #1	@ D.48078,
	beq	.L2086	@,
	cmp	r1, #9	@ D.48078,
	bne	.L2088	@,
.L2085:
	movw	lr, #:lower16:1960172	@ tmp417,
	movt	lr, #:upper16:1960172	@ tmp417,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC416	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	movt	r2, #:upper16:.LC416	@,
	bl	HEVC_u_v	@
	movw	ip, #:lower16:2125364	@ tmp420,
	movt	ip, #:upper16:2125364	@ tmp420,
	uxtb	r1, r0	@ D.42025,
	strb	r1, [r4, ip]	@ D.42025, <variable>.CurrSlice.short_term_ref_pic_set_sps_flag
	cmp	r1, #0	@ D.42025,
	beq	.L2089	@,
	ldr	r3, [r5, #228]	@ temp.6466, <variable>.num_short_term_ref_pic_sets
	cmp	r3, #1	@ temp.6466,
	movhi	r1, #0	@ numBits,
	movhi	r2, #1	@ tmp901,
	bls	.L2091	@,
.L2093:
	add	r1, r1, #1	@ numBits, numBits,
	cmp	r3, r2, asl r1	@ temp.6466, tmp901,
	bhi	.L2093	@,
	cmp	r1, #0	@ numBits,
	bne	.L2266	@,
.L2091:
	movw	r2, #:lower16:2125452	@ tmp434,
	movt	r2, #:upper16:2125452	@ tmp434,
	mov	r1, #0	@ tmp435,
	str	r1, [r4, r2]	@ tmp435, <variable>.CurrSlice.short_term_ref_pic_set_idx
.L2096:
	add	ip, r1, r1, asl #3	@, tmp441, D.42047, D.42047,
	movw	r0, #:lower16:2128500	@,
	movt	r0, #:upper16:2128500	@,
	mov	r2, #288	@,
	add	r3, r5, ip, asl #5	@, tmp443, pSPS, tmp441,
	add	r0, r4, r0	@, pHevcCtx,
	add	r1, r3, #17920	@, tmp443,
	add	r1, r1, #12	@,,
	bl	memcpy	@
.L2092:
	ldrb	r3, [r5, #11]	@ zero_extendqisi2	@ <variable>.long_term_ref_pics_present_flag, <variable>.long_term_ref_pics_present_flag
	movw	r2, #:lower16:2128500	@,
	movt	r2, #:upper16:2128500	@,
	cmp	r3, #0	@ <variable>.long_term_ref_pics_present_flag,
	add	lr, r4, r2	@, pHevcCtx,
	str	lr, [fp, #-64]	@, %sfp
	beq	.L2097	@,
	movw	ip, #:lower16:2128516	@ tmp451,
	movt	ip, #:upper16:2128516	@ tmp451,
	movw	r3, #:lower16:2128520	@ tmp452,
	movt	r3, #:upper16:2128520	@ tmp452,
	ldr	r0, [r4, ip]	@, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	ldr	lr, [r5, #232]	@ <variable>.num_long_term_ref_pic_sps, <variable>.num_long_term_ref_pic_sps
	str	r0, [fp, #-52]	@, %sfp
	cmp	lr, #0	@ <variable>.num_long_term_ref_pic_sps,
	ldr	r1, [r4, r3]	@, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	str	r1, [fp, #-48]	@, %sfp
	bne	.L2267	@,
.L2098:
	mov	r7, #0	@,
	str	r7, [fp, #-92]	@, %sfp
	mov	sl, r7	@ bitsForLongTermPicInSPS,
.L2102:
	movw	r6, #:lower16:1960172	@ tmp460,
	movt	r6, #:upper16:1960172	@ tmp460,
	movw	r1, #:lower16:.LC422	@,
	movt	r1, #:upper16:.LC422	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r8, #:lower16:2125456	@ tmp464,
	bl	HEVC_ue_v	@
	movt	r8, #:upper16:2125456	@ tmp464,
	movw	r7, #:lower16:2128516	@ tmp467,
	movt	r7, #:upper16:2128516	@ tmp467,
	ldr	ip, [r4, r8]	@ <variable>.CurrSlice.num_long_term_sps, <variable>.CurrSlice.num_long_term_sps
	movw	r3, #:lower16:2125460	@ tmp463,
	ldr	lr, [r4, r7]	@ temp.6463, <variable>.CurrSlice.short_term_ref_pic_set.num_negative_pics
	movt	r3, #:upper16:2125460	@ tmp463,
	mov	r1, r0	@ D.42071,
	movw	r0, #:lower16:2128520	@ tmp468,
	movt	r0, #:upper16:2128520	@ tmp468,
	add	ip, r1, ip	@ D.42073, D.42071, <variable>.CurrSlice.num_long_term_sps
	str	r1, [r4, r3]	@ D.42071, <variable>.CurrSlice.num_long_term_pics
	ldr	r7, [r4, r0]	@ temp.6464, <variable>.CurrSlice.short_term_ref_pic_set.num_positive_pics
	movw	r0, #:lower16:2128532	@ tmp466,
	movt	r0, #:upper16:2128532	@ tmp466,
	add	r2, r7, lr	@ tmp469, temp.6464, temp.6463
	add	r3, r2, ip	@ tmp470, tmp469, D.42073
	str	ip, [r4, r0]	@ D.42073, <variable>.CurrSlice.short_term_ref_pic_set.num_of_longterm_pics
	cmp	r3, #15	@ tmp470,
	bhi	.L2268	@,
	cmp	ip, #0	@ D.42073,
	ldr	r1, [fp, #-48]	@, %sfp
	ldr	r2, [fp, #-52]	@, %sfp
	moveq	r3, ip	@ D.42074, D.42073
	add	r6, r1, r2	@,,
	str	r6, [fp, #-100]	@, %sfp
	beq	.L2105	@,
	ldr	r6, [fp, #-100]	@, %sfp
	movw	r7, #:lower16:532148	@ tmp480,
	movt	r7, #:upper16:532148	@ tmp480,
	movw	r3, #:lower16:531716	@ tmp477,
	sub	lr, r6, #1	@,,
	movt	r3, #:upper16:531716	@ tmp477,
	add	ip, ip, lr	@ j, D.42073,
	movw	r0, #:lower16:531700	@ tmp473,
	add	r2, ip, r7	@ tmp480, j, tmp480
	movt	r0, #:upper16:531700	@ tmp473,
	add	r7, ip, r3	@ tmp477, j, tmp477
	add	r1, ip, r0	@ tmp473, j, tmp473
	add	r0, r4, r2, asl #2	@, tmp483, pHevcCtx, tmp480,
	str	lr, [fp, #-96]	@, %sfp
	add	r3, r4, r7, asl #2	@, ivtmp.6410, pHevcCtx, tmp477,
	add	ip, r0, #8	@ ivtmp.6422, tmp483,
	add	r6, r4, r1, asl #2	@, tmp476, pHevcCtx, tmp473,
	mov	r7, #0	@ ivtmp.6414,
	add	lr, r6, #4	@, tmp476,
	str	r5, [fp, #-60]	@ pSPS, %sfp
	str	sl, [fp, #-72]	@ bitsForLongTermPicInSPS, %sfp
	mov	r6, r7	@ i.6455, ivtmp.6414
	str	lr, [fp, #-48]	@, %sfp
	mov	r5, r3	@ ivtmp.6410, ivtmp.6410
	str	r7, [fp, #-68]	@ ivtmp.6414, %sfp
	mov	sl, ip	@ ivtmp.6422, ivtmp.6422
	str	r9, [fp, #-104]	@ pPPS, %sfp
	b	.L2117	@
.L2272:
	ldr	ip, [r4, r8]	@ <variable>.CurrSlice.num_long_term_sps, <variable>.CurrSlice.num_long_term_sps
	cmp	ip, r6	@ <variable>.CurrSlice.num_long_term_sps, i.6455
	ldrne	r0, [fp, #-68]	@ deltaPocMSBCycleLT, %sfp
	beq	.L2115	@,
.L2116:
	mov	r3, #0	@,
	str	r3, [r5, #0]	@, <variable>.CurrSlice.CheckLTMSB
.L2114:
	movw	lr, #:lower16:2128532	@,
	movt	lr, #:upper16:2128532	@,
	add	r6, r6, #1	@ i.6455, i.6455,
	ldr	r9, [fp, #-48]	@, %sfp
	ldr	r3, [r4, lr]	@ D.42074, <variable>.CurrSlice.short_term_ref_pic_set.num_of_longterm_pics
	sub	r5, r5, #4	@ ivtmp.6410, ivtmp.6410,
	sub	r2, r9, #4	@,,
	add	r7, r7, #4	@ ivtmp.6414, ivtmp.6414,
	cmp	r3, r6	@ D.42074, i.6455
	str	r2, [fp, #-48]	@, %sfp
	sub	sl, sl, #4	@ ivtmp.6422, ivtmp.6422,
	str	r0, [fp, #-68]	@ deltaPocMSBCycleLT, %sfp
	bls	.L2269	@,
.L2117:
	ldr	r9, [r4, r8]	@ <variable>.CurrSlice.num_long_term_sps, <variable>.CurrSlice.num_long_term_sps
	cmp	r6, r9	@ i.6455, <variable>.CurrSlice.num_long_term_sps
	bcs	.L2106	@,
	ldr	r2, [fp, #-72]	@, %sfp
	cmp	r2, #0	@,
	bne	.L2270	@,
	ldr	r0, [fp, #-72]	@ lt_idx_sps, %sfp
	add	r9, r4, r7	@ D.54288, pHevcCtx, ivtmp.6414
.L2110:
	ldr	lr, [fp, #-60]	@, %sfp
	add	r1, r0, #62	@ tmp495, lt_idx_sps,
	add	ip, r4, r6	@, pHevcCtx, i.6455
	str	ip, [fp, #-52]	@, %sfp
	add	r3, lr, r0	@ tmp497,, lt_idx_sps
	ldr	ip, [lr, r1, asl #2]	@ pocLsbLt, <variable>.lt_ref_pic_poc_lsb_sps
	ldrb	r0, [r3, #17]	@ zero_extendqisi2	@ tmp499, <variable>.used_by_curr_pic_lt_sps_flag
	str	r0, [sl, #0]	@ tmp499, <variable>.CurrSlice.short_term_ref_pic_set.used_flag
.L2111:
	movw	r0, #:lower16:2126744	@ tmp514,
	movt	r0, #:upper16:2126744	@ tmp514,
	add	lr, r9, r0	@ tmp514, D.54288, tmp514
	movw	r1, #:lower16:1960172	@,
	movt	r1, #:upper16:1960172	@,
	movw	r2, #:lower16:.LC428	@,
	str	ip, [lr, #0]	@ pocLsbLt, <variable>.CurrSlice.pocLsbLt
	movt	r2, #:upper16:.LC428	@,
	ldr	r0, [r4, r1]	@, <variable>.pBS
	mov	r1, #1	@,
	bl	HEVC_u_v	@
	ldr	r2, [fp, #-52]	@, %sfp
	movw	r3, #:lower16:2125390	@ tmp520,
	movt	r3, #:upper16:2125390	@ tmp520,
	add	ip, r2, r3	@ tmp520,, tmp520
	uxtb	r0, r0	@ D.42112,
	strb	r0, [ip, #0]	@ D.42112, <variable>.CurrSlice.delta_poc_msb_present_flag
	cmp	r0, #0	@ D.42112,
	bne	.L2271	@,
	cmp	r6, #0	@ i.6455,
	bne	.L2272	@,
.L2115:
	mov	r0, #0	@ deltaPocMSBCycleLT,
	b	.L2116	@
.L2081:
	ldr	r3, [fp, #-84]	@, %sfp
	cmp	r3, r1	@, tmp402
	bls	.L2082	@,
	ldr	r7, [fp, #-88]	@, %sfp
	rsb	ip, r1, r3	@ tmp405, tmp402,
	cmp	ip, r7, lsr #1	@ tmp405,,
	rsbhi	r6, r7, r6	@ PocMsb,, PrePocMsb
	b	.L2082	@
.L2250:
	ldr	r0, [r4, r6]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC414	@,
	movt	r2, #:upper16:.LC414	@,
	bl	HEVC_u_v	@
	movw	r6, #:lower16:2125360	@ tmp384,
	movt	r6, #:upper16:2125360	@ tmp384,
	strb	r0, [r4, r6]	@, <variable>.CurrSlice.pic_output_flag
	b	.L2079	@
.L2252:
	movw	r7, #:lower16:1960172	@ tmp581,
	movt	r7, #:upper16:1960172	@ tmp581,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC432	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC432	@,
	bl	HEVC_u_v	@
	movw	ip, #:lower16:2125365	@ tmp584,
	movt	ip, #:upper16:2125365	@ tmp584,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC433	@,
	movt	r2, #:upper16:.LC433	@,
	strb	r0, [r4, ip]	@, <variable>.CurrSlice.slice_sao_luma_flag
	ldr	r0, [r4, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r3, #:lower16:2125366	@ tmp589,
	movt	r3, #:upper16:2125366	@ tmp589,
	strb	r0, [r4, r3]	@, <variable>.CurrSlice.slice_sao_chroma_flag
	b	.L2124	@
.L2056:
	mov	r3, r0	@, D.41882
	movw	r1, #:lower16:.LC404	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC404	@,
	ldr	r2, .L2281	@,
	str	ip, [sp, #0]	@ prephitmp.6314,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2263:
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC452	@,
	movt	r1, #:upper16:.LC452	@,
	bl	HEVC_se_v	@
	movw	r3, #:lower16:2125484	@ tmp701,
	movt	r3, #:upper16:2125484	@ tmp701,
	add	r2, r0, #12	@ tmp702, D.42313,
	str	r0, [r4, r3]	@ D.42313, <variable>.CurrSlice.slice_cb_qp_offset
	cmp	r2, #24	@ tmp702,
	bhi	.L2273	@,
	ldr	r3, [r9, #60]	@ D.42320, <variable>.pic_cb_qp_offset
	add	ip, r0, r3	@ tmp704, D.42313, D.42320
	add	lr, ip, #12	@ tmp705, tmp704,
	cmp	lr, #24	@ tmp705,
	bhi	.L2274	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC455	@,
	movt	r1, #:upper16:.LC455	@,
	bl	HEVC_se_v	@
	movw	r1, #:lower16:2125488	@ tmp710,
	movt	r1, #:upper16:2125488	@ tmp710,
	add	r3, r0, #12	@ tmp711, D.42328,
	str	r0, [r4, r1]	@ D.42328, <variable>.CurrSlice.slice_cr_qp_offset
	cmp	r3, #24	@ tmp711,
	bhi	.L2275	@,
	ldr	r2, [r9, #64]	@ <variable>.pic_cr_qp_offset, <variable>.pic_cr_qp_offset
	add	r2, r0, r2	@ D.42336, D.42328, <variable>.pic_cr_qp_offset
	add	r0, r2, #12	@ tmp714, D.42336,
	cmp	r0, #24	@ tmp714,
	bls	.L2160	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC457	@,
	movt	r1, #:upper16:.LC457	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2097:
	ldrb	r2, [r5, #12]	@ zero_extendqisi2	@ <variable>.sps_temporal_mvp_enable_flag, <variable>.sps_temporal_mvp_enable_flag
	cmp	r2, #0	@ <variable>.sps_temporal_mvp_enable_flag,
	movweq	r3, #:lower16:2125367	@ tmp569,
	movteq	r3, #:upper16:2125367	@ tmp569,
	streqb	r2, [r4, r3]	@ <variable>.sps_temporal_mvp_enable_flag, <variable>.CurrSlice.slice_temporal_mvp_enable_flag
	beq	.L2122	@,
	movw	lr, #:lower16:1960172	@ tmp564,
	movt	lr, #:upper16:1960172	@ tmp564,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC431	@,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	movt	r2, #:upper16:.LC431	@,
	bl	HEVC_u_v	@
	movw	r3, #:lower16:2125367	@ tmp567,
	movt	r3, #:upper16:2125367	@ tmp567,
	strb	r0, [r4, r3]	@, <variable>.CurrSlice.slice_temporal_mvp_enable_flag
	b	.L2122	@
.L2255:
	movw	r1, #:lower16:2125360	@,
	movw	lr, #:lower16:2128788	@,
	movt	r1, #:upper16:2125360	@,
	movt	lr, #:upper16:2128788	@,
	add	r1, r4, r1	@, pHevcCtx,
	add	r2, r4, lr	@, pHevcCtx,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecRefPicListsModification	@
	cmp	r0, #0	@,
	bne	.L2140	@,
	movw	r3, #:lower16:2125420	@ tmp634,
	movt	r3, #:upper16:2125420	@ tmp634,
	ldr	r1, [r4, r3]	@ prephitmp.6328, <variable>.CurrSlice.slice_type
	b	.L2136	@
.L2261:
	movw	lr, #:lower16:2125528	@ tmp662,
	movt	lr, #:upper16:2125528	@ tmp662,
	ldr	ip, [r4, lr]	@ <variable>.CurrSlice.num_ref_idx, <variable>.CurrSlice.num_ref_idx
	cmp	ip, #1	@ <variable>.CurrSlice.num_ref_idx,
	bhi	.L2148	@,
	b	.L2146	@
.L2253:
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC435	@,
	movt	r1, #:upper16:.LC435	@,
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:2125464	@ tmp604,
	movt	r1, #:upper16:2125464	@ tmp604,
	add	r2, r0, #1	@ D.42179,,
	str	r2, [r4, r1]	@ D.42179, <variable>.CurrSlice.num_ref_idx_l0_active
	cmp	r2, #15	@ D.42179,
	bhi	.L2276	@,
	ldr	r0, [r4, r6]	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	lr, #:lower16:2125528	@ tmp606,
	movt	lr, #:upper16:2125528	@ tmp606,
	cmp	r0, #0	@ <variable>.CurrSlice.slice_type,
	str	r2, [r4, lr]	@ D.42179, <variable>.CurrSlice.num_ref_idx
	beq	.L2277	@,
	movw	r2, #:lower16:2125468	@ tmp614,
	movw	r3, #:lower16:2125532	@ tmp616,
	movt	r2, #:upper16:2125468	@ tmp614,
	movt	r3, #:upper16:2125532	@ tmp616,
	mov	r1, #0	@ tmp615,
	str	r1, [r4, r2]	@ tmp615, <variable>.CurrSlice.num_ref_idx_l1_active
	str	r1, [r4, r3]	@ tmp615, <variable>.CurrSlice.num_ref_idx
	b	.L2131	@
.L2260:
	movw	r3, #:lower16:1960172	@ tmp651,
	movt	r3, #:upper16:1960172	@ tmp651,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC444	@,
	ldr	r0, [r4, r3]	@, <variable>.pBS
	movt	r2, #:upper16:.LC444	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:2125371	@ tmp654,
	movt	r1, #:upper16:2125371	@ tmp654,
	strb	r0, [r4, r1]	@, <variable>.CurrSlice.collocated_from_l0_flag
	b	.L2145	@
.L2086:
	sub	r3, r1, #16	@ tmp415, D.48078,
	cmp	r3, #7	@ tmp415,
	bhi	.L2085	@,
.L2088:
	cmp	r1, #7	@ D.48078,
	strne	r2, [r4, #176]	@ D.42011, <variable>.PrevSlicePoc
	movwne	r3, #:lower16:2125412	@ tmp416,
	movtne	r3, #:upper16:2125412	@ tmp416,
	strne	r2, [r4, r3]	@ D.42011, <variable>.CurrSlice.prev_poc
	b	.L2085	@
.L2277:
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC437	@,
	movt	r1, #:upper16:.LC437	@,
	bl	HEVC_ue_v	@
	movw	ip, #:lower16:2125468	@ tmp611,
	movt	ip, #:upper16:2125468	@ tmp611,
	add	r2, r0, #1	@ D.42188,,
	str	r2, [r4, ip]	@ D.42188, <variable>.CurrSlice.num_ref_idx_l1_active
	cmp	r2, #15	@ D.42188,
	bls	.L2239	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC438	@,
	mov	r3, #15	@,
	movt	r1, #:upper16:.LC438	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2267:
	movw	r2, #:lower16:1960172	@ tmp454,
	movt	r2, #:upper16:1960172	@ tmp454,
	movw	r1, #:lower16:.LC420	@,
	movt	r1, #:upper16:.LC420	@,
	ldr	r0, [r4, r2]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:2125456	@ tmp456,
	movt	r1, #:upper16:2125456	@ tmp456,
	str	r0, [r4, r1]	@ D.42062, <variable>.CurrSlice.num_long_term_sps
	mov	r2, r0	@ D.42062,
	ldr	r3, [r5, #232]	@ temp.6461, <variable>.num_long_term_ref_pic_sps
	cmp	r0, r3	@ D.42062, temp.6461
	bhi	.L2099	@,
	cmp	r3, #1	@ temp.6461,
	movhi	sl, #0	@ bitsForLongTermPicInSPS,
	movhi	r2, #1	@ tmp900,
	bls	.L2098	@,
.L2101:
	add	sl, sl, #1	@ bitsForLongTermPicInSPS, bitsForLongTermPicInSPS,
	cmp	r3, r2, asl sl	@ temp.6461, tmp900,
	bhi	.L2101	@,
	str	sl, [fp, #-92]	@ bitsForLongTermPicInSPS.595, %sfp
	b	.L2102	@
.L2106:
	ldr	r0, [fp, #-60]	@, %sfp
	movw	r9, #:lower16:1960172	@,
	movt	r9, #:upper16:1960172	@,
	movw	r2, #:lower16:.LC426	@,
	movt	r2, #:upper16:.LC426	@,
	ldr	r1, [r0, #132]	@, <variable>.bits_for_poc
	ldr	r0, [r4, r9]	@, <variable>.pBS
	add	r9, r4, r7	@ D.54288, pHevcCtx, ivtmp.6414
	bl	HEVC_u_v	@
	movw	r2, #:lower16:2126624	@ tmp505,
	movt	r2, #:upper16:2126624	@ tmp505,
	movw	r1, #:lower16:1960172	@,
	add	lr, r9, r2	@ tmp505, D.54288, tmp505
	movt	r1, #:upper16:1960172	@,
	movw	r2, #:lower16:.LC427	@,
	movt	r2, #:upper16:.LC427	@,
	add	r3, r4, r6	@, pHevcCtx, i.6455
	mov	ip, r0	@ pocLsbLt,
	ldr	r0, [r4, r1]	@, <variable>.pBS
	str	ip, [lr, #0]	@ pocLsbLt, <variable>.CurrSlice.poc_lsb_lt
	mov	r1, #1	@,
	str	r3, [fp, #-52]	@, %sfp
	str	ip, [fp, #-108]	@,
	bl	HEVC_u_v	@
	ldr	lr, [fp, #-52]	@, %sfp
	movw	r3, #:lower16:2125375	@ tmp511,
	movt	r3, #:upper16:2125375	@ tmp511,
	add	r1, lr, r3	@ tmp511,, tmp511
	uxtb	r2, r0	@ D.42107,
	strb	r2, [r1, #0]	@ D.42107, <variable>.CurrSlice.used_by_curr_pic_lt_flag
	str	r2, [sl, #0]	@ D.42107, <variable>.CurrSlice.short_term_ref_pic_set.used_flag
	ldr	ip, [fp, #-108]	@,
	b	.L2111	@
.L2271:
	movw	r2, #:lower16:1960172	@,
	movt	r2, #:upper16:1960172	@,
	movw	r1, #:lower16:.LC429	@,
	movt	r1, #:upper16:.LC429	@,
	ldr	r0, [r4, r2]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	movw	r3, #:lower16:2126684	@ tmp526,
	movt	r3, #:upper16:2126684	@ tmp526,
	cmp	r6, #0	@ i.6455,
	add	ip, r9, r3	@ tmp526, D.54288, tmp526
	str	r0, [ip, #0]	@ deltaPocMSBCycleLT, <variable>.CurrSlice.delta_poc_msb_cycle_lt
	beq	.L2113	@,
	ldr	r9, [r4, r8]	@ <variable>.CurrSlice.num_long_term_sps, <variable>.CurrSlice.num_long_term_sps
	cmp	r9, r6	@ <variable>.CurrSlice.num_long_term_sps, i.6455
	ldrne	lr, [fp, #-68]	@, %sfp
	addne	r0, r0, lr	@ deltaPocMSBCycleLT, deltaPocMSBCycleLT,
.L2113:
	ldr	r1, [fp, #-48]	@, %sfp
	mov	lr, #1	@ tmp530,
	str	lr, [r5, #0]	@ tmp530, <variable>.CurrSlice.CheckLTMSB
	str	r0, [r1, #0]	@ deltaPocMSBCycleLT, <variable>.CurrSlice.deltaPocMSBCycleLT
	b	.L2114	@
.L2270:
	movw	ip, #:lower16:1960172	@,
	movt	ip, #:upper16:1960172	@,
	ldr	r1, [fp, #-92]	@, %sfp
	movw	r2, #:lower16:.LC424	@,
	ldr	r0, [r4, ip]	@, <variable>.pBS
	movt	r2, #:upper16:.LC424	@,
	bl	HEVC_u_v	@
	add	r9, r4, r7	@ D.54288, pHevcCtx, ivtmp.6414
	movw	r3, #:lower16:2126564	@ tmp490,
	movt	r3, #:upper16:2126564	@ tmp490,
	add	r1, r9, r3	@ tmp490, D.54288, tmp490
	cmp	r0, #0	@ lt_idx_sps,
	str	r0, [r1, #0]	@ lt_idx_sps, <variable>.CurrSlice.lt_idx_sps
	blt	.L2278	@,
	ldr	r2, [fp, #-60]	@, %sfp
	ldr	r1, [r2, #232]	@ <variable>.num_long_term_ref_pic_sps, <variable>.num_long_term_ref_pic_sps
	sub	ip, r1, #1	@ prephitmp.6330, <variable>.num_long_term_ref_pic_sps,
	cmp	r0, ip	@ lt_idx_sps, prephitmp.6330
	bls	.L2110	@,
.L2109:
	mov	r3, r0	@, lt_idx_sps
	mov	r2, r6	@, i.6455
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC425	@,
	movt	r1, #:upper16:.LC425	@,
	str	ip, [sp, #0]	@ prephitmp.6330,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2065:
	mov	r2, r7	@, D.41922
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC407	@,
	movt	r1, #:upper16:.LC407	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2265:
	movw	ip, #:lower16:1960172	@ tmp764,
	movt	ip, #:upper16:1960172	@ tmp764,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC464	@,
	ldr	r0, [r4, ip]	@, <variable>.pBS
	movt	r2, #:upper16:.LC464	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:2125374	@ tmp767,
	movt	r1, #:upper16:2125374	@ tmp767,
	strb	r0, [r4, r1]	@, <variable>.CurrSlice.slice_loop_filter_across_slices_enabled_flag
	b	.L2074	@
.L2264:
	movw	r6, #:lower16:1960172	@ tmp719,
	movt	r6, #:upper16:1960172	@ tmp719,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC458	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC458	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:2125372	@ tmp722,
	movt	r1, #:upper16:2125372	@ tmp722,
	uxtb	ip, r0	@ D.42350,
	strb	ip, [r4, r1]	@ D.42350, <variable>.CurrSlice.deblocking_filter_override_flag
	cmp	ip, #0	@ D.42350,
	beq	.L2168	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC459	@,
	movt	r2, #:upper16:.LC459	@,
	bl	HEVC_u_v	@
	movw	r3, #:lower16:2125373	@ tmp730,
	movt	r3, #:upper16:2125373	@ tmp730,
	uxtb	r0, r0	@ prephitmp.6325,
	strb	r0, [r4, r3]	@ prephitmp.6325, <variable>.CurrSlice.slice_disable_deblocking_filter_flag
	cmp	r0, #0	@ prephitmp.6325,
	bne	.L2165	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC460	@,
	movt	r1, #:upper16:.LC460	@,
	movw	r6, #:lower16:2125492	@ tmp734,
	bl	HEVC_se_v	@
	movt	r6, #:upper16:2125492	@ tmp734,
	mov	r2, r0	@ D.42362,
	add	r0, r0, #6	@ tmp735, D.42362,
	cmp	r0, #12	@ tmp735,
	str	r2, [r4, r6]	@ D.42362, <variable>.CurrSlice.slice_beta_offset_div2
	bhi	.L2279	@,
.L2169:
	movw	r6, #:lower16:1960172	@ tmp739,
	movt	r6, #:upper16:1960172	@ tmp739,
	movw	r1, #:lower16:.LC462	@,
	movt	r1, #:upper16:.LC462	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r6, #:lower16:2125496	@ tmp741,
	bl	HEVC_se_v	@
	movt	r6, #:upper16:2125496	@ tmp741,
	add	ip, r0, #6	@ tmp742, D.42371,
	mov	r2, r0	@ D.42371,
	cmp	ip, #12	@ tmp742,
	str	r0, [r4, r6]	@ D.42371, <variable>.CurrSlice.slice_tc_offset_div2
	bls	.L2240	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC463	@,
	movt	r1, #:upper16:.LC463	@,
	bl	dprint_vfmw	@
	ldr	r3, [r9, #80]	@ <variable>.pps_tc_offset_div2, <variable>.pps_tc_offset_div2
	movw	r1, #:lower16:2125373	@ tmp747,
	movt	r1, #:upper16:2125373	@ tmp747,
	str	r3, [r4, r6]	@ <variable>.pps_tc_offset_div2, <variable>.CurrSlice.slice_tc_offset_div2
	ldrb	r0, [r4, r1]	@ zero_extendqisi2	@ prephitmp.6325, <variable>.CurrSlice.slice_disable_deblocking_filter_flag
	b	.L2165	@
.L2105:
	ldr	r6, [fp, #-100]	@, %sfp
	add	r2, r3, r6	@ temp.6484, D.42074,
	movw	r3, #:lower16:2128524	@ tmp561,
	cmp	r2, #15	@ temp.6484,
	movt	r3, #:upper16:2128524	@ tmp561,
	str	r2, [r4, r3]	@ temp.6484, <variable>.CurrSlice.short_term_ref_pic_set.num_of_pics
	bls	.L2097	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC430	@,
	mov	r3, #15	@,
	movt	r1, #:upper16:.LC430	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2269:
	cmp	r3, #0	@ D.42074,
	ldr	r9, [fp, #-104]	@ pPPS, %sfp
	ldr	r5, [fp, #-60]	@ pSPS, %sfp
	beq	.L2105	@,
	movw	r0, #:lower16:2125390	@ tmp543,
	movt	r0, #:upper16:2125390	@ tmp543,
	add	r6, r4, r0	@ tmp543, pHevcCtx, tmp543
	ldr	r7, [fp, #-96]	@, %sfp
	movw	r2, #:lower16:531700	@ tmp537,
	movt	r2, #:upper16:531700	@ tmp537,
	ldrb	r1, [r6, #0]	@ zero_extendqisi2	@ tmp545, <variable>.CurrSlice.delta_poc_msb_present_flag
	add	lr, r3, r7	@ tmp536, D.42074,
	add	ip, lr, r2	@ tmp537, tmp536, tmp537
	sub	r6, r3, #1	@ tmp913, D.42074,
	cmp	r1, #0	@ tmp545,
	movw	r7, #:lower16:2126744	@ ivtmp.6386,
	add	r0, r4, ip, asl #2	@, tmp540, pHevcCtx, tmp537,
	movt	r7, #:upper16:2126744	@ ivtmp.6386,
	add	r1, r0, #4	@ ivtmp.6382, tmp540,
	add	r0, r4, r7	@ ivtmp.6386, pHevcCtx, ivtmp.6386
	and	r7, r6, #1	@ tmp915, tmp913,
	movw	r6, #:lower16:2125408	@ tmp891,
	movt	r6, #:upper16:2125408	@ tmp891,
	beq	.L2216	@,
	ldr	ip, [r4, r6]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	ldr	r8, [r0, #0]	@ tmp946, <variable>.CurrSlice.pocLsbLt
	ldr	lr, [r1, #0]	@ tmp949, <variable>.CurrSlice.deltaPocMSBCycleLT
	add	r2, r8, ip	@ tmp948, tmp946, <variable>.CurrSlice.poc
	ldr	r8, [fp, #-88]	@, %sfp
	mls	r2, lr, r8, r2	@ tmp951, tmp949,, tmp948
	ldr	lr, [fp, #-84]	@, %sfp
	rsb	r2, lr, r2	@ PocLTCurr,, tmp951
	str	r2, [r1, #1924]	@ PocLTCurr, <variable>.CurrSlice.short_term_ref_pic_set.poc
	rsb	r2, ip, r2	@ tmp953, <variable>.CurrSlice.poc, PocLTCurr
	str	r2, [r1, #1860]	@ tmp953, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
.L2230:
	mov	lr, #1	@ i.6453,
	cmp	r3, lr	@ D.42074, i.6453
	sub	r1, r1, #4	@ ivtmp.6382, ivtmp.6382,
	add	r0, r0, #4	@ ivtmp.6386, ivtmp.6386,
	bls	.L2105	@,
	cmp	r7, #0	@ tmp915,
	beq	.L2238	@,
	movw	ip, #:lower16:2125391	@ tmp956,
	movt	ip, #:upper16:2125391	@ tmp956,
	add	r2, r4, ip	@ tmp956, pHevcCtx, tmp956
	ldrb	ip, [r2, #0]	@ zero_extendqisi2	@ tmp957, <variable>.CurrSlice.delta_poc_msb_present_flag
	cmp	ip, #0	@ tmp957,
	bne	.L2231	@,
	ldr	ip, [r0, #0]	@ tmp958, <variable>.CurrSlice.pocLsbLt
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	str	ip, [r1, #1924]	@ tmp958, <variable>.CurrSlice.short_term_ref_pic_set.poc
	rsb	r2, r2, ip	@ tmp961, <variable>.CurrSlice.poc, tmp958
	str	r2, [r1, #1860]	@ tmp961, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
.L2232:
	add	lr, lr, #1	@ i.6453, i.6453,
	sub	r1, r1, #4	@ ivtmp.6382, ivtmp.6382,
	cmp	r3, lr	@ D.42074, i.6453
	add	r0, r0, #4	@ ivtmp.6386, ivtmp.6386,
	bls	.L2105	@,
.L2238:
	ldr	r8, [fp, #-88]	@ MaxPocLsb, %sfp
	ldr	sl, [fp, #-84]	@ D.41987, %sfp
	b	.L2120	@
.L2280:
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	ldr	r7, [r0, #0]	@ tmp548, <variable>.CurrSlice.pocLsbLt
	ldr	ip, [r1, #0]	@ tmp551, <variable>.CurrSlice.deltaPocMSBCycleLT
	add	r7, r7, r2	@ tmp547, tmp548, <variable>.CurrSlice.poc
	mls	ip, ip, r8, r7	@ tmp552, tmp551, MaxPocLsb, tmp547
	rsb	r7, sl, ip	@ PocLTCurr, D.41987, tmp552
	str	r7, [r1, #1924]	@ PocLTCurr, <variable>.CurrSlice.short_term_ref_pic_set.poc
	rsb	r2, r2, r7	@ tmp555, <variable>.CurrSlice.poc, PocLTCurr
	str	r2, [r1, #1860]	@ tmp555, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
.L2119:
	add	lr, lr, #1	@ tmp916, i.6453,
	movw	r7, #:lower16:2125390	@ tmp932,
	add	ip, r4, lr	@ tmp930, pHevcCtx, tmp916
	movt	r7, #:upper16:2125390	@ tmp932,
	add	r2, ip, r7	@ tmp932, tmp930, tmp932
	sub	ip, r1, #4	@ tmp917, ivtmp.6382,
	add	r7, r0, #4	@ tmp918, ivtmp.6386,
	ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ tmp933, <variable>.CurrSlice.delta_poc_msb_present_flag
	cmp	r2, #0	@ tmp933,
	beq	.L2221	@,
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	ldr	r0, [r0, #4]	@ tmp976, <variable>.CurrSlice.pocLsbLt
	ldr	r1, [r1, #-4]	@ tmp979, <variable>.CurrSlice.deltaPocMSBCycleLT
	add	r0, r0, r2	@ tmp978, tmp976, <variable>.CurrSlice.poc
	mls	r1, r1, r8, r0	@ tmp981, tmp979, MaxPocLsb, tmp978
	rsb	r0, sl, r1	@ PocLTCurr, D.41987, tmp981
	str	r0, [ip, #1924]	@ PocLTCurr, <variable>.CurrSlice.short_term_ref_pic_set.poc
	rsb	r2, r2, r0	@ tmp983, <variable>.CurrSlice.poc, PocLTCurr
	str	r2, [ip, #1860]	@ tmp983, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
.L2233:
	add	lr, lr, #1	@ i.6453, tmp916,
	sub	r1, ip, #4	@ ivtmp.6382, tmp917,
	cmp	r3, lr	@ D.42074, i.6453
	add	r0, r7, #4	@ ivtmp.6386, tmp918,
	bls	.L2105	@,
.L2120:
	add	ip, r4, lr	@ tmp921, pHevcCtx, i.6453
	movw	r7, #:lower16:2125390	@ tmp923,
	movt	r7, #:upper16:2125390	@ tmp923,
	add	r2, ip, r7	@ tmp923, tmp921, tmp923
	ldrb	ip, [r2, #0]	@ zero_extendqisi2	@ tmp924, <variable>.CurrSlice.delta_poc_msb_present_flag
	cmp	ip, #0	@ tmp924,
	bne	.L2280	@,
	ldr	r2, [r0, #0]	@ tmp556, <variable>.CurrSlice.pocLsbLt
	ldr	r7, [r4, r6]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	str	r2, [r1, #1924]	@ tmp556, <variable>.CurrSlice.short_term_ref_pic_set.poc
	rsb	ip, r7, r2	@ tmp560, <variable>.CurrSlice.poc, tmp556
	str	ip, [r1, #1860]	@ tmp560, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	b	.L2119	@
.L2221:
	ldr	r2, [r0, #4]	@ tmp971, <variable>.CurrSlice.pocLsbLt
	ldr	r1, [r4, r6]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	str	r2, [ip, #1924]	@ tmp971, <variable>.CurrSlice.short_term_ref_pic_set.poc
	rsb	r0, r1, r2	@ tmp974, <variable>.CurrSlice.poc, tmp971
	str	r0, [ip, #1860]	@ tmp974, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	b	.L2233	@
.L2242:
	ldr	r0, [r4, #208]	@ <variable>.TotalSliceNum, <variable>.TotalSliceNum
	movw	lr, #:lower16:2125408	@ tmp307,
	movt	lr, #:upper16:2125408	@ tmp307,
	cmp	r0, #0	@ <variable>.TotalSliceNum,
	ldrne	r0, [r4, #180]	@ <variable>.LastSlicePoc, <variable>.LastSlicePoc
	str	r0, [r4, lr]	@ <variable>.TotalSliceNum, <variable>.CurrSlice.poc
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_IsNewPic	@
	movw	ip, #:lower16:2126924	@ tmp309,
	movt	ip, #:upper16:2126924	@ tmp309,
	movw	r1, #:lower16:.LC405	@,
	movt	r1, #:upper16:.LC405	@,
	str	r0, [r4, ip]	@, <variable>.CurrSlice.new_pic_type
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2089:
	movw	r2, #:lower16:2128500	@,
	movt	r2, #:upper16:2128500	@,
	add	r2, r4, r2	@, pHevcCtx,
	mov	r0, r4	@, pHevcCtx
	mov	r1, r5	@, pSPS
	ldr	r3, [r5, #228]	@, <variable>.num_short_term_ref_pic_sets
	bl	HEVC_DecShortTermRefPicSet	@
	cmp	r0, #0	@,
	beq	.L2092	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC417	@,
	movt	r1, #:upper16:.LC417	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2247:
	mov	r2, r0	@, D.42440
	movw	r1, #:lower16:.LC471	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC471	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2266:
	movw	r3, #:lower16:1960172	@ tmp428,
	movt	r3, #:upper16:1960172	@ tmp428,
	movw	r2, #:lower16:.LC418	@,
	movt	r2, #:upper16:.LC418	@,
	ldr	r0, [r4, r3]	@, <variable>.pBS
	bl	HEVC_u_v	@
	subs	r1, r0, #0	@ D.42047,
	movw	r0, #:lower16:2125452	@ tmp431,
	movt	r0, #:upper16:2125452	@ tmp431,
	str	r1, [r4, r0]	@ D.42047, <variable>.CurrSlice.short_term_ref_pic_set_idx
	blt	.L2094	@,
	ldr	ip, [r5, #228]	@ <variable>.num_short_term_ref_pic_sets, <variable>.num_short_term_ref_pic_sets
	sub	r3, ip, #1	@ prephitmp.6459, <variable>.num_short_term_ref_pic_sets,
	cmp	r3, r1	@ prephitmp.6459, D.42047
	bcs	.L2096	@,
.L2095:
	mov	r2, r1	@, D.42047
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC419	@,
	movt	r1, #:upper16:.LC419	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2158:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC451	@,
	movt	r1, #:upper16:.LC451	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2216:
	ldr	ip, [r0, #0]	@ tmp941, <variable>.CurrSlice.pocLsbLt
	ldr	lr, [r4, r6]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	str	ip, [r1, #1924]	@ tmp941, <variable>.CurrSlice.short_term_ref_pic_set.poc
	rsb	r2, lr, ip	@ tmp944, <variable>.CurrSlice.poc, tmp941
	str	r2, [r1, #1860]	@ tmp944, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	b	.L2230	@
.L2231:
	ldr	ip, [r4, r6]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	ldr	r8, [r0, #0]	@ tmp963, <variable>.CurrSlice.pocLsbLt
	ldr	r7, [r1, #0]	@ tmp966, <variable>.CurrSlice.deltaPocMSBCycleLT
	add	r2, r8, ip	@ tmp965, tmp963, <variable>.CurrSlice.poc
	ldr	r8, [fp, #-88]	@, %sfp
	mls	r2, r7, r8, r2	@ tmp968, tmp966,, tmp965
	ldr	r7, [fp, #-84]	@, %sfp
	rsb	r2, r7, r2	@ PocLTCurr,, tmp968
	str	r2, [r1, #1924]	@ PocLTCurr, <variable>.CurrSlice.short_term_ref_pic_set.poc
	rsb	r2, ip, r2	@ tmp970, <variable>.CurrSlice.poc, PocLTCurr
	str	r2, [r1, #1860]	@ tmp970, <variable>.CurrSlice.short_term_ref_pic_set.delta_poc
	b	.L2232	@
.L2278:
	ldr	r5, [fp, #-60]	@ pSPS, %sfp
	ldr	lr, [r5, #232]	@ <variable>.num_long_term_ref_pic_sps, <variable>.num_long_term_ref_pic_sps
	sub	ip, lr, #1	@ prephitmp.6330, <variable>.num_long_term_ref_pic_sps,
	b	.L2109	@
.L2249:
	mov	r2, r0	@, D.41968
	movw	r1, #:lower16:.LC413	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC413	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2257:
	mov	r2, r0	@, D.42402
	movw	r1, #:lower16:.LC466	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC466	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2134:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC440	@,
	mov	r3, #15	@,
	movt	r1, #:upper16:.LC440	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2262:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC449	@,
	movt	r1, #:upper16:.LC449	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2151:
	mov	r3, r0	@, D.42261
	movw	r1, #:lower16:.LC446	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC446	@,
	str	ip, [sp, #0]	@ MaxCollocatedRefIdx,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2274:
	mov	r2, r0	@, D.42313
	movw	r1, #:lower16:.LC454	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC454	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2279:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC461	@,
	movt	r1, #:upper16:.LC461	@,
	bl	dprint_vfmw	@
	ldr	r2, [r9, #76]	@ <variable>.pps_beta_offset_div2, <variable>.pps_beta_offset_div2
	str	r2, [r4, r6]	@ <variable>.pps_beta_offset_div2, <variable>.CurrSlice.slice_beta_offset_div2
	b	.L2169	@
.L2273:
	mov	r2, r0	@, D.42313
	movw	r1, #:lower16:.LC453	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC453	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2140:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC441	@,
	movt	r1, #:upper16:.LC441	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2156:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC447	@,
	movt	r1, #:upper16:.LC447	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2275:
	mov	r2, r0	@, D.42328
	movw	r1, #:lower16:.LC456	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC456	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2258:
	mov	r2, r1	@, prephitmp.6506
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC468	@,
	movt	r1, #:upper16:.LC468	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2254:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC439	@,
	movt	r1, #:upper16:.LC439	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2268:
	mov	r2, lr	@, temp.6463
	mov	r3, r7	@, temp.6464
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC423	@,
	movt	r1, #:upper16:.LC423	@,
	mov	lr, #15	@ tmp472,
	stmia	sp, {ip, lr}	@ phole stm
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2276:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC436	@,
	mov	r3, #15	@,
	movt	r1, #:upper16:.LC436	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2099:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC421	@,
	movt	r1, #:upper16:.LC421	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41889,
	b	.L2058	@
.L2094:
	ldr	lr, [r5, #228]	@ <variable>.num_short_term_ref_pic_sets, <variable>.num_short_term_ref_pic_sets
	sub	r3, lr, #1	@ prephitmp.6459, <variable>.num_short_term_ref_pic_sets,
	b	.L2095	@
.L2282:
	.align	2
.L2281:
	.word	.LANCHOR1+456
	.fnend
	.size	HEVC_DecSliceSegmentHeader, .-HEVC_DecSliceSegmentHeader
	.align	2
	.global	HEVC_InquireSliceProperty
	.type	HEVC_InquireSliceProperty, %function
HEVC_InquireSliceProperty:
	.fnstart
.LFB1685:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movw	r0, #:lower16:2125360	@,
	movt	r0, #:upper16:2125360	@,
	mov	r3, #0	@ tmp150,
	add	r0, r4, r0	@, pHevcCtx,
	str	r3, [r2, #0]	@ tmp150,* IsSizeChanged
	mov	r6, r1	@ IsNewPic, IsNewPic
	str	r3, [r1, #0]	@ tmp150,* IsNewPic
	movw	r1, #3688	@,
	mov	r5, r2	@ IsSizeChanged, IsSizeChanged
	bl	__memzero	@
	movw	r1, #:lower16:1960196	@ tmp156,
	movt	r1, #:upper16:1960196	@ tmp156,
	movw	r2, #:lower16:2125432	@ tmp154,
	movt	r2, #:upper16:2125432	@ tmp154,
	ldr	ip, [r4, r1]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r3, #:lower16:2125428	@ tmp158,
	movt	r3, #:upper16:2125428	@ tmp158,
	mov	r0, r4	@, pHevcCtx
	mov	r1, #1	@,
	ldr	lr, [ip, #16]	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	str	lr, [r4, r2]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r2, [ip, #32]	@ <variable>.nuh_temporal_id, <variable>.nuh_temporal_id
	str	r2, [r4, r3]	@ <variable>.nuh_temporal_id, <variable>.CurrSlice.nuh_temporal_id
	bl	HEVC_DecSliceSegmentHeader	@
	cmp	r0, #0	@,
	bne	.L2294	@,
	movw	r1, #:lower16:2126924	@ tmp167,
	movt	r1, #:upper16:2126924	@ tmp167,
	movw	r7, #:lower16:2125436	@ tmp172,
	movw	r2, #:lower16:1960184	@ tmp174,
	ldr	r0, [r4, r1]	@ <variable>.CurrSlice.new_pic_type, <variable>.CurrSlice.new_pic_type
	movt	r7, #:upper16:2125436	@ tmp172,
	movt	r2, #:upper16:1960184	@ tmp174,
	movw	r3, #:lower16:1960180	@ tmp170,
	cmp	r0, #1	@ <variable>.CurrSlice.new_pic_type,
	movne	ip, #0	@, tmp169
	moveq	ip, #1	@, tmp169
	str	ip, [r6, #0]	@ tmp169,* IsNewPic
	ldr	r0, [r4, r7]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	r3, #:upper16:1960180	@ tmp170,
	ldr	r1, [r4, r2]	@ <variable>.pPPS, <variable>.pPPS
	movw	r6, #7704	@ tmp176,
	ldr	r7, [r4, r3]	@ <variable>.pSPS, <variable>.pSPS
	movw	r2, #:lower16:1960188	@ tmp184,
	movt	r2, #:upper16:1960188	@ tmp184,
	movw	ip, #:lower16:2044448	@ tmp182,
	mla	r3, r6, r0, r1	@ tmp177, tmp176, <variable>.CurrSlice.pic_parameter_set_id, <variable>.pPPS
	ldr	r1, [r4, r2]	@ D.47736, <variable>.pstExtraData
	movw	r0, #:lower16:2044452	@ tmp183,
	movt	r0, #:upper16:2044452	@ tmp183,
	movt	ip, #:upper16:2044448	@ tmp182,
	ldr	r6, [r1, #864]	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stChanOption.u32DynamicFrameStoreAllocEn
	ldr	ip, [r4, ip]	@ D.47734, <variable>.CurrSPS.pic_width_in_luma_samples
	ldr	r3, [r3, #32]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	r6, #1	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn,
	ldr	r6, [r4, r0]	@ D.47735, <variable>.CurrSPS.pic_height_in_luma_samples
	movw	r0, #36364	@ tmp180,
	mla	r3, r0, r3, r7	@ sps, tmp180, <variable>.seq_parameter_set_id, <variable>.pSPS
	ldr	r0, [r3, #72]	@ D.47732, <variable>.pic_width_in_luma_samples
	ldr	r7, [r3, #76]	@ D.47733, <variable>.pic_height_in_luma_samples
	beq	.L2295	@,
.L2287:
	ldrb	r3, [r3, #2]	@ zero_extendqisi2	@ <variable>.dpbsize_changed, <variable>.dpbsize_changed
	cmp	r3, #0	@ <variable>.dpbsize_changed,
	cmpeq	ip, r0	@, D.47734, D.47732
	beq	.L2296	@,
.L2289:
	mov	r2, #1	@ tmp218,
	str	r2, [r5, #0]	@ tmp218,* IsSizeChanged
.L2291:
	ldr	r0, [r4, #212]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	cmp	r0, #0	@ <variable>.TotalPicNum,
	beq	.L2292	@,
	movw	r1, #:lower16:g_event_report	@ tmp221,
	movt	r1, #:upper16:g_event_report	@ tmp221,
	ldr	ip, [r1, #0]	@ g_event_report.6566, g_event_report
	cmp	ip, #0	@ g_event_report.6566,
	beq	.L2292	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #120	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.6566
	mov	r0, #0	@ D.47721,
	b	.L2286	@
.L2296:
	cmp	r7, r6	@ D.47733, D.47735
	bne	.L2289	@,
	ldr	ip, [r5, #0]	@ tmp219,* IsSizeChanged
	cmp	ip, #1	@ tmp219,
	beq	.L2291	@,
.L2292:
	mov	r0, #0	@ D.47721,
.L2286:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2295:
	movw	r8, #:lower16:2044476	@,
	movt	r8, #:upper16:2044476	@,
	str	r8, [fp, #-56]	@, %sfp
	movw	sl, #:lower16:2044484	@ tmp189,
	ldr	r9, [r3, #108]	@, <variable>.bit_depth_chroma
	movt	sl, #:upper16:2044484	@ tmp189,
	ldr	r8, [r3, #100]	@, <variable>.bit_depth_luma
	cmp	r9, r8	@,
	strcs	r9, [r1, #916]	@,, <variable>.s32BitDepth
	strcc	r8, [r1, #916]	@,, <variable>.s32BitDepth
	ldr	r9, [fp, #-56]	@, %sfp
	ldr	r2, [r4, r2]	@ temp.6565, <variable>.pstExtraData
	ldr	sl, [r4, sl]	@ <variable>.CurrSPS.bit_depth_chroma, <variable>.CurrSPS.bit_depth_chroma
	ldr	r8, [r4, r9]	@ <variable>.CurrSPS.bit_depth_luma, <variable>.CurrSPS.bit_depth_luma
	ldr	r1, [r2, #916]	@ D.47748, <variable>.s32BitDepth
	cmp	sl, r8	@ <variable>.CurrSPS.bit_depth_chroma, <variable>.CurrSPS.bit_depth_luma
	movcs	r8, sl	@ PreMaxbitdepth, <variable>.CurrSPS.bit_depth_chroma
	cmp	r8, #8	@ PreMaxbitdepth,
	movls	sl, #0	@, tmp200
	movhi	sl, #1	@, tmp200
	cmp	r1, #8	@ D.47748,
	movne	sl, #0	@, tmp200,
	cmp	sl, #0	@ tmp200,
	beq	.L2297	@,
.L2288:
	mov	r1, #1	@ tmp208,
	str	r1, [r2, #920]	@ tmp208, <variable>.s32BitDepthChanged
	str	r1, [r5, #0]	@ tmp208,* IsSizeChanged
	b	.L2287	@
.L2297:
	cmp	r8, #8	@ PreMaxbitdepth,
	movne	sl, #0	@,
	moveq	sl, #1	@,
	cmp	r1, #8	@ D.47748,
	movle	sl, #0	@,,
	cmp	sl, #0	@ tmp207,
	beq	.L2287	@,
	b	.L2288	@
.L2294:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC474	@,
	movt	r1, #:upper16:.LC474	@,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:g_event_report	@ tmp163,
	movt	r2, #:upper16:g_event_report	@ tmp163,
	ldr	ip, [r2, #0]	@ g_event_report.839, g_event_report
	cmp	ip, #0	@ g_event_report.839,
	mvneq	r0, #0	@ D.47721,
	beq	.L2286	@,
	sub	r2, fp, #44	@ tmp166,,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #100	@,
	mvn	r4, #0	@ tmp164,
	mov	r3, #4	@,
	str	r4, [r2, #-4]!	@ tmp164, para
	blx	ip	@ g_event_report.839
	mov	r0, r4	@ D.47721, tmp164
	b	.L2286	@
	.fnend
	.size	HEVC_InquireSliceProperty, .-HEVC_InquireSliceProperty
	.align	2
	.global	HEVC_RemoveFrameStoreOutDPB
	.type	HEVC_RemoveFrameStoreOutDPB, %function
HEVC_RemoveFrameStoreOutDPB:
	.fnstart
.LFB1639:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:490098	@ tmp139,
	movt	r6, #:upper16:490098	@ tmp139,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	add	r6, r1, r6	@ tmp139, pos, tmp139
	mov	r7, #0	@ tmp142,
	mov	r5, r1	@ pos, pos
	ldr	r0, [r0, r6, asl #2]	@ tmp141, <variable>.DPB.fs
	str	r7, [r0, #4]	@ tmp142, <variable>.eFrameStoreState
	ldr	r3, [r4, r6, asl #2]	@ tmp146, <variable>.DPB.fs
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogic
	beq	.L2299	@,
	ldrsb	r1, [r0, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r1, #3	@ <variable>.s32DispState,
	beq	.L2300	@,
	ldr	ip, [r4, r6, asl #2]	@ tmp152, <variable>.DPB.fs
	mov	r2, r7	@, tmp142
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [ip, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2300:
	movw	r2, #:lower16:490098	@ tmp155,
	movt	r2, #:upper16:490098	@ tmp155,
	add	r3, r5, r2	@ tmp155, pos, tmp155
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r2, #0	@,
	ldr	lr, [r4, r3, asl #2]	@ tmp157, <variable>.DPB.fs
	ldr	r1, [lr, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
.L2299:
	movw	r1, #:lower16:1960372	@ tmp159,
	movt	r1, #:upper16:1960372	@ tmp159,
	ldr	r0, [r4, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	sub	ip, r0, #1	@ D.45774, <variable>.DPB.used_size,
	cmp	r5, ip	@ pos, D.45774
	bhi	.L2301	@,
	movw	r0, #:lower16:490099	@ tmp161,
	movt	r0, #:upper16:490099	@ tmp161,
	add	r2, r5, r0	@ tmp161, pos, tmp161
	add	r1, r5, #1	@ i, pos,
	cmp	r1, ip	@ i, D.45774
	rsb	r5, r5, ip	@ tmp174, pos, D.45774
	add	r3, r4, r2, asl #2	@, ivtmp.6599, pHevcCtx, tmp161,
	and	r5, r5, #1	@ tmp175, tmp174,
	add	r2, r3, #4	@ ivtmp.6599, ivtmp.6599,
	ldr	lr, [r3, #0]	@ tmp164, <variable>.DPB.fs
	str	lr, [r3, #-4]	@ tmp164, <variable>.DPB.fs
	bhi	.L2301	@,
	cmp	r5, #0	@ tmp175,
	beq	.L2302	@,
	ldr	lr, [r2, #0]	@ tmp184, <variable>.DPB.fs
	add	r1, r1, #1	@ i, i,
	cmp	r1, ip	@ i, D.45774
	str	lr, [r2, #-4]	@ tmp184, <variable>.DPB.fs
	add	r2, r2, #4	@ ivtmp.6599, ivtmp.6599,
	bhi	.L2301	@,
.L2302:
	ldr	r0, [r2, #0]	@ tmp181, <variable>.DPB.fs
	add	r1, r1, #2	@ i, i,
	ldr	r3, [r2, #4]	@ tmp183, <variable>.DPB.fs
	cmp	r1, ip	@ i, D.45774
	mov	lr, r2	@ tmp177, ivtmp.6599
	str	r0, [r2, #-4]	@ tmp181, <variable>.DPB.fs
	str	r3, [lr], #4	@ tmp183, <variable>.DPB.fs
	add	r2, lr, #4	@ ivtmp.6599, tmp177,
	bls	.L2302	@,
.L2301:
	movw	r2, #:lower16:1960372	@ tmp168,
	movt	r2, #:upper16:1960372	@ tmp168,
	movw	r0, #:lower16:490098	@ tmp165,
	movt	r0, #:upper16:490098	@ tmp165,
	add	r3, ip, r0	@ tmp165, D.45774, tmp165
	ldr	r1, [r4, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	lr, #0	@ tmp167,
	sub	ip, r1, #1	@ tmp171, <variable>.DPB.used_size,
	str	lr, [r4, r3, asl #2]	@ tmp167, <variable>.DPB.fs
	str	ip, [r4, r2]	@ tmp171, <variable>.DPB.used_size
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	HEVC_RemoveFrameStoreOutDPB, .-HEVC_RemoveFrameStoreOutDPB
	.align	2
	.global	HEVC_RemoveDummyFrame
	.type	HEVC_RemoveDummyFrame, %function
HEVC_RemoveDummyFrame:
	.fnstart
.LFB1607:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:1960372	@ tmp137,
	movt	r7, #:upper16:1960372	@ tmp137,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	mov	r6, #0	@ i.671,
	mov	r4, r6	@ i, i.671
	mov	r8, r6	@ tmp149, i.671
	b	.L2313	@
.L2312:
	ldr	r6, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r4, r4, #1	@ i, i,
	cmp	r4, r6	@ i, <variable>.DPB.used_size
	mov	r6, r4	@ i.671, i
	bcs	.L2316	@,
.L2313:
	movw	r1, #:lower16:490098	@ tmp139,
	movt	r1, #:upper16:490098	@ tmp139,
	add	r0, r4, r1	@ tmp139, i, tmp139
	ldr	r3, [r5, r0, asl #2]	@ D.44591, <variable>.DPB.fs
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r2, #0	@ <variable>.non_existing,
	beq	.L2312	@,
	mov	r1, r6	@, i.671
	strb	r8, [r3, #0]	@ tmp149, <variable>.non_existing
	mov	r0, r5	@, pHevcCtx
	sub	r4, r4, #1	@ i, i,
	bl	HEVC_RemoveApcStore	@
	mov	r1, r6	@, i.671
	mov	r0, r5	@, pHevcCtx
	add	r4, r4, #1	@ i, i,
	bl	HEVC_RemoveFrameStoreOutDPB	@
	ldr	r6, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r4, r6	@ i, <variable>.DPB.used_size
	mov	r6, r4	@ i.671, i
	bcc	.L2313	@,
.L2316:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	HEVC_RemoveDummyFrame, .-HEVC_RemoveDummyFrame
	.align	2
	.global	HEVC_RemoveUnUsedFrameStore
	.type	HEVC_RemoveUnUsedFrameStore, %function
HEVC_RemoveUnUsedFrameStore:
	.fnstart
.LFB1638:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:1960372	@ tmp142,
	movt	r3, #:upper16:1960372	@ tmp142,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r8, [r0, r3]	@ record_used_size, <variable>.DPB.used_size
	cmp	r8, #0	@ record_used_size,
	moveq	sl, r8	@ IsRemoved, record_used_size
	beq	.L2319	@,
	movw	r5, #:lower16:490098	@ tmp200,
	movt	r5, #:upper16:490098	@ tmp200,
	sub	r1, r8, #1	@ tmp204, record_used_size,
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	ldr	r7, [r4, r5, asl #2]	@ tmp146, <variable>.DPB.fs
	and	r2, r1, #1	@, tmp204,
	str	r2, [fp, #-48]	@, %sfp
	mov	sl, #0	@ IsRemoved,
	mov	r6, sl	@ j, IsRemoved
	mov	r9, #1	@ tmp202,
	ldr	r1, [r7, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L2375	@,
	ldrsb	r3, [r0, #0]	@ <variable>.s32IsRef, <variable>.s32IsRef
	cmp	r3, #0	@ <variable>.s32IsRef,
	beq	.L2376	@,
.L2351:
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
.L2330:
	ldr	r1, [r3, #0]	@ tmp242,* prephitmp.6656
	bic	r3, r1, #-16777216	@ tmp243, tmp242,
	bic	r7, r3, #255	@ tmp243, tmp243,
	cmp	r7, #65536	@ tmp243,
	movne	r6, #1	@ j,
	beq	.L2377	@,
.L2354:
	mov	r7, #1	@ i,
	cmp	r8, r7	@ record_used_size, i
	bls	.L2319	@,
	ldr	r5, [fp, #-48]	@, %sfp
	cmp	r5, #0	@,
	beq	.L2326	@,
	movw	r0, #:lower16:490098	@ tmp246,
	movt	r0, #:upper16:490098	@ tmp246,
	add	r5, r6, r0	@ tmp246, j, tmp246
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	ip, [r4, r5, asl #2]	@ tmp247, <variable>.DPB.fs
	ldr	r1, [ip, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	bne	.L2350	@,
	b	.L2383	@
.L2382:
	ldrsb	lr, [r0, #1]	@ D.45733, <variable>.s32DispState
	cmp	lr, #0	@ D.45733,
	cmpne	lr, #3	@, D.45733,
	bne	.L2360	@,
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	r0, [r3, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	cmp	r0, #1	@ <variable>.eFirstFrameState,
	beq	.L2343	@,
	mvn	ip, #0	@,
	str	ip, [r3, #32]	@, <variable>.logic_fs_id
	ldr	r1, [r4, r5, asl #2]	@ tmp288, <variable>.DPB.fs
	strb	r2, [r1, #1]	@ <variable>.s32IsRef, <variable>.is_reference
	ldr	r2, [r4, r5, asl #2]	@ tmp289, <variable>.DPB.fs
	strb	r9, [r2, #2]	@ tmp202, <variable>.is_displayed
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
.L2343:
	ldr	r0, [r3, #0]	@ tmp292,* prephitmp.6656
	bic	lr, r0, #-16777216	@ tmp293, tmp292,
	bic	r3, lr, #255	@ tmp293, tmp293,
	cmp	r3, #65536	@ tmp293,
	addne	r6, r6, #1	@ j, j,
	beq	.L2379	@,
.L2363:
	add	r7, r7, #1	@ i, tmp207,
	cmp	r8, r7	@ record_used_size, i
	bls	.L2319	@,
.L2326:
	movw	r5, #:lower16:490098	@ tmp210,
	movt	r5, #:upper16:490098	@ tmp210,
	add	r5, r6, r5	@ tmp210, j, tmp210
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	ip, [r4, r5, asl #2]	@ tmp211, <variable>.DPB.fs
	ldr	r1, [ip, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L2320	@,
	ldrsb	r2, [r0, #0]	@ <variable>.s32IsRef, <variable>.s32IsRef
	cmp	r2, #0	@ <variable>.s32IsRef,
	bne	.L2364	@,
	ldrsb	lr, [r0, #1]	@ D.45733, <variable>.s32DispState
	cmp	lr, #0	@ D.45733,
	cmpne	lr, #3	@, D.45733,
	bne	.L2364	@,
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	r0, [r3, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	cmp	r0, #1	@ <variable>.eFirstFrameState,
	beq	.L2322	@,
	mvn	ip, #0	@,
	str	ip, [r3, #32]	@, <variable>.logic_fs_id
	ldr	r1, [r4, r5, asl #2]	@ tmp168, <variable>.DPB.fs
	strb	r2, [r1, #1]	@ <variable>.s32IsRef, <variable>.is_reference
	ldr	r3, [r4, r5, asl #2]	@ tmp173, <variable>.DPB.fs
	strb	r9, [r3, #2]	@ tmp202, <variable>.is_displayed
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
.L2322:
	ldr	ip, [r3, #0]	@ tmp196,* prephitmp.6656
	bic	r0, ip, #-16777216	@ tmp194, tmp196,
	bic	r5, r0, #255	@ tmp194, tmp194,
	cmp	r5, #65536	@ tmp194,
	addne	r6, r6, #1	@ j, j,
	beq	.L2380	@,
.L2325:
	movw	lr, #:lower16:490098	@ tmp218,
	movt	lr, #:upper16:490098	@ tmp218,
	add	r5, r6, lr	@ tmp218, j, tmp218
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	add	r7, r7, #1	@ tmp207, i,
	ldr	r2, [r4, r5, asl #2]	@ tmp219, <variable>.DPB.fs
	ldr	r1, [r2, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L2381	@,
.L2350:
	ldrsb	r2, [r0, #0]	@ <variable>.s32IsRef, <variable>.s32IsRef
	cmp	r2, #0	@ <variable>.s32IsRef,
	beq	.L2382	@,
.L2360:
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	r0, [r3, #0]	@ tmp292,* prephitmp.6656
	bic	lr, r0, #-16777216	@ tmp293, tmp292,
	bic	r3, lr, #255	@ tmp293, tmp293,
	cmp	r3, #65536	@ tmp293,
	addne	r6, r6, #1	@ j, j,
	bne	.L2363	@,
.L2379:
	mov	r0, r4	@, pHevcCtx
	mov	r1, r6	@, j
	add	r7, r7, #1	@ i, tmp207,
	bl	HEVC_RemoveFrameStoreOutDPB	@
	cmp	r8, r7	@ record_used_size, i
	mov	sl, #1	@ IsRemoved,
	bhi	.L2326	@,
.L2319:
	mov	r0, sl	@, IsRemoved
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2320:
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	r2, [r3, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	cmp	r2, #1	@ <variable>.eFirstFrameState,
	beq	.L2322	@,
	mvn	r1, #0	@,
	str	r1, [r3, #32]	@, <variable>.logic_fs_id
	ldr	r3, [r4, r5, asl #2]	@ tmp184, <variable>.DPB.fs
	strb	r0, [r3, #1]	@ pstLogicFs, <variable>.is_reference
	ldr	lr, [r4, r5, asl #2]	@ tmp189, <variable>.DPB.fs
	strb	r9, [lr, #2]	@ tmp202, <variable>.is_displayed
.L2364:
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	ip, [r3, #0]	@ tmp196,* prephitmp.6656
	bic	r0, ip, #-16777216	@ tmp194, tmp196,
	bic	r5, r0, #255	@ tmp194, tmp194,
	cmp	r5, #65536	@ tmp194,
	addne	r6, r6, #1	@ j, j,
	bne	.L2325	@,
.L2380:
	mov	r0, r4	@, pHevcCtx
	mov	r1, r6	@, j
	bl	HEVC_RemoveFrameStoreOutDPB	@
	mov	sl, #1	@ IsRemoved,
	b	.L2325	@
.L2381:
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	lr, [r3, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	cmp	lr, #1	@ <variable>.eFirstFrameState,
	beq	.L2343	@,
	mvn	r1, #0	@,
	str	r1, [r3, #32]	@, <variable>.logic_fs_id
.L2369:
	ldr	ip, [r4, r5, asl #2]	@ tmp275, <variable>.DPB.fs
	strb	r0, [ip, #1]	@ pstLogicFs, <variable>.is_reference
	ldr	r3, [r4, r5, asl #2]	@ tmp276, <variable>.DPB.fs
	strb	r9, [r3, #2]	@ tmp202, <variable>.is_displayed
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	b	.L2343	@
.L2376:
	ldrsb	r1, [r0, #1]	@ D.45733, <variable>.s32DispState
	cmp	r1, #0	@ D.45733,
	cmpne	r1, #3	@, D.45733,
	bne	.L2351	@,
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	r0, [r3, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	cmp	r0, #1	@ <variable>.eFirstFrameState,
	beq	.L2330	@,
	mvn	ip, #0	@,
	str	ip, [r3, #32]	@, <variable>.logic_fs_id
.L2365:
	ldr	lr, [r4, r5, asl #2]	@ tmp238, <variable>.DPB.fs
	strb	sl, [lr, #1]	@ IsRemoved, <variable>.is_reference
	ldr	r2, [r4, r5, asl #2]	@ tmp239, <variable>.DPB.fs
	strb	r9, [r2, #2]	@ tmp202, <variable>.is_displayed
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	r1, [r3, #0]	@ tmp242,* prephitmp.6656
	bic	r3, r1, #-16777216	@ tmp243, tmp242,
	bic	r7, r3, #255	@ tmp243, tmp243,
	cmp	r7, #65536	@ tmp243,
	movne	r6, #1	@ j,
	bne	.L2354	@,
.L2377:
	mov	r0, r4	@, pHevcCtx
	mov	r1, #0	@,
	bl	HEVC_RemoveFrameStoreOutDPB	@
	mov	sl, #1	@ IsRemoved,
	b	.L2354	@
.L2375:
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	r7, [r3, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	cmp	r7, #1	@ <variable>.eFirstFrameState,
	mvnne	r1, #0	@,
	strne	r1, [r3, #32]	@, <variable>.logic_fs_id
	bne	.L2365	@,
	b	.L2330	@
.L2383:
	ldr	r3, [r4, r5, asl #2]	@ prephitmp.6656, <variable>.DPB.fs
	ldr	r2, [r3, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	cmp	r2, r7	@ <variable>.eFirstFrameState,
	mvnne	r1, #0	@,
	strne	r1, [r3, #32]	@, <variable>.logic_fs_id
	bne	.L2369	@,
	b	.L2343	@
	.fnend
	.size	HEVC_RemoveUnUsedFrameStore, .-HEVC_RemoveUnUsedFrameStore
	.align	2
	.global	HEVC_CheckFrameStore
	.type	HEVC_CheckFrameStore, %function
HEVC_CheckFrameStore:
	.fnstart
.LFB1629:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r1	@ pFrameStore, pFrameStore
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	ldr	r1, [r1, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L2385	@,
	ldrsb	ip, [r0, #1]	@ D.45455, <variable>.s32DispState
	cmp	ip, #3	@ D.45455,
	cmpne	ip, #0	@, D.45455,
	movne	r2, #0	@, tmp152
	moveq	r2, #1	@, tmp152
	beq	.L2395	@,
.L2387:
	ldr	r3, [r4, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	cmp	r3, #1	@ <variable>.eFirstFrameState,
	beq	.L2396	@,
	sxtb	r2, r2	@ already_output_flag, already_output_flag
	cmp	r2, #1	@ already_output_flag,
	beq	.L2397	@,
	ldr	ip, [r4, #4]	@ D.45476, <variable>.eFrameStoreState
	cmp	ip, #0	@ D.45476,
	ldreqb	lr, [r4, #0]	@ zero_extendqisi2	@ prephitmp.6688, <variable>.non_existing
	beq	.L2392	@,
	ldrb	r3, [r4, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	movne	r0, #0	@ return_value,
	beq	.L2398	@,
.L2389:
	sub	sp, fp, #16
	ldmfd	sp, {r4, fp, sp, pc}
.L2395:
	ldr	r3, [r4, #32]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	mov	r0, #13	@,
	ldr	r2, .L2399	@,
	movw	r1, #:lower16:.LC475	@,
	movt	r1, #:upper16:.LC475	@,
	str	ip, [sp, #0]	@ D.45455,
	bl	dprint_vfmw	@
	mov	r2, #1	@ already_output_flag,
	b	.L2387	@
.L2385:
	ldr	lr, [r4, #8]	@ <variable>.eFirstFrameState, <variable>.eFirstFrameState
	mov	r2, r4	@, pFrameStore
	ldr	ip, [r4, #32]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	mov	r0, #1	@,
	ldr	r3, [r4, #12]	@ <variable>.poc, <variable>.poc
	movw	r1, #:lower16:.LC476	@,
	movt	r1, #:upper16:.LC476	@,
	str	lr, [sp, #0]	@ <variable>.eFirstFrameState,
	str	ip, [sp, #4]	@ <variable>.logic_fs_id,
	bl	dprint_vfmw	@
	mov	r2, #1	@ already_output_flag,
	b	.L2387	@
.L2398:
	mov	lr, r3	@ prephitmp.6688, <variable>.non_existing
.L2392:
	mov	r3, r4	@, pFrameStore
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC478	@,
	ldr	r2, .L2399	@,
	movt	r1, #:upper16:.LC478	@,
	stmia	sp, {ip, lr}	@ phole stm
	bl	dprint_vfmw	@
	mvn	r0, #0	@ return_value,
	b	.L2389	@
.L2396:
	strb	r3, [r4, #2]	@ <variable>.eFirstFrameState, <variable>.is_displayed
	mvn	r0, #2	@ return_value,
	mov	r3, #2	@ tmp165,
	str	r3, [r4, #8]	@ tmp165, <variable>.eFirstFrameState
	b	.L2389	@
.L2397:
	mov	r0, r2	@, already_output_flag
	ldr	r3, [r4, #12]	@, <variable>.poc
	movw	r1, #:lower16:.LC477	@,
	ldr	r2, .L2399	@,
	movt	r1, #:upper16:.LC477	@,
	bl	dprint_vfmw	@
	mvn	r0, #2	@ return_value,
	b	.L2389	@
.L2400:
	.align	2
.L2399:
	.word	.LANCHOR1+484
	.fnend
	.size	HEVC_CheckFrameStore, .-HEVC_CheckFrameStore
	.align	2
	.global	HEVC_GetAPC
	.type	HEVC_GetAPC, %function
HEVC_GetAPC:
	.fnstart
.LFB1623:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r1, #0	@ pFrameStore, pFrameStore
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	beq	.L2402	@,
	movw	r3, #:lower16:1960664	@ tmp146,
	movt	r3, #:upper16:1960664	@ tmp146,
	ldr	r0, [r0, r3]	@ D.45299, <variable>.APC.size
	cmp	r0, #0	@ D.45299,
	beq	.L2403	@,
	movw	r1, #:lower16:1960672	@ tmp147,
	movt	r1, #:upper16:1960672	@ tmp147,
	ldr	r4, [r6, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	cmp	r4, #0	@ <variable>.APC.is_used,
	beq	.L2405	@,
	tst	r0, #1	@ D.45299,
	movw	r1, #:lower16:1960676	@ ivtmp.6729,
	movt	r1, #:upper16:1960676	@ ivtmp.6729,
	mov	r4, #0	@ i,
	add	r3, r6, r1	@ ivtmp.6729, pHevcCtx, ivtmp.6729
	bne	.L2407	@,
	ldr	r2, [r3], #4	@ D.45275, <variable>.APC.is_used
	mov	r4, #1	@ i,
	cmp	r2, #0	@ D.45275,
	bne	.L2407	@,
.L2405:
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	subs	lr, r0, #0	@ pstLogicFs,
	beq	.L2408	@,
	ldr	r0, [lr, #520]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r0, #0	@ <variable>.pstDecodeFs,
	beq	.L2408	@,
	movw	r7, #:lower16:490168	@ tmp154,
	movt	r7, #:upper16:490168	@ tmp154,
	add	r2, r4, r7	@ tmp154, i, tmp154
	mov	r0, #1	@ tmp156,
	movw	r8, #:lower16:490184	@ tmp157,
	movt	r8, #:upper16:490184	@ tmp157,
	str	r0, [r6, r2, asl #2]	@ tmp156, <variable>.APC.is_used
	add	ip, r4, r8	@ tmp157, i, tmp157
	ldr	r3, [lr, #520]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	movw	lr, #:lower16:1960668	@ tmp164,
	movt	lr, #:upper16:1960668	@ tmp164,
	movw	r1, #:lower16:490200	@ tmp161,
	movt	r1, #:upper16:490200	@ tmp161,
	mov	r0, #13	@,
	ldr	r8, [r3, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	add	r2, r4, r1	@ tmp161, i, tmp161
	ldr	r7, [r6, lr]	@ <variable>.APC.used_size, <variable>.APC.used_size
	movw	r1, #:lower16:.LC479	@,
	mov	r3, r4	@, i
	movt	r1, #:upper16:.LC479	@,
	str	r8, [r6, ip, asl #2]	@ <variable>.PhyFsID, <variable>.APC.idc
	add	r7, r7, #1	@ tmp167, <variable>.APC.used_size,
	ldr	ip, [r5, #12]	@ <variable>.poc, <variable>.poc
	str	r7, [r6, lr]	@ tmp167, <variable>.APC.used_size
	str	ip, [r6, r2, asl #2]	@ <variable>.poc, <variable>.APC.poc
	ldr	r2, [r5, #268]	@, <variable>.fs_image.image_id
	bl	dprint_vfmw	@
	str	r4, [r5, #28]	@ i, <variable>.apc_idc
	mov	r0, #0	@ D.45273,
	b	.L2406	@
.L2410:
	ldr	ip, [r2], #4	@ D.45275, <variable>.APC.is_used
	cmp	ip, #0	@ D.45275,
	beq	.L2405	@,
	ldr	ip, [r3, #4]	@ D.45275, <variable>.APC.is_used
	add	r4, r4, #1	@ i, i,
	add	r3, r2, #4	@ ivtmp.6729, tmp176,
	cmp	ip, #0	@ D.45275,
	beq	.L2405	@,
.L2407:
	add	r4, r4, #1	@ i, i,
	mov	r2, r3	@ tmp176, ivtmp.6729
	cmp	r4, r0	@ i, D.45299
	bcc	.L2410	@,
.L2403:
	mvn	r0, #6	@ D.45273,
.L2406:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L2402:
	mov	r0, r5	@, pFrameStore
	movw	r1, #:lower16:.LC26	@,
	movw	r2, #:lower16:.LC27	@,
	movt	r1, #:upper16:.LC26	@,
	movt	r2, #:upper16:.LC27	@,
	movw	r3, #7559	@,
	bl	dprint_vfmw	@
	mvn	r0, #6	@ D.45273,
	b	.L2406	@
.L2408:
	ldrb	ip, [r5, #1]	@ zero_extendqisi2	@ D.45294, <variable>.is_reference
	mov	r4, #0	@ tmp170,
	ldr	r2, [r5, #32]	@ temp.6735, <variable>.logic_fs_id
	mov	r0, r4	@, tmp170
	ldr	r3, [r5, #12]	@ temp.6736, <variable>.poc
	movw	r1, #:lower16:.LC480	@,
	movt	r1, #:upper16:.LC480	@,
	stmia	sp, {ip, lr}	@ phole stm
	str	r4, [sp, #8]	@ tmp170,
	bl	dprint_vfmw	@
	mvn	r0, #6	@ D.45273,
	b	.L2406	@
	.fnend
	.size	HEVC_GetAPC, .-HEVC_GetAPC
	.align	2
	.global	HEVC_IsRefListWrong
	.type	HEVC_IsRefListWrong, %function
HEVC_IsRefListWrong:
	.fnstart
.LFB1571:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:2125520	@ tmp150,
	movt	r7, #:upper16:2125520	@ tmp150,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r7]	@ D.41511, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ D.41511,
	bne	.L2445	@,
.L2422:
	mov	r0, #0	@ ret,
.L2428:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2445:
	movw	r2, #:lower16:1960200	@ tmp151,
	movt	r2, #:upper16:1960200	@ tmp151,
	ldr	r6, [r0, r2]	@ temp.6780, <variable>.pListX
	cmp	r6, #0	@ temp.6780,
	beq	.L2424	@,
	ldr	r2, [r6, #32]	@ temp.6781, <variable>.frame_store
	cmp	r2, #0	@ temp.6781,
	moveq	r6, r2	@ i, temp.6781
	beq	.L2426	@,
	movw	r5, #:lower16:1960204	@ ivtmp.6769,
	movt	r5, #:upper16:1960204	@ ivtmp.6769,
	add	r5, r0, r5	@ ivtmp.6769, pHevcCtx, ivtmp.6769
	mov	r6, #0	@ i,
	b	.L2429	@
.L2447:
	ldr	r3, [ip, #520]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r3, #0	@ <variable>.pstDecodeFs,
	beq	.L2430	@,
	ldr	r3, [r4, r7]	@ D.41511, <variable>.CurrSlice.listXsize
	add	r6, r6, #1	@ i, i,
	cmp	r3, r6	@ D.41511, i
	bls	.L2446	@,
	ldr	r2, [r5, #0]	@ D.41515, <variable>.pListX
	add	r5, r5, #4	@ ivtmp.6769, ivtmp.6769,
	cmp	r2, #0	@ D.41515,
	beq	.L2424	@,
	ldr	r2, [r2, #32]	@ temp.6781, <variable>.frame_store
	cmp	r2, #0	@ temp.6781,
	beq	.L2426	@,
.L2429:
	ldr	r1, [r2, #32]	@, <variable>.logic_fs_id
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	ip, r0, #0	@ pstLogicFs,
	bne	.L2447	@,
.L2430:
	movw	r0, #:lower16:490050	@ tmp159,
	movt	r0, #:upper16:490050	@ tmp159,
	add	r3, r6, r0	@ tmp159, i, tmp159
	mov	r2, r6	@, i
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC483	@,
	ldr	lr, [r4, r3, asl #2]	@ tmp161, <variable>.pListX
	movt	r1, #:upper16:.LC483	@,
	ldr	r3, [lr, #32]	@ <variable>.frame_store, <variable>.frame_store
	str	ip, [sp, #0]	@ pstLogicFs,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L2428	@
.L2424:
	mov	r2, r6	@, i
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC481	@,
	movt	r1, #:upper16:.LC481	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L2428	@
.L2426:
	mov	r2, r6	@, i
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC482	@,
	movt	r1, #:upper16:.LC482	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L2428	@
.L2446:
	cmp	r3, #0	@ D.41511,
	beq	.L2422	@,
	movw	r7, #:lower16:2125524	@ tmp164,
	movt	r7, #:upper16:2125524	@ tmp164,
	ldr	r1, [r4, r7]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L2422	@,
	movw	ip, #:lower16:1960268	@ tmp166,
	movt	ip, #:upper16:1960268	@ tmp166,
	ldr	r6, [r4, ip]	@ D.41540, <variable>.pListX
	cmp	r6, #0	@ D.41540,
	beq	.L2434	@,
	ldr	r2, [r6, #32]	@ D.41544, <variable>.frame_store
	cmp	r2, #0	@ D.41544,
	moveq	r6, r2	@ i.6778, D.41544
	beq	.L2436	@,
	movw	r6, #:lower16:1960272	@ ivtmp.6764,
	movt	r6, #:upper16:1960272	@ ivtmp.6764,
	add	r5, r4, r6	@ ivtmp.6764, pHevcCtx, ivtmp.6764
	mov	r6, #0	@ i.6778,
	b	.L2438	@
.L2450:
	ldr	r3, [r0, #520]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r3, #0	@ <variable>.pstDecodeFs,
	beq	.L2439	@,
	ldr	r0, [r4, r7]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r6, r6, #1	@ i.6778, i.6778,
	cmp	r0, r6	@ <variable>.CurrSlice.listXsize, i.6778
	bls	.L2422	@,
	ldr	r3, [r5, #0]	@ temp.6774, <variable>.pListX
	add	r5, r5, #4	@ ivtmp.6764, ivtmp.6764,
	cmp	r3, #0	@ temp.6774,
	beq	.L2448	@,
	ldr	r2, [r3, #32]	@ D.41544, <variable>.frame_store
	cmp	r2, #0	@ D.41544,
	beq	.L2449	@,
.L2438:
	ldr	r1, [r2, #32]	@, <variable>.logic_fs_id
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs.6776
	bne	.L2450	@,
.L2439:
	mov	r3, r0	@, pstLogicFs.6776
	mov	r2, r6	@, i.6778
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC486	@,
	movt	r1, #:upper16:.LC486	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L2428	@
.L2448:
	movw	r2, #:lower16:2125520	@ tmp167,
	movt	r2, #:upper16:2125520	@ tmp167,
	ldr	r3, [r4, r2]	@ D.41511, <variable>.CurrSlice.listXsize
.L2434:
	mov	r2, r6	@, i.6778
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC484	@,
	movt	r1, #:upper16:.LC484	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L2428	@
.L2449:
	movw	lr, #:lower16:2125520	@ tmp169,
	movt	lr, #:upper16:2125520	@ tmp169,
	ldr	r3, [r4, lr]	@ D.41511, <variable>.CurrSlice.listXsize
.L2436:
	mov	r2, r6	@, i.6778
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC485	@,
	movt	r1, #:upper16:.LC485	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L2428	@
	.fnend
	.size	HEVC_IsRefListWrong, .-HEVC_IsRefListWrong
	.align	2
	.global	HEVC_PrintCurrSlicelistX
	.type	HEVC_PrintCurrSlicelistX, %function
HEVC_PrintCurrSlicelistX:
	.fnstart
.LFB1532:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:2125520	@ tmp150,
	movt	r7, #:upper16:2125520	@ tmp150,
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	movw	r1, #:lower16:.LC487	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC487	@,
	bl	dprint_vfmw	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC488	@,
	ldr	r2, [r6, r7]	@, <variable>.CurrSlice.listXsize
	movt	r1, #:upper16:.LC488	@,
	bl	dprint_vfmw	@
	ldr	r3, [r6, r7]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L2452	@,
	movw	r4, #:lower16:1960200	@ ivtmp.6817,
	movt	r4, #:upper16:1960200	@ ivtmp.6817,
	add	r4, r6, r4	@ ivtmp.6817, pHevcCtx, ivtmp.6817
	mov	r5, #0	@ i.6824,
.L2454:
	ldr	r3, [r4, #0]	@, <variable>.pListX
	mov	r2, r5	@, i.6824
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC489	@,
	movt	r1, #:upper16:.LC489	@,
	add	r5, r5, r0	@ i.6824, i.6824,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #0]	@ temp.6821, <variable>.pListX
	movw	r1, #:lower16:.LC490	@,
	mov	r0, #1	@,
	cmp	r3, #0	@ temp.6821,
	movt	r1, #:upper16:.LC490	@,
	beq	.L2453	@,
	ldr	r2, [r3, #32]	@, <variable>.frame_store
	bl	dprint_vfmw	@
	ldr	r0, [r4, #0]	@ tmp158, <variable>.pListX
	ldr	r3, [r0, #32]	@ temp.6823, <variable>.frame_store
	cmp	r3, #0	@ temp.6823,
	beq	.L2453	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	movw	r1, #:lower16:.LC491	@,
	movt	r1, #:upper16:.LC491	@,
	mov	r2, r0	@ D.38825,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
.L2453:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	add	r4, r4, #4	@ ivtmp.6817, ivtmp.6817,
	bl	dprint_vfmw	@
	ldr	r1, [r6, r7]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, r5	@ <variable>.CurrSlice.listXsize, i.6824
	bhi	.L2454	@,
.L2452:
	movw	r7, #:lower16:2125524	@ tmp165,
	movt	r7, #:upper16:2125524	@ tmp165,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC492	@,
	ldr	r2, [r6, r7]	@, <variable>.CurrSlice.listXsize
	movt	r1, #:upper16:.LC492	@,
	bl	dprint_vfmw	@
	ldr	r2, [r6, r7]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L2455	@,
	movw	r5, #:lower16:1960268	@ ivtmp.6812,
	movt	r5, #:upper16:1960268	@ ivtmp.6812,
	add	r4, r6, r5	@ ivtmp.6812, pHevcCtx, ivtmp.6812
	mov	r5, #0	@ i,
.L2457:
	ldr	r3, [r4, #0]	@, <variable>.pListX
	mov	r2, r5	@, i
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC493	@,
	movt	r1, #:upper16:.LC493	@,
	add	r5, r5, r0	@ i, i,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #0]	@ temp.6826, <variable>.pListX
	movw	r1, #:lower16:.LC490	@,
	mov	r0, #1	@,
	cmp	r3, #0	@ temp.6826,
	movt	r1, #:upper16:.LC490	@,
	beq	.L2456	@,
	ldr	r2, [r3, #32]	@, <variable>.frame_store
	bl	dprint_vfmw	@
	ldr	ip, [r4, #0]	@ tmp173, <variable>.pListX
	ldr	r3, [ip, #32]	@ temp.6829, <variable>.frame_store
	cmp	r3, #0	@ temp.6829,
	beq	.L2456	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	movw	r1, #:lower16:.LC491	@,
	movt	r1, #:upper16:.LC491	@,
	mov	r2, r0	@ D.38837,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
.L2456:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	add	r4, r4, #4	@ ivtmp.6812, ivtmp.6812,
	bl	dprint_vfmw	@
	ldr	r3, [r6, r7]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, r5	@ <variable>.CurrSlice.listXsize, i
	bhi	.L2457	@,
.L2455:
	movw	r1, #:lower16:.LC494	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC494	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	HEVC_PrintCurrSlicelistX, .-HEVC_PrintCurrSlicelistX
	.align	2
	.global	HEVC_IsVoFinish
	.type	HEVC_IsVoFinish, %function
HEVC_IsVoFinish:
	.fnstart
.LFB1635:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmn	r0, #1	@ D.45671,
	mov	r4, r0	@ D.45671,
	movne	r4, #0	@ i,
	bne	.L2466	@,
	b	.L2477	@
.L2464:
	ldrsb	r3, [r0, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r3, #3	@ <variable>.s32DispState,
	beq	.L2473	@,
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L2472	@,
	ldrsb	r1, [r0, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r1, #3	@ <variable>.s32DispState,
	beq	.L2473	@,
	cmp	r4, #64	@ i,
	beq	.L2476	@,
.L2466:
	mov	r1, r4	@, i
	ldr	r0, [r6, #236]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	add	r5, r4, #1	@ tmp145, i,
	add	r4, r5, #1	@ i, tmp145,
	mov	r1, r5	@, tmp145
	cmp	r0, #0	@ pstLogicFs
	bne	.L2464	@,
.L2472:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC496	@,
	movt	r1, #:upper16:.LC496	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45675,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2473:
	mov	r0, #0	@ D.45675,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2477:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC495	@,
	movt	r1, #:upper16:.LC495	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@ D.45675, D.45671
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2476:
	mov	r0, #1	@ D.45675,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	HEVC_IsVoFinish, .-HEVC_IsVoFinish
	.align	2
	.global	HEVC_GetBackPicFromVOQueue
	.type	HEVC_GetBackPicFromVOQueue, %function
HEVC_GetBackPicFromVOQueue:
	.fnstart
.LFB1637:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r7, r0	@ pHevcCtx, pHevcCtx
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	beq	.L2502	@,
.L2479:
	movw	r4, #:lower16:4306449	@ ivtmp.6905,
	movw	r8, #:lower16:4317969	@ D.54798,
	movt	r4, #:upper16:4306449	@ ivtmp.6905,
	movt	r8, #:upper16:4317969	@ D.54798,
	add	r4, r7, r4	@ ivtmp.6905, pHevcCtx, ivtmp.6905
	add	r8, r7, r8	@ D.54798, pHevcCtx, D.54798
	mov	r5, #0	@ tmp163,
.L2484:
	ldr	r1, [r4, #283]	@ temp.6915, <variable>.fs_image.p_usrdat
	strb	r5, [r4, #0]	@ tmp163, <variable>.is_reference
	cmp	r1, #0	@ temp.6915,
	str	r5, [r4, #3]	@ tmp163, <variable>.eFrameStoreState
	beq	.L2480	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #283]	@ tmp163, <variable>.fs_image.p_usrdat
.L2480:
	ldr	r1, [r4, #287]	@ temp.6916, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6916,
	beq	.L2481	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #287]	@ tmp163, <variable>.fs_image.p_usrdat
.L2481:
	ldr	r1, [r4, #291]	@ temp.6918, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6918,
	beq	.L2482	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #291]	@ tmp163, <variable>.fs_image.p_usrdat
.L2482:
	ldr	r1, [r4, #295]	@ D.45708, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.45708,
	beq	.L2483	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #295]	@ tmp163, <variable>.fs_image.p_usrdat
.L2483:
	add	r6, r4, #576	@ tmp169, ivtmp.6905,
	str	r5, [r4, #579]	@ tmp163, <variable>.eFrameStoreState
	strb	r5, [r4, #576]	@ tmp163, <variable>.is_reference
	ldr	r1, [r6, #283]	@ temp.6915, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6915,
	beq	.L2494	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r6, #283]	@ tmp163, <variable>.fs_image.p_usrdat
.L2494:
	ldr	r1, [r6, #287]	@ temp.6916, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6916,
	beq	.L2495	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r6, #287]	@ tmp163, <variable>.fs_image.p_usrdat
.L2495:
	ldr	r1, [r6, #291]	@ temp.6918, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6918,
	beq	.L2496	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r6, #291]	@ tmp163, <variable>.fs_image.p_usrdat
.L2496:
	ldr	r1, [r6, #295]	@ D.45708, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.45708,
	beq	.L2497	@,
	ldr	r0, [r7, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r6, #295]	@ tmp163, <variable>.fs_image.p_usrdat
.L2497:
	add	r4, r6, #576	@ ivtmp.6905, tmp169,
	cmp	r4, r8	@ ivtmp.6905, D.54798
	bne	.L2484	@,
	ldr	ip, [r7, #172]	@ D.45711, <variable>.TotalPmvNum
	cmp	ip, #0	@ D.45711,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	add	r7, r7, #2080	@ tmp160, pHevcCtx,
	mov	r2, #1	@ i,
	add	r1, r7, #12	@ ivtmp.6897, tmp160,
	cmp	r2, ip	@ i, D.45711
	sub	r3, ip, #1	@ tmp164, D.45711,
	mov	r0, #0	@ tmp162,
	and	r3, r3, r2	@ tmp166, tmp164,
	str	r0, [r1, #0]	@ tmp162, <variable>.PmvStoreUsedFlag
	add	r1, r7, #16	@ ivtmp.6897, tmp160,
	ldmcsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	cmp	r3, #0	@ tmp166,
	beq	.L2486	@,
	mov	r2, #2	@ i,
	cmp	r2, ip	@ i, D.45711
	str	r0, [r1, #0]	@ tmp162, <variable>.PmvStoreUsedFlag
	add	r1, r7, #20	@ ivtmp.6897, tmp160,
	ldmcsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2486:
	add	r2, r2, #2	@ i, i,
	mov	lr, r1	@ tmp168, ivtmp.6897
	cmp	r2, ip	@ i, D.45711
	str	r0, [lr], #4	@ tmp162, <variable>.PmvStoreUsedFlag
	str	r0, [r1, #4]	@ tmp162, <variable>.PmvStoreUsedFlag
	add	r1, lr, #4	@ ivtmp.6897, tmp168,
	bcc	.L2486	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2502:
	add	r0, r7, #2129920	@, pHevcCtx,
	add	r0, r0, #2816	@,,
	bl	ResetVoQueue	@
	b	.L2479	@
	.fnend
	.size	HEVC_GetBackPicFromVOQueue, .-HEVC_GetBackPicFromVOQueue
	.align	2
	.global	HEVC_DECRecycleImage
	.type	HEVC_DECRecycleImage, %function
HEVC_DECRecycleImage:
	.fnstart
.LFB1632:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	mov	r6, r1	@ PicID.732, PicID
	bl	FSP_GetLogicFs	@
	subs	r4, r0, #0	@ pstLogicFs,
	beq	.L2512	@,
	ldrsb	r3, [r4, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r3, #0	@ <variable>.s32DispState,
	beq	.L2513	@,
	ldr	r1, [r4, #220]	@ D.45541, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ D.45541,
	beq	.L2507	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r0, #0	@ tmp147,
	str	r0, [r4, #220]	@ tmp147, <variable>.stDispImg.p_usrdat
.L2507:
	ldr	r1, [r4, #224]	@ temp.6951, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.6951,
	beq	.L2508	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r1, #0	@ tmp149,
	str	r1, [r4, #224]	@ tmp149, <variable>.stDispImg.p_usrdat
.L2508:
	ldr	r1, [r4, #228]	@ temp.6953, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.6953,
	beq	.L2509	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r2, #0	@ tmp151,
	str	r2, [r4, #228]	@ tmp151, <variable>.stDispImg.p_usrdat
.L2509:
	ldr	r1, [r4, #232]	@ temp.6947, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.6947,
	beq	.L2510	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	ip, #0	@ tmp153,
	str	ip, [r4, #232]	@ tmp153, <variable>.stDispImg.p_usrdat
.L2510:
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	mov	r1, r6	@, PicID.732
	mov	r2, #0	@,
	bl	FSP_SetDisplay	@
	mov	r0, #0	@ D.45539,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2513:
	movw	r1, #:lower16:.LC497	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC497	@,
	bl	dprint_vfmw	@
.L2512:
	mvn	r0, #0	@ D.45539,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	HEVC_DECRecycleImage, .-HEVC_DECRecycleImage
	.align	2
	.global	HEVC_AllocFrameStore
	.type	HEVC_AllocFrameStore, %function
HEVC_AllocFrameStore:
	.fnstart
.LFB1634:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:4306452	@ ivtmp.6992,
	movw	r2, #:lower16:1960396	@ ivtmp.6984,
	movt	r3, #:upper16:4306452	@ ivtmp.6992,
	movt	r2, #:upper16:1960396	@ ivtmp.6984,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	add	r3, r0, r3	@ ivtmp.6992, pHevcCtx, ivtmp.6992
	add	r2, r0, r2	@ ivtmp.6984, pHevcCtx, ivtmp.6984
	movw	r1, #:lower16:2124809	@ tmp152,
	mov	r0, #0	@ tmp153,
	movt	r1, #:upper16:2124809	@ tmp152,
	movw	r8, #:lower16:1960372	@ tmp261,
	movw	sl, #:lower16:1960392	@ tmp262,
	movt	r8, #:upper16:1960372	@ tmp261,
	movt	sl, #:upper16:1960392	@ tmp262,
	mov	lr, r0	@ i, tmp153
	strb	r0, [r5, r1]	@ tmp153, <variable>.CurrPic.state
.L2521:
	ldr	ip, [r3, #0]	@ <variable>.eFrameStoreState, <variable>.eFrameStoreState
	cmp	ip, #0	@ <variable>.eFrameStoreState,
	bne	.L2515	@,
	mov	r7, lr, asl #3	@ tmp258, i,
	movw	r6, #:lower16:4306448	@ tmp161,
	add	r1, r7, lr	@ tmp159, tmp258, i
	movt	r6, #:upper16:4306448	@ tmp161,
	mov	r0, r1, asl #6	@ tmp160, tmp159,
	add	r4, r0, r6	@ tmp161, tmp160, tmp161
	adds	r4, r5, r4	@ D.45610, pHevcCtx, tmp161
	beq	.L2516	@,
	ldr	r6, [r5, r8]	@ D.48085, <variable>.DPB.used_size
	cmp	r6, #0	@ D.48085,
	beq	.L2516	@,
	ldr	r0, [r5, sl]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r4, r0	@ D.45610, <variable>.DPB.fs
	beq	.L2515	@,
	tst	r6, #1	@ D.48085,
	mov	r0, r2	@ ivtmp.6984, ivtmp.6984
	bne	.L2517	@,
	mov	ip, #1	@ i,
	cmp	ip, r6	@ i, D.48085
	bcs	.L2516	@,
	mov	r0, r2	@ ivtmp.6984, ivtmp.6984
	ldr	r1, [r0], #4	@ D.48086, <variable>.DPB.fs
	cmp	r4, r1	@ D.45610, D.48086
	bne	.L2517	@,
	b	.L2515	@
.L2518:
	ldr	r9, [r1], #4	@ D.48086, <variable>.DPB.fs
	cmp	r4, r9	@ D.45610, D.48086
	beq	.L2515	@,
	ldr	r9, [r0, #4]	@ D.48086, <variable>.DPB.fs
	add	r0, r1, #4	@ ivtmp.6984, tmp268,
	cmp	r4, r9	@ D.45610, D.48086
	beq	.L2515	@,
.L2517:
	add	ip, ip, #1	@ tmp269, i,
	mov	r1, r0	@ tmp268, ivtmp.6984
	cmp	ip, r6	@ tmp269, D.48085
	add	ip, ip, #1	@ i, tmp269,
	bcc	.L2518	@,
.L2516:
	add	r2, r7, lr	@ tmp176, tmp258, i
	movw	r3, #:lower16:2124848	@ tmp167,
	movw	r6, #:lower16:2124809	@ tmp169,
	movt	r3, #:upper16:2124848	@ tmp167,
	movt	r6, #:upper16:2124809	@ tmp169,
	add	ip, r5, r2, asl #6	@, tmp178, pHevcCtx, tmp176,
	movw	r0, #:lower16:2124856	@,
	movw	r1, #:lower16:4306520	@,
	movt	r0, #:upper16:2124856	@,
	movt	r1, #:upper16:4306520	@,
	add	r1, ip, r1	@, tmp178,
	mov	r2, #101	@ tmp168,
	mov	lr, #1	@ tmp170,
	str	r2, [r5, r3]	@ tmp168, <variable>.CurrPic.err_level
	add	r0, r5, r0	@, pHevcCtx,
	mov	r2, #504	@,
	strb	lr, [r5, r6]	@ tmp170, <variable>.CurrPic.state
	bl	memcpy	@
	movw	ip, #:lower16:2125056	@ tmp184,
	movw	r0, #:lower16:2124852	@ tmp186,
	movt	ip, #:upper16:2125056	@ tmp184,
	movt	r0, #:upper16:2124852	@ tmp186,
	mov	r2, #0	@ tmp185,
	str	r2, [r5, ip]	@ tmp185, <variable>.CurrPic.fs_image.error_level
	str	r4, [r5, r0]	@ D.45610, <variable>.CurrPic.frame_store
	str	r2, [r4, #20]	@ tmp185, <variable>.err_level
	ldr	r1, [r5, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r2, [r1, #2]	@ tmp185, <variable>.is_displayed
	ldr	r3, [r5, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r2, [r3, #0]	@ tmp185, <variable>.non_existing
	ldr	ip, [r5, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r2, [ip, #52]	@ tmp185, <variable>.frame.is_long_term
	ldr	r1, [r5, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r2, [r1, #56]	@ tmp185, <variable>.frame.is_short_term
	ldr	r3, [r5, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r2, [r3, #8]	@ tmp185, <variable>.eFirstFrameState
	ldrb	r1, [r5, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	cmp	r1, #1	@ <variable>.CurrPic.state,
	bne	.L2520	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FSP_NewLogicFs	@
	mov	r7, r0	@ LogicFsID,
	mov	r1, r0	@, LogicFsID
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	mov	r4, r0	@ pstLFs,
	subs	r0, r0, #0	@ tmp218, pstLFs,
	movne	r0, #1	@ tmp218
	cmp	r7, #0	@ LogicFsID,
	movlt	r0, #0	@, tmp218,
	cmp	r0, #0	@ tmp218,
	beq	.L2523	@,
	movw	r3, #:lower16:1960188	@ tmp220,
	movt	r3, #:upper16:1960188	@ tmp220,
	ldr	lr, [r5, r3]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r6, [lr, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r6, #25	@ <variable>.eCapLevel,
	beq	.L2532	@,
.L2524:
	movw	r6, #:lower16:2124852	@ tmp231,
	movt	r6, #:upper16:2124852	@ tmp231,
	add	r1, r4, #8	@, pstLFs,
	mov	r2, #504	@,
	ldr	lr, [r5, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r0, lr, #72	@, <variable>.CurrPic.frame_store,
	bl	memcpy	@
	ldr	r2, [r5, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:2124856	@,
	movt	r0, #:upper16:2124856	@,
	add	r1, r2, #72	@, <variable>.CurrPic.frame_store,
	add	r0, r5, r0	@, pHevcCtx,
	mov	r2, #504	@,
	bl	memcpy	@
	ldr	r1, [r5, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r3, #:lower16:2124844	@ tmp250,
	movt	r3, #:upper16:2124844	@ tmp250,
	mov	r0, #0	@ D.45620,
	str	r7, [r1, #32]	@ LogicFsID, <variable>.logic_fs_id
	ldrsb	ip, [r4, #4]	@ <variable>.PmvIdc, <variable>.PmvIdc
	str	ip, [r5, r3]	@ <variable>.PmvIdc, <variable>.CurrPic.pmv_address_idc
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2515:
	add	lr, lr, #1	@ i, i,
	add	r3, r3, #576	@ ivtmp.6992, ivtmp.6992,
	cmp	lr, #20	@ i,
	bne	.L2521	@,
.L2520:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC498	@,
	movt	r1, #:upper16:.LC498	@,
	bl	dprint_vfmw	@
	mvn	r0, #3	@ D.45620,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2532:
	movw	r2, #:lower16:2044452	@ tmp222,
	movt	r2, #:upper16:2044452	@ tmp222,
	ldr	r6, [r4, #200]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	movw	r1, #:lower16:2044448	@ tmp224,
	ldr	ip, [r5, r2]	@ HeightAligh, <variable>.CurrSPS.pic_height_in_luma_samples
	movt	r1, #:upper16:2044448	@ tmp224,
	ldr	r0, [r4, #112]	@ <variable>.stDispImg.luma_phy_addr, <variable>.stDispImg.luma_phy_addr
	ldr	lr, [r5, r1]	@ <variable>.CurrSPS.pic_width_in_luma_samples, <variable>.CurrSPS.pic_width_in_luma_samples
	mul	r6, r6, ip	@ ChromOffset, <variable>.stDispImg.image_stride, HeightAligh
	str	ip, [r4, #176]	@ HeightAligh, <variable>.stDispImg.image_height
	str	lr, [r4, #172]	@ <variable>.CurrSPS.pic_width_in_luma_samples, <variable>.stDispImg.image_width
	add	r0, r6, r0	@ D.45636, ChromOffset, <variable>.stDispImg.luma_phy_addr
	str	r0, [r4, #116]	@ D.45636, <variable>.stDispImg.chrom_phy_addr
	bl	MEM_Phy2Vir	@
	ldr	r3, [r4, #128]	@ <variable>.stDispImg.luma_2d_phy_addr, <variable>.stDispImg.luma_2d_phy_addr
	ldr	r1, [r4, #96]	@ <variable>.stDispImg.top_luma_phy_addr, <variable>.stDispImg.top_luma_phy_addr
	add	ip, r6, r3	@ D.45650, ChromOffset, <variable>.stDispImg.luma_2d_phy_addr
	ldr	r2, [r4, #200]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	add	r6, r6, r1	@ D.45643, ChromOffset, <variable>.stDispImg.top_luma_phy_addr
	str	ip, [r4, #132]	@ D.45650, <variable>.stDispImg.chrom_2d_phy_addr
	add	r1, r6, r2	@ tmp229, D.45643, <variable>.stDispImg.image_stride
	str	r6, [r4, #100]	@ D.45643, <variable>.stDispImg.top_chrom_phy_addr
	str	r1, [r4, #108]	@ tmp229, <variable>.stDispImg.btm_chrom_phy_addr
	str	r0, [r4, #44]	@, <variable>.stDispImg.chrom_vir_addr
	mov	r0, ip	@, D.45650
	bl	MEM_Phy2Vir	@
	str	r0, [r4, #60]	@, <variable>.stDispImg.chrom_2d_vir_addr
	b	.L2524	@
.L2523:
	strb	r0, [r5, r6]	@ tmp218, <variable>.CurrPic.state
	movw	r1, #:lower16:.LC499	@,
	movt	r1, #:upper16:.LC499	@,
	bl	dprint_vfmw	@
	mvn	r0, #3	@ D.45620,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	HEVC_AllocFrameStore, .-HEVC_AllocFrameStore
	.align	2
	.global	HEVC_ArrangeVahbMem
	.type	HEVC_ArrangeVahbMem, %function
HEVC_ArrangeVahbMem:
	.fnstart
.LFB1633:
	@ args = 12, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #40
	sub	sp, sp, #40	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	sub	r6, fp, #68	@ tmp186,,
	mov	r5, r1	@ ImgWidth, ImgWidth
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r1, #36	@,
	mov	r0, r6	@, tmp186
	mov	r7, r2	@ ImgHeight, ImgHeight
	bl	__memzero	@
	movw	ip, #:lower16:1960188	@ tmp151,
	movt	ip, #:upper16:1960188	@ tmp151,
	mov	r2, #0	@ tmp154,
	ldr	r0, [r4, ip]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	ip, #:lower16:1960188	@ tmp169,
	movt	ip, #:upper16:1960188	@ tmp169,
	ldr	r1, [r0, #20]	@ <variable>.s32DnrDispOutEnable, <variable>.s32DnrDispOutEnable
	str	r5, [fp, #-40]	@ ImgWidth, FspInstCfg.s32DispFsWidth
	str	r5, [fp, #-56]	@ ImgWidth, FspInstCfg.s32DecFsWidth
	strb	r1, [fp, #-68]	@ <variable>.s32DnrDispOutEnable, FspInstCfg.s32DispLoopEnable
	mov	r1, #5	@ tmp166,
	str	r5, [fp, #-48]	@ ImgWidth, FspInstCfg.s32TfFsWidth
	mov	r5, #0	@ tmp164,
	str	r7, [fp, #-36]	@ ImgHeight, FspInstCfg.s32DispFsHeight
	strb	r2, [fp, #-67]	@ tmp154, FspInstCfg.s32TfEnable
	strb	r2, [fp, #-66]	@ tmp154, FspInstCfg.s32RprEnable
	str	r7, [fp, #-52]	@ ImgHeight, FspInstCfg.s32DecFsHeight
	str	r7, [fp, #-44]	@ ImgHeight, FspInstCfg.s32TfFsHeight
	ldr	r3, [r0, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r3, #24	@ <variable>.eCapLevel,
	movwne	r3, #:lower16:1960368	@ tmp161,
	movtne	r3, #:upper16:1960368	@ tmp161,
	ldrneb	r2, [r4, r3]	@ zero_extendqisi2	@ iftmp.737, <variable>.DPB.size
	mov	r3, #0	@ tmp172,
	strb	r2, [fp, #-63]	@ iftmp.737, FspInstCfg.s32ExpectedDecFsNum
	ldr	r0, [r4, ip]	@ <variable>.pstExtraData, <variable>.pstExtraData
	strb	r5, [fp, #-62]	@ tmp164, FspInstCfg.s32ExpectedTfFsNum
	mov	r5, #1	@ tmp174,
	strb	r1, [fp, #-61]	@ tmp166, FspInstCfg.s32ExpectedDispFsNum
	mov	r1, r6	@, tmp186
	ldr	r2, [r0, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	cmp	r2, #24	@ <variable>.eCapLevel,
	strb	r3, [fp, #-64]	@ tmp172, FspInstCfg.s32UserDec
	strb	r5, [fp, #-65]	@ tmp174, FspInstCfg.s8SubLevelEnable
	ldrneb	r2, [fp, #12]	@ zero_extendqisi2	@ iftmp.738, PmvBlkNum
	moveq	r2, #1	@ iftmp.738,
	strb	r2, [fp, #-60]	@ iftmp.738, FspInstCfg.s32ExpectedPmvNum
	bl	FSP_ConfigInstance	@
	cmp	r0, #0	@,
	bne	.L2538	@,
	movw	r2, #:lower16:1960188	@ tmp178,
	movt	r2, #:upper16:1960188	@ tmp178,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	sub	r3, fp, #32	@,,
	ldr	lr, [r4, r2]	@ temp.7033, <variable>.pstExtraData
	ldr	r2, [lr, #28]	@, <variable>.s32SyntaxMemSize
	ldr	r1, [lr, #24]	@, <variable>.s32SyntaxMemAddr
	bl	FSP_PartitionFsMemory	@
	cmp	r0, #0	@,
	moveq	r0, r5	@ D.45589, tmp174
	bne	.L2542	@,
.L2540:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2538:
	mov	r0, r5	@, tmp174
	movw	r1, #:lower16:.LC501	@,
	movt	r1, #:upper16:.LC501	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.45589,
	b	.L2540	@
.L2542:
	mov	r0, r5	@, tmp174
	movw	r1, #:lower16:.LC500	@,
	movt	r1, #:upper16:.LC500	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.45589,
	b	.L2540	@
	.fnend
	.size	HEVC_ArrangeVahbMem, .-HEVC_ArrangeVahbMem
	.align	2
	.global	HEVC_InitDPB
	.type	HEVC_InitDPB, %function
HEVC_InitDPB:
	.fnstart
.LFB1601:
	@ args = 0, pretend = 0, frame = 120
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #140
	sub	sp, sp, #140	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:1960392	@ ivtmp.7089,
	movt	r6, #:upper16:1960392	@ ivtmp.7089,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	add	r6, r0, r6	@ ivtmp.7089, pHevcCtx, ivtmp.7089
	mov	sl, r1	@ ReRangeFlag, ReRangeFlag
	bl	HEVC_ClearAllSlice	@
	mov	r7, #0	@ tmp297,
	ldr	r3, [r6, #0]	@ D.44409, <variable>.DPB.fs
	movw	r8, #:lower16:1960460	@ D.54998,
	movt	r8, #:upper16:1960460	@ D.54998,
	cmp	r3, r7	@ D.44409,
	add	r8, r4, r8	@ D.54998, pHevcCtx, D.54998
	beq	.L2572	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2572:
	ldr	r3, [r6, #68]	@ D.44414, <variable>.DPB.fs_negative_ref
	cmp	r3, #0	@ D.44414,
	beq	.L2573	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2573:
	ldr	r3, [r6, #136]	@ D.44418, <variable>.DPB.fs_positive_ref
	cmp	r3, #0	@ D.44418,
	beq	.L2574	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2574:
	ldr	r3, [r6, #204]	@ D.44422, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ D.44422,
	beq	.L2575	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2575:
	mov	r5, r6	@ ivtmp.7089, ivtmp.7089
	str	r7, [r6, #204]	@ tmp297, <variable>.DPB.fs_ltref
	str	r7, [r6, #136]	@ tmp297, <variable>.DPB.fs_positive_ref
	str	r7, [r6, #68]	@ tmp297, <variable>.DPB.fs_negative_ref
	str	r7, [r5], #4	@ tmp297, <variable>.DPB.fs
.L2548:
	ldr	r3, [r5, #0]	@ D.44409, <variable>.DPB.fs
	cmp	r3, #0	@ D.44409,
	beq	.L2544	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2544:
	ldr	r3, [r5, #68]	@ D.44414, <variable>.DPB.fs_negative_ref
	cmp	r3, #0	@ D.44414,
	beq	.L2545	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2545:
	ldr	r3, [r5, #136]	@ D.44418, <variable>.DPB.fs_positive_ref
	cmp	r3, #0	@ D.44418,
	beq	.L2546	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2546:
	ldr	r3, [r5, #204]	@ D.44422, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ D.44422,
	beq	.L2547	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2547:
	mov	r6, r5	@ tmp304, ivtmp.7089
	str	r7, [r5, #204]	@ tmp297, <variable>.DPB.fs_ltref
	str	r7, [r6], #4	@ tmp297, <variable>.DPB.fs
	ldr	r3, [r5, #4]	@ D.44409, <variable>.DPB.fs
	str	r7, [r5, #136]	@ tmp297, <variable>.DPB.fs_positive_ref
	cmp	r3, #0	@ D.44409,
	str	r7, [r5, #68]	@ tmp297, <variable>.DPB.fs_negative_ref
	beq	.L2577	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2577:
	ldr	r3, [r6, #68]	@ D.44414, <variable>.DPB.fs_negative_ref
	cmp	r3, #0	@ D.44414,
	beq	.L2578	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2578:
	ldr	r3, [r6, #136]	@ D.44418, <variable>.DPB.fs_positive_ref
	cmp	r3, #0	@ D.44418,
	beq	.L2579	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2579:
	ldr	r3, [r6, #204]	@ D.44422, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ D.44422,
	beq	.L2580	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2580:
	mov	r5, r6	@ ivtmp.7089, tmp304
	str	r7, [r6, #204]	@ tmp297, <variable>.DPB.fs_ltref
	str	r7, [r5], #4	@ tmp297, <variable>.DPB.fs
	cmp	r5, r8	@ ivtmp.7089, D.54998
	str	r7, [r6, #136]	@ tmp297, <variable>.DPB.fs_positive_ref
	str	r7, [r6, #68]	@ tmp297, <variable>.DPB.fs_negative_ref
	bne	.L2548	@,
	movw	ip, #:lower16:2044612	@ tmp172,
	movt	ip, #:upper16:2044612	@ tmp172,
	movw	r1, #:lower16:1960368	@ tmp174,
	movw	r3, #:lower16:1960372	@ tmp177,
	ldr	r0, [r4, ip]	@ <variable>.CurrSPS.dpb_size, <variable>.CurrSPS.dpb_size
	movt	r1, #:upper16:1960368	@ tmp174,
	movt	r3, #:upper16:1960372	@ tmp177,
	movw	r6, #:lower16:1960384	@ tmp179,
	add	r2, r0, #1	@ D.44427, <variable>.CurrSPS.dpb_size,
	movt	r6, #:upper16:1960384	@ tmp179,
	cmp	r2, #17	@ D.44427,
	movw	r8, #:lower16:1960388	@ tmp181,
	movw	r9, #:lower16:1960380	@ tmp183,
	movt	r8, #:upper16:1960388	@ tmp181,
	movt	r9, #:upper16:1960380	@ tmp183,
	movw	r7, #:lower16:1960376	@ tmp185,
	movt	r7, #:upper16:1960376	@ tmp185,
	movw	r5, #:lower16:1960664	@,
	movt	r5, #:upper16:1960664	@,
	str	r2, [r4, r1]	@ D.44427, <variable>.DPB.size
	add	r0, r4, r5	@, pHevcCtx,
	movhi	r2, #17	@ tmp176,
	mov	r5, #0	@ tmp178,
	strhi	r2, [r4, r1]	@ tmp176, <variable>.DPB.size
	str	r5, [r4, r3]	@ tmp178, <variable>.DPB.used_size
	mov	r1, #200	@,
	str	r5, [r4, r6]	@ tmp178, <variable>.DPB.negative_ref_frames_in_buffer
	movw	lr, #:lower16:1960664	@,
	str	r5, [r4, r8]	@ tmp178, <variable>.DPB.positive_ref_frames_in_buffer
	movt	lr, #:upper16:1960664	@,
	str	lr, [fp, #-48]	@, %sfp
	movw	r8, #:lower16:1960204	@ tmp195,
	str	r5, [r4, r9]	@ tmp178, <variable>.DPB.ltref_frames_in_buffer
	movt	r8, #:upper16:1960204	@ tmp195,
	str	r5, [r4, r7]	@ tmp178, <variable>.DPB.max_long_term_pic_idx
	movw	r6, #:lower16:1960208	@ tmp197,
	bl	__memzero	@
	cmp	sl, r5	@ ReRangeFlag,
	movw	sl, #:lower16:1960200	@ tmp193,
	movt	sl, #:upper16:1960200	@ tmp193,
	movw	ip, #:lower16:1960232	@,
	movt	ip, #:upper16:1960232	@,
	str	ip, [fp, #-52]	@, %sfp
	movw	ip, #:lower16:1960236	@,
	movt	ip, #:upper16:1960236	@,
	str	ip, [fp, #-56]	@, %sfp
	movw	ip, #:lower16:1960240	@,
	movt	ip, #:upper16:1960240	@,
	str	ip, [fp, #-60]	@, %sfp
	movw	ip, #:lower16:1960244	@,
	movt	ip, #:upper16:1960244	@,
	str	ip, [fp, #-64]	@, %sfp
	movw	ip, #:lower16:1960248	@,
	movt	ip, #:upper16:1960248	@,
	str	ip, [fp, #-68]	@, %sfp
	movw	ip, #:lower16:1960252	@,
	movt	ip, #:upper16:1960252	@,
	str	ip, [fp, #-72]	@, %sfp
	movw	ip, #:lower16:1960256	@,
	movt	ip, #:upper16:1960256	@,
	str	ip, [fp, #-76]	@, %sfp
	movw	ip, #:lower16:1960260	@,
	movt	ip, #:upper16:1960260	@,
	str	ip, [fp, #-80]	@, %sfp
	movw	ip, #:lower16:1960264	@,
	movt	ip, #:upper16:1960264	@,
	str	ip, [fp, #-84]	@, %sfp
	movw	ip, #:lower16:2125520	@,
	movt	ip, #:upper16:2125520	@,
	str	ip, [fp, #-160]	@, %sfp
	movw	ip, #:lower16:1960268	@,
	movt	ip, #:upper16:1960268	@,
	str	ip, [fp, #-88]	@, %sfp
	movw	ip, #:lower16:1960272	@,
	movt	ip, #:upper16:1960272	@,
	str	ip, [fp, #-92]	@, %sfp
	movw	ip, #:lower16:1960276	@,
	movt	ip, #:upper16:1960276	@,
	str	ip, [fp, #-96]	@, %sfp
	movw	ip, #:lower16:1960280	@,
	movt	ip, #:upper16:1960280	@,
	str	ip, [fp, #-100]	@, %sfp
	movw	ip, #:lower16:1960284	@,
	movt	ip, #:upper16:1960284	@,
	str	ip, [fp, #-104]	@, %sfp
	movw	ip, #:lower16:1960288	@,
	movt	ip, #:upper16:1960288	@,
	str	ip, [fp, #-108]	@, %sfp
	movw	ip, #:lower16:1960292	@,
	movt	ip, #:upper16:1960292	@,
	str	ip, [fp, #-112]	@, %sfp
	movw	ip, #:lower16:1960296	@,
	movt	ip, #:upper16:1960296	@,
	str	ip, [fp, #-116]	@, %sfp
	movw	ip, #:lower16:1960300	@,
	movt	ip, #:upper16:1960300	@,
	str	ip, [fp, #-120]	@, %sfp
	movw	ip, #:lower16:1960304	@,
	movt	ip, #:upper16:1960304	@,
	str	ip, [fp, #-124]	@, %sfp
	movw	ip, #:lower16:1960308	@,
	movt	ip, #:upper16:1960308	@,
	str	ip, [fp, #-128]	@, %sfp
	movw	ip, #:lower16:1960312	@,
	movt	ip, #:upper16:1960312	@,
	str	ip, [fp, #-132]	@, %sfp
	movw	ip, #:lower16:1960316	@,
	movt	ip, #:upper16:1960316	@,
	str	ip, [fp, #-136]	@, %sfp
	movw	ip, #:lower16:1960320	@,
	movt	ip, #:upper16:1960320	@,
	str	ip, [fp, #-140]	@, %sfp
	movw	ip, #:lower16:1960324	@,
	movt	ip, #:upper16:1960324	@,
	str	ip, [fp, #-144]	@, %sfp
	movw	ip, #:lower16:1960328	@,
	movt	ip, #:upper16:1960328	@,
	str	ip, [fp, #-148]	@, %sfp
	movw	ip, #:lower16:1960332	@,
	movt	ip, #:upper16:1960332	@,
	str	ip, [fp, #-152]	@, %sfp
	movw	ip, #:lower16:2125524	@,
	movt	ip, #:upper16:2125524	@,
	str	ip, [fp, #-156]	@, %sfp
	str	r5, [r4, sl]	@ tmp178, <variable>.pListX
	movw	r7, #:lower16:1960668	@ tmp191,
	ldr	ip, [fp, #-48]	@, %sfp
	movt	r7, #:upper16:1960668	@ tmp191,
	movt	r6, #:upper16:1960208	@ tmp197,
	mov	sl, #16	@ tmp190,
	str	r5, [r4, r8]	@ tmp178, <variable>.pListX
	movw	r0, #:lower16:1960212	@ tmp199,
	str	sl, [r4, ip]	@ tmp190, <variable>.APC.size
	movt	r0, #:upper16:1960212	@ tmp199,
	str	r5, [r4, r7]	@ tmp178, <variable>.APC.used_size
	movw	r1, #:lower16:1960216	@ tmp201,
	str	r5, [r4, r6]	@ tmp178, <variable>.pListX
	movt	r1, #:upper16:1960216	@ tmp201,
	ldr	ip, [fp, #-160]	@, %sfp
	movw	r2, #:lower16:1960220	@ tmp203,
	movw	r3, #:lower16:1960224	@ tmp205,
	movt	r2, #:upper16:1960220	@ tmp203,
	movt	r3, #:upper16:1960224	@ tmp205,
	movw	r9, #:lower16:1960228	@ tmp207,
	movt	r9, #:upper16:1960228	@ tmp207,
	str	r5, [r4, r0]	@ tmp178, <variable>.pListX
	str	r5, [r4, ip]	@ tmp178, <variable>.CurrSlice.listXsize
	str	r5, [r4, r1]	@ tmp178, <variable>.pListX
	str	r5, [r4, r2]	@ tmp178, <variable>.pListX
	str	r5, [r4, r3]	@ tmp178, <variable>.pListX
	str	r5, [r4, r9]	@ tmp178, <variable>.pListX
	ldr	ip, [fp, #-52]	@, %sfp
	str	r5, [r4, ip]	@ tmp178, <variable>.pListX
	ldr	r3, [fp, #-56]	@, %sfp
	str	r5, [r4, r3]	@ tmp178, <variable>.pListX
	ldr	r2, [fp, #-60]	@, %sfp
	str	r5, [r4, r2]	@ tmp178, <variable>.pListX
	ldr	r1, [fp, #-64]	@, %sfp
	str	r5, [r4, r1]	@ tmp178, <variable>.pListX
	ldr	r0, [fp, #-68]	@, %sfp
	str	r5, [r4, r0]	@ tmp178, <variable>.pListX
	ldr	ip, [fp, #-72]	@, %sfp
	str	r5, [r4, ip]	@ tmp178, <variable>.pListX
	ldr	r3, [fp, #-76]	@, %sfp
	str	r5, [r4, r3]	@ tmp178, <variable>.pListX
	ldr	r2, [fp, #-80]	@, %sfp
	str	r5, [r4, r2]	@ tmp178, <variable>.pListX
	ldr	r1, [fp, #-84]	@, %sfp
	str	r5, [r4, r1]	@ tmp178, <variable>.pListX
	ldr	r0, [fp, #-88]	@, %sfp
	str	r5, [r4, r0]	@ tmp178, <variable>.pListX
	ldr	ip, [fp, #-92]	@, %sfp
	str	r5, [r4, ip]	@ tmp178, <variable>.pListX
	ldr	r3, [fp, #-96]	@, %sfp
	str	r5, [r4, r3]	@ tmp178, <variable>.pListX
	ldr	r2, [fp, #-100]	@, %sfp
	str	r5, [r4, r2]	@ tmp178, <variable>.pListX
	ldr	r1, [fp, #-104]	@, %sfp
	str	r5, [r4, r1]	@ tmp178, <variable>.pListX
	ldr	r0, [fp, #-108]	@, %sfp
	str	r5, [r4, r0]	@ tmp178, <variable>.pListX
	ldr	ip, [fp, #-112]	@, %sfp
	str	r5, [r4, ip]	@ tmp178, <variable>.pListX
	ldr	r3, [fp, #-116]	@, %sfp
	str	r5, [r4, r3]	@ tmp178, <variable>.pListX
	ldr	r2, [fp, #-120]	@, %sfp
	str	r5, [r4, r2]	@ tmp178, <variable>.pListX
	ldr	r1, [fp, #-124]	@, %sfp
	str	r5, [r4, r1]	@ tmp178, <variable>.pListX
	ldr	r0, [fp, #-128]	@, %sfp
	str	r5, [r4, r0]	@ tmp178, <variable>.pListX
	ldr	ip, [fp, #-132]	@, %sfp
	str	r5, [r4, ip]	@ tmp178, <variable>.pListX
	ldr	r3, [fp, #-136]	@, %sfp
	str	r5, [r4, r3]	@ tmp178, <variable>.pListX
	ldr	r2, [fp, #-140]	@, %sfp
	str	r5, [r4, r2]	@ tmp178, <variable>.pListX
	ldr	r1, [fp, #-156]	@, %sfp
	str	r5, [r4, r1]	@ tmp178, <variable>.CurrSlice.listXsize
	ldr	r0, [fp, #-144]	@, %sfp
	str	r5, [r4, r0]	@ tmp178, <variable>.pListX
	ldr	ip, [fp, #-148]	@, %sfp
	str	r5, [r4, ip]	@ tmp178, <variable>.pListX
	ldr	r3, [fp, #-152]	@, %sfp
	str	r5, [r4, r3]	@ tmp178, <variable>.pListX
	bne	.L2550	@,
	movw	r2, #:lower16:1960188	@ tmp266,
	movt	r2, #:upper16:1960188	@ tmp266,
	ldr	r5, [r4, r2]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r5, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r3, #1	@ <variable>.s32WaitFsFlag,
	beq	.L2550	@,
.L2551:
	ldr	ip, [r4, #172]	@ D.44447, <variable>.TotalPmvNum
	cmp	ip, #0	@ D.44447,
	beq	.L2557	@,
	add	r3, r4, #2080	@ tmp283, pHevcCtx,
	cmp	ip, #1	@ D.44447,
	add	sl, r3, #12	@ ivtmp.7081, tmp283,
	sub	r7, ip, #1	@ tmp299, D.44447,
	mov	r0, #0	@ tmp295,
	and	r5, r7, #1	@ tmp301, tmp299,
	str	r0, [sl, #0]	@ tmp295, <variable>.PmvStoreUsedFlag
	mov	r1, #1	@ i,
	add	r2, r3, #16	@ ivtmp.7081, tmp283,
	bls	.L2557	@,
	cmp	r5, #0	@ tmp301,
	beq	.L2558	@,
	mov	r1, #2	@ i,
	cmp	ip, r1	@ D.44447, i
	str	r0, [r2, #0]	@ tmp295, <variable>.PmvStoreUsedFlag
	add	r2, r3, #20	@ ivtmp.7081, tmp283,
	bls	.L2557	@,
.L2558:
	add	r1, r1, #2	@ i, i,
	mov	r8, r2	@ tmp303, ivtmp.7081
	cmp	ip, r1	@ D.44447, i
	str	r0, [r8], #4	@ tmp295, <variable>.PmvStoreUsedFlag
	str	r0, [r2, #4]	@ tmp295, <variable>.PmvStoreUsedFlag
	add	r2, r8, #4	@ ivtmp.7081, tmp303,
	bhi	.L2558	@,
.L2557:
	movw	r2, #:lower16:4300592	@ ivtmp.7076,
	movw	r6, #:lower16:4306472	@ D.54978,
	movt	r2, #:upper16:4300592	@ ivtmp.7076,
	movt	r6, #:upper16:4306472	@ D.54978,
	movw	r7, #:lower16:1960196	@ tmp293,
	add	r5, r4, r2	@ ivtmp.7076, pHevcCtx, ivtmp.7076
	add	sl, r4, r6	@ D.54978, pHevcCtx, D.54978
	movt	r7, #:upper16:1960196	@ tmp293,
	mov	r8, #0	@ tmp294,
.L2560:
	ldr	r3, [r5, #0]	@ D.44462, <variable>.slice_nal
	add	r6, r5, #28	@ tmp298, ivtmp.7076,
	cmp	r3, #0	@ D.44462,
	mov	r1, r3	@, D.44462
	beq	.L2559	@,
	ldr	ip, [r4, r7]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r3, ip	@ D.44462, <variable>.pCurrNal
	beq	.L2559	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	HEVC_ReleaseNAL	@
	str	r8, [r5, #0]	@ tmp294, <variable>.slice_nal
.L2559:
	ldr	r3, [r5, #28]	@ D.44462, <variable>.slice_nal
	cmp	r3, #0	@ D.44462,
	mov	r1, r3	@, D.44462
	beq	.L2566	@,
	ldr	r0, [r4, r7]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r3, r0	@ D.44462, <variable>.pCurrNal
	beq	.L2566	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	HEVC_ReleaseNAL	@
	str	r8, [r6, #0]	@ tmp294, <variable>.slice_nal
.L2566:
	add	r5, r6, #28	@ ivtmp.7076, tmp298,
	cmp	r5, sl	@ ivtmp.7076, D.54978
	bne	.L2560	@,
	mov	r0, #0	@ D.44454,
.L2553:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2550:
	movw	r5, #:lower16:2044616	@ tmp270,
	movw	r0, #:lower16:2044620	@ tmp271,
	movt	r5, #:upper16:2044616	@ tmp270,
	movt	r0, #:upper16:2044620	@ tmp271,
	movw	r3, #:lower16:2044524	@ tmp272,
	movt	r3, #:upper16:2044524	@ tmp272,
	ldr	lr, [r4, r5]	@ ImageWidthInCtb, <variable>.CurrSPS.ctb_num_width
	mov	r5, #20	@ tmp268,
	ldr	ip, [r4, r0]	@ ImageHeightInCtb, <variable>.CurrSPS.ctb_num_height
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [r4, r3]	@ D.44444, <variable>.CurrSPS.log2_ctb_sizeY
	str	r5, [r4, #168]	@ tmp268, <variable>.TotalFsNum
	mov	r3, lr	@, ImageWidthInCtb
	str	r5, [r4, #172]	@ tmp268, <variable>.TotalPmvNum
	mov	r2, ip, asl r1	@, ImageHeightInCtb,
	mov	r1, lr, asl r1	@, ImageWidthInCtb,
	str	ip, [sp, #0]	@ ImageHeightInCtb,
	str	r5, [sp, #4]	@ tmp268,
	str	r5, [sp, #8]	@ tmp268,
	bl	HEVC_ArrangeVahbMem	@
	movw	r3, #:lower16:1960188	@ tmp278,
	movt	r3, #:upper16:1960188	@ tmp278,
	ldr	ip, [r4, r3]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r1, [ip, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r1, #1	@ <variable>.s32WaitFsFlag,
	mvneq	r0, #1	@ D.44454,
	beq	.L2553	@,
	cmp	r0, #1	@ ret,
	bne	.L2590	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_GetTotalValidFsNum	@
	cmp	r0, #20	@,
	movgt	r0, r5	@ iftmp.663, tmp268
	strgt	r0, [r4, #168]	@ iftmp.663, <variable>.TotalFsNum
	bgt	.L2551	@
.L2591:
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_GetTotalValidFsNum	@
	str	r0, [r4, #168]	@ iftmp.663, <variable>.TotalFsNum
	b	.L2551	@
.L2590:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC502	@,
	ldr	r2, .L2592	@,
	movt	r1, #:upper16:.LC502	@,
	bl	dprint_vfmw	@
	mvn	r0, #4	@ D.44454,
	b	.L2553	@
.L2593:
	.align	2
.L2592:
	.word	.LANCHOR1+508
	.fnend
	.size	HEVC_InitDPB, .-HEVC_InitDPB
	.align	2
	.global	HEVC_ClearAll
	.type	HEVC_ClearAll, %function
HEVC_ClearAll:
	.fnstart
.LFB1669:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r5, r1	@ flag, flag
	bl	HEVC_ClearCurrPic	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, #0	@,
	bl	HEVC_InitDPB	@
	cmp	r5, #0	@ flag,
	bne	.L2598	@,
	add	r0, r4, #2129920	@, pHevcCtx,
	add	r0, r0, #2816	@,,
	bl	ResetVoQueue	@
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_EmptyInstance	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_InitDecPara	@
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L2598:
	add	r1, r4, #2129920	@, pHevcCtx,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	add	r1, r1, #2816	@,,
	bl	FSP_ClearNotInVoQueue	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_InitDecPara	@
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVC_ClearAll, .-HEVC_ClearAll
	.align	2
	.global	HEVCDEC_GetRemainImg
	.type	HEVCDEC_GetRemainImg, %function
HEVCDEC_GetRemainImg:
	.fnstart
.LFB1688:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:1960372	@ tmp142,
	movt	r6, #:upper16:1960372	@ tmp142,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L2600	@,
	add	r1, r0, #2129920	@, pHevcCtx,
	sub	r7, fp, #52	@ tmp181,,
	add	r0, r1, #2816	@,,
	sub	r8, fp, #48	@ tmp183,,
	str	r0, [fp, #-56]	@, %sfp
	mvn	sl, #0	@ ret,
	mov	r9, #1	@ tmp187,
	b	.L2607	@
.L2601:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RemoveApcStore	@
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [fp, #-48]	@, pos
	bl	HEVC_RemoveFrameStoreOutDPB	@
	ldr	r3, [r4, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L2613	@,
.L2607:
	mov	r1, r7	@, tmp181
	mov	r2, r8	@, tmp183
	mov	r0, r4	@, pHevcCtx
	movw	r5, #:lower16:490098	@ tmp147,
	bl	HEVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ prephitmp.7142, pos
	movt	r5, #:upper16:490098	@ tmp147,
	add	r2, r1, r5	@ tmp147, prephitmp.7142, tmp147
	ldr	r5, [r4, r2, asl #2]	@ pFrameStore, <variable>.DPB.fs
	cmp	r5, #0	@ pFrameStore,
	beq	.L2601	@,
	ldrb	ip, [r5, #2]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	ip, #0	@ <variable>.is_displayed,
	bne	.L2601	@,
	mov	r0, r4	@, pHevcCtx
	mov	r1, r5	@, pFrameStore
	strb	r9, [r5, #2]	@ tmp187, <variable>.is_displayed
	bl	HEVC_GetImagePara	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, r5	@, pFrameStore
	bl	HEVC_CheckFrameStore	@
	subs	sl, r0, #0	@ ret.7153,
	beq	.L2602	@,
.L2612:
	ldr	r1, [fp, #-48]	@ prephitmp.7142, pos
.L2615:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RemoveApcStore	@
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [fp, #-48]	@, pos
	bl	HEVC_RemoveFrameStoreOutDPB	@
	ldr	r3, [r4, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	bne	.L2607	@,
.L2613:
	cmp	sl, #0	@ ret,
	bne	.L2600	@,
.L2608:
	mov	r0, sl	@, ret
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2602:
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	ip, r0, #0	@ pstLogicFsImage,
	beq	.L2614	@,
	ldr	sl, [r4, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r1, #16	@,
	mov	r2, r4	@, pHevcCtx
	cmp	sl, #1	@ <variable>.DPB.used_size,
	streq	sl, [ip, #244]	@ <variable>.DPB.used_size, <variable>.last_frame
	ldr	r0, [r4, #236]	@ <variable>.ChanID, <variable>.ChanID
	ldr	r3, [fp, #-56]	@, %sfp
	str	ip, [sp, #0]	@ pstLogicFsImage,
	str	ip, [fp, #-60]	@,
	bl	InsertImgToVoQueue	@
	ldr	ip, [fp, #-60]	@,
	cmp	r0, #1	@ ret,
	mov	sl, r0	@ ret,
	beq	.L2605	@,
	mov	r3, r0	@, ret
	ldr	r2, .L2616	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC504	@,
	movt	r1, #:upper16:.LC504	@,
	mvn	sl, #0	@ ret,
	bl	dprint_vfmw	@
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	mov	r2, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, #1	@,
	bl	HEVC_ClearAll	@
	ldr	ip, [fp, #-60]	@,
.L2605:
	mov	r1, ip	@, pstLogicFsImage
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_SetFrmRepeatCount	@
	ldr	ip, [r4, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	ldr	r2, [r4, #260]	@ <variable>.OutputFrameNum, <variable>.OutputFrameNum
	ldr	r0, [r4, #252]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	cmp	ip, #1	@ <variable>.DPB.used_size,
	add	r1, r2, #1	@ tmp169, <variable>.OutputFrameNum,
	str	r1, [r4, #260]	@ tmp169, <variable>.OutputFrameNum
	add	r3, r0, #1	@ tmp171, <variable>.PicOutCounter,
	str	r3, [r4, #252]	@ tmp171, <variable>.PicOutCounter
	bne	.L2612	@,
	ldr	r1, [fp, #-48]	@ prephitmp.7142, pos
	mov	sl, #0	@ ret,
	b	.L2601	@
.L2600:
	add	lr, r4, #2129920	@, pHevcCtx,
	add	r0, lr, #2816	@,,
	bl	GetVoLastImageID	@
	mov	sl, r0	@ ret,
	b	.L2608	@
.L2614:
	movw	r1, #:lower16:.LC503	@,
	ldr	r2, .L2616	@,
	movt	r1, #:upper16:.LC503	@,
	mvn	sl, #0	@ ret,
	bl	dprint_vfmw	@
	ldr	r1, [fp, #-48]	@ prephitmp.7142, pos
	b	.L2615	@
.L2617:
	.align	2
.L2616:
	.word	.LANCHOR1+524
	.fnend
	.size	HEVCDEC_GetRemainImg, .-HEVCDEC_GetRemainImg
	.align	2
	.global	HEVC_ReceivePacket
	.type	HEVC_ReceivePacket, %function
HEVC_ReceivePacket:
	.fnstart
.LFB1665:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:1960196	@ tmp150,
	movt	r5, #:upper16:1960196	@ tmp150,
	movw	r3, #:lower16:4321208	@ tmp148,
	movt	r3, #:upper16:4321208	@ tmp148,
	mov	r2, #0	@ tmp149,
	ldr	r6, [r0, r5]	@ D.47259, <variable>.pCurrNal
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	str	r2, [r0, r3]	@ tmp149, <variable>.u32SCDWrapAround
	cmp	r6, #0	@ D.47259,
	beq	.L2630	@,
	ldrb	r0, [r1, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	movw	ip, #:lower16:1960188	@ tmp195,
	movt	ip, #:upper16:1960188	@ tmp195,
	str	r0, [r6, #40]	@ <variable>.last_pack_in_nal, <variable>.nal_integ
	ldr	r3, [r4, ip]	@ D.47287, <variable>.pstExtraData
	ldr	r7, [r3, #864]	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r7, #1	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn,
	beq	.L2631	@,
.L2624:
	ldrb	lr, [r1, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	cmp	lr, #1	@ <variable>.last_pack_in_nal,
	bne	.L2625	@,
	movw	r3, #:lower16:1960196	@ tmp199,
	movt	r3, #:upper16:1960196	@ tmp199,
	ldr	r0, [r4, r3]	@ temp.7199, <variable>.pCurrNal
	ldr	ip, [r0, #8]	@ D.47295, <variable>.nal_segment
	cmp	ip, #1	@ D.47295,
	bls	.L2626	@,
	ldr	r7, [r0, #40]	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	r7, #1	@ <variable>.nal_integ,
	beq	.L2625	@,
.L2626:
	ldr	r2, [r1, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	r2, #0	@ <variable>.stream_len,
	ble	.L2627	@,
	ldr	r3, [r1, #4]	@ temp.7201, <variable>.p_stream
	cmp	r3, #0	@ temp.7201,
	beq	.L2627	@,
	ldr	lr, [r1, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	lr, #0	@ <variable>.strm_phy_addr,
	bne	.L2632	@,
.L2627:
	mov	r7, #1	@ tmp256,
	str	r7, [r0, #40]	@ tmp256, <variable>.nal_integ
	ldr	r1, [r1, #16]	@, <variable>.StreamID
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
.L2623:
	movw	r3, #:lower16:1960196	@ tmp260,
	movt	r3, #:upper16:1960196	@ tmp260,
	ldr	r1, [r4, r3]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r0, [r1, #40]	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	r0, #0	@ <variable>.nal_integ,
	movne	r7, #0	@, ret,
	mvneq	r7, #0	@, ret,
.L2622:
	mov	r0, r7	@, ret
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2630:
	ldr	r7, [r1, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	r7, r2	@ <variable>.stream_len,
	ble	.L2620	@,
	ldr	ip, [r1, #4]	@ <variable>.p_stream, <variable>.p_stream
	cmp	ip, r2	@ <variable>.p_stream,
	beq	.L2620	@,
	ldr	lr, [r1, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	lr, r2	@ <variable>.strm_phy_addr,
	beq	.L2620	@,
	str	r1, [fp, #-32]	@,
	bl	HEVC_FindNaluArraySlot	@
	ldr	r1, [fp, #-32]	@,
	cmn	r0, #1	@ ret,
	mov	r7, r0	@ ret,
	beq	.L2633	@,
	mov	r3, #100	@ tmp157,
	movw	lr, #:lower16:2358444	@ tmp161,
	mul	r2, r3, r0	@ tmp156, tmp157, ret
	movt	lr, #:upper16:2358444	@ tmp161,
	movw	r3, #:lower16:2358480	@ tmp166,
	movt	r3, #:upper16:2358480	@ tmp166,
	add	r0, r4, r2	@ tmp160, pHevcCtx, tmp156
	add	ip, r0, lr	@ tmp161, tmp160, tmp161
	str	ip, [r4, r5]	@ tmp161, <variable>.pCurrNal
	ldr	r2, [r1, #4]	@ <variable>.p_stream, <variable>.p_stream
	add	lr, r0, r3	@ tmp166, tmp165, tmp166
	str	r2, [lr, #8]	@ <variable>.p_stream, <variable>.streamBuffer
	ldr	ip, [r1, #12]	@ <variable>.stream_len, <variable>.stream_len
	str	ip, [lr, #12]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	r3, [r4, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r7, [r1, #16]	@ <variable>.StreamID, <variable>.StreamID
	str	r7, [r3, #68]	@ <variable>.StreamID, <variable>.StreamID
	mov	r7, #1	@ tmp185,
	ldr	r0, [r4, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [r1, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	str	r2, [r0, #52]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	ldr	lr, [r4, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r6, [lr, #60]	@ D.47259, <variable>.bitsoffset
	ldr	ip, [r4, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r7, [ip, #8]	@ tmp185, <variable>.nal_segment
	ldr	r3, [r4, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r6, [r3, #1]	@ D.47259, <variable>.nal_used_segment
	ldr	r0, [r4, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r2, [r1, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	str	r2, [r0, #40]	@ <variable>.last_pack_in_nal, <variable>.nal_integ
	b	.L2623	@
.L2632:
	rsb	ip, ip, ip, asl #3	@, tmp207, D.47295, D.47295,
	movw	r7, #:lower16:1960196	@ tmp211,
	movt	r7, #:upper16:1960196	@ tmp211,
	add	lr, r0, ip, asl #2	@, tmp209, temp.7199, tmp207,
	mov	r0, r4	@, pHevcCtx
	str	r3, [lr, #44]	@ temp.7201, <variable>.streamBuffer
	ldr	r3, [r4, r7]	@ temp.7203, <variable>.pCurrNal
	ldr	lr, [r1, #12]	@ <variable>.stream_len, <variable>.stream_len
	ldr	r2, [r3, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	ip, r2, r2, asl #3	@, tmp216, <variable>.nal_segment, <variable>.nal_segment,
	add	r2, r3, ip, asl #2	@, tmp218, temp.7203, tmp216,
	str	lr, [r2, #48]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	r2, [r4, r7]	@ temp.7207, <variable>.pCurrNal
	ldr	lr, [r1, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	ldr	r3, [r2, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	ip, r3, r3, asl #3	@, tmp226, <variable>.nal_segment, <variable>.nal_segment,
	add	r3, r2, ip, asl #2	@, tmp228, temp.7207, tmp226,
	str	lr, [r3, #52]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	ldr	r3, [r4, r7]	@ temp.7210, <variable>.pCurrNal
	ldr	ip, [r1, #16]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r2, [r3, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r1, r2, r2, asl #3	@, tmp236, <variable>.nal_segment, <variable>.nal_segment,
	add	lr, r3, r1, asl #2	@, tmp238, temp.7210, tmp236,
	str	ip, [lr, #68]	@ <variable>.StreamID, <variable>.StreamID
	mov	lr, #0	@ tmp250,
	ldr	r3, [r4, r7]	@ temp.7213, <variable>.pCurrNal
	ldr	r2, [r3, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r1, r2, r2, asl #3	@, tmp246, <variable>.nal_segment, <variable>.nal_segment,
	add	ip, r3, r1, asl #2	@, tmp248, temp.7213, tmp246,
	str	lr, [ip, #60]	@ tmp250, <variable>.bitsoffset
	ldr	r3, [r4, r7]	@ temp.7215, <variable>.pCurrNal
	ldr	r2, [r3, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	add	r7, r2, #1	@ tmp253, <variable>.nal_segment,
	str	r7, [r3, #8]	@ tmp253, <variable>.nal_segment
	bl	HEVC_CombinePacket	@
	movw	ip, #:lower16:4321208	@ tmp254,
	movt	ip, #:upper16:4321208	@ tmp254,
	mov	r1, #1	@ tmp255,
	str	r1, [r4, ip]	@ tmp255, <variable>.u32SCDWrapAround
	b	.L2623	@
.L2631:
	ldr	r2, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r2, #0	@ <variable>.s32WaitFsFlag,
	bne	.L2623	@,
	b	.L2624	@
.L2625:
	movw	r1, #:lower16:.LC507	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC507	@,
	mvn	r7, #0	@ ret,
	bl	dprint_vfmw	@
	b	.L2622	@
.L2620:
	movw	r1, #:lower16:.LC506	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC506	@,
	mvn	r7, #0	@ ret,
	bl	dprint_vfmw	@
	b	.L2622	@
.L2633:
	mov	r0, r6	@, D.47259
	movw	r1, #:lower16:.LC505	@,
	movt	r1, #:upper16:.LC505	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, r6	@, D.47259
	bl	HEVC_ClearAll	@
	b	.L2622	@
	.fnend
	.size	HEVC_ReceivePacket, .-HEVC_ReceivePacket
	.align	2
	.global	HEVC_OutputFrmToVO
	.type	HEVC_OutputFrmToVO, %function
HEVC_OutputFrmToVO:
	.fnstart
.LFB1628:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r5, r1	@ pFrameStore, pFrameStore
	bl	HEVC_GetImagePara	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, r5	@, pFrameStore
	bl	HEVC_CheckFrameStore	@
	subs	r6, r0, #0	@ ret,
	beq	.L2641	@,
	cmn	r6, #3	@ ret,
	moveq	r0, #0	@ D.45427,
	bne	.L2642	@,
.L2637:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2641:
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r7, r0, #0	@ pstLogicFsImage,
	beq	.L2643	@,
	add	r3, r4, #2129920	@, pHevcCtx,
	ldr	r0, [r4, #236]	@ <variable>.ChanID, <variable>.ChanID
	add	r3, r3, #2816	@,,
	mov	r1, #16	@,
	mov	r2, r4	@, pHevcCtx
	str	r7, [sp, #0]	@ pstLogicFsImage,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@ ret.7246,
	bne	.L2644	@,
	mov	r1, r7	@, pstLogicFsImage
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_SetFrmRepeatCount	@
	ldr	r3, [r4, #260]	@ <variable>.OutputFrameNum, <variable>.OutputFrameNum
	ldr	ip, [r4, #252]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	mov	r0, r6	@ D.45427, ret
	add	r2, r3, #1	@ tmp154, <variable>.OutputFrameNum,
	str	r2, [r4, #260]	@ tmp154, <variable>.OutputFrameNum
	add	r1, ip, #1	@ tmp156, <variable>.PicOutCounter,
	str	r1, [r4, #252]	@ tmp156, <variable>.PicOutCounter
	b	.L2637	@
.L2642:
	mov	r3, r6	@, ret
	movw	r2, #7797	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC510	@,
	movt	r1, #:upper16:.LC510	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [r5, #268]	@, <variable>.fs_image.image_id
	bl	HEVC_DECRecycleImage	@
	mvn	r0, #0	@ D.45427,
	b	.L2637	@
.L2644:
	mov	r2, r0	@, ret.7246
	movw	r1, #:lower16:.LC509	@,
	mov	r0, r6	@, ret
	movt	r1, #:upper16:.LC509	@,
	bl	dprint_vfmw	@
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	mov	r2, r6	@, ret
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, #1	@,
	bl	HEVC_ClearAll	@
	mvn	r0, #0	@ D.45427,
	b	.L2637	@
.L2643:
	movw	r1, #:lower16:.LC508	@,
	ldr	r2, .L2645	@,
	movt	r1, #:upper16:.LC508	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45427,
	b	.L2637	@
.L2646:
	.align	2
.L2645:
	.word	.LANCHOR1+548
	.fnend
	.size	HEVC_OutputFrmToVO, .-HEVC_OutputFrmToVO
	.align	2
	.global	HEVC_FlushOutputFrmFromDPB
	.type	HEVC_FlushOutputFrmFromDPB, %function
HEVC_FlushOutputFrmFromDPB:
	.fnstart
.LFB1626:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r0, #0	@ pHevcCtx, pHevcCtx
	mvneq	r0, #0	@ D.45359,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r7, #:lower16:1960372	@ tmp141,
	movt	r7, #:upper16:1960372	@ tmp141,
	ldr	r3, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L2650	@,
	movw	r4, #:lower16:1960392	@ ivtmp.7275,
	movt	r4, #:upper16:1960392	@ ivtmp.7275,
	add	r4, r5, r4	@ ivtmp.7275, pHevcCtx, ivtmp.7275
	mov	r6, #0	@ i,
	mov	sl, #1	@ tmp165,
	b	.L2653	@
.L2657:
	strb	sl, [r3, #2]	@ tmp165, <variable>.is_displayed
	ldr	r1, [r4, #0]	@, <variable>.DPB.fs
	bl	HEVC_OutputFrmToVO	@
	cmn	r0, #1	@ D.45367,
	mov	r8, r0	@ D.45367,
	beq	.L2656	@,
.L2652:
	ldr	r0, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r4, r4, #4	@ ivtmp.7275, ivtmp.7275,
	cmp	r0, r6	@ <variable>.DPB.used_size, i
	bls	.L2650	@,
.L2653:
	ldr	r9, [r4, #0]	@ tmp145, <variable>.DPB.fs
	mov	r2, #0	@,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	add	r6, r6, #1	@ i, i,
	ldr	r1, [r9, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r3, [r4, #0]	@ temp.7278, <variable>.DPB.fs
	mov	r0, r5	@, pHevcCtx
	ldrb	r9, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r9, #0	@ <variable>.is_displayed,
	beq	.L2657	@,
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FSP_GetDisplay	@
	mov	r2, #0	@,
	cmp	r0, #3	@,
	beq	.L2652	@,
	ldr	ip, [r4, #0]	@ tmp157, <variable>.DPB.fs
	add	r4, r4, #4	@ ivtmp.7275, ivtmp.7275,
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	ldr	r1, [ip, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	r0, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, r6	@ <variable>.DPB.used_size, i
	bhi	.L2653	@,
.L2650:
	mov	r0, r5	@, pHevcCtx
	mov	r1, #-2147483647	@ tmp161,
	str	r1, [r5, #204]	@ tmp161, <variable>.LastDisplayPoc
	bl	Hevc_InitDecBuffers	@
	mov	r0, #0	@ D.45359,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2656:
	mov	r0, r9	@, <variable>.is_displayed
	movw	r1, #:lower16:.LC511	@,
	ldr	r2, .L2658	@,
	movt	r1, #:upper16:.LC511	@,
	bl	dprint_vfmw	@
	mov	r0, r8	@ D.45359, D.45367
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2659:
	.align	2
.L2658:
	.word	.LANCHOR1+568
	.fnend
	.size	HEVC_FlushOutputFrmFromDPB, .-HEVC_FlushOutputFrmFromDPB
	.align	2
	.global	HEVC_OutputOneFrmFromDPB
	.type	HEVC_OutputOneFrmFromDPB, %function
HEVC_OutputOneFrmFromDPB:
	.fnstart
.LFB1625:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:490098	@ tmp137,
	movt	r4, #:upper16:490098	@ tmp137,
	mov	r6, r1	@ pos, pos
	add	r4, r1, r4	@ tmp137, pos, tmp137
	mov	r2, #1	@ tmp140,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	ldr	r1, [r0, r4, asl #2]	@ tmp139, <variable>.DPB.fs
	strb	r2, [r1, #2]	@ tmp140, <variable>.is_displayed
	ldr	r1, [r0, r4, asl #2]	@, <variable>.DPB.fs
	bl	HEVC_OutputFrmToVO	@
	mov	r7, r0	@ ret,
	ldr	r0, [r5, r4, asl #2]	@ tmp147, <variable>.DPB.fs
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	bne	.L2661	@,
	mov	r0, r5	@, pHevcCtx
	mov	r1, r6	@, pos
	bl	HEVC_RemoveApcStore	@
	mov	r0, r5	@, pHevcCtx
	mov	r1, r6	@, pos
	bl	HEVC_RemoveFrameStoreOutDPB	@
.L2661:
	mov	r0, r7	@, ret
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	HEVC_OutputOneFrmFromDPB, .-HEVC_OutputOneFrmFromDPB
	.align	2
	.global	HEVC_FlushDPB
	.type	HEVC_FlushDPB, %function
HEVC_FlushDPB:
	.fnstart
.LFB1683:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:1960372	@ tmp141,
	movt	r7, #:upper16:1960372	@ tmp141,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L2672	@,
	movw	r5, #:lower16:1960392	@ ivtmp.7338,
	movt	r5, #:upper16:1960392	@ ivtmp.7338,
	add	r5, r0, r5	@ ivtmp.7338, pHevcCtx, ivtmp.7338
	mov	r6, #0	@ i,
	b	.L2666	@
.L2665:
	ldr	r1, [r4, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, r6	@ <variable>.DPB.used_size, i
	bls	.L2672	@,
.L2666:
	ldr	r1, [r5, #0]	@ D.47670, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.7338, ivtmp.7338,
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2665	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_UnMarkFrameStoreRef	@
	ldr	r1, [r4, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, r6	@ <variable>.DPB.used_size, i
	bhi	.L2666	@,
.L2672:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RemoveUnUsedFrameStore	@
	cmp	r0, #0	@,
	bne	.L2672	@,
	movw	r5, #:lower16:1960372	@ tmp154,
	sub	r7, fp, #36	@ tmp155,,
	movt	r5, #:upper16:1960372	@ tmp154,
	sub	r6, fp, #32	@ tmp156,,
.L2671:
	ldr	r3, [r4, r5]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r1, r7	@, tmp155
	mov	r2, r6	@, tmp156
	mov	r0, r4	@, pHevcCtx
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L2677	@,
	bl	HEVC_GetMinPOC	@
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [fp, #-32]	@, pos
	bl	HEVC_OutputOneFrmFromDPB	@
	cmn	r0, #1	@ ret,
	bne	.L2671	@,
.L2668:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2677:
	mov	r0, r3	@ D.47680, <variable>.DPB.used_size
	b	.L2668	@
	.fnend
	.size	HEVC_FlushDPB, .-HEVC_FlushDPB
	.align	2
	.global	HEVC_OutputUnRefPicWithMinPoc
	.type	HEVC_OutputUnRefPicWithMinPoc, %function
HEVC_OutputUnRefPicWithMinPoc:
	.fnstart
.LFB1574:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	sub	r1, fp, #24	@,,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	bl	HEVC_GetUnRefPicWithMinPoc	@
	cmp	r0, #0	@,
	bne	.L2683	@,
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [fp, #-24]	@, pos
	bl	HEVC_OutputOneFrmFromDPB	@
	cmp	r0, #0	@ ret.7366
	bne	.L2684	@,
.L2680:
	sub	sp, fp, #16
	ldmfd	sp, {r4, fp, sp, pc}
.L2683:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC512	@,
	ldr	r2, .L2685	@,
	movt	r1, #:upper16:.LC512	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41620,
	b	.L2680	@
.L2684:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC513	@,
	ldr	r2, .L2685	@,
	movt	r1, #:upper16:.LC513	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41620,
	b	.L2680	@
.L2686:
	.align	2
.L2685:
	.word	.LANCHOR1+596
	.fnend
	.size	HEVC_OutputUnRefPicWithMinPoc, .-HEVC_OutputUnRefPicWithMinPoc
	.align	2
	.global	HEVC_OutputFrmFromDPB
	.type	HEVC_OutputFrmFromDPB, %function
HEVC_OutputFrmFromDPB:
	.fnstart
.LFB1624:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:1960372	@ tmp145,
	movt	r3, #:upper16:1960372	@ tmp145,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	ldr	ip, [r0, r3]	@ temp.7410, <variable>.DPB.used_size
	cmp	ip, #0	@ temp.7410,
	beq	.L2689	@,
	movw	r4, #:lower16:1960392	@ ivtmp.7399,
	movt	r4, #:upper16:1960392	@ ivtmp.7399,
	add	r4, r0, r4	@ ivtmp.7399, pHevcCtx, ivtmp.7399
	mov	r7, ip, asl #2	@ tmp147, temp.7410,
	movw	r6, #:lower16:1960392	@ tmp148,
	movt	r6, #:upper16:1960392	@ tmp148,
	ldr	r3, [r4, #0]	@ D.45313, <variable>.DPB.fs
	add	ip, r7, r6	@ tmp148, tmp147, tmp148
	add	ip, ip, r0	@ D.55313, tmp148, pHevcCtx
	mov	r8, #0	@ Nodisplayed,
	rsb	r0, r4, ip	@ tmp181, ivtmp.7399, D.55313
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	sub	r1, r0, #4	@ tmp182, tmp181,
	ubfx	r1, r1, #2, #1	@ tmp183, tmp182,,
	cmp	r2, r8	@ <variable>.is_displayed,
	beq	.L2711	@,
.L2698:
	add	r3, r4, #4	@ ivtmp.7402, ivtmp.7399,
	cmp	r3, ip	@ ivtmp.7402, D.55313
	beq	.L2708	@,
	cmp	r1, #0	@ tmp183,
	beq	.L2691	@,
	ldr	r2, [r3, #0]	@ D.45313, <variable>.DPB.fs
	ldrb	r9, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r9, #0	@ <variable>.is_displayed,
	bne	.L2700	@,
	ldr	sl, [r2, #12]	@ <variable>.poc, <variable>.poc
	ldr	r2, [r5, #204]	@ <variable>.LastDisplayPoc, <variable>.LastDisplayPoc
	cmp	sl, r2	@ <variable>.poc, <variable>.LastDisplayPoc
	addgt	r8, r8, #1	@ Nodisplayed, Nodisplayed,
.L2700:
	add	r3, r3, #4	@ ivtmp.7402, ivtmp.7402,
	cmp	r3, ip	@ ivtmp.7402, D.55313
	beq	.L2708	@,
.L2691:
	ldr	r2, [r3, #0]	@ D.45313, <variable>.DPB.fs
	add	r1, r3, #4	@ tmp184, ivtmp.7402,
	ldrb	r9, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r9, #0	@ <variable>.is_displayed,
	bne	.L2690	@,
	ldr	sl, [r2, #12]	@ <variable>.poc, <variable>.poc
	ldr	r2, [r5, #204]	@ <variable>.LastDisplayPoc, <variable>.LastDisplayPoc
	cmp	sl, r2	@ <variable>.poc, <variable>.LastDisplayPoc
	addgt	r8, r8, #1	@ Nodisplayed, Nodisplayed,
.L2690:
	ldr	r3, [r3, #4]	@ D.45313, <variable>.DPB.fs
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r0, #0	@ <variable>.is_displayed,
	bne	.L2703	@,
	ldr	r0, [r3, #12]	@ <variable>.poc, <variable>.poc
	ldr	r3, [r5, #204]	@ <variable>.LastDisplayPoc, <variable>.LastDisplayPoc
	cmp	r0, r3	@ <variable>.poc, <variable>.LastDisplayPoc
	addgt	r8, r8, #1	@ Nodisplayed, Nodisplayed,
.L2703:
	add	r3, r1, #4	@ ivtmp.7402, tmp184,
	cmp	r3, ip	@ ivtmp.7402, D.55313
	bne	.L2691	@,
.L2708:
	mov	r6, #0	@ i,
	movw	sl, #:lower16:2125428	@ tmp176,
	movw	r9, #:lower16:2125408	@ tmp177,
	movw	r7, #:lower16:1960372	@ tmp179,
	movt	sl, #:upper16:2125428	@ tmp176,
	movt	r9, #:upper16:2125408	@ tmp177,
	movt	r7, #:upper16:1960372	@ tmp179,
	mov	ip, r6	@ ret, i
.L2694:
	ldr	r3, [r4, #0]	@ temp.7403, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r1, #0	@ <variable>.is_displayed,
	bne	.L2692	@,
	ldr	r2, [r3, #12]	@ temp.7405, <variable>.poc
	movw	r1, #:lower16:511196	@ tmp155,
	ldr	r0, [r5, #204]	@ <variable>.LastDisplayPoc, <variable>.LastDisplayPoc
	movt	r1, #:upper16:511196	@ tmp155,
	cmp	r2, r0	@ temp.7405, <variable>.LastDisplayPoc
	ble	.L2692	@,
	ldr	r0, [r5, sl]	@ <variable>.CurrSlice.nuh_temporal_id, <variable>.CurrSlice.nuh_temporal_id
	add	r1, r0, r1	@ tmp155, <variable>.CurrSlice.nuh_temporal_id, tmp155
	add	r0, r5, r1, asl #2	@, tmp161, pHevcCtx, tmp155,
	ldr	r1, [r0, #4]	@ tmp163, <variable>.CurrSPS.num_reorder_pics
	cmp	r1, r8	@ tmp163, Nodisplayed
	bcs	.L2692	@,
	ldr	r1, [r5, r9]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	mov	r0, r5	@, pHevcCtx
	cmp	r2, r1	@ temp.7405, <variable>.CurrSlice.poc
	blt	.L2693	@,
	ldrb	r2, [r5, #1]	@ zero_extendqisi2	@ <variable>.bNoOutputOfPriorPicsFlag, <variable>.bNoOutputOfPriorPicsFlag
	cmp	r2, #0	@ <variable>.bNoOutputOfPriorPicsFlag,
	beq	.L2692	@,
.L2693:
	mov	lr, #1	@,
	strb	lr, [r3, #2]	@, <variable>.is_displayed
	ldr	r1, [r4, #0]	@, <variable>.DPB.fs
	sub	r8, r8, #1	@ Nodisplayed, Nodisplayed,
	bl	HEVC_OutputFrmToVO	@
	mov	ip, r0	@ ret,
	ldr	r0, [r4, #0]	@ tmp170, <variable>.DPB.fs
	ldr	r3, [r0, #12]	@ <variable>.poc, <variable>.poc
	str	r3, [r5, #204]	@ <variable>.poc, <variable>.LastDisplayPoc
.L2692:
	ldr	r1, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r4, r4, #4	@ ivtmp.7399, ivtmp.7399,
	cmp	r1, r6	@ <variable>.DPB.used_size, i
	bhi	.L2694	@,
.L2689:
	mov	r0, ip	@, ret
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2711:
	ldr	r6, [r3, #12]	@ <variable>.poc, <variable>.poc
	ldr	r7, [r5, #204]	@ <variable>.LastDisplayPoc, <variable>.LastDisplayPoc
	cmp	r6, r7	@ <variable>.poc, <variable>.LastDisplayPoc
	movgt	r8, #1	@, Nodisplayed,
	b	.L2698	@
	.fnend
	.size	HEVC_OutputFrmFromDPB, .-HEVC_OutputFrmFromDPB
	.align	2
	.global	HEVC_DirectOutput
	.type	HEVC_DirectOutput, %function
HEVC_DirectOutput:
	.fnstart
.LFB1603:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:2124852	@ tmp161,
	movt	r6, #:upper16:2124852	@ tmp161,
	movw	r2, #:lower16:2124820	@ tmp162,
	movt	r2, #:upper16:2124820	@ tmp162,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	ldr	r4, [r0, r6]	@ pDirectOutBuf, <variable>.CurrPic.frame_store
	mov	r3, #2	@ tmp138,
	mov	r6, #0	@ tmp139,
	mov	r0, #1	@ tmp141,
	movw	r7, #:lower16:2124848	@ tmp163,
	movt	r7, #:upper16:2124848	@ tmp163,
	str	r3, [r4, #4]	@ tmp138, <variable>.eFrameStoreState
	movw	r1, #:lower16:2124856	@ tmp164,
	strb	r0, [r4, #2]	@ tmp141, <variable>.is_displayed
	movt	r1, #:upper16:2124856	@ tmp164,
	strb	r6, [r4, #1]	@ tmp139, <variable>.is_reference
	add	r1, r5, r1	@, pHevcCtx, tmp164
	ldr	lr, [r5, r2]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	add	r0, r4, #72	@, pDirectOutBuf,
	mov	r2, #504	@,
	str	lr, [r4, #16]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	ip, [r5, r7]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	str	ip, [r4, #20]	@ <variable>.CurrPic.err_level, <variable>.err_level
	bl	memcpy	@
	str	r6, [r4, #48]	@ tmp139, <variable>.frame.structure
	ldr	r3, [r5, r7]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	mov	r2, r6	@, tmp139
	ldr	r1, [r4, #32]	@, <variable>.logic_fs_id
	str	r3, [r4, #40]	@ <variable>.CurrPic.err_level, <variable>.frame.err_level
	ldr	r0, [r5, #236]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	mov	r1, r4	@, pDirectOutBuf
	mov	r0, r5	@, pHevcCtx
	bl	HEVC_OutputFrmToVO	@
	str	r6, [r4, #4]	@ tmp139, <variable>.eFrameStoreState
	mov	r1, #552	@,
	mov	r7, r0	@ ret,
	movw	r0, #:lower16:2124808	@ tmp165,
	movt	r0, #:upper16:2124808	@ tmp165,
	add	r0, r5, r0	@, pHevcCtx, tmp165
	bl	__memzero	@
	mov	r0, r7	@, ret
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	HEVC_DirectOutput, .-HEVC_DirectOutput
	.align	2
	.global	HEVC_IModeProcess
	.type	HEVC_IModeProcess, %function
HEVC_IModeProcess:
	.fnstart
.LFB1611:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	bl	HEVC_DirectOutput	@
	movw	r3, #:lower16:2124844	@ tmp137,
	movt	r3, #:upper16:2124844	@ tmp137,
	ldr	r1, [r4, #172]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	ldr	r2, [r4, r3]	@ D.44871, <variable>.CurrPic.pmv_address_idc
	cmp	r2, r1	@ D.44871, <variable>.TotalPmvNum
	ldmeqfd	sp, {r3, r4, fp, sp, pc}	@
	add	ip, r2, #520	@ tmp139, D.44871,
	str	r1, [r4, r3]	@ <variable>.TotalPmvNum, <variable>.CurrPic.pmv_address_idc
	add	r2, ip, #2	@ tmp139, tmp139,
	mov	r3, #0	@ tmp145,
	add	r4, r4, r2, asl #2	@, tmp143, pHevcCtx, tmp139,
	str	r3, [r4, #4]	@ tmp145, <variable>.PmvStoreUsedFlag
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	HEVC_IModeProcess, .-HEVC_IModeProcess
	.align	2
	.global	HEVC_ClearDPB
	.type	HEVC_ClearDPB, %function
HEVC_ClearDPB:
	.fnstart
.LFB1677:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	bl	HEVC_FlushDPB	@
	subs	r3, r0, #0	@ ret,
	beq	.L2718	@,
	movw	r1, #:lower16:.LC514	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC514	@,
	ldr	r2, .L2720	@,
	bl	dprint_vfmw	@
.L2718:
	mov	r0, r4	@, pHevcCtx
	mov	r1, #0	@,
	bl	HEVC_InitDPB	@
	mov	r0, #0	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L2721:
	.align	2
.L2720:
	.word	.LANCHOR1+628
	.fnend
	.size	HEVC_ClearDPB, .-HEVC_ClearDPB
	.align	2
	.global	HEVC_DecVDM
	.type	HEVC_DecVDM, %function
HEVC_DecVDM:
	.fnstart
.LFB1595:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #164]	@ <variable>.CurrMsgSlotNum, <variable>.CurrMsgSlotNum
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	cmp	r3, #2	@ <variable>.CurrMsgSlotNum,
	bhi	.L2723	@,
	bl	HEVC_ClearCurrPic	@
	ldr	r0, [r4, #216]	@ <variable>.MaxBytesReceived, <variable>.MaxBytesReceived
	cmp	r0, #524288	@ <variable>.MaxBytesReceived,
	bhi	.L2740	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC516	@,
	movt	r1, #:upper16:.LC516	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43859,
.L2725:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2723:
	movw	r3, #:lower16:1960188	@ tmp149,
	movt	r3, #:upper16:1960188	@ tmp149,
	ldr	r2, [r0, #256]	@ <variable>.TotalFrameNum, <variable>.TotalFrameNum
	ldr	ip, [r0, r3]	@ D.43861, <variable>.pstExtraData
	ldr	lr, [r0, #260]	@ <variable>.OutputFrameNum, <variable>.OutputFrameNum
	add	r5, r2, #1	@ D.43863, <variable>.TotalFrameNum,
	cmp	r5, lr	@ D.43863, <variable>.OutputFrameNum
	movlt	r5, lr	@ D.43865, <variable>.OutputFrameNum
	str	r5, [r0, #256]	@ D.43865, <variable>.TotalFrameNum
	str	r5, [ip, #608]	@ D.43865, <variable>.stChanState.total_frame_num
	ldr	r1, [r0, #256]	@ <variable>.TotalFrameNum, <variable>.TotalFrameNum
	ldr	lr, [r0, #260]	@ <variable>.OutputFrameNum, <variable>.OutputFrameNum
	rsb	r2, lr, r1	@ tmp154, <variable>.OutputFrameNum, <variable>.TotalFrameNum
	str	r2, [ip, #612]	@ tmp154, <variable>.stChanState.error_frame_num
	bl	HEVC_IsRefForCurrPic	@
	ldr	r5, [r4, #224]	@ <variable>.AdvancedCfg, <variable>.AdvancedCfg
	ldr	r2, [r4, #240]	@ D.43870, <variable>.OldDecMode
	movw	r1, #:lower16:2124808	@ tmp156,
	ubfx	r5, r5, #16, #3	@ IPBDecMode, <variable>.AdvancedCfg,,
	movt	r1, #:upper16:2124808	@ tmp156,
	cmp	r2, r5	@ D.43870, IPBDecMode
	strb	r0, [r4, r1]	@ tmp155, <variable>.CurrPic.is_ref_idc
	beq	.L2726	@,
	sub	lr, r2, #2	@ tmp162, D.43870,
	subs	r1, r5, #2	@, IPBDecMode,
	movne	r1, #1	@
	cmp	lr, #1	@ tmp162,
	movhi	r1, #0	@,,
	cmp	r1, #0	@ tmp167,
	bne	.L2741	@,
.L2726:
	cmp	r5, #2	@ IPBDecMode,
	str	r5, [r4, #240]	@ IPBDecMode, <variable>.OldDecMode
	beq	.L2729	@,
	cmp	r5, #3	@ IPBDecMode,
	beq	.L2730	@,
	cmp	r5, #1	@ IPBDecMode,
	beq	.L2742	@,
.L2727:
	ldr	r1, [r4, #208]	@ <variable>.TotalSliceNum, <variable>.TotalSliceNum
	cmp	r1, #0	@ <variable>.TotalSliceNum,
	beq	.L2739	@,
	cmp	r5, #4	@ IPBDecMode,
	beq	.L2732	@,
	movw	lr, #:lower16:2124820	@ tmp181,
	movt	lr, #:upper16:2124820	@ tmp181,
	ldr	r3, [r4, lr]	@ prephitmp.7498, <variable>.CurrPic.pic_type
.L2733:
	cmp	r3, #2	@ prephitmp.7498,
	beq	.L2743	@,
	cmp	r3, #1	@ prephitmp.7498,
	streqb	r3, [r4, #3]	@ prephitmp.7498, <variable>.bPPicFound
.L2735:
	ldr	r5, [r4, #212]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC519	@,
	movt	r1, #:upper16:.LC519	@,
	sub	r2, r5, #1	@, <variable>.TotalPicNum,
	bl	dprint_vfmw	@
	ldr	r5, [r4, #200]	@ <variable>.NumSlicePara, <variable>.NumSlicePara
	cmp	r5, #0	@ <variable>.NumSlicePara,
	beq	.L2744	@,
	movw	r3, #:lower16:2124836	@ tmp206,
	movt	r3, #:upper16:2124836	@ tmp206,
	movw	r7, #:lower16:2124840	@ tmp210,
	movt	r7, #:upper16:2124840	@ tmp210,
	ldr	lr, [r4, #212]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	movw	r0, #:lower16:2134408	@ tmp205,
	ldr	ip, [r4, r3]	@ <variable>.CurrPic.start_count, <variable>.CurrPic.start_count
	movt	r0, #:upper16:2134408	@ tmp205,
	ldr	r6, [r4, r7]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	movw	r1, #:lower16:2134400	@ tmp209,
	rsbs	r7, ip, #1	@ tmp208, <variable>.CurrPic.start_count
	movcc	r7, #0	@ tmp208
	movt	r1, #:upper16:2134400	@ tmp209,
	cmp	lr, #0	@ <variable>.TotalPicNum,
	movw	lr, #:lower16:2139516	@ tmp212,
	movt	lr, #:upper16:2139516	@ tmp212,
	str	r7, [r4, r0]	@ tmp208, <variable>.DecPicPara.NewPicFlag
	str	r6, [r4, r1]	@ <variable>.CurrPic.stream_base_addr, <variable>.DecPicPara.stream_base_addr
	str	r5, [r4, lr]	@ <variable>.NumSlicePara, <variable>.DecPicPara.NumSlicePara
	beq	.L2737	@,
	movw	lr, #:lower16:2124820	@ tmp222,
	movt	lr, #:upper16:2124820	@ tmp222,
	movw	r1, #:lower16:1960192	@ tmp215,
	movt	r1, #:upper16:1960192	@ tmp215,
	ldr	r5, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	movw	r2, #:lower16:2133092	@ tmp217,
	movt	r2, #:upper16:2133092	@ tmp217,
	add	r0, ip, #1	@ tmp221, <variable>.CurrPic.start_count,
	cmp	r5, #0	@ <variable>.CurrPic.pic_type,
	add	ip, r4, r2	@ tmp217, pHevcCtx, tmp217
	str	r0, [r4, r3]	@ tmp221, <variable>.CurrPic.start_count
	str	ip, [r4, r1]	@ tmp217, <variable>.pHevcDecParam
	beq	.L2745	@,
.L2737:
	mov	r0, #0	@ D.43859,
	b	.L2725	@
.L2740:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC515	@,
	movt	r1, #:upper16:.LC515	@,
	bl	dprint_vfmw	@
	mvn	r0, #7	@ D.43859,
	b	.L2725	@
.L2741:
	cmp	r5, #4	@ IPBDecMode,
	cmpne	r5, #1	@, IPBDecMode,
	bhi	.L2726	@,
	mov	r3, r5	@, IPBDecMode
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC517	@,
	movt	r1, #:upper16:.LC517	@,
	bl	dprint_vfmw	@
	str	r5, [r4, #240]	@ IPBDecMode, <variable>.OldDecMode
.L2730:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrPic	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearDPB	@
	mvn	r0, #0	@ D.43859,
	b	.L2725	@
.L2745:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_GetPicStreamSize	@
	movw	r1, #:lower16:g_event_report	@ tmp224,
	movt	r1, #:upper16:g_event_report	@ tmp224,
	ldr	ip, [r1, #0]	@ g_event_report.638, g_event_report
	cmp	ip, #0	@ g_event_report.638,
	mov	r3, r0	@ Size,
	beq	.L2737	@,
	sub	r2, fp, #28	@ tmp226,,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #20	@,
	str	r3, [r2, #-4]!	@ Size, para
	mov	r3, #4	@,
	blx	ip	@ g_event_report.638
	mov	r0, r5	@ D.43859, <variable>.CurrPic.pic_type
	b	.L2725	@
.L2742:
	movw	ip, #:lower16:2124820	@ tmp178,
	movt	ip, #:upper16:2124820	@ tmp178,
	ldr	r3, [r4, ip]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2727	@,
	cmp	r0, #0	@ tmp155,
	bne	.L2727	@,
.L2739:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrPic	@
	mvn	r0, #0	@ D.43859,
	b	.L2725	@
.L2729:
	movw	r2, #:lower16:2124820	@ tmp176,
	movt	r2, #:upper16:2124820	@ tmp176,
	ldr	r0, [r4, r2]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, #0	@ <variable>.CurrPic.pic_type,
	beq	.L2727	@,
	b	.L2739	@
.L2743:
	ldrb	r2, [r4, #3]	@ zero_extendqisi2	@ <variable>.bPPicFound, <variable>.bPPicFound
	cmp	r2, #2	@ <variable>.bPPicFound,
	bne	.L2735	@,
	movw	r1, #:lower16:1960188	@ tmp188,
	movt	r1, #:upper16:1960188	@ tmp188,
	ldr	ip, [r4, r1]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [ip, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r3, #0	@ <variable>.s32DecOrderOutput,
	bne	.L2735	@,
	movw	r0, #:lower16:g_allow_B_before_P	@ tmp190,
	movt	r0, #:upper16:g_allow_B_before_P	@ tmp190,
	ldrb	lr, [r0, #0]	@ zero_extendqisi2	@ g_allow_B_before_P, g_allow_B_before_P
	cmp	lr, #1	@ g_allow_B_before_P,
	beq	.L2735	@,
	movw	r2, #:lower16:2124816	@ tmp193,
	movw	r3, #:lower16:2124808	@ tmp194,
	movt	r2, #:upper16:2124816	@ tmp193,
	movt	r3, #:upper16:2124808	@ tmp194,
	movw	r1, #:lower16:.LC518	@,
	mov	r0, #1	@,
	ldr	r2, [r4, r2]	@, <variable>.CurrPic.thispoc
	movt	r1, #:upper16:.LC518	@,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@, <variable>.CurrPic.is_ref_idc
	bl	dprint_vfmw	@
	b	.L2739	@
.L2732:
	movw	r0, #:lower16:2124820	@ tmp182,
	movt	r0, #:upper16:2124820	@ tmp182,
	ldr	r3, [r4, r0]	@ prephitmp.7498, <variable>.CurrPic.pic_type
	cmp	r3, #0	@ prephitmp.7498,
	moveq	r3, #2	@ tmp183,
	streqb	r3, [r4, #3]	@ tmp183, <variable>.bPPicFound
	beq	.L2735	@,
	b	.L2733	@
.L2744:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrPic	@
	mov	r0, r5	@, <variable>.NumSlicePara
	movw	r1, #:lower16:.LC520	@,
	ldr	r2, .L2746	@,
	movt	r1, #:upper16:.LC520	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43859,
	b	.L2725	@
.L2747:
	.align	2
.L2746:
	.word	.LANCHOR1+644
	.fnend
	.size	HEVC_DecVDM, .-HEVC_DecVDM
	.align	2
	.global	HEVC_IncreaseDPBSize
	.type	HEVC_IncreaseDPBSize, %function
HEVC_IncreaseDPBSize:
	.fnstart
.LFB1573:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:1960368	@ tmp139,
	movt	r4, #:upper16:1960368	@ tmp139,
	mov	r5, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r4]	@ D.41596, <variable>.DPB.size
	cmp	r3, #16	@ D.41596,
	bhi	.L2753	@,
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	bl	FSP_GetTotalValidFsNum	@
	cmp	r0, #0	@ total_fs_num
	ble	.L2751	@,
	ldr	r3, [r5, r4]	@ <variable>.DPB.size, <variable>.DPB.size
	add	r3, r3, #1	@ D.41606, <variable>.DPB.size,
	cmp	r0, r3	@ total_fs_num, D.41606
	bcc	.L2751	@,
	str	r3, [r5, r4]	@ D.41606, <variable>.DPB.size
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC522	@,
	ldr	r2, .L2754	@,
	movt	r1, #:upper16:.LC522	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.41600,
.L2750:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L2751:
	mov	r3, r0	@, total_fs_num
	movw	r1, #:lower16:.LC523	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC523	@,
	ldr	r2, .L2754	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41600,
	b	.L2750	@
.L2753:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC521	@,
	ldr	r2, .L2754	@,
	movt	r1, #:upper16:.LC521	@,
	mov	r6, #17	@ tmp143,
	str	r6, [sp, #0]	@ tmp143,
	bl	dprint_vfmw	@
	str	r6, [r5, r4]	@ tmp143, <variable>.DPB.size
	mvn	r0, #0	@ D.41600,
	b	.L2750	@
.L2755:
	.align	2
.L2754:
	.word	.LANCHOR1+656
	.fnend
	.size	HEVC_IncreaseDPBSize, .-HEVC_IncreaseDPBSize
	.align	2
	.global	HEVC_SimpleSlideDPB
	.type	HEVC_SimpleSlideDPB, %function
HEVC_SimpleSlideDPB:
	.fnstart
.LFB1604:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:1960368	@ tmp136,
	movw	r1, #:lower16:1960372	@ tmp137,
	movt	r2, #:upper16:1960368	@ tmp136,
	movt	r1, #:upper16:1960372	@ tmp137,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r2, [r0, r2]	@ D.44548, <variable>.DPB.size
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, r2	@ <variable>.DPB.used_size, D.44548
	ldmccfd	sp, {r3, r4, fp, sp, pc}	@
	cmp	r2, #15	@ D.44548,
	bls	.L2760	@,
.L2758:
	movw	ip, #:lower16:1960392	@ tmp139,
	movt	ip, #:upper16:1960392	@ tmp139,
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [r4, ip]	@, <variable>.DPB.fs
	bl	HEVC_UnMarkFrameStoreRef	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, #0	@,
	bl	HEVC_RemoveApcStore	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, #0	@,
	bl	HEVC_RemoveFrameStoreOutDPB	@
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L2760:
	bl	HEVC_IncreaseDPBSize	@
	cmp	r0, #0	@,
	bne	.L2758	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	HEVC_SimpleSlideDPB, .-HEVC_SimpleSlideDPB
	.align	2
	.global	HEVC_DecPPS
	.type	HEVC_DecPPS, %function
HEVC_DecPPS:
	.fnstart
.LFB1551:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:1960172	@ tmp142,
	movt	r2, #:upper16:1960172	@ tmp142,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movw	r1, #:lower16:.LC524	@,
	movt	r1, #:upper16:.LC524	@,
	ldr	r0, [r0, r2]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldr	r3, [r4, #156]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	cmp	r0, r3	@ pic_parameter_set_id, <variable>.MaxPpsNum
	mov	r8, r0	@ pic_parameter_set_id,
	bcs	.L2768	@,
	movw	sl, #7704	@ tmp147,
	movw	r5, #:lower16:1960184	@ tmp148,
	mul	r6, sl, r0	@ D.40640, tmp147, pic_parameter_set_id
	movt	r5, #:upper16:1960184	@ tmp148,
	ldr	r0, [r4, r5]	@ <variable>.pPPS, <variable>.pPPS
	add	r2, r6, r0	@ D.40641, D.40640, <variable>.pPPS
	ldrb	r7, [r6, r0]	@ zero_extendqisi2	@ <variable>.valid, <variable>.valid
	cmp	r7, #0	@ <variable>.valid,
	bne	.L2769	@,
	str	r8, [r2, #28]	@ pic_parameter_set_id, <variable>.pic_parameter_set_id
	mov	r0, r4	@, pHevcCtx
	ldr	r3, [r4, r5]	@ <variable>.pPPS, <variable>.pPPS
	add	r1, r6, r3	@, D.40640, <variable>.pPPS
	bl	HEVC_ProcessPPS	@
	cmp	r0, #0	@ D.40652
	bne	.L2770	@,
	ldr	r2, [r4, r5]	@ <variable>.pPPS, <variable>.pPPS
	mov	lr, #1	@ tmp180,
	add	ip, r2, r6	@ tmp181, <variable>.pPPS, D.40640
	strb	lr, [ip, #1]	@ tmp180, <variable>.is_refresh
	ldr	r1, [r4, r5]	@ <variable>.pPPS, <variable>.pPPS
	strb	lr, [r1, r6]	@ tmp180, <variable>.valid
.L2763:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2769:
	movw	r9, #:lower16:1961308	@ pps_tmp,
	movt	r9, #:upper16:1961308	@ pps_tmp,
	add	r9, r4, r9	@ pps_tmp, pHevcCtx, pps_tmp
	movw	ip, #:lower16:1961336	@ tmp152,
	movt	ip, #:upper16:1961336	@ tmp152,
	mov	r0, r4	@, pHevcCtx
	mov	r1, r9	@, pps_tmp
	movw	r7, #:lower16:1961308	@ tmp151,
	str	r8, [r4, ip]	@ pic_parameter_set_id, <variable>.TmpParam.PpsTmp.pic_parameter_set_id
	movt	r7, #:upper16:1961308	@ tmp151,
	bl	HEVC_ProcessPPS	@
	subs	r3, r0, #0	@ D.40646,
	bne	.L2771	@,
	ldr	r2, [r4, r5]	@ <variable>.pPPS, <variable>.pPPS
	movw	ip, #:lower16:1961309	@ tmp154,
	movt	ip, #:upper16:1961309	@ tmp154,
	mov	lr, #1	@ tmp155,
	mov	r1, r9	@, pps_tmp
	add	r0, r6, r2	@, D.40640, <variable>.pPPS
	strb	lr, [r4, r7]	@ tmp155, <variable>.TmpParam.PpsTmp.valid
	mov	r2, sl	@, tmp147
	strb	lr, [r4, ip]	@ tmp155, <variable>.TmpParam.PpsTmp.is_refresh
	str	r3, [fp, #-48]	@,
	bl	memmove	@
	ldr	r1, [fp, #-48]	@,
	mov	r0, r1	@ D.40638, D.40646
	b	.L2763	@
.L2771:
	mov	r2, r8	@, pic_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC526	@,
	movt	r1, #:upper16:.LC526	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40638,
	b	.L2763	@
.L2768:
	mov	r2, r0	@, pic_parameter_set_id
	movw	r1, #:lower16:.LC525	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC525	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40638,
	b	.L2763	@
.L2770:
	mov	r2, r8	@, pic_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC526	@,
	movt	r1, #:upper16:.LC526	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r5]	@ <variable>.pPPS, <variable>.pPPS
	mov	ip, #1	@ tmp169,
	mvn	r0, #0	@ D.40638,
	add	r2, r3, r6	@ tmp170, <variable>.pPPS, D.40640
	strb	ip, [r2, #1]	@ tmp169, <variable>.is_refresh
	ldr	r1, [r4, r5]	@ <variable>.pPPS, <variable>.pPPS
	strb	r7, [r1, r6]	@ <variable>.valid, <variable>.valid
	b	.L2763	@
	.fnend
	.size	HEVC_DecPPS, .-HEVC_DecPPS
	.align	2
	.global	HEVC_DecSPS
	.type	HEVC_DecSPS, %function
HEVC_DecSPS:
	.fnstart
.LFB1549:
	@ args = 0, pretend = 0, frame = 416
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #420
	sub	sp, sp, #420	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:1961308	@ sps_tmp,
	movt	r5, #:upper16:1961308	@ sps_tmp,
	sub	sl, fp, #436	@ tmp151,,
	add	r5, r0, r5	@ sps_tmp, pHevcCtx, sps_tmp
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movw	r1, #36364	@,
	movw	r6, #:lower16:1960172	@ tmp153,
	mov	r0, r5	@, sps_tmp
	movt	r6, #:upper16:1960172	@ tmp153,
	bl	__memzero	@
	mov	r0, sl	@, tmp151
	mov	r1, #384	@,
	bl	__memzero	@
	ldr	r0, [r4, r6]	@, <variable>.pBS
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC527	@,
	movt	r2, #:upper16:.LC527	@,
	movw	r3, #:lower16:1961308	@,
	str	r3, [fp, #-440]	@, %sfp
	bl	HEVC_u_v	@
	ldr	lr, [fp, #-440]	@, %sfp
	movt	lr, #:upper16:1961308	@,
	str	r0, [fp, #-444]	@, %sfp
	ldr	r2, [r4, #148]	@ D.40224, <variable>.MaxVpsNum
	str	lr, [fp, #-440]	@, %sfp
	cmp	r0, r2	@, D.40224
	bcs	.L2783	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	mov	r1, #3	@,
	movw	r2, #:lower16:.LC529	@,
	movt	r2, #:upper16:.LC529	@,
	bl	HEVC_u_v	@
	cmp	r0, #6	@ sps_max_sub_layers_minus1,
	mov	r9, r0	@ sps_max_sub_layers_minus1,
	bhi	.L2784	@,
	mov	r1, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC531	@,
	movt	r2, #:upper16:.LC531	@,
	bl	HEVC_u_v	@
	mov	r1, sl	@, tmp151
	mov	r2, #1	@,
	mov	r3, r9	@, sps_max_sub_layers_minus1
	mov	r7, r0	@ D.40236,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecPTL	@
	cmp	r0, #0	@,
	bne	.L2785	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC533	@,
	movt	r1, #:upper16:.LC533	@,
	bl	HEVC_ue_v	@
	ldr	r2, [r4, #152]	@ D.40244, <variable>.MaxSpsNum
	cmp	r0, r2	@ sps_seq_parameter_set_id, D.40244
	mov	r8, r0	@ sps_seq_parameter_set_id,
	bcs	.L2786	@,
	movw	r3, #36364	@ tmp175,
	movw	r6, #:lower16:1960180	@ tmp176,
	uxtb	lr, r7	@ sps_temporal_id_nesting_flag, D.40236
	movt	r6, #:upper16:1960180	@ tmp176,
	mul	r7, r3, r0	@ D.40256, tmp175, sps_seq_parameter_set_id
	ldr	r0, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	add	r2, r7, r0	@ D.40257, D.40256, <variable>.pSPS
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.valid, <variable>.valid
	cmp	ip, #0	@ <variable>.valid,
	bne	.L2787	@,
	ldr	r1, [fp, #-444]	@, %sfp
	str	r1, [r2, #52]	@, <variable>.video_parameter_set_id
	mov	r1, sl	@, tmp151
	ldr	r0, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	mov	r2, #384	@,
	add	r5, r0, r7	@ tmp221, <variable>.pSPS, D.40256
	str	r9, [r5, #56]	@ sps_max_sub_layers_minus1, <variable>.sps_max_sub_layers_minus1
	ldr	r0, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	add	r5, r0, r7	@ tmp226, <variable>.pSPS, D.40256
	strb	lr, [r5, #3]	@ sps_temporal_id_nesting_flag, <variable>.sps_temporal_id_nesting_flag
	ldr	r0, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	str	r3, [fp, #-448]	@,
	add	lr, r7, r0	@ tmp232, D.40256, <variable>.pSPS
	str	ip, [fp, #-452]	@,
	add	r0, lr, #476	@, tmp232,
	bl	memcpy	@
	ldr	r1, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	mov	r0, r4	@, pHevcCtx
	add	r3, r1, r7	@ tmp242, <variable>.pSPS, D.40256
	str	r8, [r3, #60]	@ sps_seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r5, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	add	r1, r7, r5	@, D.40256, <variable>.pSPS
	bl	HEVC_ProcessSPS	@
	ldr	r3, [fp, #-448]	@,
	subs	r5, r0, #0	@ D.40273,
	bne	.L2788	@,
	ldr	lr, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	mov	r1, #1	@ tmp261,
	mov	r2, r3	@, tmp175
	movw	r0, #:lower16:2080740	@,
	movt	r0, #:upper16:2080740	@,
	strb	r1, [lr, r7]	@ tmp261, <variable>.is_refresh
	add	r0, r4, r0	@, pHevcCtx,
	ldr	r3, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	add	ip, r3, r7	@ tmp266, <variable>.pSPS, D.40256
	strb	r1, [ip, #1]	@ tmp261, <variable>.valid
	ldr	lr, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	add	r1, r7, lr	@, D.40256, <variable>.pSPS
	bl	memcpy	@
	mov	r0, r5	@ D.40229, D.40273
.L2774:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2787:
	ldr	r2, [fp, #-444]	@, %sfp
	movw	r1, #:lower16:1961360	@ tmp179,
	movw	ip, #:lower16:1961364	@ tmp180,
	movt	r1, #:upper16:1961360	@ tmp179,
	movt	ip, #:upper16:1961364	@ tmp180,
	movw	r0, #:lower16:1961311	@,
	movt	r0, #:upper16:1961311	@,
	str	r0, [fp, #-456]	@, %sfp
	str	r2, [r4, r1]	@, <variable>.TmpParam.SpsTmp.video_parameter_set_id
	movw	r0, #:lower16:1961784	@,
	str	r9, [r4, ip]	@ sps_max_sub_layers_minus1, <variable>.TmpParam.SpsTmp.sps_max_sub_layers_minus1
	mov	r1, sl	@, tmp151
	ldr	ip, [fp, #-456]	@, %sfp
	movt	r0, #:upper16:1961784	@,
	movw	sl, #:lower16:1961368	@ tmp189,
	movt	sl, #:upper16:1961368	@ tmp189,
	mov	r2, #384	@,
	add	r0, r4, r0	@, pHevcCtx,
	strb	lr, [r4, ip]	@ sps_temporal_id_nesting_flag, <variable>.TmpParam.SpsTmp.sps_temporal_id_nesting_flag
	str	r3, [fp, #-448]	@,
	bl	memcpy	@
	str	r8, [r4, sl]	@ sps_seq_parameter_set_id, <variable>.TmpParam.SpsTmp.seq_parameter_set_id
	mov	r0, r4	@, pHevcCtx
	mov	r1, r5	@, sps_tmp
	bl	HEVC_ProcessSPS	@
	ldr	r3, [fp, #-448]	@,
	subs	sl, r0, #0	@ D.40263,
	bne	.L2789	@,
	movw	r2, #:lower16:1961309	@ tmp203,
	movt	r2, #:upper16:1961309	@ tmp203,
	mov	ip, #1	@ tmp201,
	ldr	r0, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	strb	ip, [r4, r2]	@ tmp201, <variable>.TmpParam.SpsTmp.valid
	mov	r1, r5	@, sps_tmp
	ldr	lr, [fp, #-440]	@, %sfp
	mov	r2, r3	@, tmp175
	add	r0, r7, r0	@, D.40256, <variable>.pSPS
	strb	ip, [r4, lr]	@ tmp201, <variable>.TmpParam.SpsTmp.is_refresh
	str	r3, [fp, #-448]	@,
	bl	memmove	@
	ldr	r3, [fp, #-448]	@,
	movw	r2, #:lower16:2080740	@,
	ldr	r1, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	movt	r2, #:upper16:2080740	@,
	add	r0, r4, r2	@, pHevcCtx,
	add	r1, r7, r1	@, D.40256, <variable>.pSPS
	mov	r2, r3	@, tmp175
	bl	memcpy	@
	mov	r0, sl	@ D.40229, D.40263
	b	.L2774	@
.L2783:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC528	@,
	movt	r1, #:upper16:.LC528	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40229,
	b	.L2774	@
.L2784:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC530	@,
	movt	r1, #:upper16:.LC530	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40229,
	b	.L2774	@
.L2785:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC532	@,
	movt	r1, #:upper16:.LC532	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40229,
	b	.L2774	@
.L2788:
	mov	r2, r8	@, sps_seq_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC536	@,
	movt	r1, #:upper16:.LC536	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	mov	r1, #1	@ tmp250,
	mvn	r0, #0	@ D.40229,
	strb	r1, [r3, r7]	@ tmp250, <variable>.is_refresh
	ldr	r2, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	ldr	ip, [fp, #-452]	@,
	add	r7, r2, r7	@ tmp255, <variable>.pSPS, D.40256
	strb	ip, [r7, #1]	@ <variable>.valid, <variable>.valid
	b	.L2774	@
.L2789:
	ldr	ip, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	movw	lr, #:lower16:2080740	@,
	movt	lr, #:upper16:2080740	@,
	mov	r2, r3	@, tmp175
	add	r1, r7, ip	@, D.40256, <variable>.pSPS
	add	r0, r4, lr	@, pHevcCtx,
	bl	memcpy	@
	mov	r2, r8	@, sps_seq_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC535	@,
	movt	r1, #:upper16:.LC535	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40229,
	b	.L2774	@
.L2786:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC534	@,
	movt	r1, #:upper16:.LC534	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #152]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	cmp	r8, r3	@ sps_seq_parameter_set_id, <variable>.MaxSpsNum
	bcs	.L2790	@,
.L2778:
	mvn	r0, #0	@ D.40229,
	b	.L2774	@
.L2790:
	movw	r2, #:lower16:g_event_report	@ tmp172,
	movt	r2, #:upper16:g_event_report	@ tmp172,
	ldr	ip, [r2, #0]	@ g_event_report.524, g_event_report
	cmp	ip, #0	@ g_event_report.524,
	beq	.L2778	@,
	str	r3, [fp, #-48]	@ <variable>.MaxSpsNum, para
	mov	r1, #109	@,
	str	r8, [fp, #-52]	@ sps_seq_parameter_set_id, para
	sub	r2, fp, #52	@,,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r3, #8	@,
	blx	ip	@ g_event_report.524
	mvn	r0, #0	@ D.40229,
	b	.L2774	@
	.fnend
	.size	HEVC_DecSPS, .-HEVC_DecSPS
	.align	2
	.global	HEVC_DecVPS
	.type	HEVC_DecVPS, %function
HEVC_DecVPS:
	.fnstart
.LFB1547:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:1960172	@ tmp142,
	movt	r3, #:upper16:1960172	@ tmp142,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC537	@,
	ldr	r0, [r0, r3]	@, <variable>.pBS
	movt	r2, #:upper16:.LC537	@,
	bl	HEVC_u_v	@
	cmp	r0, #15	@ vps_video_parameter_set_id,
	mov	r8, r0	@ vps_video_parameter_set_id,
	bhi	.L2798	@,
	movw	sl, #23196	@ tmp146,
	movw	r5, #:lower16:1960176	@ tmp147,
	mul	r6, sl, r0	@ D.39766, tmp146, vps_video_parameter_set_id
	movt	r5, #:upper16:1960176	@ tmp147,
	ldr	r0, [r4, r5]	@ <variable>.pVPS, <variable>.pVPS
	add	r2, r6, r0	@ D.39767, D.39766, <variable>.pVPS
	ldrb	r7, [r6, r0]	@ zero_extendqisi2	@ <variable>.valid, <variable>.valid
	cmp	r7, #0	@ <variable>.valid,
	bne	.L2799	@,
	str	r8, [r2, #8]	@ vps_video_parameter_set_id, <variable>.video_parameter_set_id
	mov	r0, r4	@, pHevcCtx
	ldr	r3, [r4, r5]	@ <variable>.pVPS, <variable>.pVPS
	add	r1, r6, r3	@, D.39766, <variable>.pVPS
	bl	HEVC_ProcessVPS	@
	cmp	r0, #0	@ D.39778
	bne	.L2800	@,
	ldr	ip, [r4, r5]	@ <variable>.pVPS, <variable>.pVPS
	mov	lr, #1	@ tmp182,
	add	r1, ip, r6	@ tmp180, <variable>.pVPS, D.39766
	strb	lr, [r1, #2]	@ tmp182, <variable>.is_refresh
	ldr	r2, [r4, r5]	@ <variable>.pVPS, <variable>.pVPS
	strb	lr, [r2, r6]	@ tmp182, <variable>.valid
.L2793:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2799:
	movw	r9, #:lower16:1961308	@ vps_tmp,
	movt	r9, #:upper16:1961308	@ vps_tmp,
	add	r9, r4, r9	@ vps_tmp, pHevcCtx, vps_tmp
	movw	r2, #:lower16:1961316	@ tmp151,
	movt	r2, #:upper16:1961316	@ tmp151,
	mov	r0, r4	@, pHevcCtx
	mov	r1, r9	@, vps_tmp
	movw	r7, #:lower16:1961308	@ tmp150,
	str	r8, [r4, r2]	@ vps_video_parameter_set_id, <variable>.TmpParam.VpsTmp.video_parameter_set_id
	movt	r7, #:upper16:1961308	@ tmp150,
	bl	HEVC_ProcessVPS	@
	subs	r3, r0, #0	@ D.39772,
	bne	.L2801	@,
	ldr	r0, [r4, r5]	@ <variable>.pVPS, <variable>.pVPS
	movw	ip, #:lower16:1961310	@ tmp153,
	movt	ip, #:upper16:1961310	@ tmp153,
	mov	lr, #1	@ tmp154,
	mov	r1, r9	@, vps_tmp
	strb	lr, [r4, r7]	@ tmp154, <variable>.TmpParam.VpsTmp.valid
	strb	lr, [r4, ip]	@ tmp154, <variable>.TmpParam.VpsTmp.is_refresh
	add	r0, r6, r0	@, D.39766, <variable>.pVPS
	mov	r2, sl	@, tmp146
	str	r3, [fp, #-48]	@,
	bl	memmove	@
	ldr	r1, [fp, #-48]	@,
	mov	r0, r1	@ D.39764, D.39772
	b	.L2793	@
.L2801:
	mov	r2, r8	@, vps_video_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC539	@,
	movt	r1, #:upper16:.LC539	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39764,
	b	.L2793	@
.L2798:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC538	@,
	movt	r1, #:upper16:.LC538	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39764,
	b	.L2793	@
.L2800:
	mov	r2, r8	@, vps_video_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC540	@,
	movt	r1, #:upper16:.LC540	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r5]	@ <variable>.pVPS, <variable>.pVPS
	mov	r1, #1	@ tmp171,
	mvn	r0, #0	@ D.39764,
	add	ip, r3, r6	@ tmp169, <variable>.pVPS, D.39766
	strb	r1, [ip, #2]	@ tmp171, <variable>.is_refresh
	ldr	r2, [r4, r5]	@ <variable>.pVPS, <variable>.pVPS
	strb	r7, [r2, r6]	@ <variable>.valid, <variable>.valid
	b	.L2793	@
	.fnend
	.size	HEVC_DecVPS, .-HEVC_DecVPS
	.align	2
	.global	HEVC_InitPic
	.type	HEVC_InitPic, %function
HEVC_InitPic:
	.fnstart
.LFB1596:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:2044436	@ tmp177,
	movt	ip, #:upper16:2044436	@ tmp177,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movw	r3, #:lower16:2125436	@ tmp183,
	movw	r5, #:lower16:2044448	@ tmp178,
	ldr	r6, [r4, ip]	@, <variable>.CurrSPS.seq_parameter_set_id
	movt	r3, #:upper16:2125436	@ tmp183,
	movt	r5, #:upper16:2044448	@ tmp178,
	movw	r8, #:lower16:2044452	@ tmp179,
	ldr	r0, [r0, r3]	@ D.43970, <variable>.CurrSlice.pic_parameter_set_id
	movt	r8, #:upper16:2044452	@ tmp179,
	str	r6, [fp, #-60]	@, %sfp
	movw	r2, #:lower16:2044476	@ tmp181,
	ldr	r5, [r4, r5]	@, <variable>.CurrSPS.pic_width_in_luma_samples
	movt	r2, #:upper16:2044476	@ tmp181,
	movw	r1, #:lower16:2044524	@ tmp180,
	movw	r3, #:lower16:2044484	@ tmp182,
	movt	r1, #:upper16:2044524	@ tmp180,
	movt	r3, #:upper16:2044484	@ tmp182,
	str	r5, [fp, #-52]	@, %sfp
	cmp	r0, #0	@ D.43970,
	ldr	ip, [r4, r8]	@, <variable>.CurrSPS.pic_height_in_luma_samples
	str	ip, [fp, #-56]	@, %sfp
	ldr	r2, [r4, r2]	@, <variable>.CurrSPS.bit_depth_luma
	ldr	r8, [r4, r1]	@ D.43967, <variable>.CurrSPS.log2_ctb_sizeY
	str	r2, [fp, #-68]	@, %sfp
	ldr	r3, [r4, r3]	@, <variable>.CurrSPS.bit_depth_chroma
	str	r3, [fp, #-64]	@, %sfp
	blt	.L2803	@,
	ldr	r2, [r4, #156]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	cmp	r0, r2	@ D.43970, <variable>.MaxPpsNum
	bge	.L2803	@,
	movw	r7, #:lower16:1960184	@ tmp185,
	movt	r7, #:upper16:1960184	@ tmp185,
	movw	ip, #7704	@ tmp187,
	movw	r2, #:lower16:1960180	@ tmp189,
	ldr	r1, [r4, r7]	@ <variable>.pPPS, <variable>.pPPS
	movw	r7, #36364	@ tmp192,
	movt	r2, #:upper16:1960180	@ tmp189,
	movw	lr, #:lower16:1960176	@ tmp194,
	movt	lr, #:upper16:1960176	@ tmp194,
	mla	r6, ip, r0, r1	@, tmp187, D.43970, <variable>.pPPS
	movw	r0, #:lower16:2021188	@ tmp199,
	movt	r0, #:upper16:2021188	@ tmp199,
	str	r6, [fp, #-48]	@, %sfp
	ldr	r3, [fp, #-48]	@, %sfp
	ldr	r6, [r4, r2]	@ <variable>.pSPS, <variable>.pSPS
	movw	r2, #23196	@ tmp197,
	ldr	r1, [r4, lr]	@ <variable>.pVPS, <variable>.pVPS
	ldr	r5, [r3, #32]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	lr, [r4, r0]	@ <variable>.CurrVPS.video_parameter_set_id, <variable>.CurrVPS.video_parameter_set_id
	mul	r7, r7, r5	@ tmp190, tmp192, <variable>.seq_parameter_set_id
	add	r5, r7, r6	@ sps, tmp190, <variable>.pSPS
	ldr	ip, [r5, #52]	@ <variable>.video_parameter_set_id, <variable>.video_parameter_set_id
	mla	r3, r2, ip, r1	@ vps, tmp197, <variable>.video_parameter_set_id, <variable>.pVPS
	ldr	r0, [r3, #8]	@ <variable>.video_parameter_set_id, <variable>.video_parameter_set_id
	cmp	lr, r0	@ <variable>.CurrVPS.video_parameter_set_id, <variable>.video_parameter_set_id
	bne	.L2804	@,
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_refresh, <variable>.is_refresh
	cmp	r0, #0	@ <variable>.is_refresh,
	beq	.L2866	@,
.L2804:
	movw	r1, #:lower16:2021180	@,
	movt	r1, #:upper16:2021180	@,
	add	r0, r4, r1	@, pHevcCtx,
	mov	r2, #0	@ tmp204,
	mov	r1, r3	@, vps
	strb	r2, [r3, #2]	@ tmp204, <variable>.is_refresh
	movw	r2, #23196	@,
	bl	memmove	@
	movw	r3, #:lower16:2044436	@ tmp208,
	movt	r3, #:upper16:2044436	@ tmp208,
	ldr	r3, [r4, r3]	@ prephitmp.7828, <variable>.CurrSPS.seq_parameter_set_id
.L2805:
	ldr	ip, [r5, #60]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	ip, r3	@ <variable>.seq_parameter_set_id, prephitmp.7828
	bne	.L2806	@,
	ldrb	r0, [r7, r6]	@ zero_extendqisi2	@ <variable>.is_refresh, <variable>.is_refresh
	cmp	r0, #0	@ <variable>.is_refresh,
	beq	.L2867	@,
.L2806:
	movw	r2, #:lower16:2044376	@,
	movt	r2, #:upper16:2044376	@,
	add	r0, r4, r2	@, pHevcCtx,
	mov	lr, #0	@ tmp215,
	mov	r1, r5	@, sps
	strb	lr, [r7, r6]	@ tmp215, <variable>.is_refresh
	movw	r2, #36364	@,
	bl	memmove	@
.L2807:
	movw	r6, #:lower16:1960188	@ tmp220,
	movw	r2, #:lower16:2044484	@ tmp221,
	movt	r6, #:upper16:1960188	@ tmp220,
	movt	r2, #:upper16:2044484	@ tmp221,
	movw	lr, #:lower16:2044476	@ tmp222,
	movt	lr, #:upper16:2044476	@ tmp222,
	ldr	ip, [r4, r6]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r7, #:lower16:2117132	@ tmp226,
	ldr	r1, [r4, r2]	@ <variable>.CurrSPS.bit_depth_chroma, <variable>.CurrSPS.bit_depth_chroma
	movt	r7, #:upper16:2117132	@ tmp226,
	ldr	r0, [r4, lr]	@ <variable>.CurrSPS.bit_depth_luma, <variable>.CurrSPS.bit_depth_luma
	cmp	r1, r0	@ <variable>.CurrSPS.bit_depth_chroma, <variable>.CurrSPS.bit_depth_luma
	strcs	r1, [ip, #916]	@, <variable>.CurrSPS.bit_depth_chroma, <variable>.s32BitDepth
	strcc	r0, [ip, #916]	@, <variable>.CurrSPS.bit_depth_luma, <variable>.s32BitDepth
	ldr	r6, [r4, r7]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	ldr	r7, [fp, #-48]	@, %sfp
	ldr	r3, [r7, #28]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	cmp	r6, r3	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	beq	.L2868	@,
.L2808:
	ldr	ip, [fp, #-48]	@, %sfp
	mov	r8, #0	@ tmp234,
	ldrb	r2, [ip, #13]	@ zero_extendqisi2	@ <variable>.tiles_enabled_flag, <variable>.tiles_enabled_flag
	strb	r8, [ip, #1]	@ tmp234, <variable>.is_refresh
	cmp	r2, r8	@ <variable>.tiles_enabled_flag,
	beq	.L2810	@,
	ldrb	r6, [ip, #15]	@ zero_extendqisi2	@ <variable>.uniform_spacing_flag, <variable>.uniform_spacing_flag
	cmp	r6, r8	@ <variable>.uniform_spacing_flag,
	beq	.L2811	@,
	ldr	r6, [ip, #68]	@ D.44035, <variable>.num_tile_columns
	cmp	r6, r8	@ D.44035,
	ble	.L2812	@,
	tst	r6, #1	@ D.44035,
	ldr	sl, [r5, #240]	@ prephitmp.7829, <variable>.ctb_num_width
	ldr	r9, [fp, #-48]	@ ivtmp.7753, %sfp
	beq	.L2856	@,
	str	r4, [fp, #-72]	@ pHevcCtx, %sfp
	b	.L2813	@
.L2869:
	ldr	lr, [r5, #240]	@ prephitmp.7829, <variable>.ctb_num_width
	mul	r0, lr, r8	@, prephitmp.7829, i.7772
	str	lr, [fp, #-76]	@,
	bl	__aeabi_uidiv	@
	ldr	r1, [fp, #-76]	@,
	mov	sl, r0	@ tmp577,
	mul	r0, r1, r4	@, prephitmp.7829, tmp561
	mov	r1, r6	@, D.44035
	bl	__aeabi_uidiv	@
	rsb	r4, r0, sl	@ tmp581,, tmp577
	str	r4, [r7, #604]	@ tmp581, <variable>.column_bd
	ldr	sl, [r5, #240]	@ prephitmp.7829, <variable>.ctb_num_width
.L2813:
	add	r4, r8, #1	@ tmp561, i.7772,
	mov	r1, r6	@, D.44035
	add	r7, r9, #4	@ tmp562, ivtmp.7753,
	mul	r0, sl, r4	@, prephitmp.7829, tmp561
	bl	__aeabi_uidiv	@
	mov	r1, r6	@, D.44035
	mov	r2, r0	@ tmp242,
	str	r2, [fp, #-76]	@,
	mul	r0, sl, r8	@, prephitmp.7829, i.7772
	bl	__aeabi_uidiv	@
	ldr	ip, [fp, #-76]	@,
	cmp	r4, r6	@ tmp561, D.44035
	add	r8, r4, #1	@ i.7772, tmp561,
	mov	r1, r6	@, D.44035
	rsb	r3, r0, ip	@ tmp249,, tmp242
	str	r3, [r9, #604]	@ tmp249, <variable>.column_bd
	add	r9, r7, #4	@ ivtmp.7753, tmp562,
	blt	.L2869	@,
	ldr	r4, [fp, #-72]	@ pHevcCtx, %sfp
.L2812:
	ldr	lr, [fp, #-48]	@, %sfp
	ldr	r6, [lr, #72]	@ temp.7789, <variable>.num_tile_rows
	cmp	r6, #0	@ temp.7789,
	ble	.L2814	@,
	tst	r6, #1	@ temp.7789,
	ldr	sl, [r5, #244]	@ prephitmp.7723, <variable>.ctb_num_height
	mov	r9, lr	@ ivtmp.7743,
	mov	r8, #0	@ i.7774,
	beq	.L2857	@,
	str	r4, [fp, #-72]	@ pHevcCtx, %sfp
	b	.L2815	@
.L2870:
	ldr	lr, [r5, #244]	@ prephitmp.7723, <variable>.ctb_num_height
	mul	r0, lr, r8	@, prephitmp.7723, i.7774
	str	lr, [fp, #-76]	@,
	bl	__aeabi_uidiv	@
	ldr	r1, [fp, #-76]	@,
	mov	sl, r0	@ tmp586,
	mul	r0, r1, r4	@, prephitmp.7723, tmp557
	mov	r1, r6	@, temp.7789
	bl	__aeabi_uidiv	@
	rsb	r0, r0, sl	@ tmp590,, tmp586
	str	r0, [r7, #860]	@ tmp590, <variable>.row_bd
	ldr	sl, [r5, #244]	@ prephitmp.7723, <variable>.ctb_num_height
.L2815:
	add	r4, r8, #1	@ tmp557, i.7774,
	mov	r1, r6	@, temp.7789
	add	r7, r9, #4	@ tmp556, ivtmp.7743,
	mul	r0, sl, r4	@, prephitmp.7723, tmp557
	bl	__aeabi_uidiv	@
	mov	r1, r6	@, temp.7789
	mov	r2, r0	@ tmp254,
	str	r2, [fp, #-76]	@,
	mul	r0, sl, r8	@, prephitmp.7723, i.7774
	bl	__aeabi_uidiv	@
	ldr	ip, [fp, #-76]	@,
	cmp	r4, r6	@ tmp557, temp.7789
	add	r8, r4, #1	@ i.7774, tmp557,
	mov	r1, r6	@, temp.7789
	rsb	r3, r0, ip	@ tmp261,, tmp254
	str	r3, [r9, #860]	@ tmp261, <variable>.row_bd
	add	r9, r7, #4	@ ivtmp.7743, tmp556,
	blt	.L2870	@,
	ldr	r4, [fp, #-72]	@ pHevcCtx, %sfp
	b	.L2814	@
.L2803:
	mov	r6, #0	@ ret,
.L2832:
	mov	r0, r6	@, ret
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2810:
	ldr	r3, [r5, #240]	@ <variable>.ctb_num_width, <variable>.ctb_num_width
	ldr	sl, [fp, #-48]	@, %sfp
	str	r3, [sl, #604]	@ <variable>.ctb_num_width, <variable>.column_bd
	ldr	r2, [r5, #244]	@ <variable>.ctb_num_height, <variable>.ctb_num_height
	str	r2, [sl, #860]	@ <variable>.ctb_num_height, <variable>.row_bd
.L2814:
	add	r0, r4, #2113536	@, pHevcCtx,
	ldr	r1, [fp, #-48]	@, %sfp
	add	r0, r0, #3568	@,,
	movw	r2, #7704	@,
	bl	memmove	@
.L2809:
	ldr	r1, [r5, #60]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	ip, [fp, #-60]	@, %sfp
	cmp	ip, r1	@, <variable>.seq_parameter_set_id
	beq	.L2819	@,
.L2865:
	movw	r7, #:lower16:1960188	@ tmp315,
	movt	r7, #:upper16:1960188	@ tmp315,
	ldr	r0, [r4, r7]	@ prephitmp.7713, <variable>.pstExtraData
.L2820:
	movw	ip, #:lower16:2125436	@ tmp320,
	movw	r1, #:lower16:1960184	@ tmp322,
	movt	ip, #:upper16:2125436	@ tmp320,
	movt	r1, #:upper16:1960184	@ tmp322,
	movw	r3, #7704	@ tmp324,
	movw	r6, #:lower16:1960180	@ tmp318,
	ldr	r7, [r4, ip]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	r6, #:upper16:1960180	@ tmp318,
	ldr	r2, [r4, r1]	@ <variable>.pPPS, <variable>.pPPS
	movw	r1, #36364	@ tmp328,
	ldr	ip, [r4, r6]	@ <variable>.pSPS, <variable>.pSPS
	mla	lr, r3, r7, r2	@ tmp325, tmp324, <variable>.CurrSlice.pic_parameter_set_id, <variable>.pPPS
	ldr	r7, [lr, #32]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	r3, r1, r7, ip	@ sps, tmp328, <variable>.seq_parameter_set_id, <variable>.pSPS
	ldr	r7, [fp, #-52]	@, %sfp
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.dpbsize_changed, <variable>.dpbsize_changed
	ldr	r6, [r3, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	ldr	r3, [r3, #76]	@ newh, <variable>.pic_height_in_luma_samples
	cmp	r2, #0	@ <variable>.dpbsize_changed,
	cmpeq	r7, r6	@,, <variable>.pic_width_in_luma_samples
	bne	.L2826	@,
	ldr	r8, [fp, #-56]	@, %sfp
	cmp	r8, r3	@, newh
	beq	.L2827	@,
.L2826:
	movw	r2, #:lower16:1960188	@ tmp346,
	movt	r2, #:upper16:1960188	@ tmp346,
	ldr	r0, [r4, r2]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r0, #920]	@ prephitmp.7719, <variable>.s32BitDepthChanged
.L2828:
	cmp	r3, #1	@ prephitmp.7719,
	beq	.L2871	@,
.L2830:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_GetBackPicFromVOQueue	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, #1	@,
	bl	HEVC_InitDPB	@
	cmn	r0, #2	@ ret,
	mov	r6, r0	@ ret,
	beq	.L2832	@,
	cmp	r0, #0	@ ret,
	beq	.L2831	@,
	mov	r2, r0	@, ret
	movw	r1, #:lower16:.LC542	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC542	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, #0	@,
	mvn	r6, #0	@ ret,
	bl	HEVC_ClearAll	@
	b	.L2832	@
.L2811:
	ldr	r0, [fp, #-48]	@, %sfp
	ldr	r9, [r5, #240]	@ <variable>.ctb_num_width, <variable>.ctb_num_width
	ldr	r7, [r0, #68]	@ <variable>.num_tile_columns, <variable>.num_tile_columns
	add	r6, r7, #149	@ tmp262, <variable>.num_tile_columns,
	sub	r7, r7, #1	@ temp.7784, <variable>.num_tile_columns,
	cmp	r7, #0	@ temp.7784,
	add	r3, r0, r6, asl #2	@, tmp266,, tmp262,
	str	r9, [r3, #4]	@ <variable>.ctb_num_width, <variable>.column_bd
	ble	.L2816	@,
	ldr	r9, [r0, #92]	@ D.44055, <variable>.column_width
	mov	r0, #1	@ i.7773,
	ldr	r8, [fp, #-48]	@, %sfp
	cmp	r0, r7	@ i.7773, temp.7784
	sub	lr, r7, #1	@ tmp568, temp.7784,
	add	r2, r8, #4	@ ivtmp.7765,,
	and	lr, lr, r0	@ tmp570, tmp568,
	str	r9, [r8, #604]	@ D.44055, <variable>.column_bd
	ldr	ip, [r3, #4]!	@ tmp280, <variable>.column_bd
	rsb	r1, r9, ip	@ tmp281, D.44055, tmp280
	str	r1, [r3, #0]	@ tmp281, <variable>.column_bd
	bge	.L2816	@,
	cmp	lr, #0	@ tmp570,
	beq	.L2817	@,
	ldr	r6, [r2, #92]	@ D.44055, <variable>.column_width
	mov	r0, #2	@ i.7773,
	cmp	r0, r7	@ i.7773, temp.7784
	str	r6, [r2, #604]	@ D.44055, <variable>.column_bd
	add	r2, r2, #4	@ ivtmp.7765, ivtmp.7765,
	ldr	ip, [r3, #0]	@ tmp645, <variable>.column_bd
	rsb	r9, r6, ip	@ tmp646, D.44055, tmp645
	str	r9, [r3, #0]	@ tmp646, <variable>.column_bd
	bge	.L2816	@,
.L2817:
	ldr	r1, [r2, #92]	@ D.44055, <variable>.column_width
	add	ip, r2, #4	@ tmp572, ivtmp.7765,
	add	r0, r0, #2	@ i.7773, i.7773,
	ldr	r9, [ip, #92]	@ D.44055, <variable>.column_width
	cmp	r0, r7	@ i.7773, temp.7784
	str	r1, [r2, #604]	@ D.44055, <variable>.column_bd
	add	r2, ip, #4	@ ivtmp.7765, tmp572,
	ldr	r6, [r3, #0]	@ tmp597, <variable>.column_bd
	rsb	lr, r1, r6	@ tmp598, D.44055, tmp597
	str	lr, [r3, #0]	@ tmp598, <variable>.column_bd
	str	r9, [ip, #604]	@ D.44055, <variable>.column_bd
	ldr	r1, [r3, #0]	@ tmp605, <variable>.column_bd
	rsb	r6, r9, r1	@ tmp606, D.44055, tmp605
	str	r6, [r3, #0]	@ tmp606, <variable>.column_bd
	blt	.L2817	@,
.L2816:
	ldr	r9, [fp, #-48]	@, %sfp
	ldr	r2, [r5, #244]	@ <variable>.ctb_num_height, <variable>.ctb_num_height
	ldr	r0, [r9, #72]	@ <variable>.num_tile_rows, <variable>.num_tile_rows
	add	r3, r0, #213	@ tmp282, <variable>.num_tile_rows,
	sub	r7, r0, #1	@ temp.7814, <variable>.num_tile_rows,
	cmp	r7, #0	@ temp.7814,
	add	r3, r9, r3, asl #2	@, tmp286,, tmp282,
	str	r2, [r3, #4]	@ <variable>.ctb_num_height, <variable>.row_bd
	ble	.L2814	@,
	ldr	r6, [r9, #348]	@ D.44061, <variable>.row_height
	mov	r0, #1	@ i,
	cmp	r0, r7	@ i, temp.7814
	sub	lr, r7, #1	@ tmp563, temp.7814,
	add	r2, r9, #4	@ ivtmp.7759,,
	and	lr, lr, r0	@ tmp565, tmp563,
	str	r6, [r9, #860]	@ D.44061, <variable>.row_bd
	ldr	ip, [r3, #4]!	@ tmp300, <variable>.row_bd
	rsb	r1, r6, ip	@ tmp301, D.44061, tmp300
	str	r1, [r3, #0]	@ tmp301, <variable>.row_bd
	bge	.L2814	@,
	cmp	lr, #0	@ tmp565,
	beq	.L2818	@,
	ldr	lr, [r2, #348]	@ D.44061, <variable>.row_height
	mov	r0, #2	@ i,
	cmp	r0, r7	@ i, temp.7814
	str	lr, [r2, #860]	@ D.44061, <variable>.row_bd
	add	r2, r2, #4	@ ivtmp.7759, ivtmp.7759,
	ldr	r1, [r3, #0]	@ tmp639, <variable>.row_bd
	rsb	r6, lr, r1	@ tmp640, D.44061, tmp639
	str	r6, [r3, #0]	@ tmp640, <variable>.row_bd
	bge	.L2814	@,
.L2818:
	add	r1, r2, #4	@ tmp567, ivtmp.7759,
	ldr	lr, [r2, #348]	@ D.44061, <variable>.row_height
	add	r0, r0, #2	@ i, i,
	ldr	ip, [r1, #348]	@ D.44061, <variable>.row_height
	cmp	r0, r7	@ i, temp.7814
	str	lr, [r2, #860]	@ D.44061, <variable>.row_bd
	add	r2, r1, #4	@ ivtmp.7759, tmp567,
	ldr	r6, [r3, #0]	@ tmp613, <variable>.row_bd
	rsb	lr, lr, r6	@ tmp614, D.44061, tmp613
	str	lr, [r3, #0]	@ tmp614, <variable>.row_bd
	str	ip, [r1, #860]	@ D.44061, <variable>.row_bd
	ldr	r1, [r3, #0]	@ tmp621, <variable>.row_bd
	rsb	r6, ip, r1	@ tmp622, D.44061, tmp621
	str	r6, [r3, #0]	@ tmp622, <variable>.row_bd
	blt	.L2818	@,
	b	.L2814	@
.L2867:
	ldr	lr, [r4, #160]	@ <variable>.AllowStartDec, <variable>.AllowStartDec
	cmp	lr, #0	@ <variable>.AllowStartDec,
	beq	.L2806	@,
	ldr	r3, [r5, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	ldr	r2, [fp, #-52]	@, %sfp
	cmp	r2, r3	@, <variable>.pic_width_in_luma_samples
	bne	.L2806	@,
	ldr	ip, [r5, #76]	@ <variable>.pic_height_in_luma_samples, <variable>.pic_height_in_luma_samples
	ldr	r1, [fp, #-56]	@, %sfp
	cmp	r1, ip	@, <variable>.pic_height_in_luma_samples
	bne	.L2806	@,
	ldr	r0, [r5, #148]	@ <variable>.log2_ctb_sizeY, <variable>.log2_ctb_sizeY
	cmp	r8, r0	@ D.43967, <variable>.log2_ctb_sizeY
	bne	.L2806	@,
	b	.L2807	@
.L2866:
	ldr	lr, [r4, #160]	@ <variable>.AllowStartDec, <variable>.AllowStartDec
	cmp	lr, #0	@ <variable>.AllowStartDec,
	ldrne	r3, [fp, #-60]	@ prephitmp.7828, %sfp
	bne	.L2805	@,
	b	.L2804	@
.L2827:
	ldr	lr, [r4, #160]	@ <variable>.AllowStartDec, <variable>.AllowStartDec
	cmp	lr, #0	@ <variable>.AllowStartDec,
	beq	.L2826	@,
	ldr	r3, [r0, #920]	@ prephitmp.7719, <variable>.s32BitDepthChanged
	cmp	r3, #0	@ prephitmp.7719,
	bne	.L2828	@,
	ldr	r6, [r0, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r6, #1	@ <variable>.s32WaitFsFlag,
	beq	.L2830	@,
.L2831:
	movw	lr, #:lower16:1960188	@ tmp353,
	movt	lr, #:upper16:1960188	@ tmp353,
	mov	r1, #0	@ tmp350,
	strb	r1, [r5, #2]	@ tmp350, <variable>.dpbsize_changed
	ldr	ip, [r4, lr]	@ <variable>.pstExtraData, <variable>.pstExtraData
	mov	r0, r4	@, pHevcCtx
	str	r1, [ip, #920]	@ tmp350, <variable>.s32BitDepthChanged
	bl	HEVC_AllocFrameStore	@
	subs	r6, r0, #0	@ ret,
	beq	.L2833	@,
.L2872:
	movw	r1, #:lower16:.LC543	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC543	@,
	bl	dprint_vfmw	@
	b	.L2832	@
.L2868:
	ldrb	r3, [r7, #1]	@ zero_extendqisi2	@ <variable>.is_refresh, <variable>.is_refresh
	cmp	r3, #0	@ <variable>.is_refresh,
	bne	.L2808	@,
	ldr	ip, [r4, #160]	@ <variable>.AllowStartDec, <variable>.AllowStartDec
	cmp	ip, #0	@ <variable>.AllowStartDec,
	beq	.L2808	@,
	ldr	r1, [r5, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	ldr	r9, [fp, #-52]	@, %sfp
	cmp	r9, r1	@, <variable>.pic_width_in_luma_samples
	bne	.L2808	@,
	ldr	r0, [r5, #76]	@ <variable>.pic_height_in_luma_samples, <variable>.pic_height_in_luma_samples
	ldr	sl, [fp, #-56]	@, %sfp
	cmp	sl, r0	@, <variable>.pic_height_in_luma_samples
	bne	.L2808	@,
	ldr	lr, [r5, #148]	@ <variable>.log2_ctb_sizeY, <variable>.log2_ctb_sizeY
	cmp	r8, lr	@ D.43967, <variable>.log2_ctb_sizeY
	bne	.L2808	@,
	b	.L2809	@
.L2819:
	ldrb	lr, [r5, #2]	@ zero_extendqisi2	@ <variable>.dpbsize_changed, <variable>.dpbsize_changed
	cmp	lr, #0	@ <variable>.dpbsize_changed,
	bne	.L2865	@,
	ldr	r6, [r4, #160]	@ <variable>.AllowStartDec, <variable>.AllowStartDec
	cmp	r6, #0	@ <variable>.AllowStartDec,
	beq	.L2865	@,
	ldr	r2, [r5, #72]	@ <variable>.pic_width_in_luma_samples, <variable>.pic_width_in_luma_samples
	ldr	r3, [fp, #-52]	@, %sfp
	cmp	r3, r2	@, <variable>.pic_width_in_luma_samples
	bne	.L2865	@,
	ldr	r1, [r5, #76]	@ <variable>.pic_height_in_luma_samples, <variable>.pic_height_in_luma_samples
	ldr	r0, [fp, #-56]	@, %sfp
	cmp	r0, r1	@, <variable>.pic_height_in_luma_samples
	bne	.L2865	@,
	movw	lr, #:lower16:1960188	@ tmp316,
	movt	lr, #:upper16:1960188	@ tmp316,
	ldr	r0, [r4, lr]	@ prephitmp.7713, <variable>.pstExtraData
	ldr	ip, [r0, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	ip, #1	@ <variable>.s32WaitFsFlag,
	beq	.L2820	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_AllocFrameStore	@
	subs	r6, r0, #0	@ ret,
	bne	.L2872	@,
.L2833:
	movw	r9, #:lower16:2125432	@ tmp360,
	movw	r0, #:lower16:2125408	@ tmp363,
	movt	r9, #:upper16:2125432	@ tmp360,
	movt	r0, #:upper16:2125408	@ tmp363,
	movw	r5, #:lower16:2124852	@ tmp366,
	movt	r5, #:upper16:2124852	@ tmp366,
	ldr	r8, [r4, r9]	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movw	r1, #:lower16:2124809	@ tmp356,
	ldr	lr, [r4, r0]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	movt	r1, #:upper16:2124809	@ tmp356,
	ldr	r7, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	sl, #:lower16:2124812	@ tmp359,
	movw	r3, #:lower16:2124816	@ tmp362,
	movt	sl, #:upper16:2124812	@ tmp359,
	movt	r3, #:upper16:2124816	@ tmp362,
	movw	r2, #:lower16:2044616	@ tmp378,
	movw	r9, #:lower16:2044620	@ tmp379,
	movt	r2, #:upper16:2044616	@ tmp378,
	movt	r9, #:upper16:2044620	@ tmp379,
	str	r8, [r4, sl]	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrPic.nal_unit_type
	str	lr, [r4, r3]	@ <variable>.CurrSlice.poc, <variable>.CurrPic.thispoc
	mov	ip, #1	@ tmp357,
	strb	ip, [r4, r1]	@ tmp357, <variable>.CurrPic.state
	movw	r1, #:lower16:2044448	@ tmp372,
	str	lr, [r7, #12]	@ <variable>.CurrSlice.poc, <variable>.poc
	movt	r1, #:upper16:2044448	@ tmp372,
	ldr	r0, [r4, r2]	@ <variable>.CurrSPS.ctb_num_width, <variable>.CurrSPS.ctb_num_width
	movw	r3, #:lower16:1960188	@ tmp387,
	ldr	sl, [r4, r9]	@ <variable>.CurrSPS.ctb_num_height, <variable>.CurrSPS.ctb_num_height
	movw	r2, #:lower16:2044452	@ tmp375,
	ldr	r9, [r4, r1]	@ <variable>.CurrSPS.pic_width_in_luma_samples, <variable>.CurrSPS.pic_width_in_luma_samples
	movt	r2, #:upper16:2044452	@ tmp375,
	movt	r3, #:upper16:1960188	@ tmp387,
	movw	r8, #:lower16:2124824	@ tmp371,
	mul	sl, sl, r0	@ tmp382, <variable>.CurrSPS.ctb_num_height, <variable>.CurrSPS.ctb_num_width
	movt	r8, #:upper16:2124824	@ tmp371,
	ldr	r3, [r4, r3]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r7, #:lower16:2124840	@ tmp369,
	str	r9, [r4, r8]	@ <variable>.CurrSPS.pic_width_in_luma_samples, <variable>.CurrPic.pic_width
	movt	r7, #:upper16:2124840	@ tmp369,
	ldr	r9, [r4, r2]	@, <variable>.CurrSPS.pic_height_in_luma_samples
	movw	lr, #:lower16:2124828	@ tmp374,
	movw	ip, #:lower16:2124832	@ tmp377,
	movt	lr, #:upper16:2124828	@ tmp374,
	movt	ip, #:upper16:2124832	@ tmp377,
	movw	r0, #:lower16:2124836	@ tmp383,
	movt	r0, #:upper16:2124836	@ tmp383,
	str	r9, [r4, lr]	@, <variable>.CurrPic.pic_height
	str	sl, [r4, ip]	@ tmp382, <variable>.CurrPic.pic_ctbs
	mvn	r8, #0	@ tmp370,
	str	r6, [r4, r0]	@ ret, <variable>.CurrPic.start_count
	movw	lr, #:lower16:2124864	@ tmp385,
	str	r8, [r4, r7]	@ tmp370, <variable>.CurrPic.stream_base_addr
	movt	lr, #:upper16:2124864	@ tmp385,
	ldrd	r8, [r3, #56]	@, <variable>.pstExtraData,
	movw	sl, #:lower16:2124872	@ tmp389,
	movt	sl, #:upper16:2124872	@ tmp389,
	movw	r7, #:lower16:2124880	@ tmp393,
	movt	r7, #:upper16:2124880	@ tmp393,
	movw	r0, #:lower16:2124924	@ tmp397,
	strd	r8, [r4, lr]	@, pHevcCtx, tmp385
	movw	r9, #:lower16:2124936	@,
	movt	r9, #:upper16:2124936	@,
	str	r9, [fp, #-48]	@, %sfp
	ldrd	r8, [r3, #72]	@, <variable>.pstExtraData,
	movt	r0, #:upper16:2124924	@ tmp397,
	movw	ip, #:lower16:2124928	@ tmp401,
	movt	ip, #:upper16:2124928	@ tmp401,
	movw	lr, #:lower16:2124932	@ tmp405,
	movt	lr, #:upper16:2124932	@ tmp405,
	strd	r8, [r4, sl]	@, pHevcCtx, tmp389
	movw	sl, #:lower16:2125020	@,
	movw	r9, #:lower16:2051860	@,
	movt	sl, #:upper16:2125020	@,
	movt	r9, #:upper16:2051860	@,
	str	sl, [fp, #-64]	@, %sfp
	str	r9, [fp, #-60]	@, %sfp
	movw	r8, #:lower16:2044440	@,
	movt	r8, #:upper16:2044440	@,
	str	r8, [fp, #-52]	@, %sfp
	ldrd	r8, [r3, #88]	@, <variable>.pstExtraData,
	movw	sl, #:lower16:2051844	@,
	strd	r8, [r4, r7]	@, pHevcCtx, tmp393
	movw	r7, #:lower16:2051844	@,
	str	sl, [fp, #-56]	@, %sfp
	movt	r7, #:upper16:2051844	@,
	ldr	r9, [r3, #104]	@ <variable>.DispEnableFlag, <variable>.DispEnableFlag
	movw	r8, #:lower16:2125004	@,
	str	r7, [fp, #-56]	@, %sfp
	movt	r8, #:upper16:2125004	@,
	movw	r7, #:lower16:2125024	@ tmp419,
	movw	sl, #:lower16:2125016	@ tmp422,
	str	r9, [r4, r0]	@ <variable>.DispEnableFlag, <variable>.CurrPic.fs_image.DispEnableFlag
	movt	r7, #:upper16:2125024	@ tmp419,
	ldr	r9, [r3, #108]	@ <variable>.DispFrameDistance, <variable>.DispFrameDistance
	movt	sl, #:upper16:2125016	@ tmp422,
	str	r8, [fp, #-68]	@, %sfp
	movw	r0, #:lower16:2124856	@,
	movt	r0, #:upper16:2124856	@,
	str	r9, [r4, ip]	@ <variable>.DispFrameDistance, <variable>.CurrPic.fs_image.DispFrameDistance
	add	r0, r4, r0	@, pHevcCtx,
	ldr	r9, [r3, #112]	@ <variable>.DistanceBeforeFirstFrame, <variable>.DistanceBeforeFirstFrame
	str	r9, [r4, lr]	@ <variable>.DistanceBeforeFirstFrame, <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame
	mvn	r9, #0	@,
	ldr	ip, [r3, #128]	@ <variable>.GopNum, <variable>.GopNum
	ldr	r8, [fp, #-48]	@, %sfp
	str	ip, [r4, r8]	@ <variable>.GopNum, <variable>.CurrPic.fs_image.GopNum
	mvn	r8, #0	@,
	strd	r8, [r3, #56]	@, <variable>.pstExtraData,
	ldr	r9, [fp, #-64]	@, %sfp
	ldr	lr, [r4, r1]	@ <variable>.CurrSPS.pic_width_in_luma_samples, <variable>.CurrSPS.pic_width_in_luma_samples
	str	lr, [r4, r9]	@ <variable>.CurrSPS.pic_width_in_luma_samples, <variable>.CurrPic.fs_image.image_width
	sub	r3, fp, #60
	ldmia	r3, {r3, r8, ip}	@ phole ldm
	ldr	r9, [r4, r3]	@ <variable>.CurrSPS.vui_parameters.video_format, <variable>.CurrSPS.vui_parameters.video_format
	ldr	r1, [r4, ip]	@ <variable>.CurrSPS.chroma_format_idc, <variable>.CurrSPS.chroma_format_idc
	ldr	ip, [r4, r2]	@ <variable>.CurrSPS.pic_height_in_luma_samples, <variable>.CurrSPS.pic_height_in_luma_samples
	subs	r1, r1, #1	@ tmp427, <variable>.CurrSPS.chroma_format_idc,
	movne	r1, #1	@ tmp427
	mov	lr, r9, asl #5	@ tmp430, <variable>.CurrSPS.vui_parameters.video_format,
	ldr	r9, [r4, r8]	@ <variable>.CurrSPS.vui_parameters.aspect_ratio, <variable>.CurrSPS.vui_parameters.aspect_ratio
	and	r3, lr, #255	@ tmp432, tmp430,
	orr	lr, r3, r1, asl #2	@, tmp433, tmp432, tmp427,
	str	ip, [r4, r7]	@ <variable>.CurrSPS.pic_height_in_luma_samples, <variable>.CurrPic.fs_image.image_height
	str	lr, [r4, sl]	@ tmp433, <variable>.CurrPic.fs_image.format
	and	r1, r9, #7	@, <variable>.CurrSPS.vui_parameters.aspect_ratio,
	bl	SetAspectRatio	@
	ldr	r1, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r8, [r4, sl]	@ <variable>.CurrPic.fs_image.format, <variable>.CurrPic.fs_image.format
	movw	r2, #:lower16:2124920	@ tmp451,
	ldr	r9, [fp, #-68]	@, %sfp
	movt	r2, #:upper16:2124920	@ tmp451,
	movw	r3, #:lower16:2124916	@ tmp455,
	movt	r3, #:upper16:2124916	@ tmp455,
	str	r8, [r1, #232]	@ <variable>.CurrPic.fs_image.format, <variable>.fs_image.format
	ldr	r0, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r6, [r4, r9]	@ ret, <variable>.CurrPic.fs_image.is_fld_save
	ldr	ip, [r4, r2]	@ <variable>.CurrPic.fs_image.u32AspectHeight, <variable>.CurrPic.fs_image.u32AspectHeight
	str	r6, [r0, #220]	@ ret, <variable>.fs_image.is_fld_save
	ldr	r1, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	sl, [fp, #-64]	@, %sfp
	ldr	r8, [r4, r3]	@ <variable>.CurrPic.fs_image.u32AspectWidth, <variable>.CurrPic.fs_image.u32AspectWidth
	str	ip, [r1, #136]	@ <variable>.CurrPic.fs_image.u32AspectHeight, <variable>.fs_image.u32AspectHeight
	ldr	r3, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r2, [r4, sl]	@ <variable>.CurrPic.fs_image.image_width, <variable>.CurrPic.fs_image.image_width
	ldr	sl, [r4, r7]	@ <variable>.CurrPic.fs_image.image_height, <variable>.CurrPic.fs_image.image_height
	str	r8, [r3, #132]	@ <variable>.CurrPic.fs_image.u32AspectWidth, <variable>.fs_image.u32AspectWidth
	ldr	r0, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r2, [r0, #236]	@ <variable>.CurrPic.fs_image.image_width, <variable>.fs_image.image_width
	ldr	r7, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	sl, [r7, #240]	@ <variable>.CurrPic.fs_image.image_height, <variable>.fs_image.image_height
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r8, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetDispPhyFs	@
	cmp	r0, #0	@ pstDecFs
	beq	.L2834	@,
	ldr	r5, [r4, r9]	@ <variable>.CurrPic.fs_image.is_fld_save, <variable>.CurrPic.fs_image.is_fld_save
	mov	r1, r6	@, ret
	ldr	r2, [r0, #4]	@, <variable>.PhyFsID
	subs	r3, r5, #0	@, <variable>.CurrPic.fs_image.is_fld_save,
	movne	r3, #1	@
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_SetStoreType	@
.L2834:
	movw	r8, #:lower16:2044460	@ tmp475,
	movt	r8, #:upper16:2044460	@ tmp475,
	movw	r3, #:lower16:2124852	@ tmp503,
	movt	r3, #:upper16:2124852	@ tmp503,
	ldr	r7, [r4, r8]	@, <variable>.CurrSPS.conf_win_left_offset
	movw	ip, #:lower16:2044448	@ tmp483,
	movw	r5, #:lower16:2044464	@ tmp477,
	movt	ip, #:upper16:2044448	@ tmp483,
	movt	r5, #:upper16:2044464	@ tmp477,
	movw	sl, #:lower16:2044468	@ tmp479,
	str	r7, [fp, #-56]	@, %sfp
	movt	sl, #:upper16:2044468	@ tmp479,
	ldr	r0, [r4, r3]	@, <variable>.CurrPic.frame_store
	movw	r7, #:lower16:2044472	@ tmp481,
	ldr	r2, [r4, ip]	@, <variable>.CurrSPS.pic_width_in_luma_samples
	movt	r7, #:upper16:2044472	@ tmp481,
	ldr	r9, [fp, #-56]	@, %sfp
	movw	r8, #:lower16:2125028	@ tmp486,
	str	r0, [fp, #-80]	@, %sfp
	movt	r8, #:upper16:2125028	@ tmp486,
	ldr	r1, [r4, r5]	@, <variable>.CurrSPS.conf_win_right_offset
	rsb	r2, r9, r2	@,,
	str	r2, [fp, #-48]	@, %sfp
	movw	ip, #:lower16:2044440	@ tmp493,
	movt	ip, #:upper16:2044440	@ tmp493,
	movw	r5, #:lower16:2044452	@ tmp488,
	str	r1, [fp, #-60]	@, %sfp
	movt	r5, #:upper16:2044452	@ tmp488,
	ldr	r9, [r4, sl]	@, <variable>.CurrSPS.conf_win_top_offset
	movw	r0, #:lower16:2044476	@ tmp496,
	ldr	sl, [fp, #-60]	@, %sfp
	movt	r0, #:upper16:2044476	@ tmp496,
	movw	r1, #:lower16:2044484	@ tmp499,
	movt	r1, #:upper16:2044484	@ tmp499,
	str	r9, [fp, #-52]	@, %sfp
	rsb	r9, sl, r2	@ D.44140,,
	ldr	sl, [r4, r7]	@, <variable>.CurrSPS.conf_win_bottom_offset
	str	r9, [r4, r8]	@ D.44140, <variable>.CurrPic.fs_image.disp_width
	str	sl, [fp, #-48]	@, %sfp
	movw	sl, #:lower16:2125032	@ tmp487,
	ldr	ip, [r4, ip]	@, <variable>.CurrSPS.chroma_format_idc
	movt	sl, #:upper16:2125032	@ tmp487,
	ldr	r2, [r4, r5]	@ <variable>.CurrSPS.pic_height_in_luma_samples, <variable>.CurrSPS.pic_height_in_luma_samples
	ldr	r7, [fp, #-48]	@, %sfp
	str	ip, [fp, #-68]	@, %sfp
	movw	ip, #:lower16:2125036	@ tmp501,
	ldr	r8, [r4, r0]	@, <variable>.CurrSPS.bit_depth_luma
	movt	ip, #:upper16:2125036	@ tmp501,
	ldr	r0, [fp, #-52]	@, %sfp
	str	r8, [fp, #-64]	@, %sfp
	rsb	r8, r0, r2	@ tmp489,, <variable>.CurrSPS.pic_height_in_luma_samples
	ldr	r5, [r4, r1]	@, <variable>.CurrSPS.bit_depth_chroma
	rsb	r0, r7, r8	@ tmp491,, tmp489
	ldr	r1, [fp, #-80]	@, %sfp
	movw	r8, #:lower16:2125040	@ tmp505,
	movt	r8, #:upper16:2125040	@ tmp505,
	str	r5, [fp, #-72]	@, %sfp
	str	r9, [r1, #244]	@ D.44140, <variable>.fs_image.disp_width
	movw	r1, #:lower16:2125088	@ tmp495,
	str	r0, [r4, sl]	@ tmp491, <variable>.CurrPic.fs_image.disp_height
	movt	r1, #:upper16:2125088	@ tmp495,
	ldr	r9, [fp, #-80]	@, %sfp
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r7, [r9, #252]	@ <variable>.fs_image.disp_center_x, <variable>.fs_image.disp_center_x
	str	r0, [r2, #248]	@ tmp491, <variable>.fs_image.disp_height
	movw	r0, #:lower16:2125196	@ tmp476,
	ldr	r5, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movt	r0, #:upper16:2125196	@ tmp476,
	ldr	r2, [r9, #256]	@ <variable>.fs_image.disp_center_y, <variable>.fs_image.disp_center_y
	str	r7, [r4, ip]	@ <variable>.fs_image.disp_center_x, <variable>.CurrPic.fs_image.disp_center_x
	movw	ip, #:lower16:2125200	@ tmp478,
	str	r7, [r5, #252]	@ <variable>.fs_image.disp_center_x, <variable>.fs_image.disp_center_x
	movt	ip, #:upper16:2125200	@ tmp478,
	ldr	sl, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r7, #:lower16:2125204	@ tmp480,
	str	r2, [r4, r8]	@ <variable>.fs_image.disp_center_y, <variable>.CurrPic.fs_image.disp_center_y
	movt	r7, #:upper16:2125204	@ tmp480,
	ldr	r5, [fp, #-64]	@, %sfp
	movw	r8, #:lower16:2125208	@ tmp482,
	str	r2, [sl, #256]	@ <variable>.fs_image.disp_center_y, <variable>.fs_image.disp_center_y
	movw	sl, #:lower16:2125084	@ tmp492,
	ldr	r9, [r4, r3]	@, <variable>.CurrPic.frame_store
	movt	sl, #:upper16:2125084	@ tmp492,
	str	r5, [r4, r1]	@, <variable>.CurrPic.fs_image.bit_depth_luma
	movt	r8, #:upper16:2125208	@ tmp482,
	movw	r1, #:lower16:2125092	@ tmp498,
	movw	r2, #:lower16:2124820	@ tmp531,
	str	r5, [r9, #304]	@, <variable>.fs_image.bit_depth_luma
	movt	r1, #:upper16:2125092	@ tmp498,
	ldr	r9, [fp, #-68]	@, %sfp
	movt	r2, #:upper16:2124820	@ tmp531,
	ldr	r3, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r9, [r4, sl]	@, <variable>.CurrPic.fs_image.chroma_idc
	ldr	r9, [fp, #-56]	@, %sfp
	str	r9, [r4, r0]	@, <variable>.CurrPic.fs_image.left_offset
	ldr	sl, [fp, #-60]	@, %sfp
	str	sl, [r4, ip]	@, <variable>.CurrPic.fs_image.right_offset
	mov	ip, #0	@ tmp532,
	ldr	r5, [fp, #-52]	@, %sfp
	str	r5, [r4, r7]	@, <variable>.CurrPic.fs_image.top_offset
	ldr	r0, [fp, #-48]	@, %sfp
	str	r0, [r4, r8]	@, <variable>.CurrPic.fs_image.bottom_offset
	ldr	r5, [fp, #-72]	@, %sfp
	str	r5, [r4, r1]	@, <variable>.CurrPic.fs_image.bit_depth_chroma
	str	r5, [r3, #308]	@, <variable>.fs_image.bit_depth_chroma
	str	ip, [r4, r2]	@ tmp532, <variable>.CurrPic.pic_type
	b	.L2832	@
.L2857:
	mov	r0, sl	@, prephitmp.7723
	mov	r1, r6	@, temp.7789
	bl	__aeabi_uidiv	@
	ldr	r3, [fp, #-48]	@, %sfp
	mov	r8, #1	@ i.7774,
	add	r9, r3, #4	@ ivtmp.7743,,
	str	r0, [r3, #860]	@, <variable>.row_bd
	ldr	sl, [r5, #244]	@ prephitmp.7723, <variable>.ctb_num_height
	str	r4, [fp, #-72]	@ pHevcCtx, %sfp
	b	.L2815	@
.L2856:
	mov	r0, sl	@, prephitmp.7829
	mov	r1, r6	@, D.44035
	bl	__aeabi_uidiv	@
	ldr	sl, [fp, #-48]	@, %sfp
	mov	r8, #1	@ i.7772,
	add	r9, sl, #4	@ ivtmp.7753,,
	str	r0, [sl, #604]	@, <variable>.column_bd
	ldr	sl, [r5, #240]	@ prephitmp.7829, <variable>.ctb_num_width
	str	r4, [fp, #-72]	@ pHevcCtx, %sfp
	b	.L2813	@
.L2871:
	ldr	r9, [fp, #-64]	@, %sfp
	movw	r1, #:lower16:.LC541	@,
	ldr	r2, [fp, #-68]	@, %sfp
	movt	r1, #:upper16:.LC541	@,
	mov	r0, #31	@,
	str	r9, [sp, #0]	@,
	ldr	r3, [r5, #108]	@ <variable>.bit_depth_chroma, <variable>.bit_depth_chroma
	str	r3, [sp, #4]	@ <variable>.bit_depth_chroma,
	ldr	r3, [r5, #100]	@, <variable>.bit_depth_luma
	bl	dprint_vfmw	@
	b	.L2830	@
	.fnend
	.size	HEVC_InitPic, .-HEVC_InitPic
	.align	2
	.global	HEVC_WritePicMsg
	.type	HEVC_WritePicMsg, %function
HEVC_WritePicMsg:
	.fnstart
.LFB1588:
	@ args = 0, pretend = 0, frame = 200
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #204
	sub	sp, sp, #204	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:2125052	@ tmp146,
	movt	r5, #:upper16:2125052	@ tmp146,
	movw	r4, #:lower16:2124844	@,
	movt	r4, #:upper16:2124844	@,
	str	r4, [fp, #-136]	@, %sfp
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r2, [r0, r5]	@, <variable>.CurrPic.fs_image.image_id
	ldr	r0, [fp, #-136]	@, %sfp
	movw	r1, #:lower16:.LC544	@,
	movw	r9, #:lower16:2125048	@ tmp152,
	movt	r1, #:upper16:.LC544	@,
	movt	r9, #:upper16:2125048	@ tmp152,
	movw	sl, #:lower16:2125000	@ tmp167,
	ldr	r3, [r4, r0]	@, <variable>.CurrPic.pmv_address_idc
	mov	r0, #2	@,
	bl	dprint_vfmw	@
	mov	r0, #4	@,
	movw	r1, #:lower16:.LC545	@,
	movt	r1, #:upper16:.LC545	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:2124964	@,
	movt	r3, #:upper16:2124964	@,
	str	r3, [fp, #-92]	@, %sfp
	movw	r3, #:lower16:2124960	@,
	movt	r3, #:upper16:2124960	@,
	str	r3, [fp, #-52]	@, %sfp
	movw	r3, #:lower16:2124988	@,
	movt	r3, #:upper16:2124988	@,
	str	r3, [fp, #-64]	@, %sfp
	movw	r3, #:lower16:2124996	@,
	movt	r3, #:upper16:2124996	@,
	str	r3, [fp, #-96]	@, %sfp
	movw	r3, #:lower16:2044620	@,
	movt	r3, #:upper16:2044620	@,
	str	r3, [fp, #-56]	@, %sfp
	ldr	r9, [r4, r9]	@, <variable>.CurrPic.fs_image.image_stride
	movt	sl, #:upper16:2125000	@ tmp167,
	movw	r8, #:lower16:2358440	@ tmp183,
	movt	r8, #:upper16:2358440	@ tmp183,
	movw	r7, #:lower16:2044389	@ tmp186,
	movt	r7, #:upper16:2044389	@ tmp186,
	str	r9, [fp, #-132]	@, %sfp
	movw	r6, #:lower16:2044382	@ tmp190,
	ldr	r3, [r4, sl]	@, <variable>.CurrPic.fs_image.image_stride_2bit
	movw	sl, #:lower16:2134380	@,
	movt	sl, #:upper16:2134380	@,
	movt	r6, #:upper16:2044382	@ tmp190,
	movw	lr, #:lower16:2044386	@ tmp194,
	movt	lr, #:upper16:2044386	@ tmp194,
	str	r3, [fp, #-152]	@, %sfp
	movw	ip, #:lower16:2044385	@ tmp198,
	ldr	r9, [r4, r8]	@, <variable>.pDecSlicePara
	movt	ip, #:upper16:2044385	@ tmp198,
	str	sl, [fp, #-48]	@, %sfp
	movw	r0, #:lower16:2044384	@ tmp202,
	movt	r0, #:upper16:2044384	@ tmp202,
	movw	r3, #:lower16:2134372	@,
	str	r9, [fp, #-168]	@, %sfp
	movt	r3, #:upper16:2134372	@,
	ldrb	r8, [r4, r7]	@ zero_extendqisi2	@, <variable>.CurrSPS.sps_strong_intra_smoothing_enable_flag
	movw	r7, #:lower16:2134384	@,
	movt	r7, #:upper16:2134384	@,
	movw	r1, #:lower16:2044440	@ tmp206,
	movt	r1, #:upper16:2044440	@ tmp206,
	movw	r2, #:lower16:2044492	@ tmp209,
	str	r8, [fp, #-172]	@, %sfp
	movt	r2, #:upper16:2044492	@ tmp209,
	ldrb	r6, [r4, r6]	@ zero_extendqisi2	@, <variable>.CurrSPS.scaling_list_enabled_flag
	movw	r8, #:lower16:2134376	@,
	str	r7, [fp, #-88]	@, %sfp
	movt	r8, #:upper16:2134376	@,
	str	r6, [fp, #-176]	@, %sfp
	movw	r6, #:lower16:2134388	@,
	ldrb	lr, [r4, lr]	@ zero_extendqisi2	@, <variable>.CurrSPS.pcm_loop_filter_disable_flag
	movt	r6, #:upper16:2134388	@,
	str	lr, [fp, #-180]	@, %sfp
	ldrb	ip, [r4, ip]	@ zero_extendqisi2	@, <variable>.CurrSPS.sample_adaptive_offset_enabled_flag
	str	r3, [fp, #-156]	@, %sfp
	ldr	lr, [fp, #-136]	@, %sfp
	str	ip, [fp, #-184]	@, %sfp
	ldrb	r9, [r4, r0]	@ zero_extendqisi2	@, <variable>.CurrSPS.amp_enabled_flag
	str	r9, [fp, #-188]	@, %sfp
	ldr	sl, [r4, r1]	@, <variable>.CurrSPS.chroma_format_idc
	str	r8, [fp, #-160]	@, %sfp
	str	sl, [fp, #-192]	@, %sfp
	ldr	r7, [r4, r2]	@, <variable>.CurrSPS.pcm_enabled_flag
	movw	r2, #:lower16:2134392	@,
	movt	r2, #:upper16:2134392	@,
	str	r7, [fp, #-196]	@, %sfp
	movw	r7, #:lower16:2134396	@,
	ldr	r5, [r4, r5]	@, <variable>.CurrPic.fs_image.image_id
	movt	r7, #:upper16:2134396	@,
	str	r6, [fp, #-80]	@, %sfp
	str	r5, [fp, #-208]	@, %sfp
	ldr	ip, [r4, lr]	@, <variable>.CurrPic.pmv_address_idc
	str	ip, [fp, #-212]	@, %sfp
	ldr	r1, [fp, #-52]	@, %sfp
	ldr	r0, [fp, #-64]	@, %sfp
	ldr	sl, [fp, #-92]	@, %sfp
	ldr	r3, [r4, r1]	@, <variable>.CurrPic.fs_image.luma_phy_addr
	movw	r1, #:lower16:2133108	@,
	str	r2, [fp, #-60]	@, %sfp
	movt	r1, #:upper16:2133108	@,
	ldr	r6, [fp, #-96]	@, %sfp
	movw	r2, #:lower16:2117114	@,
	str	r3, [fp, #-84]	@, %sfp
	movw	r3, #:lower16:2117115	@,
	ldr	r9, [r4, r0]	@, <variable>.CurrPic.fs_image.luma_2bit_phy_addr
	movt	r3, #:upper16:2117115	@,
	ldr	lr, [fp, #-56]	@, %sfp
	movw	r0, #:lower16:2044584	@,
	movt	r0, #:upper16:2044584	@,
	movt	r2, #:upper16:2117114	@,
	str	r9, [fp, #-100]	@, %sfp
	movw	r9, #:lower16:2139520	@ tmp182,
	ldr	r8, [r4, sl]	@, <variable>.CurrPic.fs_image.chrom_phy_addr
	movt	r9, #:upper16:2139520	@ tmp182,
	str	r7, [fp, #-52]	@, %sfp
	movw	sl, #:lower16:2133092	@ tmp185,
	movt	sl, #:upper16:2133092	@ tmp185,
	movw	r7, #:lower16:2133094	@ tmp193,
	str	r8, [fp, #-140]	@, %sfp
	movw	r8, #:lower16:2133093	@ tmp189,
	ldr	r5, [r4, r6]	@, <variable>.CurrPic.fs_image.chrom_2bit_phy_addr
	movt	r8, #:upper16:2133093	@ tmp189,
	movt	r7, #:upper16:2133094	@ tmp193,
	movw	r6, #:lower16:2133095	@ tmp197,
	movt	r6, #:upper16:2133095	@ tmp197,
	str	r5, [fp, #-164]	@, %sfp
	movw	r5, #:lower16:2133096	@ tmp201,
	ldr	ip, [r4, lr]	@, <variable>.CurrSPS.ctb_num_height
	movt	r5, #:upper16:2133096	@ tmp201,
	str	r3, [fp, #-92]	@, %sfp
	movw	r3, #:lower16:2044564	@,
	str	r0, [fp, #-148]	@, %sfp
	movt	r3, #:upper16:2044564	@,
	movw	r0, #:lower16:2044572	@,
	str	r3, [fp, #-72]	@, %sfp
	movt	r0, #:upper16:2044572	@,
	movw	r3, #:lower16:2044548	@,
	str	r0, [fp, #-76]	@, %sfp
	movt	r3, #:upper16:2044548	@,
	movw	r0, #:lower16:2044556	@,
	str	r3, [fp, #-104]	@, %sfp
	movt	r0, #:upper16:2044556	@,
	movw	r3, #:lower16:2044592	@,
	str	r0, [fp, #-108]	@, %sfp
	movt	r3, #:upper16:2044592	@,
	movw	r0, #:lower16:2044516	@,
	str	r3, [fp, #-112]	@, %sfp
	movt	r0, #:upper16:2044516	@,
	movw	r3, #:lower16:2044524	@,
	str	r0, [fp, #-116]	@, %sfp
	movt	r3, #:upper16:2044524	@,
	movw	r0, #:lower16:2044488	@,
	str	r3, [fp, #-96]	@, %sfp
	movt	r0, #:upper16:2044488	@,
	movw	r3, #:lower16:2044480	@,
	str	r0, [fp, #-120]	@, %sfp
	movt	r3, #:upper16:2044480	@,
	movw	r0, #:lower16:2044500	@,
	str	r3, [fp, #-124]	@, %sfp
	movt	r0, #:upper16:2044500	@,
	movw	r3, #:lower16:2044616	@,
	str	r0, [fp, #-128]	@, %sfp
	movt	r3, #:upper16:2044616	@,
	movw	r0, #:lower16:2117188	@,
	str	r3, [fp, #-56]	@, %sfp
	movt	r0, #:upper16:2117188	@,
	ldr	r3, [fp, #-48]	@, %sfp
	str	r0, [fp, #-68]	@, %sfp
	movw	lr, #:lower16:2133100	@ tmp205,
	ldr	r0, [fp, #-132]	@, %sfp
	movt	lr, #:upper16:2133100	@ tmp205,
	str	ip, [fp, #-200]	@, %sfp
	movw	ip, #:lower16:2133104	@ tmp208,
	str	r1, [fp, #-144]	@, %sfp
	movt	ip, #:upper16:2133104	@ tmp208,
	str	r2, [fp, #-64]	@, %sfp
	movw	r1, #:lower16:2124816	@ tmp221,
	str	r0, [r4, r3]	@, <variable>.DecPicPara.imgstride
	movt	r1, #:upper16:2124816	@ tmp221,
	ldr	r0, [fp, #-100]	@, %sfp
	movw	r2, #:lower16:2044576	@ tmp236,
	ldr	r3, [fp, #-164]	@, %sfp
	movt	r2, #:upper16:2044576	@ tmp236,
	rsb	r3, r0, r3	@,,
	ldr	r0, [fp, #-152]	@, %sfp
	str	r3, [fp, #-220]	@, %sfp
	ldr	r3, [fp, #-80]	@, %sfp
	str	r0, [r4, r3]	@, <variable>.DecPicPara.imgstride_2bit
	ldr	r0, [fp, #-84]	@, %sfp
	ldr	r3, [fp, #-140]	@, %sfp
	rsb	r3, r0, r3	@,,
	ldr	r0, [fp, #-220]	@, %sfp
	str	r3, [fp, #-204]	@, %sfp
	ldr	r3, [fp, #-52]	@, %sfp
	str	r0, [r4, r3]	@, <variable>.DecPicPara.UVOffset_2bit
	ldr	r0, [fp, #-84]	@, %sfp
	ldr	r3, [fp, #-100]	@, %sfp
	rsb	r3, r0, r3	@,,
	ldr	r0, [fp, #-204]	@, %sfp
	str	r3, [fp, #-216]	@, %sfp
	ldr	r3, [fp, #-88]	@, %sfp
	str	r0, [r4, r3]	@, <variable>.DecPicPara.UVOffset
	ldr	r3, [fp, #-200]	@, %sfp
	sub	r0, r3, #1	@,,
	ldr	r3, [fp, #-216]	@, %sfp
	str	r0, [fp, #-244]	@, %sfp
	ldr	r0, [fp, #-60]	@, %sfp
	str	r3, [r4, r0]	@, <variable>.DecPicPara.YOffset_2bit
	ldr	r0, [fp, #-168]	@, %sfp
	str	r0, [r4, r9]	@, <variable>.DecPicPara.pFirstSlice
	movw	r0, #:lower16:1960800	@,
	ldr	r3, [fp, #-172]	@, %sfp
	movt	r0, #:upper16:1960800	@,
	strb	r3, [r4, sl]	@, <variable>.DecPicPara.strong_intra_smoothing_enabled_flag
	add	sl, r4, r0	@, pHevcCtx,
	ldr	r9, [fp, #-176]	@, %sfp
	movw	r0, #:lower16:2133116	@,
	movt	r0, #:upper16:2133116	@,
	strb	r9, [r4, r8]	@, <variable>.DecPicPara.scaling_list_enabled_flag
	movw	r8, #:lower16:2133112	@,
	ldr	r3, [fp, #-180]	@, %sfp
	movt	r8, #:upper16:2133112	@,
	str	sl, [fp, #-48]	@, %sfp
	strb	r3, [r4, r7]	@, <variable>.DecPicPara.pcm_loop_filter_disabled_flag
	ldr	r9, [fp, #-184]	@, %sfp
	strb	r9, [r4, r6]	@, <variable>.DecPicPara.sample_adaptive_offset_enabled_flag
	movw	r9, #:lower16:2133120	@,
	ldr	r6, [fp, #-188]	@, %sfp
	movt	r9, #:upper16:2133120	@,
	str	r8, [fp, #-60]	@, %sfp
	strb	r6, [r4, r5]	@, <variable>.DecPicPara.amp_enabled_flag
	movw	r6, #:lower16:2133124	@,
	ldr	r5, [fp, #-192]	@, %sfp
	movt	r6, #:upper16:2133124	@,
	str	r5, [r4, lr]	@, <variable>.DecPicPara.chroma_format_idc
	mov	lr, #0	@ tmp181,
	ldr	r7, [fp, #-196]	@, %sfp
	str	r0, [fp, #-52]	@, %sfp
	strb	r7, [r4, ip]	@, <variable>.DecPicPara.pcm_enabled_flag
	movw	r7, #:lower16:2133125	@,
	ldr	sl, [fp, #-208]	@, %sfp
	movt	r7, #:upper16:2133125	@,
	ldr	r3, [fp, #-156]	@, %sfp
	str	sl, [r4, r3]	@, <variable>.DecPicPara.CurrPicImgIdc
	ldr	r8, [fp, #-212]	@, %sfp
	ldr	ip, [fp, #-160]	@, %sfp
	str	r9, [fp, #-84]	@, %sfp
	str	lr, [r4, #200]	@ tmp181, <variable>.NumSlicePara
	str	r8, [r4, ip]	@, <variable>.DecPicPara.CurrPicPmvIdc
	ldr	r5, [fp, #-144]	@, %sfp
	ldr	r0, [fp, #-244]	@, %sfp
	str	r6, [fp, #-88]	@, %sfp
	ldr	r1, [r4, r1]	@, <variable>.CurrPic.thispoc
	str	r0, [r4, r5]	@, <variable>.DecPicPara.PicHightInCtbsYMinus1
	movw	r5, #:lower16:2133132	@,
	str	r7, [fp, #-80]	@, %sfp
	movt	r5, #:upper16:2133132	@,
	str	r1, [fp, #-228]	@, %sfp
	ldr	r3, [fp, #-148]	@, %sfp
	ldr	sl, [r4, r2]	@, <variable>.CurrSPS.max_transform_hierarchy_depth_inter
	ldr	r8, [fp, #-72]	@, %sfp
	ldr	lr, [fp, #-76]	@, %sfp
	str	sl, [fp, #-132]	@, %sfp
	movw	sl, #:lower16:2133128	@ tmp235,
	ldr	r9, [r4, r3]	@, <variable>.CurrSPS.max_transform_hierarchy_depth_intra
	movw	r3, #:lower16:2133136	@,
	movt	r3, #:upper16:2133136	@,
	movt	sl, #:upper16:2133128	@ tmp235,
	str	r9, [fp, #-140]	@, %sfp
	ldr	ip, [r4, r8]	@, <variable>.CurrSPS.pcm_log2_min_size
	str	ip, [fp, #-144]	@, %sfp
	ldr	r6, [r4, lr]	@, <variable>.CurrSPS.pcm_log2_max_size
	str	r6, [fp, #-148]	@, %sfp
	ldr	r0, [fp, #-104]	@, %sfp
	str	r5, [fp, #-100]	@, %sfp
	ldr	r2, [fp, #-108]	@, %sfp
	ldr	r1, [r4, r0]	@, <variable>.CurrSPS.quadtree_tu_log2_min_size
	ldr	r9, [fp, #-112]	@, %sfp
	ldr	ip, [fp, #-116]	@, %sfp
	str	r1, [fp, #-104]	@, %sfp
	ldr	r7, [r4, r2]	@, <variable>.CurrSPS.quadtree_tu_log2_max_size
	str	r3, [fp, #-164]	@, %sfp
	ldr	r6, [fp, #-120]	@, %sfp
	str	r7, [fp, #-108]	@, %sfp
	ldr	r8, [r4, r9]	@, <variable>.CurrSPS.max_cu_depth
	ldr	r0, [fp, #-124]	@, %sfp
	ldr	r2, [fp, #-128]	@, %sfp
	str	r8, [fp, #-112]	@, %sfp
	movw	r8, #:lower16:2133140	@ tmp244,
	ldr	lr, [r4, ip]	@, <variable>.CurrSPS.log2_min_cb_sizeY
	movt	r8, #:upper16:2133140	@ tmp244,
	ldr	r3, [fp, #-92]	@, %sfp
	ldr	ip, [fp, #-64]	@, %sfp
	str	lr, [fp, #-116]	@, %sfp
	ldr	r5, [r4, r6]	@, <variable>.CurrSPS.qp_bdOffset_c
	ldr	r6, [fp, #-96]	@, %sfp
	str	r5, [fp, #-152]	@, %sfp
	movw	r5, #:lower16:2133144	@ tmp247,
	ldr	r1, [r4, r0]	@, <variable>.CurrSPS.qp_bdOffset_y
	movt	r5, #:upper16:2133144	@ tmp247,
	str	r1, [fp, #-124]	@, %sfp
	ldr	r7, [r4, r2]	@, <variable>.CurrSPS.pcm_bit_depth_chroma
	ldr	r1, [fp, #-56]	@, %sfp
	str	r7, [fp, #-128]	@, %sfp
	movw	r7, #:lower16:2133148	@ tmp250,
	ldrb	r9, [r4, r3]	@ zero_extendqisi2	@, <variable>.CurrPPS.weighted_bipred_flag
	movt	r7, #:upper16:2133148	@ tmp250,
	str	r9, [fp, #-72]	@, %sfp
	ldrb	lr, [r4, ip]	@ zero_extendqisi2	@, <variable>.CurrPPS.weighted_pred_flag
	str	lr, [fp, #-76]	@, %sfp
	movw	lr, #:lower16:2133152	@ tmp253,
	ldr	r0, [r4, r6]	@, <variable>.CurrSPS.log2_ctb_sizeY
	movt	lr, #:upper16:2133152	@ tmp253,
	str	r0, [fp, #-236]	@, %sfp
	movw	r0, #:lower16:2133156	@ tmp256,
	ldr	r2, [r4, r1]	@, <variable>.CurrSPS.ctb_num_width
	movt	r0, #:upper16:2133156	@ tmp256,
	movw	r1, #:lower16:2133160	@ tmp259,
	movt	r1, #:upper16:2133160	@ tmp259,
	str	r2, [fp, #-56]	@, %sfp
	movw	r2, #:lower16:2133164	@ tmp262,
	ldr	r3, [fp, #-68]	@, %sfp
	movt	r2, #:upper16:2133164	@ tmp262,
	ldr	ip, [fp, #-228]	@, %sfp
	ldr	r6, [fp, #-52]	@, %sfp
	ldr	r9, [r4, r3]	@, <variable>.CurrPPS.log2_parallel_merge_level
	movw	r3, #:lower16:2133168	@ tmp265,
	movt	r3, #:upper16:2133168	@ tmp265,
	str	r9, [fp, #-68]	@, %sfp
	movw	r9, #:lower16:2133172	@ tmp268,
	str	ip, [r4, r6]	@, <variable>.DecPicPara.ThisPoc
	movt	r9, #:upper16:2133172	@ tmp268,
	ldr	ip, [fp, #-56]	@, %sfp
	sub	r6, ip, #1	@,,
	ldr	ip, [fp, #-132]	@, %sfp
	str	r6, [fp, #-224]	@, %sfp
	str	ip, [r4, sl]	@, <variable>.DecPicPara.max_transform_hierarchy_depth_inter
	ldr	ip, [fp, #-224]	@, %sfp
	ldr	sl, [fp, #-60]	@, %sfp
	ldr	r6, [fp, #-68]	@, %sfp
	sub	r6, r6, #2	@,,
	str	r6, [fp, #-232]	@, %sfp
	str	ip, [r4, sl]	@, <variable>.DecPicPara.PicWidthInCtbsYMinus1
	movw	ip, #:lower16:2133212	@ tmp280,
	ldr	sl, [fp, #-84]	@, %sfp
	movt	ip, #:upper16:2133212	@ tmp280,
	add	ip, r4, ip	@ tmp280, pHevcCtx, tmp280
	str	r6, [r4, sl]	@, <variable>.DecPicPara.log2_parallel_merge_level_minus2
	ldr	sl, [fp, #-140]	@, %sfp
	ldr	r6, [fp, #-100]	@, %sfp
	str	sl, [r4, r6]	@, <variable>.DecPicPara.max_transform_hierarchy_depth_intra
	ldr	sl, [fp, #-144]	@, %sfp
	ldr	r6, [fp, #-164]	@, %sfp
	str	sl, [r4, r6]	@, <variable>.DecPicPara.Log2MinIpcmCbSizeY
	movw	r6, #:lower16:2044496	@ tmp272,
	ldr	sl, [fp, #-148]	@, %sfp
	movt	r6, #:upper16:2044496	@ tmp272,
	str	sl, [r4, r8]	@, <variable>.DecPicPara.Log2MaxIpcmCbSizeY
	ldr	r8, [fp, #-104]	@, %sfp
	str	r8, [r4, r5]	@, <variable>.DecPicPara.Log2MinTrafoSize
	movw	r5, #:lower16:2044484	@ tmp275,
	ldr	sl, [fp, #-108]	@, %sfp
	movt	r5, #:upper16:2044484	@ tmp275,
	str	sl, [r4, r7]	@, <variable>.DecPicPara.Log2MaxTrafoSize
	ldr	r8, [fp, #-112]	@, %sfp
	str	r8, [r4, lr]	@, <variable>.DecPicPara.MaxCuDepth
	movw	lr, #:lower16:2044476	@ tmp278,
	ldr	sl, [fp, #-116]	@, %sfp
	movt	lr, #:upper16:2044476	@ tmp278,
	str	sl, [r4, r0]	@, <variable>.DecPicPara.Log2MinCbSizeY
	ldr	r7, [fp, #-236]	@, %sfp
	str	r7, [r4, r1]	@, <variable>.DecPicPara.CtbLog2SizeY
	movw	r7, #:lower16:2133176	@ tmp271,
	ldr	r1, [fp, #-152]	@, %sfp
	movt	r7, #:upper16:2133176	@ tmp271,
	ldr	r6, [r4, r6]	@, <variable>.CurrSPS.pcm_bit_depth_luma
	ldr	r5, [r4, r5]	@, <variable>.CurrSPS.bit_depth_chroma
	str	r1, [r4, r2]	@, <variable>.DecPicPara.QpBdOffsetC
	ldr	r8, [fp, #-124]	@, %sfp
	str	r8, [r4, r3]	@, <variable>.DecPicPara.QpBdOffsetY
	movw	r8, #:lower16:2133180	@ tmp274,
	ldr	sl, [fp, #-72]	@, %sfp
	movt	r8, #:upper16:2133180	@ tmp274,
	ldr	r0, [fp, #-88]	@, %sfp
	strb	sl, [r4, r0]	@, <variable>.DecPicPara.weighted_bipred_flag
	movw	sl, #:lower16:2133184	@ tmp277,
	ldr	r2, [fp, #-76]	@, %sfp
	movt	sl, #:upper16:2133184	@ tmp277,
	ldr	r1, [fp, #-80]	@, %sfp
	strb	r2, [r4, r1]	@, <variable>.DecPicPara.weighted_pred_flag
	ldr	r3, [fp, #-128]	@, %sfp
	str	r3, [r4, r9]	@, <variable>.DecPicPara.PcmBitDepthC
	ldr	r9, [fp, #-48]	@ tmp285, %sfp
	str	r6, [r4, r7]	@, <variable>.DecPicPara.PcmBitDepthY
	movw	r6, #:lower16:2044452	@ tmp287,
	ldr	r7, [r4, lr]	@ <variable>.CurrSPS.bit_depth_luma, <variable>.CurrSPS.bit_depth_luma
	movt	r6, #:upper16:2044452	@ tmp287,
	ldmia	r9!, {r0, r1, r2, r3}	@ tmp285,,,,
	str	r5, [r4, r8]	@, <variable>.DecPicPara.BitDepthC
	movw	r5, #:lower16:2044448	@ tmp290,
	movt	r5, #:upper16:2044448	@ tmp290,
	movw	lr, #:lower16:2133276	@ tmp286,
	movt	lr, #:upper16:2133276	@ tmp286,
	stmia	ip!, {r0, r1, r2, r3}	@ tmp280,,,,
	str	ip, [fp, #-48]	@ tmp280, %sfp
	mov	ip, r9	@ tmp475, tmp285
	str	r7, [r4, sl]	@ <variable>.CurrSPS.bit_depth_luma, <variable>.DecPicPara.BitDepthY
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp475,,,,
	ldr	r8, [fp, #-48]	@ tmp476, %sfp
	movw	r7, #:lower16:2133280	@ tmp289,
	movt	r7, #:upper16:2133280	@ tmp289,
	mov	sl, ip	@ tmp477, tmp475
	stmia	r8!, {r0, r1, r2, r3}	@ tmp476,,,,
	mov	ip, r8	@ tmp478, tmp476
	ldmia	sl!, {r0, r1, r2, r3}	@ tmp477,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ tmp478,,,,
	ldmia	sl, {r0, r1, r2, r3}	@ tmp477,,,,
	stmia	ip, {r0, r1, r2, r3}	@ tmp478,,,,
	ldr	r0, [r4, r6]	@ <variable>.CurrSPS.pic_height_in_luma_samples, <variable>.CurrSPS.pic_height_in_luma_samples
	ldr	ip, [r4, r5]	@ <variable>.CurrSPS.pic_width_in_luma_samples, <variable>.CurrSPS.pic_width_in_luma_samples
	movw	r1, #:lower16:2135016	@,
	movw	r2, #:lower16:2139112	@,
	movt	r1, #:upper16:2135016	@,
	movt	r2, #:upper16:2139112	@,
	movw	r3, #:lower16:2139272	@,
	movt	r3, #:upper16:2139272	@,
	str	r0, [r4, lr]	@ <variable>.CurrSPS.pic_height_in_luma_samples, <variable>.DecPicPara.pic_height_in_luma_samples
	str	ip, [r4, r7]	@ <variable>.CurrSPS.pic_width_in_luma_samples, <variable>.DecPicPara.pic_width_in_luma_samples
	add	r1, r4, r1	@, pHevcCtx,
	add	r2, r4, r2	@, pHevcCtx,
	add	r3, r4, r3	@, pHevcCtx,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_CalcTileInfo	@
	cmp	r0, #0	@,
	bne	.L2892	@,
	movw	r9, #:lower16:2117120	@ tmp302,
	movt	r9, #:upper16:2117120	@ tmp302,
	movw	r3, #:lower16:2117168	@,
	movt	r3, #:upper16:2117168	@,
	str	r3, [fp, #-148]	@, %sfp
	movw	r3, #:lower16:2117160	@,
	movt	r3, #:upper16:2117160	@,
	str	r3, [fp, #-68]	@, %sfp
	movw	r3, #:lower16:2117176	@,
	movt	r3, #:upper16:2117176	@,
	str	r3, [fp, #-72]	@, %sfp
	movw	r3, #:lower16:2117172	@,
	movt	r3, #:upper16:2117172	@,
	str	r3, [fp, #-76]	@, %sfp
	ldrb	r3, [r4, r9]	@ zero_extendqisi2	@, <variable>.CurrPPS.loop_filter_across_tiles_enabled_flag
	movw	sl, #:lower16:2117111	@ tmp306,
	movt	sl, #:upper16:2117111	@ tmp306,
	movw	r8, #:lower16:2117107	@ tmp310,
	movt	r8, #:upper16:2117107	@ tmp310,
	movw	r7, #:lower16:2117118	@ tmp314,
	str	r3, [fp, #-104]	@, %sfp
	movw	r3, #:lower16:2133304	@,
	ldrb	r9, [r4, sl]	@ zero_extendqisi2	@, <variable>.CurrPPS.transform_skip_enabled_flag
	movt	r3, #:upper16:2133304	@,
	str	r3, [fp, #-48]	@, %sfp
	movt	r7, #:upper16:2117118	@ tmp314,
	movw	r6, #:lower16:2117119	@ tmp318,
	movt	r6, #:upper16:2117119	@ tmp318,
	str	r9, [fp, #-108]	@, %sfp
	movw	r5, #:lower16:2117117	@ tmp322,
	ldrb	sl, [r4, r8]	@ zero_extendqisi2	@, <variable>.CurrPPS.sign_data_hiding_flag
	movw	r8, #:lower16:2133305	@,
	movt	r8, #:upper16:2133305	@,
	movt	r5, #:upper16:2117117	@ tmp322,
	movw	lr, #:lower16:2117156	@ tmp332,
	movt	lr, #:upper16:2117156	@ tmp332,
	str	sl, [fp, #-112]	@, %sfp
	movw	r9, #:lower16:2133306	@,
	ldrb	r7, [r4, r7]	@ zero_extendqisi2	@, <variable>.CurrPPS.entropy_coding_sync_enabled_flag
	movt	r9, #:upper16:2133306	@,
	str	r8, [fp, #-60]	@, %sfp
	movw	ip, #:lower16:2117112	@ tmp335,
	movt	ip, #:upper16:2117112	@ tmp335,
	movw	r0, #:lower16:2117116	@ tmp339,
	str	r7, [fp, #-116]	@, %sfp
	movt	r0, #:upper16:2117116	@ tmp339,
	ldrb	r6, [r4, r6]	@ zero_extendqisi2	@, <variable>.CurrPPS.uniform_spacing_flag
	movw	r8, #:lower16:2133307	@,
	movt	r8, #:upper16:2133307	@,
	movw	r1, #:lower16:2117110	@ tmp343,
	movt	r1, #:upper16:2117110	@ tmp343,
	movw	r2, #:lower16:2117164	@ tmp347,
	str	r6, [fp, #-120]	@, %sfp
	movt	r2, #:upper16:2117164	@ tmp347,
	ldrb	r5, [r4, r5]	@ zero_extendqisi2	@, <variable>.CurrPPS.tiles_enabled_flag
	str	r9, [fp, #-52]	@, %sfp
	str	r5, [fp, #-124]	@, %sfp
	movw	r5, #:lower16:2133309	@,
	ldr	r3, [r4, lr]	@, <variable>.CurrPPS.diff_cu_qp_delta_depth
	movw	lr, #:lower16:2133308	@,
	movt	lr, #:upper16:2133308	@,
	movt	r5, #:upper16:2133309	@,
	str	r3, [fp, #-128]	@, %sfp
	ldrb	sl, [r4, ip]	@ zero_extendqisi2	@, <variable>.CurrPPS.cu_qp_delta_enabled_flag
	str	r8, [fp, #-164]	@, %sfp
	movw	r8, #:lower16:2117192	@,
	movt	r8, #:upper16:2117192	@,
	str	sl, [fp, #-100]	@, %sfp
	ldrb	r7, [r4, r0]	@ zero_extendqisi2	@, <variable>.CurrPPS.transquant_bypass_enable_flag
	ldr	r0, [fp, #-148]	@, %sfp
	str	r7, [fp, #-132]	@, %sfp
	ldrb	r6, [r4, r1]	@ zero_extendqisi2	@, <variable>.CurrPPS.constrained_intra_pred_flag
	str	lr, [fp, #-56]	@, %sfp
	str	r6, [fp, #-140]	@, %sfp
	ldr	ip, [r4, r2]	@, <variable>.CurrPPS.pic_cb_qp_offset
	str	ip, [fp, #-144]	@, %sfp
	ldr	r9, [r4, r0]	@, <variable>.CurrPPS.pic_cr_qp_offset
	str	r9, [fp, #-148]	@, %sfp
	ldr	r3, [fp, #-64]	@, %sfp
	str	r5, [fp, #-84]	@, %sfp
	ldr	r2, [fp, #-68]	@, %sfp
	ldrb	r1, [r4, r3]	@ zero_extendqisi2	@, <variable>.CurrPPS.weighted_pred_flag
	ldr	r7, [fp, #-72]	@, %sfp
	ldr	lr, [fp, #-76]	@, %sfp
	str	r1, [fp, #-152]	@, %sfp
	movw	r1, #:lower16:2133332	@ tmp352,
	ldr	sl, [r4, r2]	@, <variable>.CurrPPS.max_cu_qp_delta_depth
	movt	r1, #:upper16:2133332	@ tmp352,
	str	r8, [fp, #-168]	@, %sfp
	movw	r2, #:lower16:2133336	@ tmp356,
	ldr	r0, [fp, #-96]	@, %sfp
	movt	r2, #:upper16:2133336	@ tmp356,
	str	sl, [fp, #-68]	@, %sfp
	movw	sl, #:lower16:2133312	@ tmp330,
	ldr	r6, [r4, r7]	@, <variable>.CurrPPS.num_tile_rows
	movt	sl, #:upper16:2133312	@ tmp330,
	ldr	r3, [fp, #-104]	@, %sfp
	movw	r8, #:lower16:2133316	@ tmp331,
	ldr	r9, [fp, #-48]	@, %sfp
	movt	r8, #:upper16:2133316	@ tmp331,
	str	r6, [fp, #-72]	@, %sfp
	movw	r7, #:lower16:2133320	@ tmp334,
	ldr	ip, [r4, lr]	@, <variable>.CurrPPS.num_tile_columns
	movt	r7, #:upper16:2133320	@ tmp334,
	movw	r6, #:lower16:2133321	@ tmp338,
	movt	r6, #:upper16:2133321	@ tmp338,
	movw	lr, #:lower16:2133322	@ tmp342,
	movt	lr, #:upper16:2133322	@ tmp342,
	str	ip, [fp, #-76]	@, %sfp
	movw	ip, #:lower16:2133324	@ tmp346,
	ldr	r5, [r4, r0]	@, <variable>.CurrSPS.log2_ctb_sizeY
	movt	ip, #:upper16:2133324	@ tmp346,
	movw	r0, #:lower16:2133328	@ tmp349,
	movt	r0, #:upper16:2133328	@ tmp349,
	str	r5, [fp, #-64]	@, %sfp
	movw	r5, #:lower16:2124852	@ tmp370,
	strb	r3, [r4, r9]	@, <variable>.DecPicPara.loop_filter_across_tiles_enabled_flag
	movt	r5, #:upper16:2124852	@ tmp370,
	ldr	r3, [fp, #-108]	@, %sfp
	ldr	r9, [fp, #-60]	@, %sfp
	strb	r3, [r4, r9]	@, <variable>.DecPicPara.transform_skip_enabled_flag
	ldr	r3, [fp, #-68]	@, %sfp
	ldr	r9, [fp, #-64]	@, %sfp
	rsb	r9, r3, r9	@,,
	ldr	r3, [fp, #-112]	@, %sfp
	str	r9, [fp, #-240]	@, %sfp
	ldr	r9, [fp, #-52]	@, %sfp
	strb	r3, [r4, r9]	@, <variable>.DecPicPara.sign_data_hiding_enabled_flag
	ldr	r9, [fp, #-72]	@, %sfp
	sub	r3, r9, #1	@,,
	str	r3, [r4, r1]	@, <variable>.DecPicPara.num_tile_rows_minus1
	ldr	r9, [fp, #-116]	@, %sfp
	ldr	r1, [fp, #-164]	@, %sfp
	strb	r9, [r4, r1]	@, <variable>.DecPicPara.entropy_coding_sync_enabled_flag
	ldr	r3, [fp, #-76]	@, %sfp
	sub	r1, r3, #1	@,,
	str	r1, [r4, r2]	@, <variable>.DecPicPara.num_tile_columns_minus1
	ldr	r3, [fp, #-120]	@, %sfp
	ldr	r9, [fp, #-56]	@, %sfp
	strb	r3, [r4, r9]	@, <variable>.DecPicPara.uniform_spacing_flag
	ldr	r2, [fp, #-124]	@, %sfp
	ldr	r1, [fp, #-84]	@, %sfp
	strb	r2, [r4, r1]	@, <variable>.DecPicPara.tiles_enabled_flag
	ldr	r9, [fp, #-240]	@, %sfp
	str	r9, [r4, sl]	@, <variable>.DecPicPara.Log2MinCuQpDeltaSize
	ldr	sl, [fp, #-128]	@, %sfp
	str	sl, [r4, r8]	@, <variable>.DecPicPara.diff_cu_qp_delta_depth
	ldr	r8, [fp, #-100]	@, %sfp
	strb	r8, [r4, r7]	@, <variable>.DecPicPara.cu_qp_delta_enabled_flag
	ldr	r7, [fp, #-132]	@, %sfp
	strb	r7, [r4, r6]	@, <variable>.DecPicPara.transquant_bypass_enabled_flag
	ldr	r8, [fp, #-140]	@, %sfp
	strb	r8, [r4, lr]	@, <variable>.DecPicPara.constrained_intra_pred_flag
	ldr	r9, [fp, #-144]	@, %sfp
	str	r9, [r4, ip]	@, <variable>.DecPicPara.pps_cb_qp_offset
	ldr	sl, [fp, #-148]	@, %sfp
	str	sl, [r4, r0]	@, <variable>.DecPicPara.pps_cr_qp_offset
	ldr	r0, [fp, #-240]	@, %sfp
	ldr	ip, [fp, #-168]	@, %sfp
	str	r0, [r4, ip]	@, <variable>.CurrPPS.log2_min_cu_qp_delta_size
	ldr	r3, [fp, #-152]	@, %sfp
	ldr	r6, [fp, #-80]	@, %sfp
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	strb	r3, [r4, r6]	@, <variable>.DecPicPara.weighted_pred_flag
	ldr	lr, [fp, #-92]	@, %sfp
	ldr	r1, [fp, #-88]	@, %sfp
	ldrb	r2, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPPS.weighted_bipred_flag, <variable>.CurrPPS.weighted_bipred_flag
	strb	r2, [r4, r1]	@ <variable>.CurrPPS.weighted_bipred_flag, <variable>.DecPicPara.weighted_bipred_flag
	ldr	r1, [ip, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	subs	r6, r0, #0	@ pstLogicFs,
	beq	.L2893	@,
	ldr	r2, [r6, #520]	@ D.43458, <variable>.pstDecodeFs
	cmp	r2, #0	@ D.43458,
	ldreq	r3, [r6, #524]	@ prephitmp.7855, <variable>.pstDispOutFs
	beq	.L2878	@,
	ldr	r3, [r6, #524]	@ prephitmp.7855, <variable>.pstDispOutFs
	cmp	r3, #0	@ prephitmp.7855,
	beq	.L2878	@,
	movw	ip, #:lower16:2134668	@,
	movw	r3, #:lower16:2134412	@,
	movt	ip, #:upper16:2134668	@,
	movt	r3, #:upper16:2134412	@,
	movw	lr, #:lower16:2134760	@,
	movt	lr, #:upper16:2134760	@,
	add	r1, r4, ip	@, pHevcCtx,
	add	r2, r4, r3	@, pHevcCtx,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	add	r3, r4, lr	@, pHevcCtx,
	bl	FSP_GetDecFsAddrTab	@
	ldr	r1, [r6, #520]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	sl, [fp, #-156]	@, %sfp
	movw	r9, #:lower16:2134752	@,
	movw	r0, #:lower16:2134672	@,
	movt	r9, #:upper16:2134752	@,
	ldr	r8, [r1, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	movt	r0, #:upper16:2134672	@,
	add	r1, r4, r9	@, pHevcCtx,
	add	r2, r4, r0	@, pHevcCtx,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	str	r8, [r4, sl]	@ <variable>.PhyFsID, <variable>.DecPicPara.CurrPicImgIdc
	movw	sl, #:lower16:2139740	@ tmp396,
	bl	FSP_GetPmvAddrTab	@
	ldr	r2, [fp, #-136]	@, %sfp
	ldr	r5, [fp, #-160]	@, %sfp
	movw	r1, #:lower16:2134756	@ tmp394,
	movt	r1, #:upper16:2134756	@ tmp394,
	movt	sl, #:upper16:2139740	@ tmp396,
	ldr	r7, [r4, r2]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	movw	ip, #:lower16:1960664	@ tmp403,
	movt	ip, #:upper16:1960664	@ tmp403,
	movw	r2, #:lower16:2139512	@ tmp402,
	movt	r2, #:upper16:2139512	@ tmp402,
	str	r7, [r4, r5]	@ <variable>.CurrPic.pmv_address_idc, <variable>.DecPicPara.CurrPicPmvIdc
	movw	r5, #:lower16:2139744	@ tmp399,
	ldr	r3, [r6, #536]	@ <variable>.HalfPmvOffset, <variable>.HalfPmvOffset
	movt	r5, #:upper16:2139744	@ tmp399,
	ldr	r7, [r4, ip]	@ <variable>.APC.size, <variable>.APC.size
	str	r3, [r4, r1]	@ <variable>.HalfPmvOffset, <variable>.DecPicPara.half_pmvblk_offset
	cmp	r7, #0	@ <variable>.APC.size,
	ldr	r9, [r6, #524]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	ldr	r8, [r9, #12]	@ <variable>.PhyAddr, <variable>.PhyAddr
	str	r8, [r4, sl]	@ <variable>.PhyAddr, <variable>.DecPicPara.CurrPicImg2DAddr
	ldr	r0, [r6, #524]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	ldr	r1, [r0, #44]	@ <variable>.ChromOffset, <variable>.ChromOffset
	str	r7, [r4, r2]	@ <variable>.APC.size, <variable>.DecPicPara.ApcSize
	str	r1, [r4, r5]	@ <variable>.ChromOffset, <variable>.DecPicPara.ChromaOffset
	beq	.L2880	@,
	movw	r2, #:lower16:1960736	@ ivtmp.7896,
	movt	r2, #:upper16:1960736	@ ivtmp.7896,
	add	r2, r4, r2	@ ivtmp.7896, pHevcCtx, ivtmp.7896
	cmp	r7, #1	@ <variable>.APC.size,
	add	sl, r2, #178176	@ tmp407, ivtmp.7896,
	sub	r8, r7, #1	@ tmp470, <variable>.APC.size,
	mov	r3, r2	@ ivtmp.7896, ivtmp.7896
	add	r5, sl, #536	@ tmp407, tmp407,
	ldr	r6, [r3], #4	@ tmp409, <variable>.APC.idc
	and	lr, r8, #1	@ tmp472, tmp470,
	mov	ip, #1	@ i,
	str	r6, [r5, #0]	@ tmp409, <variable>.DecPicPara.Apc2Idc
	bls	.L2880	@,
	cmp	lr, #0	@ tmp472,
	beq	.L2881	@,
	add	ip, r2, #178176	@ tmp490, ivtmp.7896,
	ldr	r9, [r3], #4	@ tmp491, <variable>.APC.idc
	add	r6, ip, #540	@ tmp490, tmp490,
	mov	ip, #2	@ i,
	cmp	r7, ip	@ <variable>.APC.size, i
	str	r9, [r6, #0]	@ tmp491, <variable>.DecPicPara.Apc2Idc
	bls	.L2880	@,
.L2881:
	mov	r0, r3	@ tmp474, ivtmp.7896
	add	r5, r3, #178176	@ tmp482, ivtmp.7896,
	ldr	lr, [r3, #4]	@ tmp488, <variable>.APC.idc
	add	ip, ip, #2	@ i, i,
	ldr	r6, [r0], #4	@ tmp483, <variable>.APC.idc
	add	r1, r5, #536	@ tmp482, tmp482,
	add	r9, r5, #540	@ tmp487, tmp487,
	cmp	r7, ip	@ <variable>.APC.size, i
	add	r3, r0, #4	@ ivtmp.7896, tmp474,
	str	r6, [r1, #0]	@ tmp483, <variable>.DecPicPara.Apc2Idc
	str	lr, [r9, #0]	@ tmp488, <variable>.DecPicPara.Apc2Idc
	bhi	.L2881	@,
.L2880:
	add	lr, r4, #2129920	@ D.43483, pHevcCtx,
	mov	r0, #0	@,
	add	sl, lr, #3424	@ D.43483, D.43483,
	mov	r1, r4	@, pHevcCtx
	movw	r7, #:lower16:1837256	@ tmp431,
	movt	r7, #:upper16:1837256	@ tmp431,
	mov	r2, sl	@, D.43483
	movw	r8, #:lower16:1837244	@ tmp438,
	bl	HEVC_WriteQmatrix_8x8	@
	add	r2, sl, #64	@, D.43483,
	mov	r0, #1	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_8x8	@
	add	r2, sl, #128	@, D.43483,
	mov	r0, #2	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_8x8	@
	add	r2, sl, #192	@, D.43483,
	mov	r0, #3	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_8x8	@
	add	r2, sl, #256	@, D.43483,
	mov	r0, #4	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_8x8	@
	add	r2, sl, #320	@, D.43483,
	mov	r0, #5	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_8x8	@
	add	r2, sl, #384	@, D.43483,
	mov	r0, #0	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_16x16	@
	add	r2, sl, #448	@, D.43483,
	mov	r0, #1	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_16x16	@
	add	r2, sl, #512	@, D.43483,
	mov	r0, #2	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_16x16	@
	add	r2, sl, #576	@, D.43483,
	mov	r0, #3	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_16x16	@
	add	r2, sl, #640	@, D.43483,
	mov	r0, #4	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_16x16	@
	add	r2, sl, #704	@, D.43483,
	mov	r0, #5	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_16x16	@
	add	r2, sl, #768	@, D.43483,
	mov	r0, #0	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_32x32	@
	add	r2, sl, #832	@, D.43483,
	mov	r0, #1	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_32x32	@
	add	r2, sl, #896	@, D.43483,
	mov	r0, #0	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_4x4	@
	add	r2, sl, #912	@, D.43483,
	mov	r0, #1	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_4x4	@
	add	r2, sl, #928	@, D.43483,
	mov	r0, #2	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_4x4	@
	add	r2, sl, #944	@, D.43483,
	mov	r0, #3	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_4x4	@
	add	r2, sl, #960	@, D.43483,
	mov	r0, #4	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_4x4	@
	add	r2, sl, #976	@, D.43483,
	mov	r0, #5	@,
	mov	r1, r4	@, pHevcCtx
	bl	HEVC_WriteQmatrix_4x4	@
	movw	r2, #:lower16:1837252	@ tmp434,
	movt	r2, #:upper16:1837252	@ tmp434,
	movw	r1, #:lower16:1837268	@ tmp449,
	movt	r1, #:upper16:1837268	@ tmp449,
	movw	r3, #:lower16:1837272	@ tmp446,
	ldr	r5, [r4, r2]	@ <variable>.scalingListDC, <variable>.scalingListDC
	movt	r3, #:upper16:1837272	@ tmp446,
	ldr	r6, [r4, r1]	@ <variable>.scalingListDC, <variable>.scalingListDC
	movw	r0, #:lower16:2133309	@ tmp463,
	ldr	sl, [r4, r7]	@ <variable>.scalingListDC, <variable>.scalingListDC
	movt	r0, #:upper16:2133309	@ tmp463,
	ldr	r7, [r4, r3]	@ <variable>.scalingListDC, <variable>.scalingListDC
	movt	r8, #:upper16:1837244	@ tmp438,
	movw	ip, #:lower16:1837248	@ tmp441,
	movw	r9, #:lower16:1837260	@ tmp453,
	movt	ip, #:upper16:1837248	@ tmp441,
	movt	r9, #:upper16:1837260	@ tmp453,
	movw	r2, #:lower16:1837264	@ tmp456,
	movw	r3, #:lower16:2124844	@ tmp461,
	movt	r2, #:upper16:1837264	@ tmp456,
	movt	r3, #:upper16:2124844	@ tmp461,
	mov	r5, r5, asl #16	@ tmp435, <variable>.scalingListDC,
	ldrb	r0, [r4, r0]	@ zero_extendqisi2	@ <variable>.DecPicPara.tiles_enabled_flag, <variable>.DecPicPara.tiles_enabled_flag
	mov	r1, r6, asl #16	@ tmp450, <variable>.scalingListDC,
	orr	sl, r5, sl, asl #24	@, tmp437, tmp435, <variable>.scalingListDC,
	ldr	r6, [r4, r9]	@ <variable>.scalingListDC, <variable>.scalingListDC
	orr	r7, r1, r7, asl #24	@, tmp452, tmp450, <variable>.scalingListDC,
	ldr	r9, [r4, r2]	@ <variable>.scalingListDC, <variable>.scalingListDC
	movw	r1, #:lower16:2134368	@ tmp460,
	ldr	r5, [r4, r3]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	movw	r2, #:lower16:2134336	@ tmp430,
	ldr	r8, [r4, r8]	@ <variable>.scalingListDC, <variable>.scalingListDC
	movt	r2, #:upper16:2134336	@ tmp430,
	ldr	ip, [r4, ip]	@ <variable>.scalingListDC, <variable>.scalingListDC
	movw	r3, #:lower16:2134340	@ tmp445,
	movt	r1, #:upper16:2134368	@ tmp460,
	movt	r3, #:upper16:2134340	@ tmp445,
	cmp	r0, #0	@ <variable>.DecPicPara.tiles_enabled_flag,
	orr	r8, sl, r8	@ tmp439, tmp437, <variable>.scalingListDC
	orr	r6, r7, r6	@ tmp454, tmp452, <variable>.scalingListDC
	orr	r8, r8, ip, asl #8	@, tmp444, tmp439, <variable>.scalingListDC,
	orr	r9, r6, r9, asl #8	@, tmp459, tmp454, <variable>.scalingListDC,
	str	r8, [r4, r2]	@ tmp444, <variable>.DecPicPara.Qmatrix
	str	r5, [r4, r1]	@ <variable>.CurrPic.pmv_address_idc, <variable>.DecPicPara.pmv_address_idc
	str	r9, [r4, r3]	@ tmp459, <variable>.DecPicPara.Qmatrix
	beq	.L2875	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_CalcTileMap	@
	mov	r0, #0	@ D.43427,
.L2875:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2892:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC546	@,
	ldr	r2, .L2894	@,
	movt	r1, #:upper16:.LC546	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43427,
	b	.L2875	@
.L2878:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC548	@,
	movt	r1, #:upper16:.LC548	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43427,
	b	.L2875	@
.L2893:
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r0, r0, #1	@,,
	movw	r1, #:lower16:.LC547	@,
	movt	r1, #:upper16:.LC547	@,
	ldr	r2, [ip, #32]	@, <variable>.logic_fs_id
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43427,
	b	.L2875	@
.L2895:
	.align	2
.L2894:
	.word	.LANCHOR1+680
	.fnend
	.size	HEVC_WritePicMsg, .-HEVC_WritePicMsg
	.align	2
	.global	HEVC_Sei_Pic_Timming
	.type	HEVC_Sei_Pic_Timming, %function
HEVC_Sei_Pic_Timming:
	.fnstart
.LFB1569:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r2, #9]	@ zero_extendqisi2	@ <variable>.frame_field_info_present_flag, <variable>.frame_field_info_present_flag
	mov	r8, r2	@ pVui, pVui
	mov	r7, r0	@ pHevcCtx, pHevcCtx
	cmp	r3, #0	@ <variable>.frame_field_info_present_flag,
	mov	r6, r1	@ pPic, pPic
	bne	.L2907	@,
.L2897:
	ldrh	r0, [r8, #108]	@ tmp164,
	cmp	r0, #0	@ tmp164,
	beq	.L2898	@,
	ldr	lr, [r8, #140]	@ <variable>.hrd_parameters.au_cpb_removal_delay_length_minus1, <variable>.hrd_parameters.au_cpb_removal_delay_length_minus1
	movw	r4, #:lower16:1960172	@ tmp165,
	movt	r4, #:upper16:1960172	@ tmp165,
	movw	r2, #:lower16:.LC552	@,
	add	r1, lr, #1	@, <variable>.hrd_parameters.au_cpb_removal_delay_length_minus1,
	movt	r2, #:upper16:.LC552	@,
	ldr	r0, [r7, r4]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r2, #:lower16:.LC553	@,
	movt	r2, #:upper16:.LC553	@,
	add	r3, r0, #1	@ tmp170,,
	str	r3, [r6, #12]	@ tmp170, <variable>.au_cpb_removal_delay_minus1
	ldr	ip, [r8, #144]	@ <variable>.hrd_parameters.dpb_output_delay_length_minus1, <variable>.hrd_parameters.dpb_output_delay_length_minus1
	ldr	r0, [r7, r4]	@, <variable>.pBS
	add	r1, ip, #1	@, <variable>.hrd_parameters.dpb_output_delay_length_minus1,
	bl	HEVC_u_v	@
	str	r0, [r6, #16]	@, <variable>.pic_dpb_output_delay
	ldrb	r1, [r8, #110]	@ zero_extendqisi2	@ <variable>.hrd_parameters.sub_pic_hrd_params_present_flag, <variable>.hrd_parameters.sub_pic_hrd_params_present_flag
	cmp	r1, #0	@ <variable>.hrd_parameters.sub_pic_hrd_params_present_flag,
	bne	.L2908	@,
.L2898:
	movw	ip, #:lower16:1960172	@ tmp207,
	movt	ip, #:upper16:1960172	@ tmp207,
	ldr	r0, [r7, ip]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, #0	@ D.41465,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2907:
	movw	r4, #:lower16:1960172	@ tmp154,
	movt	r4, #:upper16:1960172	@ tmp154,
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC549	@,
	ldr	r0, [r0, r4]	@, <variable>.pBS
	movt	r2, #:upper16:.LC549	@,
	bl	HEVC_u_v	@
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC550	@,
	movt	r2, #:upper16:.LC550	@,
	str	r0, [r6, #4]	@, <variable>.pic_struct
	ldr	r0, [r7, r4]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC551	@,
	movt	r2, #:upper16:.LC551	@,
	str	r0, [r6, #8]	@, <variable>.source_scan_type
	ldr	r0, [r7, r4]	@, <variable>.pBS
	bl	HEVC_u_v	@
	strb	r0, [r6, #0]	@, <variable>.duplicate_flag
	b	.L2897	@
.L2908:
	ldr	r1, [r8, #120]	@ <variable>.hrd_parameters.dpb_output_delay_du_length_minus1, <variable>.hrd_parameters.dpb_output_delay_du_length_minus1
	movw	r2, #:lower16:.LC554	@,
	ldr	r0, [r7, r4]	@, <variable>.pBS
	movt	r2, #:upper16:.LC554	@,
	add	r1, r1, #1	@, <variable>.hrd_parameters.dpb_output_delay_du_length_minus1,
	bl	HEVC_u_v	@
	str	r0, [r6, #20]	@, <variable>.pic_dpb_output_du_delay
	ldrb	r2, [r8, #110]	@ zero_extendqisi2	@ <variable>.hrd_parameters.sub_pic_hrd_params_present_flag, <variable>.hrd_parameters.sub_pic_hrd_params_present_flag
	cmp	r2, #0	@ <variable>.hrd_parameters.sub_pic_hrd_params_present_flag,
	beq	.L2898	@,
	ldrb	r0, [r8, #111]	@ zero_extendqisi2	@ <variable>.hrd_parameters.sub_pic_cpb_params_in_pic_timing_sei_flag, <variable>.hrd_parameters.sub_pic_cpb_params_in_pic_timing_sei_flag
	cmp	r0, #0	@ <variable>.hrd_parameters.sub_pic_cpb_params_in_pic_timing_sei_flag,
	beq	.L2898	@,
	ldr	r0, [r7, r4]	@, <variable>.pBS
	movw	r1, #:lower16:.LC555	@,
	movt	r1, #:upper16:.LC555	@,
	bl	HEVC_ue_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC556	@,
	movt	r2, #:upper16:.LC556	@,
	str	r0, [r6, #24]	@, <variable>.num_decoding_units_minus1
	ldr	r0, [r7, r4]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	ip, r0	@ D.41452,
	strb	ip, [r6, #1]	@ D.41452, <variable>.du_common_cpb_removal_delay_flag
	cmp	ip, #0	@ D.41452,
	bne	.L2909	@,
.L2899:
	ldr	lr, [r6, #24]	@ <variable>.num_decoding_units_minus1, <variable>.num_decoding_units_minus1
	cmp	lr, #255	@ <variable>.num_decoding_units_minus1,
	bhi	.L2910	@,
	movw	sl, #:lower16:1960172	@ tmp211,
	mov	r4, r6	@ ivtmp.7958, pPic
	movt	sl, #:upper16:1960172	@ tmp211,
	mov	r5, #0	@ i,
	b	.L2903	@
.L2902:
	ldr	r0, [r6, #24]	@ <variable>.num_decoding_units_minus1, <variable>.num_decoding_units_minus1
	add	r4, r4, #4	@ ivtmp.7958, ivtmp.7958,
	cmp	r0, r5	@ <variable>.num_decoding_units_minus1, i
	bcc	.L2898	@,
.L2903:
	ldr	r0, [r7, sl]	@, <variable>.pBS
	movw	r1, #:lower16:.LC559	@,
	movt	r1, #:upper16:.LC559	@,
	add	r5, r5, #1	@ i, i,
	bl	HEVC_ue_v	@
	ldrb	r2, [r6, #1]	@ zero_extendqisi2	@ <variable>.du_common_cpb_removal_delay_flag, <variable>.du_common_cpb_removal_delay_flag
	cmp	r2, #0	@ <variable>.du_common_cpb_removal_delay_flag,
	str	r0, [r4, #32]	@, <variable>.num_nalus_in_du_minus1
	bne	.L2902	@,
	ldr	r1, [r8, #116]	@ <variable>.hrd_parameters.du_cpb_removal_delay_increment_length_minus1, <variable>.hrd_parameters.du_cpb_removal_delay_increment_length_minus1
	movw	r2, #:lower16:.LC51	@,
	ldr	r0, [r7, sl]	@, <variable>.pBS
	movt	r2, #:upper16:.LC51	@,
	add	r1, r1, #1	@, <variable>.hrd_parameters.du_cpb_removal_delay_increment_length_minus1,
	bl	HEVC_u_v	@
	str	r0, [r4, #1056]	@, <variable>.du_cpb_removal_delay_increment_minus1
	b	.L2902	@
.L2909:
	ldr	r3, [r8, #116]	@ <variable>.hrd_parameters.du_cpb_removal_delay_increment_length_minus1, <variable>.hrd_parameters.du_cpb_removal_delay_increment_length_minus1
	movw	r2, #:lower16:.LC557	@,
	ldr	r0, [r7, r4]	@, <variable>.pBS
	movt	r2, #:upper16:.LC557	@,
	add	r1, r3, #1	@, <variable>.hrd_parameters.du_cpb_removal_delay_increment_length_minus1,
	bl	HEVC_u_v	@
	str	r0, [r6, #28]	@, <variable>.du_common_cpb_removal_delay_increment_minus1
	b	.L2899	@
.L2910:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC558	@,
	movt	r1, #:upper16:.LC558	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41465,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_Pic_Timming, .-HEVC_Sei_Pic_Timming
	.align	2
	.global	HEVC_Sei_Buf_Period
	.type	HEVC_Sei_Buf_Period, %function
HEVC_Sei_Buf_Period:
	.fnstart
.LFB1568:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:1960172	@ tmp156,
	movt	r5, #:upper16:1960172	@ tmp156,
	mov	sl, r1	@ pBuf, pBuf
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	movw	r1, #:lower16:.LC560	@,
	ldr	r0, [r0, r5]	@, <variable>.pBS
	movt	r1, #:upper16:.LC560	@,
	mov	r4, r2	@ pHrd, pHrd
	bl	HEVC_ue_v	@
	cmp	r0, #15	@ D.41340,
	str	r0, [sl, #4]	@ D.41340, <variable>.bp_seq_parameter_set_id
	bhi	.L2929	@,
	ldrb	r3, [r4, #2]	@ zero_extendqisi2	@ <variable>.sub_pic_hrd_params_present_flag, <variable>.sub_pic_hrd_params_present_flag
	cmp	r3, #0	@ <variable>.sub_pic_hrd_params_present_flag,
	ldrneb	r0, [sl, #0]	@ zero_extendqisi2	@ prephitmp.7991, <variable>.irap_cpb_params_present_flag
	beq	.L2930	@,
	cmp	r0, #0	@ prephitmp.7991,
	bne	.L2931	@,
.L2916:
	movw	r5, #:lower16:1960172	@ tmp175,
	movt	r5, #:upper16:1960172	@ tmp175,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC565	@,
	ldr	r0, [r6, r5]	@, <variable>.pBS
	movt	r2, #:upper16:.LC565	@,
	bl	HEVC_u_v	@
	movw	r2, #:lower16:.LC566	@,
	movt	r2, #:upper16:.LC566	@,
	strb	r0, [sl, #1]	@, <variable>.concatenation_flag
	ldr	r7, [r4, #32]	@ <variable>.au_cpb_removal_delay_length_minus1, <variable>.au_cpb_removal_delay_length_minus1
	ldr	r0, [r6, r5]	@, <variable>.pBS
	add	r1, r7, #1	@, <variable>.au_cpb_removal_delay_length_minus1,
	bl	HEVC_u_v	@
	add	r2, r0, #1	@ tmp184,,
	str	r2, [sl, #16]	@ tmp184, <variable>.au_cpb_removal_delay_delta_minus1
	ldr	r2, [r4, #48]	@ temp.8022, <variable>.cpb_cnt_minus1
	cmp	r2, #31	@ temp.8022,
	bhi	.L2932	@,
.L2917:
	movw	r7, #:lower16:1960172	@ tmp225,
	movt	r7, #:upper16:1960172	@ tmp225,
	mov	r9, #0	@ ivtmp.8012,
	mov	ip, #1	@,
	str	ip, [fp, #-48]	@, %sfp
.L2918:
	cmp	r9, #0	@ ivtmp.8012,
	beq	.L2933	@,
	ldrb	r2, [r4, #1]	@ zero_extendqisi2	@ <variable>.vcl_hrd_parameters_present_flag, <variable>.vcl_hrd_parameters_present_flag
	cmp	r2, #0	@ <variable>.vcl_hrd_parameters_present_flag,
	beq	.L2922	@,
.L2923:
	ldr	r0, [r4, #48]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	cmn	r0, #1	@ <variable>.cpb_cnt_minus1,
	addne	r5, sl, r9, asl #4	@, tmp192, pBuf, ivtmp.8012,
	movne	r8, #0	@ i,
	addne	r5, r5, #20	@ ivtmp.8006, tmp192,
	beq	.L2922	@,
.L2926:
	ldr	lr, [r4, #28]	@ <variable>.initial_cpb_removal_delay_length_minus1, <variable>.initial_cpb_removal_delay_length_minus1
	movw	r2, #:lower16:.LC568	@,
	ldr	r0, [r6, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC568	@,
	add	r1, lr, #1	@, <variable>.initial_cpb_removal_delay_length_minus1,
	add	r8, r8, #1	@ i, i,
	bl	HEVC_u_v	@
	movw	r2, #:lower16:.LC569	@,
	movt	r2, #:upper16:.LC569	@,
	str	r0, [r5, #0]	@, <variable>.initial_cpb_removal_delay
	ldr	r3, [r4, #28]	@ <variable>.initial_cpb_removal_delay_length_minus1, <variable>.initial_cpb_removal_delay_length_minus1
	ldr	r0, [r6, r7]	@, <variable>.pBS
	add	r1, r3, #1	@, <variable>.initial_cpb_removal_delay_length_minus1,
	bl	HEVC_u_v	@
	movw	r2, #:lower16:.LC570	@,
	movt	r2, #:upper16:.LC570	@,
	str	r0, [r5, #4]	@, <variable>.initial_cpb_removal_offset
	ldrb	ip, [r4, #2]	@ zero_extendqisi2	@ <variable>.sub_pic_hrd_params_present_flag, <variable>.sub_pic_hrd_params_present_flag
	cmp	ip, #0	@ <variable>.sub_pic_hrd_params_present_flag,
	bne	.L2924	@,
	ldrb	r1, [sl, #0]	@ zero_extendqisi2	@ <variable>.irap_cpb_params_present_flag, <variable>.irap_cpb_params_present_flag
	cmp	r1, #0	@ <variable>.irap_cpb_params_present_flag,
	beq	.L2925	@,
.L2924:
	ldr	r3, [r4, #28]	@ <variable>.initial_cpb_removal_delay_length_minus1, <variable>.initial_cpb_removal_delay_length_minus1
	ldr	r0, [r6, r7]	@, <variable>.pBS
	add	r1, r3, #1	@, <variable>.initial_cpb_removal_delay_length_minus1,
	bl	HEVC_u_v	@
	movw	r2, #:lower16:.LC571	@,
	movt	r2, #:upper16:.LC571	@,
	str	r0, [r5, #8]	@, <variable>.initial_alt_cpb_removal_delay
	ldr	ip, [r4, #28]	@ <variable>.initial_cpb_removal_delay_length_minus1, <variable>.initial_cpb_removal_delay_length_minus1
	ldr	r0, [r6, r7]	@, <variable>.pBS
	add	r1, ip, #1	@, <variable>.initial_cpb_removal_delay_length_minus1,
	bl	HEVC_u_v	@
	str	r0, [r5, #12]	@, <variable>.initial_alt_cpb_removal_offset
.L2925:
	ldr	r2, [r4, #48]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	add	r5, r5, #32	@ ivtmp.8006, ivtmp.8006,
	add	r0, r2, #1	@ tmp213, <variable>.cpb_cnt_minus1,
	cmp	r0, r8	@ tmp213, i
	bhi	.L2926	@,
.L2922:
	ldr	lr, [fp, #-48]	@, %sfp
	cmp	lr, #1	@,
	bls	.L2920	@,
	movw	r1, #:lower16:1960172	@ tmp215,
	movt	r1, #:upper16:1960172	@ tmp215,
	ldr	r0, [r6, r1]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, #0	@ D.41345,
.L2913:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2933:
	ldrb	r1, [r4, #0]	@ zero_extendqisi2	@ <variable>.nal_hrd_parameters_present_flag, <variable>.nal_hrd_parameters_present_flag
	cmp	r1, #0	@ <variable>.nal_hrd_parameters_present_flag,
	bne	.L2923	@,
.L2920:
	ldr	r3, [fp, #-48]	@, %sfp
	add	r9, r9, #1	@ ivtmp.8012, ivtmp.8012,
	add	lr, r3, #1	@,,
	str	lr, [fp, #-48]	@, %sfp
	b	.L2918	@
.L2930:
	ldr	r0, [r6, r5]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC562	@,
	movt	r2, #:upper16:.LC562	@,
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ prephitmp.7991,
	strb	r0, [sl, #0]	@ prephitmp.7991, <variable>.irap_cpb_params_present_flag
	cmp	r0, #0	@ prephitmp.7991,
	beq	.L2916	@,
.L2931:
	ldr	r0, [r4, #32]	@ <variable>.au_cpb_removal_delay_length_minus1, <variable>.au_cpb_removal_delay_length_minus1
	movw	r5, #:lower16:1960172	@ tmp165,
	movt	r5, #:upper16:1960172	@ tmp165,
	movw	r2, #:lower16:.LC563	@,
	add	r1, r0, #1	@, <variable>.au_cpb_removal_delay_length_minus1,
	movt	r2, #:upper16:.LC563	@,
	ldr	r0, [r6, r5]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r2, #:lower16:.LC564	@,
	movt	r2, #:upper16:.LC564	@,
	str	r0, [sl, #8]	@, <variable>.cpb_delay_offset
	ldr	r1, [r4, #36]	@ <variable>.dpb_output_delay_length_minus1, <variable>.dpb_output_delay_length_minus1
	ldr	r0, [r6, r5]	@, <variable>.pBS
	add	r1, r1, #1	@, <variable>.dpb_output_delay_length_minus1,
	bl	HEVC_u_v	@
	str	r0, [sl, #12]	@, <variable>.dpb_delay_offset
	b	.L2916	@
.L2932:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC567	@,
	movt	r1, #:upper16:.LC567	@,
	mov	r9, #0	@ tmp186,
	bl	dprint_vfmw	@
	str	r9, [r4, #48]	@ tmp186, <variable>.cpb_cnt_minus1
	b	.L2917	@
.L2929:
	mov	r2, r0	@, D.41340
	movw	r1, #:lower16:.LC561	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC561	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41345,
	b	.L2913	@
	.fnend
	.size	HEVC_Sei_Buf_Period, .-HEVC_Sei_Buf_Period
	.align	2
	.global	HEVC_Sei_Active_Param_sets
	.type	HEVC_Sei_Active_Param_sets, %function
HEVC_Sei_Active_Param_sets:
	.fnstart
.LFB1567:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:1960172	@ tmp146,
	movt	r6, #:upper16:1960172	@ tmp146,
	mov	r5, r1	@ pAct, pAct
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r1, #4	@,
	ldr	r0, [r0, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC572	@,
	movt	r2, #:upper16:.LC572	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC573	@,
	movt	r2, #:upper16:.LC573	@,
	str	r0, [r5, #4]	@, <variable>.active_video_parameter_set_id
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC574	@,
	movt	r2, #:upper16:.LC574	@,
	strb	r0, [r5, #0]	@, <variable>.self_contained_cvs_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC575	@,
	movt	r1, #:upper16:.LC575	@,
	strb	r0, [r5, #1]	@, <variable>.no_parameter_set_update_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #15	@ D.41314,
	str	r0, [r5, #8]	@ D.41314, <variable>.num_sps_ids_minus1
	bgt	.L2935	@,
	cmp	r0, #0	@ D.41314,
	movge	r8, r5	@ ivtmp.8069, pAct
	movge	r7, #0	@ i,
	blt	.L2937	@,
.L2939:
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r1, #:lower16:.LC577	@,
	movt	r1, #:upper16:.LC577	@,
	add	r7, r7, #1	@ i, i,
	bl	HEVC_ue_v	@
	ldr	r3, [r5, #8]	@ <variable>.num_sps_ids_minus1, <variable>.num_sps_ids_minus1
	cmp	r3, r7	@ <variable>.num_sps_ids_minus1, i
	str	r0, [r8, #12]	@, <variable>.active_seq_parameter_set_id
	add	r8, r8, #4	@ ivtmp.8069, ivtmp.8069,
	bge	.L2939	@,
.L2937:
	movw	r1, #:lower16:1960172	@ tmp164,
	movt	r1, #:upper16:1960172	@ tmp164,
	ldr	r0, [r4, r1]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, #0	@ D.41320,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2935:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC576	@,
	movt	r1, #:upper16:.LC576	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41320,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_Active_Param_sets, .-HEVC_Sei_Active_Param_sets
	.align	2
	.global	HEVC_Sei_Dec_Unit_Info
	.type	HEVC_Sei_Dec_Unit_Info, %function
HEVC_Sei_Dec_Unit_Info:
	.fnstart
.LFB1566:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pHevcCtx,
	cmpne	r1, #0	@, pDec,
	mov	r5, r1	@ pDec, pDec
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r6, r2	@ pHrd, pHrd
	bne	.L2949	@,
.L2943:
	mvn	r0, #0	@ D.41268,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L2949:
	cmp	r2, #0	@ pHrd,
	beq	.L2943	@,
	movw	r7, #:lower16:1960172	@ tmp150,
	movt	r7, #:upper16:1960172	@ tmp150,
	movw	r1, #:lower16:.LC578	@,
	movt	r1, #:upper16:.LC578	@,
	ldr	r0, [r0, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	str	r0, [r5, #4]	@, <variable>.decoding_unit_idx
	ldrb	r3, [r6, #3]	@ zero_extendqisi2	@ <variable>.sub_pic_cpb_params_in_pic_timing_sei_flag, <variable>.sub_pic_cpb_params_in_pic_timing_sei_flag
	cmp	r3, #0	@ <variable>.sub_pic_cpb_params_in_pic_timing_sei_flag,
	streq	r3, [r5, #8]	@ <variable>.sub_pic_cpb_params_in_pic_timing_sei_flag, <variable>.du_spt_cpb_removal_delay_increment
	bne	.L2950	@,
.L2945:
	movw	r7, #:lower16:1960172	@ tmp160,
	movt	r7, #:upper16:1960172	@ tmp160,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC580	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC580	@,
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.41285,
	strb	r0, [r5, #0]	@ D.41285, <variable>.dpb_output_du_delay_present_flag
	cmp	r0, #0	@ D.41285,
	bne	.L2951	@,
.L2946:
	movw	r2, #:lower16:1960172	@ tmp169,
	movt	r2, #:upper16:1960172	@ tmp169,
	ldr	r0, [r4, r2]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, #0	@ D.41268,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L2950:
	ldr	r1, [r6, #8]	@ <variable>.du_cpb_removal_delay_increment_length_minus1, <variable>.du_cpb_removal_delay_increment_length_minus1
	movw	r2, #:lower16:.LC579	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC579	@,
	add	r1, r1, #1	@, <variable>.du_cpb_removal_delay_increment_length_minus1,
	bl	HEVC_u_v	@
	str	r0, [r5, #8]	@, <variable>.du_spt_cpb_removal_delay_increment
	b	.L2945	@
.L2951:
	ldr	ip, [r6, #12]	@ <variable>.dpb_output_delay_du_length_minus1, <variable>.dpb_output_delay_du_length_minus1
	movw	r2, #:lower16:.LC581	@,
	ldr	r0, [r4, r7]	@, <variable>.pBS
	movt	r2, #:upper16:.LC581	@,
	add	r1, ip, #1	@, <variable>.dpb_output_delay_du_length_minus1,
	bl	HEVC_u_v	@
	str	r0, [r5, #12]	@, <variable>.pic_spt_dpb_output_du_delay
	b	.L2946	@
	.fnend
	.size	HEVC_Sei_Dec_Unit_Info, .-HEVC_Sei_Dec_Unit_Info
	.align	2
	.global	HEVC_Sei_Recovery_Point
	.type	HEVC_Sei_Recovery_Point, %function
HEVC_Sei_Recovery_Point:
	.fnstart
.LFB1565:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pHevcCtx,
	cmpne	r1, #0	@, pRec,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r5, r1	@ pRec, pRec
	movne	r7, #0	@, tmp146
	moveq	r7, #1	@, tmp146
	mvneq	r0, #0	@ D.41247,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	movw	r6, #:lower16:1960172	@ tmp147,
	movt	r6, #:upper16:1960172	@ tmp147,
	movw	r1, #:lower16:.LC582	@,
	movt	r1, #:upper16:.LC582	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_se_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC583	@,
	movt	r2, #:upper16:.LC583	@,
	str	r0, [r5, #4]	@, <variable>.recovery_poc_cnt
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC584	@,
	movt	r2, #:upper16:.LC584	@,
	strb	r0, [r5, #0]	@, <variable>.exact_match_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	strb	r0, [r5, #1]	@, <variable>.broken_link_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, r7	@ D.41247, tmp146
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_Recovery_Point, .-HEVC_Sei_Recovery_Point
	.align	2
	.global	HEVC_Sei_Frame_Packing_Arrangement
	.type	HEVC_Sei_Frame_Packing_Arrangement, %function
HEVC_Sei_Frame_Packing_Arrangement:
	.fnstart
.LFB1564:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:1960172	@ tmp156,
	movt	r6, #:upper16:1960172	@ tmp156,
	mov	r5, r1	@ pFrm, pFrm
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movw	r1, #:lower16:.LC585	@,
	ldr	r0, [r0, r6]	@, <variable>.pBS
	movt	r1, #:upper16:.LC585	@,
	bl	HEVC_ue_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC586	@,
	movt	r2, #:upper16:.LC586	@,
	str	r0, [r5, #12]	@, <variable>.frame_packing_arrangement_id
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.41182,
	strb	r0, [r5, #0]	@ D.41182, <variable>.frame_packing_arrangement_cancel_flag
	cmp	r0, #0	@ D.41182,
	bne	.L2957	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	mov	r1, #7	@,
	movw	r2, #:lower16:.LC587	@,
	movt	r2, #:upper16:.LC587	@,
	bl	HEVC_u_v	@
	sub	r3, r0, #3	@ tmp166, D.41187,
	str	r0, [r5, #16]	@ D.41187, <variable>.frame_packing_arrangement_type
	cmp	r3, #2	@ tmp166,
	bhi	.L2962	@,
	mov	r1, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC589	@,
	movt	r2, #:upper16:.LC589	@,
	bl	HEVC_u_v	@
	mov	r1, #6	@,
	movw	r2, #:lower16:.LC590	@,
	movt	r2, #:upper16:.LC590	@,
	strb	r0, [r5, #1]	@, <variable>.quincunx_sampling_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC591	@,
	movt	r2, #:upper16:.LC591	@,
	str	r0, [r5, #20]	@, <variable>.content_interpretation_type
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC592	@,
	movt	r2, #:upper16:.LC592	@,
	strb	r0, [r5, #2]	@, <variable>.spatial_flipping_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC593	@,
	movt	r2, #:upper16:.LC593	@,
	strb	r0, [r5, #3]	@, <variable>.frame0_flipped_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC594	@,
	movt	r2, #:upper16:.LC594	@,
	strb	r0, [r5, #4]	@, <variable>.field_views_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC595	@,
	movt	r2, #:upper16:.LC595	@,
	strb	r0, [r5, #5]	@, <variable>.current_frame_is_frame0_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC596	@,
	movt	r2, #:upper16:.LC596	@,
	strb	r0, [r5, #6]	@, <variable>.frame0_self_contained_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldrb	r1, [r5, #1]	@ zero_extendqisi2	@ <variable>.quincunx_sampling_flag, <variable>.quincunx_sampling_flag
	cmp	r1, #0	@ <variable>.quincunx_sampling_flag,
	strb	r0, [r5, #7]	@, <variable>.frame1_self_contained_flag
	bne	.L2960	@,
	ldr	r2, [r5, #16]	@ <variable>.frame_packing_arrangement_type, <variable>.frame_packing_arrangement_type
	cmp	r2, #5	@ <variable>.frame_packing_arrangement_type,
	beq	.L2960	@,
	mov	r1, #4	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC597	@,
	movt	r2, #:upper16:.LC597	@,
	bl	HEVC_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC598	@,
	movt	r2, #:upper16:.LC598	@,
	str	r0, [r5, #24]	@, <variable>.frame0_grid_position_x
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC599	@,
	movt	r2, #:upper16:.LC599	@,
	str	r0, [r5, #28]	@, <variable>.frame0_grid_position_y
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC600	@,
	movt	r2, #:upper16:.LC600	@,
	str	r0, [r5, #32]	@, <variable>.frame1_grid_position_x
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	str	r0, [r5, #36]	@, <variable>.frame1_grid_position_y
.L2960:
	movw	r6, #:lower16:1960172	@ tmp213,
	movt	r6, #:upper16:1960172	@ tmp213,
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC601	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC601	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC602	@,
	movt	r2, #:upper16:.LC602	@,
	str	r0, [r5, #40]	@, <variable>.frame_packing_arrangement_reserved_byte
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	strb	r0, [r5, #8]	@, <variable>.frame_packing_arrangement_persistence_flag
.L2957:
	movw	r6, #:lower16:1960172	@ tmp220,
	movt	r6, #:upper16:1960172	@ tmp220,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC603	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC603	@,
	bl	HEVC_u_v	@
	strb	r0, [r5, #9]	@, <variable>.upsampled_aspect_ratio_flag
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, #0	@ D.41193,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2962:
	mov	r2, r0	@, D.41187
	movw	r1, #:lower16:.LC588	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC588	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41193,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_Frame_Packing_Arrangement, .-HEVC_Sei_Frame_Packing_Arrangement
	.align	2
	.global	HEVC_Sei_Display_Orientation
	.type	HEVC_Sei_Display_Orientation, %function
HEVC_Sei_Display_Orientation:
	.fnstart
.LFB1563:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pHevcCtx,
	cmpne	r1, #0	@, pDis,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r5, r1	@ pDis, pDis
	mvneq	r0, #0	@ D.41154,
	ldmeqfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	movw	r6, #:lower16:1960172	@ tmp150,
	movt	r6, #:upper16:1960172	@ tmp150,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC604	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC604	@,
	bl	HEVC_u_v	@
	uxtb	r0, r0	@ D.41158,
	strb	r0, [r5, #2]	@ D.41158, <variable>.display_orientation_cancel_flag
	cmp	r0, #0	@ D.41158,
	beq	.L2968	@,
	movw	r3, #:lower16:1960172	@ tmp169,
	movt	r3, #:upper16:1960172	@ tmp169,
	ldr	r0, [r4, r3]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, #0	@ D.41154,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2968:
	mov	r1, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movw	r2, #:lower16:.LC605	@,
	movt	r2, #:upper16:.LC605	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC606	@,
	movt	r2, #:upper16:.LC606	@,
	strb	r0, [r5, #0]	@, <variable>.hor_flip
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC607	@,
	movt	r2, #:upper16:.LC607	@,
	strb	r0, [r5, #1]	@, <variable>.ver_flip
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC608	@,
	movt	r2, #:upper16:.LC608	@,
	str	r0, [r5, #4]	@, <variable>.anticlockwise_rotation
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r3, #:lower16:1960172	@ tmp169,
	movt	r3, #:upper16:1960172	@ tmp169,
	strb	r0, [r5, #3]	@, <variable>.display_orientation_persistence_flag
	ldr	r0, [r4, r3]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, #0	@ D.41154,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_Display_Orientation, .-HEVC_Sei_Display_Orientation
	.align	2
	.global	HEVC_Sei_Temporal_Sub_Layer_Zero_Index
	.type	HEVC_Sei_Temporal_Sub_Layer_Zero_Index, %function
HEVC_Sei_Temporal_Sub_Layer_Zero_Index:
	.fnstart
.LFB1562:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pHevcCtx,
	cmpne	r1, #0	@, pTem,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r5, r1	@ pTem, pTem
	movne	r7, #0	@, tmp145
	moveq	r7, #1	@, tmp145
	mvneq	r0, #0	@ D.41139,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	movw	r6, #:lower16:1960172	@ tmp146,
	movt	r6, #:upper16:1960172	@ tmp146,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC609	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC609	@,
	bl	HEVC_u_v	@
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC610	@,
	movt	r2, #:upper16:.LC610	@,
	str	r0, [r5, #0]	@, <variable>.temporal_sub_layer_zero_idx
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	str	r0, [r5, #4]	@, <variable>.irap_pic_id
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, r7	@ D.41139, tmp145
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_Temporal_Sub_Layer_Zero_Index, .-HEVC_Sei_Temporal_Sub_Layer_Zero_Index
	.align	2
	.global	HEVC_Sei_Structure_Of_Pictures_Info
	.type	HEVC_Sei_Structure_Of_Pictures_Info, %function
HEVC_Sei_Structure_Of_Pictures_Info:
	.fnstart
.LFB1559:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:1960172	@ tmp148,
	movt	r7, #:upper16:1960172	@ tmp148,
	mov	r8, r1	@ pSop, pSop
	mov	r6, r0	@ pHevcCtx, pHevcCtx
	movw	r1, #:lower16:.LC611	@,
	ldr	r0, [r0, r7]	@, <variable>.pBS
	movt	r1, #:upper16:.LC611	@,
	bl	HEVC_ue_v	@
	movw	r1, #:lower16:.LC612	@,
	movt	r1, #:upper16:.LC612	@,
	str	r0, [r8, #0]	@, <variable>.sop_seq_parameter_set_id
	ldr	r0, [r6, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #1024	@ D.40993,
	str	r0, [r8, #4]	@ D.40993, <variable>.num_entries_in_sop_minus1
	bhi	.L2974	@,
	cmp	r0, #0	@ D.40993,
	movne	r4, r8	@ ivtmp.8251, pSop
	movne	r5, #0	@ i,
	bne	.L2980	@,
	b	.L2976	@
.L2979:
	ldr	r0, [r8, #4]	@ <variable>.num_entries_in_sop_minus1, <variable>.num_entries_in_sop_minus1
	add	r4, r4, #4	@ ivtmp.8251, ivtmp.8251,
	cmp	r0, r5	@ <variable>.num_entries_in_sop_minus1, i
	bls	.L2976	@,
.L2980:
	mov	r1, #6	@,
	ldr	r0, [r6, r7]	@, <variable>.pBS
	movw	r2, #:lower16:.LC614	@,
	movt	r2, #:upper16:.LC614	@,
	bl	HEVC_u_v	@
	mov	r1, #3	@,
	movw	r2, #:lower16:.LC615	@,
	movt	r2, #:upper16:.LC615	@,
	str	r0, [r4, #8]	@, <variable>.sop_vcl_nut
	ldr	r0, [r6, r7]	@, <variable>.pBS
	bl	HEVC_u_v	@
	ldr	ip, [r4, #8]	@ tmp162, <variable>.sop_vcl_nut
	add	r3, r4, #4096	@ tmp160, ivtmp.8251,
	movw	r1, #:lower16:.LC616	@,
	sub	r2, ip, #19	@ tmp161, tmp162,
	movt	r1, #:upper16:.LC616	@,
	cmp	r2, #1	@ tmp161,
	str	r0, [r3, #8]	@, <variable>.sop_temporal_id
	bls	.L2978	@,
	ldr	r0, [r6, r7]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	add	r1, r4, #8192	@ tmp167, ivtmp.8251,
	str	r0, [r1, #8]	@, <variable>.sop_short_term_rps_idx
.L2978:
	cmp	r5, #0	@ i,
	add	r5, r5, #1	@ i, i,
	beq	.L2979	@,
	ldr	r0, [r6, r7]	@, <variable>.pBS
	movw	r1, #:lower16:.LC617	@,
	movt	r1, #:upper16:.LC617	@,
	bl	HEVC_se_v	@
	add	r3, r4, #12288	@ tmp172, ivtmp.8251,
	add	r4, r4, #4	@ ivtmp.8251, ivtmp.8251,
	str	r0, [r3, #8]	@, <variable>.sop_poc_delta
	ldr	r0, [r8, #4]	@ <variable>.num_entries_in_sop_minus1, <variable>.num_entries_in_sop_minus1
	cmp	r0, r5	@ <variable>.num_entries_in_sop_minus1, i
	bhi	.L2980	@,
.L2976:
	movw	lr, #:lower16:1960172	@ tmp174,
	movt	lr, #:upper16:1960172	@ tmp174,
	ldr	r0, [r6, lr]	@, <variable>.pBS
	bl	BsToNextByte	@
	mov	r0, #0	@ D.40998,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2974:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC613	@,
	movt	r1, #:upper16:.LC613	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40998,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_Structure_Of_Pictures_Info, .-HEVC_Sei_Structure_Of_Pictures_Info
	.align	2
	.global	HEVC_Sei_More_Data_In_Payload
	.type	HEVC_Sei_More_Data_In_Payload, %function
HEVC_Sei_More_Data_In_Payload:
	.fnstart
.LFB1555:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:1960172	@ tmp141,
	movt	r2, #:upper16:1960172	@ tmp141,
	mov	r4, r1	@ payloadSize, payloadSize
	ldr	r3, [r0, r2]	@ D.40832, <variable>.pBS
	mov	r0, r3	@, D.40832
	ldr	r6, [r3, #24]	@ D.40833, <variable>.TotalPos
	ldr	r5, [r3, #28]	@ D.40834, <variable>.HistoryPos
	bl	BsIsByteAligned	@
	cmp	r0, #0	@,
	moveq	r0, #1	@ D.40842,
	ldmeqfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	rsb	r5, r5, r6	@ tmp142, D.40834, D.40833
	cmp	r5, r4, asl #3	@ tmp142, payloadSize,
	movne	r0, #0	@, D.40842
	moveq	r0, #1	@, D.40842
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_More_Data_In_Payload, .-HEVC_Sei_More_Data_In_Payload
	.align	2
	.global	HEVC_Sei_Payload
	.type	HEVC_Sei_Payload, %function
HEVC_Sei_Payload:
	.fnstart
.LFB1554:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:1960196	@ tmp166,
	movt	r5, #:upper16:1960196	@ tmp166,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r6, [fp, #4]	@ payloadSize, payloadSize
	ldr	ip, [r0, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r5, r1	@ pSEI, pSEI
	ldr	ip, [ip, #16]	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	cmp	ip, #39	@ <variable>.nal_unit_type,
	beq	.L3035	@,
	cmp	r3, #5	@ payloadType,
	beq	.L3011	@,
	cmp	r3, #132	@ payloadType,
	beq	.L3012	@,
	cmp	r6, #0	@ payloadSize,
	beq	.L3007	@,
	movw	r8, #:lower16:1960172	@ tmp222,
	movt	r8, #:upper16:1960172	@ tmp222,
	sub	ip, r6, #1	@ tmp229, payloadSize,
	mov	r1, #8	@,
	ldr	r0, [r0, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC619	@,
	movt	r2, #:upper16:.LC619	@,
	and	sl, ip, #1	@ tmp231, tmp229,
	bl	HEVC_u_v	@
	cmp	r6, #1	@ payloadSize,
	mov	r7, #1	@ i.8333,
	bls	.L3007	@,
	cmp	sl, #0	@ tmp231,
	beq	.L3014	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC619	@,
	movt	r2, #:upper16:.LC619	@,
	bl	HEVC_u_v	@
	mov	r7, #2	@ i.8333,
	cmp	r6, r7	@ payloadSize, i.8333
	bls	.L3007	@,
.L3014:
	add	lr, r7, #1	@ tmp232, i.8333,
	mov	r1, #8	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC619	@,
	movt	r2, #:upper16:.LC619	@,
	add	r7, lr, #1	@ i.8333, tmp232,
	bl	HEVC_u_v	@
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC619	@,
	movt	r2, #:upper16:.LC619	@,
	bl	HEVC_u_v	@
	cmp	r6, r7	@ payloadSize, i.8333
	bhi	.L3014	@,
.L3007:
	mov	r0, r4	@, pHevcCtx
	mov	r1, r6	@, payloadSize
	bl	HEVC_Sei_More_Data_In_Payload	@
	cmp	r0, #0	@,
	bne	.L3036	@,
	mov	r0, #0	@ D.40754,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3012:
	add	r1, r1, #23296	@, pSEI,
	add	r1, r1, #156	@,,
	bl	HEVC_Sei_Decoded_Picture_Hash	@
	cmp	r0, #0	@,
	beq	.L3007	@,
.L3008:
	mvn	r0, #0	@ D.40754,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3035:
	cmp	r3, #47	@ payloadType,
	beq	.L2996	@,
	bhi	.L3003	@,
	cmp	r3, #5	@ payloadType,
	beq	.L3011	@,
	bhi	.L3004	@,
	cmp	r3, #0	@ payloadType,
	beq	.L2990	@,
	cmp	r3, #1	@ payloadType,
	beq	.L3037	@,
.L2989:
	cmp	r6, #0	@ payloadSize,
	beq	.L3007	@,
	movw	r8, #:lower16:1960172	@ tmp219,
	movt	r8, #:upper16:1960172	@ tmp219,
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC618	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movt	r2, #:upper16:.LC618	@,
	bl	HEVC_u_v	@
	cmp	r6, #1	@ payloadSize,
	sub	sl, r6, #1	@ tmp225, payloadSize,
	mov	r7, #1	@ i,
	and	sl, sl, #1	@ tmp227, tmp225,
	bls	.L3007	@,
	cmp	sl, #0	@ tmp227,
	beq	.L3009	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC618	@,
	movt	r2, #:upper16:.LC618	@,
	bl	HEVC_u_v	@
	mov	r7, #2	@ i,
	cmp	r6, r7	@ payloadSize, i
	bls	.L3007	@,
.L3009:
	mov	r1, #8	@,
	add	r7, r7, #1	@ tmp228, i,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	movw	r2, #:lower16:.LC618	@,
	movt	r2, #:upper16:.LC618	@,
	add	r7, r7, #1	@ i, tmp228,
	bl	HEVC_u_v	@
	ldr	r0, [r4, r8]	@, <variable>.pBS
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC618	@,
	movt	r2, #:upper16:.LC618	@,
	bl	HEVC_u_v	@
	cmp	r6, r7	@ payloadSize, i
	bhi	.L3009	@,
	b	.L3007	@
.L3036:
	mov	r1, r6	@, payloadSize
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_Sei_Payload_Extension_Present	@
	cmp	r0, #0	@,
	bne	.L3038	@,
.L3016:
	movw	r6, #:lower16:1960172	@ tmp206,
	movt	r6, #:upper16:1960172	@ tmp206,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC621	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	movt	r2, #:upper16:.LC621	@,
	bl	HEVC_u_v	@
	str	r0, [r5, #12]	@, <variable>.payload_bit_equal_to_one
	b	.L3017	@
.L3018:
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_u_v	@
	str	r0, [r5, #16]	@, <variable>.payload_bit_equal_to_zero
.L3017:
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	BsIsByteAligned	@
	movw	r2, #:lower16:.LC622	@,
	mov	r1, #1	@,
	movt	r2, #:upper16:.LC622	@,
	cmp	r0, #0	@,
	beq	.L3018	@,
	mov	r0, #0	@ D.40754,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3011:
	add	r3, r5, #3136	@, pSEI,
	mov	r2, r6	@, payloadSize
	add	r1, r3, #12	@,,
	bl	HEVC_Sei_User_Data_Unregistered	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	mvn	r0, #0	@ D.40754,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3038:
	movw	r6, #:lower16:1960172	@ tmp203,
	movt	r6, #:upper16:1960172	@ tmp203,
	movw	r1, #:lower16:.LC620	@,
	movt	r1, #:upper16:.LC620	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	str	r0, [r5, #8]	@, <variable>.reserved_payload_extension_data
	b	.L3016	@
.L3003:
	cmp	r3, #130	@ payloadType,
	beq	.L2999	@,
	bls	.L3039	@,
	cmp	r3, #133	@ payloadType,
	beq	.L3001	@,
	cmp	r3, #134	@ payloadType,
	beq	.L3002	@,
	cmp	r3, #131	@ payloadType,
	bne	.L2989	@,
	add	lr, r1, #3312	@, pSEI,
	add	r1, lr, #12	@,,
	bl	HEVC_Sei_Temporal_Sub_Layer_Zero_Index	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L2996:
	add	r2, r1, #3312	@, pSEI,
	add	r1, r2, #4	@,,
	bl	HEVC_Sei_Display_Orientation	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L3004:
	cmp	r3, #23	@ payloadType,
	beq	.L2994	@,
	cmp	r3, #45	@ payloadType,
	beq	.L2995	@,
	cmp	r3, #6	@ payloadType,
	bne	.L2989	@,
	add	r1, r1, #3264	@, pSEI,
	bl	HEVC_Sei_Recovery_Point	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L3039:
	cmp	r3, #128	@ payloadType,
	beq	.L2997	@,
	cmp	r3, #129	@ payloadType,
	bne	.L2989	@,
	add	r1, r1, #3168	@, pSEI,
	add	r1, r1, #4	@,,
	bl	HEVC_Sei_Active_Param_sets	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L2995:
	add	ip, r1, #3264	@, pSEI,
	add	r1, ip, #8	@,,
	bl	HEVC_Sei_Frame_Packing_Arrangement	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L2994:
	add	lr, r1, #3328	@, pSEI,
	add	r1, lr, #8	@,,
	bl	HEVC_Sei_Tone_Mapping_Info	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L3002:
	add	r2, r1, #3328	@, pSEI,
	add	r1, r2, #4	@,,
	bl	HEVC_Sei_Region_Refresh_Info	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L3001:
	mov	r3, r6	@, payloadSize
	bl	HEVC_Sei_Scalable_Nesting	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L3037:
	add	r3, r2, #7424	@, pSPS,
	add	r1, r1, #1056	@, pSEI,
	add	r1, r1, #12	@,,
	add	r2, r3, #24	@,,
	bl	HEVC_Sei_Pic_Timming	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L2990:
	add	r2, r2, #7552	@, pSPS,
	add	r1, r1, #24	@, pSEI,
	add	r2, r2, #4	@,,
	bl	HEVC_Sei_Buf_Period	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L2999:
	add	ip, r2, #7552	@, pSPS,
	add	r1, r1, #3248	@, pSEI,
	add	r2, ip, #4	@,,
	bl	HEVC_Sei_Dec_Unit_Info	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
.L2997:
	add	r3, r1, #6464	@, pSEI,
	mov	r2, r6	@, payloadSize
	add	r1, r3, #32	@,,
	bl	HEVC_Sei_Structure_Of_Pictures_Info	@
	cmp	r0, #0	@,
	beq	.L3007	@,
	b	.L3008	@
	.fnend
	.size	HEVC_Sei_Payload, .-HEVC_Sei_Payload
	.align	2
	.global	HEVC_SeiMessage
	.type	HEVC_SeiMessage, %function
HEVC_SeiMessage:
	.fnstart
.LFB1553:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:1960172	@ tmp169,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r6, r1	@ pSEI, pSEI
	mov	sl, r2	@ pSPS, pSPS
	movt	r8, #:upper16:1960172	@ tmp169,
	mov	r7, #0	@ payloadType,
	b	.L3041	@
.L3042:
	ldr	r0, [r4, r8]	@, <variable>.pBS
	add	r7, r7, #255	@ payloadType, payloadType,
	bl	BsSkip	@
.L3041:
	mov	r1, #8	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	BsShow	@
	movw	r5, #:lower16:1960172	@ tmp150,
	mov	r1, #8	@,
	movt	r5, #:upper16:1960172	@ tmp150,
	cmp	r0, #255	@,
	beq	.L3042	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	movw	r2, #:lower16:.LC623	@,
	movt	r2, #:upper16:.LC623	@,
	mov	r9, r5	@ tmp167, tmp150
	bl	HEVC_u_v	@
	mov	r5, #0	@ payloadSize,
	mov	r8, r0	@ D.40697,
	str	r0, [r6, #0]	@ D.40697, <variable>.last_payload_type_byte
	b	.L3043	@
.L3044:
	ldr	r0, [r4, r9]	@, <variable>.pBS
	add	r5, r5, #255	@ payloadSize, payloadSize,
	bl	BsSkip	@
.L3043:
	mov	r1, #8	@,
	ldr	r0, [r4, r9]	@, <variable>.pBS
	bl	BsShow	@
	movw	r3, #:lower16:1960172	@ tmp157,
	mov	r1, #8	@,
	movt	r3, #:upper16:1960172	@ tmp157,
	cmp	r0, #255	@,
	beq	.L3044	@,
	ldr	r0, [r4, r3]	@, <variable>.pBS
	movw	r2, #:lower16:.LC624	@,
	movt	r2, #:upper16:.LC624	@,
	bl	HEVC_u_v	@
	add	r3, r7, r8	@, payloadType, D.40697
	mov	r1, r6	@, pSEI
	mov	r2, sl	@, pSPS
	mov	ip, r0	@ D.40701,
	str	r0, [r6, #4]	@ D.40701, <variable>.last_payload_size_byte
	mov	r0, r4	@, pHevcCtx
	add	r5, ip, r5	@ tmp163, D.40701, payloadSize
	str	r5, [sp, #0]	@ tmp163,
	bl	HEVC_Sei_Payload	@
	cmp	r0, #0	@ ret
	bne	.L3048	@,
.L3046:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3048:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC625	@,
	movt	r1, #:upper16:.LC625	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40707,
	b	.L3046	@
	.fnend
	.size	HEVC_SeiMessage, .-HEVC_SeiMessage
	.align	2
	.global	HEVC_Sei_Scalable_Nesting
	.type	HEVC_Sei_Scalable_Nesting, %function
HEVC_Sei_Scalable_Nesting:
	.fnstart
.LFB1558:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	sl, #:lower16:1960172	@ tmp160,
	movt	sl, #:upper16:1960172	@ tmp160,
	mov	r6, r1	@ pSEI, pSEI
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r1, #1	@,
	mov	r9, r2	@ pSPS, pSPS
	ldr	r0, [r0, sl]	@, <variable>.pBS
	movw	r2, #:lower16:.LC626	@,
	movt	r2, #:upper16:.LC626	@,
	bl	HEVC_u_v	@
	movw	r5, #22888	@ tmp163,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC627	@,
	movt	r2, #:upper16:.LC627	@,
	strb	r0, [r6, r5]	@, <variable>.scalable_nesting.bitstream_subset_flag
	ldr	r0, [r4, sl]	@, <variable>.pBS
	bl	HEVC_u_v	@
	movw	r3, #22889	@ tmp168,
	uxtb	r0, r0	@ D.40939,
	strb	r0, [r6, r3]	@ D.40939, <variable>.scalable_nesting.nesting_op_flag
	cmp	r0, #0	@ D.40939,
	beq	.L3050	@,
	mov	r1, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.pBS
	movw	r2, #:lower16:.LC628	@,
	movt	r2, #:upper16:.LC628	@,
	bl	HEVC_u_v	@
	movw	r5, #22890	@ tmp173,
	movw	r1, #:lower16:.LC629	@,
	movt	r1, #:upper16:.LC629	@,
	movw	r8, #22896	@ tmp178,
	strb	r0, [r6, r5]	@, <variable>.scalable_nesting.default_op_flag
	ldr	r0, [r4, sl]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #7	@ D.40947,
	str	r0, [r6, r8]	@ D.40947, <variable>.scalable_nesting.nesting_num_ops_minus1
	bhi	.L3063	@,
	ldrb	r7, [r6, r5]	@ zero_extendqisi2	@ i, <variable>.scalable_nesting.default_op_flag
	cmp	r0, r7	@ D.40947, i
	bcc	.L3053	@,
	add	ip, r7, #5696	@ tmp181, i,
	add	r2, ip, #28	@ tmp181, tmp181,
	add	r1, r6, r2, asl #2	@, tmp184, pSEI, tmp181,
	add	r5, r1, #4	@ ivtmp.8408, tmp184,
.L3054:
	mov	r1, #3	@,
	ldr	r0, [r4, sl]	@, <variable>.pBS
	movw	r2, #:lower16:.LC631	@,
	movt	r2, #:upper16:.LC631	@,
	bl	HEVC_u_v	@
	movw	r1, #:lower16:.LC632	@,
	movt	r1, #:upper16:.LC632	@,
	add	r7, r7, #1	@ i, i,
	str	r0, [r5, #0]	@, <variable>.scalable_nesting.nesting_max_temporal_id_plus1
	ldr	r0, [r4, sl]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	ldr	r3, [r6, r8]	@ <variable>.scalable_nesting.nesting_num_ops_minus1, <variable>.scalable_nesting.nesting_num_ops_minus1
	cmp	r3, r7	@ <variable>.scalable_nesting.nesting_num_ops_minus1, i
	str	r0, [r5, #32]	@, <variable>.scalable_nesting.nesting_op_idx
	add	r5, r5, #4	@ ivtmp.8408, ivtmp.8408,
	bcs	.L3054	@,
.L3053:
	movw	lr, #:lower16:1960172	@ tmp209,
	movt	lr, #:upper16:1960172	@ tmp209,
	ldr	r0, [r4, lr]	@, <variable>.pBS
	bl	BsToNextByte	@
	movw	ip, #22892	@ tmp211,
	mov	r2, #0	@ tmp212,
	strb	r2, [r6, ip]	@ tmp212, <variable>.scalable_nesting.callerOwnsSEIs
.L3058:
	mov	r1, r6	@, pSEI
	mov	r2, r9	@, pSPS
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_SeiMessage	@
	cmp	r0, #0	@,
	mov	r0, r4	@, pHevcCtx
	bne	.L3064	@,
	bl	HEVC_MoreRbspData	@
	cmp	r0, #0	@ D.40979
	bne	.L3058	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3050:
	ldr	r0, [r4, sl]	@, <variable>.pBS
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC633	@,
	movt	r2, #:upper16:.LC633	@,
	bl	HEVC_u_v	@
	uxtb	r5, r0	@ D.40962,
	movw	r0, #22891	@ tmp194,
	cmp	r5, #0	@ D.40962,
	strb	r5, [r6, r0]	@ D.40962, <variable>.scalable_nesting.all_layers_flag
	bne	.L3053	@,
	mov	r1, #3	@,
	ldr	r0, [r4, sl]	@, <variable>.pBS
	movw	r2, #:lower16:.LC634	@,
	movt	r2, #:upper16:.LC634	@,
	bl	HEVC_u_v	@
	movw	r8, #23188	@ tmp199,
	movw	r1, #:lower16:.LC635	@,
	movt	r1, #:upper16:.LC635	@,
	str	r0, [r6, r8]	@, <variable>.scalable_nesting.nesting_no_op_max_temporal_id_plus1
	movw	r8, #23192	@ tmp202,
	ldr	r0, [r4, sl]	@, <variable>.pBS
	bl	HEVC_ue_v	@
	cmp	r0, #63	@ D.40969,
	str	r0, [r6, r8]	@ D.40969, <variable>.scalable_nesting.nesting_num_layers_minus1
	addls	r7, r6, #23040	@ ivtmp.8413, pSEI,
	addls	r7, r7, #156	@ ivtmp.8413, ivtmp.8413,
	bhi	.L3065	@,
.L3056:
	mov	r1, #6	@,
	ldr	r0, [r4, sl]	@, <variable>.pBS
	movw	r2, #:lower16:.LC635	@,
	movt	r2, #:upper16:.LC635	@,
	bl	HEVC_u_v	@
	ldr	r1, [r6, r8]	@ <variable>.scalable_nesting.nesting_num_layers_minus1, <variable>.scalable_nesting.nesting_num_layers_minus1
	add	r5, r5, #1	@ i.8426, i.8426,
	cmp	r1, r5	@ <variable>.scalable_nesting.nesting_num_layers_minus1, i.8426
	str	r0, [r7], #4	@, <variable>.scalable_nesting.nesting_layer_id
	bcs	.L3056	@,
	b	.L3053	@
.L3064:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC637	@,
	movt	r1, #:upper16:.LC637	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40952,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3063:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC630	@,
	movt	r1, #:upper16:.LC630	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40952,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3065:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC636	@,
	movt	r1, #:upper16:.LC636	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40952,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	HEVC_Sei_Scalable_Nesting, .-HEVC_Sei_Scalable_Nesting
	.align	2
	.global	HEVC_DecSEI
	.type	HEVC_DecSEI, %function
HEVC_DecSEI:
	.fnstart
.LFB1552:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:1997672	@ pSEI,
	movw	r6, #:lower16:2080740	@ pSPS,
	movt	r7, #:upper16:1997672	@ pSEI,
	movt	r6, #:upper16:2080740	@ pSPS,
	movw	r8, #:lower16:1960172	@ tmp153,
	add	r7, r0, r7	@ pSEI, pHevcCtx, pSEI
	add	r6, r0, r6	@ pSPS, pHevcCtx, pSPS
	movt	r8, #:upper16:1960172	@ tmp153,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
.L3070:
	mov	r1, r7	@, pSEI
	mov	r2, r6	@, pSPS
	mov	r0, r4	@, pHevcCtx
	movw	r5, #:lower16:1960172	@ tmp145,
	bl	HEVC_SeiMessage	@
	movt	r5, #:upper16:1960172	@ tmp145,
	cmp	r0, #0	@,
	bne	.L3074	@,
	ldr	r0, [r4, r8]	@, <variable>.pBS
	bl	BsIsByteAligned	@
	cmp	r0, #0	@,
	mov	r0, r4	@, pHevcCtx
	beq	.L3075	@,
	bl	HEVC_More_Rbsp_Data	@
	subs	sl, r0, #0	@ D.40674,
	bne	.L3070	@,
	ldr	r0, [r4, r5]	@, <variable>.pBS
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC639	@,
	movt	r2, #:upper16:.LC639	@,
	bl	HEVC_u_v	@
	cmp	r0, #128	@ rbsp_trailing_bits,
	moveq	r0, sl	@ D.40668, D.40674
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	mov	r2, r0	@, rbsp_trailing_bits
	movw	r1, #:lower16:.LC640	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC640	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40668,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3074:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC637	@,
	movt	r1, #:upper16:.LC637	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40668,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3075:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC638	@,
	movt	r1, #:upper16:.LC638	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40668,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	HEVC_DecSEI, .-HEVC_DecSEI
	.align	2
	.global	HEVC_PrintDPBState
	.type	HEVC_PrintDPBState, %function
HEVC_PrintDPBState:
	.fnstart
.LFB1535:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #68
	sub	sp, sp, #68	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC641	@,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movt	r1, #:upper16:.LC641	@,
	mov	r0, #1	@,
	movw	r9, #:lower16:1960380	@ tmp165,
	bl	dprint_vfmw	@
	movt	r9, #:upper16:1960380	@ tmp165,
	movw	r1, #:lower16:1960384	@ tmp161,
	movw	ip, #:lower16:1960388	@ tmp163,
	movt	r1, #:upper16:1960384	@ tmp161,
	movt	ip, #:upper16:1960388	@ tmp163,
	movw	r6, #:lower16:1960372	@ tmp159,
	movw	r0, #:lower16:1960368	@ tmp157,
	ldr	r5, [r4, r1]	@ <variable>.DPB.negative_ref_frames_in_buffer, <variable>.DPB.negative_ref_frames_in_buffer
	movt	r6, #:upper16:1960372	@ tmp159,
	ldr	lr, [r4, ip]	@ <variable>.DPB.positive_ref_frames_in_buffer, <variable>.DPB.positive_ref_frames_in_buffer
	movt	r0, #:upper16:1960368	@ tmp157,
	ldr	ip, [r4, r9]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	movw	r1, #:lower16:.LC642	@,
	ldr	r2, [r4, r0]	@ <variable>.DPB.size, <variable>.DPB.size
	movt	r1, #:upper16:.LC642	@,
	ldr	r3, [r4, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r0, #1	@,
	stmia	sp, {r5, lr}	@ phole stm
	str	ip, [sp, #8]	@ <variable>.DPB.ltref_frames_in_buffer,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L3077	@,
	movw	r5, #:lower16:1960392	@ ivtmp.8491,
	movt	r5, #:upper16:1960392	@ ivtmp.8491,
	add	r5, r4, r5	@ ivtmp.8491, pHevcCtx, ivtmp.8491
	mov	r6, #0	@ j.8504,
.L3078:
	ldr	lr, [r5, #0]	@ D.38906, <variable>.DPB.fs
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r3, [lr, #12]	@, <variable>.poc
	ldrb	r9, [lr, #2]	@ zero_extendqisi2	@ D.38913, <variable>.is_displayed
	ldr	r1, [lr, #32]	@, <variable>.logic_fs_id
	ldrb	sl, [lr, #0]	@ zero_extendqisi2	@ D.38908, <variable>.non_existing
	ldr	r7, [lr, #4]	@ D.38909, <variable>.eFrameStoreState
	ldrb	r8, [lr, #1]	@ zero_extendqisi2	@ D.38911, <variable>.is_reference
	str	r3, [fp, #-60]	@, %sfp
	ldr	ip, [lr, #52]	@, <variable>.frame.is_long_term
	str	ip, [fp, #-56]	@, %sfp
	bl	FSP_GetLogicFs	@
	str	r0, [fp, #-52]	@, %sfp
	ldr	r2, [r5, #0]	@ tmp173, <variable>.DPB.fs
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r2, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetRef	@
	str	r0, [fp, #-48]	@, %sfp
	ldr	r3, [r5, #0]	@ tmp176, <variable>.DPB.fs
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r3, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	ldr	ip, [r5], #4	@ temp.8502, <variable>.DPB.fs
	ldr	lr, [fp, #-56]	@, %sfp
	mov	r2, r6	@, j.8504
	str	r9, [sp, #12]	@ D.38913,
	movw	r1, #:lower16:.LC643	@,
	ldr	r9, [fp, #-60]	@, %sfp
	mov	r3, ip	@, temp.8502
	str	lr, [sp, #20]	@,
	movt	r1, #:upper16:.LC643	@,
	ldr	lr, [fp, #-48]	@, %sfp
	add	r6, r6, #1	@ j.8504, j.8504,
	str	r9, [sp, #16]	@,
	ldr	r9, [fp, #-52]	@, %sfp
	str	sl, [sp, #0]	@ D.38908,
	stmib	sp, {r7, r8}	@ phole stm
	str	r9, [sp, #24]	@,
	str	lr, [sp, #28]	@,
	str	r0, [sp, #32]	@,
	mov	r0, #1	@,
	ldr	r9, [ip, #32]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	str	r9, [sp, #36]	@ <variable>.logic_fs_id,
	ldr	lr, [ip, #268]	@ <variable>.fs_image.image_id, <variable>.fs_image.image_id
	str	lr, [sp, #40]	@ <variable>.fs_image.image_id,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:1960372	@,
	movt	r2, #:upper16:1960372	@,
	ldr	r3, [r4, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, r6	@ <variable>.DPB.used_size, j.8504
	bhi	.L3078	@,
.L3077:
	movw	r9, #:lower16:1960372	@ tmp182,
	movt	r9, #:upper16:1960372	@ tmp182,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	bl	dprint_vfmw	@
	ldr	r1, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, #0	@ <variable>.DPB.used_size,
	beq	.L3079	@,
	movw	r6, #:lower16:1960392	@ ivtmp.8486,
	mov	r7, #0	@ j,
	movt	r6, #:upper16:1960392	@ ivtmp.8486,
	mov	r8, r7	@ j, j
	add	r6, r4, r6	@ ivtmp.8486, pHevcCtx, ivtmp.8486
	b	.L3086	@
.L3090:
	bl	dprint_vfmw	@
	ldr	r2, [r5, #512]	@, <variable>.u32Tick
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC646	@,
	movt	r1, #:upper16:.LC646	@,
	bl	dprint_vfmw	@
	ldrsb	r2, [r5, #0]	@, <variable>.s32IsRef
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC647	@,
	movt	r1, #:upper16:.LC647	@,
	bl	dprint_vfmw	@
	ldrsb	r2, [r5, #1]	@, <variable>.s32DispState
	movw	r1, #:lower16:.LC648	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC648	@,
	bl	dprint_vfmw	@
	subs	r2, sl, #0	@, pDecFs
	movw	r1, #:lower16:.LC650	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC650	@,
	beq	.L3082	@,
.L3091:
	bl	dprint_vfmw	@
	ldr	r2, [sl, #56]	@, <variable>.u32Tick
	movw	r1, #:lower16:.LC651	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC651	@,
	bl	dprint_vfmw	@
	subs	r2, r7, #0	@, pDispFs
	movw	r1, #:lower16:.LC653	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC653	@,
	beq	.L3084	@,
.L3092:
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC654	@,
	ldr	r2, [r7, #56]	@, <variable>.u32Tick
	movt	r1, #:upper16:.LC654	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
.L3085:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	add	r8, r8, r0	@ j, j,
	bl	dprint_vfmw	@
	ldr	r0, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r6, r6, #4	@ ivtmp.8486, ivtmp.8486,
	cmp	r0, r8	@ <variable>.DPB.used_size, j
	bls	.L3079	@,
.L3086:
	ldr	r5, [r6, #0]	@ tmp186, <variable>.DPB.fs
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	ldr	r1, [r5, #32]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	sl, [r6, #0]	@ tmp189, <variable>.DPB.fs
	ldr	r1, [sl, #32]	@, <variable>.logic_fs_id
	mov	r5, r0	@ pLogicFs,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_GetDecPhyFs	@
	ldr	r2, [r6, #0]	@ tmp192, <variable>.DPB.fs
	ldr	r1, [r2, #32]	@, <variable>.logic_fs_id
	mov	sl, r0	@ pDecFs,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_GetDispPhyFs	@
	mov	r2, r8	@, j
	movw	r1, #:lower16:.LC644	@,
	movt	r1, #:upper16:.LC644	@,
	mov	r7, r0	@ pDispFs,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	cmp	r5, #0	@ pLogicFs,
	movw	r1, #:lower16:.LC645	@,
	mov	r2, r5	@, pLogicFs
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC645	@,
	bne	.L3090	@,
	movw	r1, #:lower16:.LC649	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC649	@,
	bl	dprint_vfmw	@
	subs	r2, sl, #0	@, pDecFs
	movw	r1, #:lower16:.LC650	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC650	@,
	bne	.L3091	@,
.L3082:
	movw	r1, #:lower16:.LC652	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC652	@,
	bl	dprint_vfmw	@
	subs	r2, r7, #0	@, pDispFs
	movw	r1, #:lower16:.LC653	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC653	@,
	bne	.L3092	@,
.L3084:
	movw	r1, #:lower16:.LC655	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC655	@,
	bl	dprint_vfmw	@
	b	.L3085	@
.L3079:
	movw	r1, #:lower16:.LC656	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC656	@,
	bl	dprint_vfmw	@
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	HEVC_PrintDPBState, .-HEVC_PrintDPBState
	.align	2
	.global	HEVCDEC_GetImageBuffer
	.type	HEVCDEC_GetImageBuffer, %function
HEVCDEC_GetImageBuffer:
	.fnstart
.LFB1668:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #16
	sub	sp, sp, #16	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #168]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	cmp	r3, #0	@ <variable>.TotalFsNum,
	beq	.L3094	@,
	movw	r1, #:lower16:2124809	@ tmp149,
	movt	r1, #:upper16:2124809	@ tmp149,
	ldrb	r0, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	cmp	r0, #1	@ <variable>.CurrPic.state,
	beq	.L3094	@,
	movw	r6, #:lower16:4306452	@ ivtmp.8551,
	movw	r7, #:lower16:1960396	@ ivtmp.8543,
	movt	r6, #:upper16:4306452	@ ivtmp.8551,
	movt	r7, #:upper16:1960396	@ ivtmp.8543,
	movw	r8, #:lower16:1960372	@ tmp188,
	movw	sl, #:lower16:1960392	@ tmp189,
	add	r6, r4, r6	@ ivtmp.8551, pHevcCtx, ivtmp.8551
	add	r7, r4, r7	@ ivtmp.8543, pHevcCtx, ivtmp.8543
	movt	r8, #:upper16:1960372	@ tmp188,
	movt	sl, #:upper16:1960392	@ tmp189,
	mov	lr, #0	@ i,
.L3103:
	ldr	r1, [r6, #0]	@ <variable>.eFrameStoreState, <variable>.eFrameStoreState
	cmp	r1, #0	@ <variable>.eFrameStoreState,
	bne	.L3095	@,
	add	r0, lr, lr, asl #3	@, tmp155, i, i,
	movw	ip, #:lower16:4306448	@ tmp157,
	movt	ip, #:upper16:4306448	@ tmp157,
	mov	r3, r0, asl #6	@ tmp156, tmp155,
	add	r2, r3, ip	@ tmp157, tmp156, tmp157
	adds	r0, r4, r2	@ D.47373, pHevcCtx, tmp157
	beq	.L3096	@,
	ldr	r5, [r4, r8]	@ D.48134, <variable>.DPB.used_size
	cmp	r5, #0	@ D.48134,
	beq	.L3096	@,
	ldr	r2, [r4, sl]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r0, r2	@ D.47373, <variable>.DPB.fs
	beq	.L3095	@,
	tst	r5, #1	@ D.48134,
	mov	r2, r7	@ ivtmp.8543, ivtmp.8543
	bne	.L3097	@,
	mov	r1, #1	@ i,
	cmp	r1, r5	@ i, D.48134
	bcs	.L3096	@,
	mov	r2, r7	@ ivtmp.8543, ivtmp.8543
	ldr	r3, [r2], #4	@ D.48135, <variable>.DPB.fs
	cmp	r0, r3	@ D.47373, D.48135
	bne	.L3097	@,
	b	.L3095	@
.L3098:
	ldr	ip, [r3], #4	@ D.48135, <variable>.DPB.fs
	cmp	r0, ip	@ D.47373, D.48135
	beq	.L3095	@,
	ldr	ip, [r2, #4]	@ D.48135, <variable>.DPB.fs
	add	r2, r3, #4	@ ivtmp.8543, tmp195,
	cmp	r0, ip	@ D.47373, D.48135
	beq	.L3095	@,
.L3097:
	add	r1, r1, #1	@ tmp196, i,
	mov	r3, r2	@ tmp195, ivtmp.8543
	cmp	r1, r5	@ tmp196, D.48134
	add	r1, r1, #1	@ i, tmp196,
	bcc	.L3098	@,
.L3096:
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmp	r0, #1	@ ret,
	beq	.L3094	@,
	cmn	r0, #1	@ ret,
	beq	.L3111	@,
	add	r3, r4, #2129920	@, pHevcCtx,
	add	r0, r3, #2816	@,,
	bl	IsVoQueueEmpty	@
	cmp	r0, #1	@,
	beq	.L3112	@,
.L3101:
	mov	r0, #0	@ D.47366,
	b	.L3100	@
.L3094:
	mov	r0, #1	@ D.47366,
.L3100:
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
.L3095:
	add	lr, lr, #1	@ i, i,
	add	r6, r6, #576	@ ivtmp.8551, ivtmp.8551,
	cmp	lr, #20	@ i,
	bne	.L3103	@,
	add	lr, r4, #2129920	@, pHevcCtx,
	sub	r2, fp, #44	@,,
	add	r0, lr, #2816	@,,
	sub	r1, fp, #40	@,,
	bl	GetQueueImgNum	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_PrintFrameStoreState	@
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC660	@,
	movt	r1, #:upper16:.LC660	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_PrintDPBState	@
	ldr	ip, [r4, #168]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	movw	r2, #:lower16:1960372	@ tmp181,
	movt	r2, #:upper16:1960372	@ tmp181,
	sub	r1, ip, #2	@ tmp179, <variable>.TotalFsNum,
	ldr	r3, [fp, #-40]	@ ReadImgNum.821, ReadImgNum
	ldr	r0, [r4, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	ldr	ip, [fp, #-44]	@ NewImgNum.822, NewImgNum
	rsb	r2, r0, r1	@ tmp182, <variable>.DPB.used_size, tmp179
	add	r1, ip, r3	@ tmp178, NewImgNum.822, ReadImgNum.821
	cmp	r1, r2	@ tmp178, tmp182
	bge	.L3101	@,
	ldr	r2, .L3113	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC661	@,
	movt	r1, #:upper16:.LC661	@,
	str	ip, [sp, #0]	@ NewImgNum.822,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	mov	r1, #1	@,
	bl	HEVC_ClearAll	@
	mov	r0, #0	@ D.47366,
	b	.L3100	@
.L3111:
	add	lr, r4, #2129920	@, pHevcCtx,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	add	r1, lr, #2816	@,,
	bl	FSP_ClearNotInVoQueue	@
	mov	r0, #0	@ D.47366,
	b	.L3100	@
.L3112:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC657	@,
	movt	r1, #:upper16:.LC657	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_PrintDPBState	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RemoveUnusedApcStore	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RemoveUnUsedFrameStore	@
	cmp	r0, #1	@,
	beq	.L3102	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC658	@,
	movt	r1, #:upper16:.LC658	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearDPB	@
	mov	r0, #0	@ D.47366,
	b	.L3100	@
.L3102:
	movw	r0, #:lower16:1960372	@ tmp171,
	movw	ip, #:lower16:1960368	@ tmp172,
	movt	r0, #:upper16:1960372	@ tmp171,
	movt	ip, #:upper16:1960368	@ tmp172,
	movw	r1, #:lower16:.LC659	@,
	movt	r1, #:upper16:.LC659	@,
	ldr	r2, [r4, r0]	@, <variable>.DPB.used_size
	mov	r0, #0	@,
	ldr	r3, [r4, ip]	@, <variable>.DPB.size
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.47366,
	b	.L3100	@
.L3114:
	.align	2
.L3113:
	.word	.LANCHOR1+700
	.fnend
	.size	HEVCDEC_GetImageBuffer, .-HEVCDEC_GetImageBuffer
	.align	2
	.global	HEVC_InsertFrmInDPB
	.type	HEVC_InsertFrmInDPB, %function
HEVC_InsertFrmInDPB:
	.fnstart
.LFB1622:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #16	@ pos,
	mov	r7, r1	@ pos, pos
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	mov	r6, r2	@ pCurrPic, pCurrPic
	bhi	.L3120	@,
	ldr	ip, [r2, #44]	@ D.45241, <variable>.frame_store
	movw	r5, #:lower16:490098	@ tmp147,
	movt	r5, #:upper16:490098	@ tmp147,
	mov	r1, #1	@ tmp149,
	add	r5, r7, r5	@ tmp147, pos, tmp147
	mov	r2, r1	@, tmp149
	str	ip, [r0, r5, asl #2]	@ D.45241, <variable>.DPB.fs
	str	r1, [ip, #4]	@ tmp149, <variable>.eFrameStoreState
	ldr	lr, [r0, r5, asl #2]	@ tmp153, <variable>.DPB.fs
	ldr	r0, [r0, #236]	@, <variable>.ChanID
	ldr	r1, [lr, #32]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r3, [r4, r5, asl #2]	@ tmp157, <variable>.DPB.fs
	ldrb	r0, [r6, #0]	@ zero_extendqisi2	@ <variable>.is_ref_idc, <variable>.is_ref_idc
	add	r1, r6, #48	@, pCurrPic,
	mov	r2, #504	@,
	subs	ip, r0, #0	@ tmp159, <variable>.is_ref_idc,
	movne	ip, #1	@ tmp159
	strb	ip, [r3, #1]	@ tmp159, <variable>.is_reference
	ldr	r0, [r4, r5, asl #2]	@ tmp163, <variable>.DPB.fs
	ldr	ip, [r6, #36]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	ip, [r0, #24]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r3, [r4, r5, asl #2]	@ tmp167, <variable>.DPB.fs
	add	r0, r3, #72	@, tmp167,
	bl	memcpy	@
	ldr	ip, [r4, r5, asl #2]	@ temp.8588, <variable>.DPB.fs
	ldr	lr, [r6, #40]	@ D.45248, <variable>.err_level
	movw	r0, #:lower16:1960392	@,
	movt	r0, #:upper16:1960392	@,
	add	r1, r7, #1	@, pos,
	add	r0, r4, r0	@, pHevcCtx,
	mov	r2, #4	@,
	str	lr, [ip, #20]	@ D.45248, <variable>.err_level
	movw	r3, #:lower16:compare_pic_by_poc_asc	@,
	str	lr, [ip, #40]	@ D.45248, <variable>.frame.err_level
	movt	r3, #:upper16:compare_pic_by_poc_asc	@,
	ldr	ip, [r4, r5, asl #2]	@ tmp176, <variable>.DPB.fs
	ldr	lr, [r6, #44]	@ <variable>.frame_store, <variable>.frame_store
	str	lr, [ip, #68]	@ <variable>.frame_store, <variable>.frame.frame_store
	ldr	ip, [r4, r5, asl #2]	@ temp.8591, <variable>.DPB.fs
	ldr	lr, [r6, #12]	@ D.45250, <variable>.pic_type
	str	lr, [ip, #16]	@ D.45250, <variable>.pic_type
	str	lr, [ip, #44]	@ D.45250, <variable>.frame.pic_type
	ldr	ip, [r4, r5, asl #2]	@ tmp182, <variable>.DPB.fs
	ldr	lr, [r6, #8]	@ <variable>.thispoc, <variable>.thispoc
	str	lr, [ip, #12]	@ <variable>.thispoc, <variable>.poc
	ldr	ip, [r4, r5, asl #2]	@ tmp186, <variable>.DPB.fs
	ldr	lr, [r6, #8]	@ <variable>.thispoc, <variable>.thispoc
	str	lr, [ip, #36]	@ <variable>.thispoc, <variable>.frame.poc
	bl	qsort	@
	movw	r3, #:lower16:1960372	@ tmp192,
	movt	r3, #:upper16:1960372	@ tmp192,
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [r4, r3]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r2, r1, #1	@ tmp195, <variable>.DPB.used_size,
	str	r2, [r4, r3]	@ tmp195, <variable>.DPB.used_size
	ldr	r1, [r6, #44]	@, <variable>.frame_store
	bl	HEVC_GetAPC	@
	subs	r3, r0, #0	@ ret,
	bne	.L3121	@,
	mov	r0, r3	@ D.45239, ret
	strb	r3, [r6, #1]	@ ret, <variable>.state
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L3120:
	mov	r3, r1	@, pos
	ldr	r2, .L3122	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC662	@,
	movt	r1, #:upper16:.LC662	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearDPB	@
	mvn	r0, #0	@ D.45239,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L3121:
	ldr	r2, .L3122	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC663	@,
	movt	r1, #:upper16:.LC663	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_PrintDPBState	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearDPB	@
	mvn	r0, #6	@ D.45239,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L3123:
	.align	2
.L3122:
	.word	.LANCHOR1+724
	.fnend
	.size	HEVC_InsertFrmInDPB, .-HEVC_InsertFrmInDPB
	.align	2
	.global	HEVC_DispOrderProcess
	.type	HEVC_DispOrderProcess, %function
HEVC_DispOrderProcess:
	.fnstart
.LFB1617:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:1960372	@ tmp140,
	movw	r1, #:lower16:1960368	@ tmp141,
	movt	r5, #:upper16:1960372	@ tmp140,
	movt	r1, #:upper16:1960368	@ tmp141,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r1]	@ <variable>.DPB.size, <variable>.DPB.size
	ldr	r1, [r0, r5]	@ prephitmp.8610, <variable>.DPB.used_size
	cmp	r1, r3	@ prephitmp.8610, <variable>.DPB.size
	bcs	.L3132	@,
.L3125:
	movw	r2, #:lower16:2124808	@,
	movt	r2, #:upper16:2124808	@,
	add	r2, r4, r2	@, pHevcCtx,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_InsertFrmInDPB	@
	cmp	r0, #0	@ ret
	bne	.L3133	@,
	movw	ip, #:lower16:1960372	@ tmp149,
	movt	ip, #:upper16:1960372	@ tmp149,
	ldr	r0, [r4, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, #0	@ <variable>.DPB.used_size,
	bne	.L3134	@,
.L3129:
	mov	r0, #0	@ D.45035,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L3134:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L3129	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC666	@,
	ldr	r2, .L3135	@,
	movt	r1, #:upper16:.LC666	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45035,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L3132:
	bl	HEVC_RemoveUnusedApcStore	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RemoveUnUsedFrameStore	@
	cmp	r0, #1	@,
	beq	.L3131	@,
	movw	r1, #:lower16:.LC664	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC664	@,
	bl	dprint_vfmw	@
.L3131:
	ldr	r1, [r4, r5]	@ prephitmp.8610, <variable>.DPB.used_size
	b	.L3125	@
.L3133:
	mov	r2, r0	@, ret
	movw	r1, #:lower16:.LC665	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC665	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45035,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L3136:
	.align	2
.L3135:
	.word	.LANCHOR1+744
	.fnend
	.size	HEVC_DispOrderProcess, .-HEVC_DispOrderProcess
	.align	2
	.global	HEVC_DecOrderProcess
	.type	HEVC_DecOrderProcess, %function
HEVC_DecOrderProcess:
	.fnstart
.LFB1616:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:1960372	@ tmp139,
	movw	r1, #:lower16:1960368	@ tmp140,
	movt	r5, #:upper16:1960372	@ tmp139,
	movt	r1, #:upper16:1960368	@ tmp140,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [r0, r1]	@ <variable>.DPB.size, <variable>.DPB.size
	ldr	r1, [r0, r5]	@ prephitmp.8636, <variable>.DPB.used_size
	cmp	r1, r3	@ prephitmp.8636, <variable>.DPB.size
	bcs	.L3146	@,
.L3138:
	movw	r2, #:lower16:2124808	@,
	movt	r2, #:upper16:2124808	@,
	add	r2, r4, r2	@, pHevcCtx,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_InsertFrmInDPB	@
	subs	r6, r0, #0	@ ret.8647,
	bne	.L3147	@,
	movw	r5, #:lower16:2124852	@ tmp152,
	movt	r5, #:upper16:2124852	@ tmp152,
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [r4, r5]	@, <variable>.CurrPic.frame_store
	bl	HEVC_CheckFrameStore	@
	cmn	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	beq	.L3148	@,
	cmn	r0, #3	@ ret,
	moveq	r5, r6	@ ret, ret.8647
	beq	.L3141	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_OutputCurrPic	@
	subs	r5, r0, #0	@ ret,
	bne	.L3149	@,
.L3141:
	mov	r0, r5	@, ret
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L3146:
	bl	HEVC_RemoveUnusedApcStore	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RemoveUnUsedFrameStore	@
	cmp	r0, #1	@,
	beq	.L3145	@,
	movw	r1, #:lower16:.LC667	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC667	@,
	ldr	r2, .L3150	@,
	bl	dprint_vfmw	@
.L3145:
	ldr	r1, [r4, r5]	@ prephitmp.8636, <variable>.DPB.used_size
	b	.L3138	@
.L3147:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC668	@,
	ldr	r2, .L3150	@,
	movt	r1, #:upper16:.LC668	@,
	bl	dprint_vfmw	@
	mvn	r5, #0	@ ret,
	b	.L3141	@
.L3149:
	mov	r0, r6	@, ret.8647
	movw	r1, #:lower16:.LC215	@,
	ldr	r2, .L3150	@,
	movt	r1, #:upper16:.LC215	@,
	bl	dprint_vfmw	@
	mvn	r5, #0	@ ret,
	b	.L3141	@
.L3148:
	mov	r0, r6	@, ret.8647
	movw	r1, #:lower16:.LC669	@,
	ldr	r2, .L3150	@,
	movt	r1, #:upper16:.LC669	@,
	bl	dprint_vfmw	@
	b	.L3141	@
.L3151:
	.align	2
.L3150:
	.word	.LANCHOR1+768
	.fnend
	.size	HEVC_DecOrderProcess, .-HEVC_DecOrderProcess
	.align	2
	.global	HEVC_SimpleDPBProcess
	.type	HEVC_SimpleDPBProcess, %function
HEVC_SimpleDPBProcess:
	.fnstart
.LFB1615:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:2124808	@ tmp137,
	movt	r1, #:upper16:2124808	@ tmp137,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.is_ref_idc, <variable>.CurrPic.is_ref_idc
	cmp	r3, #0	@ <variable>.CurrPic.is_ref_idc,
	bne	.L3160	@,
	movw	lr, #:lower16:2124852	@ tmp147,
	movt	lr, #:upper16:2124852	@ tmp147,
	ldr	ip, [r0, lr]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, #2	@ tmp148,
	str	r0, [ip, #4]	@ tmp148, <variable>.eFrameStoreState
.L3154:
	movw	r3, #:lower16:2124852	@ tmp150,
	movt	r3, #:upper16:2124852	@ tmp150,
	mov	r1, #1	@ tmp151,
	mov	r0, r4	@, pHevcCtx
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r1, [r2, #2]	@ tmp151, <variable>.is_displayed
	ldr	r1, [r4, r3]	@, <variable>.CurrPic.frame_store
	bl	HEVC_CheckFrameStore	@
	cmn	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	beq	.L3161	@,
	cmn	r0, #3	@ ret,
	moveq	r5, #0	@ ret,
	beq	.L3155	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_OutputCurrPic	@
	subs	r5, r0, #0	@ ret,
	bne	.L3162	@,
.L3155:
	mov	r0, r5	@, ret
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
.L3160:
	movw	r5, #:lower16:1960372	@ tmp139,
	movt	r5, #:upper16:1960372	@ tmp139,
	bl	HEVC_SimpleSlideDPB	@
	movw	r2, #:lower16:2124808	@,
	movt	r2, #:upper16:2124808	@,
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [r4, r5]	@, <variable>.DPB.used_size
	add	r2, r4, r2	@, pHevcCtx,
	bl	HEVC_InsertFrmInDPB	@
	subs	ip, r0, #0	@ ret.8671,
	beq	.L3154	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC670	@,
	ldr	r2, .L3163	@,
	movt	r1, #:upper16:.LC670	@,
	movw	r3, #7037	@,
	str	ip, [sp, #0]	@ ret.8671,
	mvn	r5, #6	@ ret,
	bl	dprint_vfmw	@
	b	.L3155	@
.L3162:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC215	@,
	ldr	r2, .L3163	@,
	movt	r1, #:upper16:.LC215	@,
	bl	dprint_vfmw	@
	mvn	r5, #0	@ ret,
	b	.L3155	@
.L3161:
	movw	r1, #:lower16:.LC669	@,
	ldr	r2, .L3163	@,
	movt	r1, #:upper16:.LC669	@,
	mov	r0, #0	@,
	bl	dprint_vfmw	@
	b	.L3155	@
.L3164:
	.align	2
.L3163:
	.word	.LANCHOR1+792
	.fnend
	.size	HEVC_SimpleDPBProcess, .-HEVC_SimpleDPBProcess
	.align	2
	.global	HEVC_StorePicInDPB
	.type	HEVC_StorePicInDPB, %function
HEVC_StorePicInDPB:
	.fnstart
.LFB1619:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	bl	HEVC_RemoveDummyFrame	@
	movw	r3, #:lower16:2124809	@ tmp139,
	movt	r3, #:upper16:2124809	@ tmp139,
	ldrb	r5, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	cmp	r5, #0	@ <variable>.CurrPic.state,
	beq	.L3180	@,
	movw	r6, #:lower16:1960188	@ tmp144,
	movt	r6, #:upper16:1960188	@ tmp144,
	movw	r7, #:lower16:2124848	@ tmp145,
	movt	r7, #:upper16:2124848	@ tmp145,
	ldr	r3, [r4, r6]	@ D.45074, <variable>.pstExtraData
	ldr	r1, [r4, r7]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r2, [r3, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	cmp	r1, r2	@ <variable>.CurrPic.err_level, <variable>.s32OutErrThr
	bhi	.L3181	@,
	ldr	r0, [r4, #240]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r0, #2	@ <variable>.OldDecMode,
	beq	.L3182	@,
	ldr	r7, [r3, #12]	@ prephitmp.8690, <variable>.s32DecOrderOutput
	cmp	r7, #2	@ prephitmp.8690,
	beq	.L3183	@,
	cmp	r7, #1	@ prephitmp.8690,
	mvnne	r5, #0	@ ret,
	beq	.L3184	@,
.L3175:
	cmp	r7, #0	@ prephitmp.8690,
	beq	.L3185	@,
.L3171:
	cmn	r5, #1	@ ret,
	beq	.L3186	@,
.L3177:
	movw	r3, #:lower16:2124809	@ tmp176,
	movt	r3, #:upper16:2124809	@ tmp176,
	mov	r1, #0	@ tmp177,
	mov	r0, r5	@, ret
	strb	r1, [r4, r3]	@ tmp177, <variable>.CurrPic.state
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L3180:
	ldr	r2, .L3189	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC671	@,
	movt	r1, #:upper16:.LC671	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@, ret
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L3183:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_SimpleDPBProcess	@
	subs	r5, r0, #0	@ ret,
	bne	.L3187	@,
.L3173:
	movw	r1, #:lower16:.LC674	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC674	@,
	movw	r3, #7307	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L3171	@
.L3181:
	mov	r0, r4	@, pHevcCtx
	mov	r5, #0	@ ret,
	bl	HEVC_ClearCurrPic	@
	ldr	ip, [r4, r6]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r4, r7]	@, <variable>.CurrPic.err_level
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC672	@,
	movt	r1, #:upper16:.LC672	@,
	ldr	r3, [ip, #4]	@, <variable>.s32OutErrThr
	bl	dprint_vfmw	@
	mov	r0, r5	@, ret
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L3185:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DispOrderProcess	@
	subs	r5, r0, #0	@ ret,
	beq	.L3177	@,
	mov	r0, r7	@, prephitmp.8690
	movw	r1, #:lower16:.LC677	@,
	ldr	r2, .L3189	@,
	movt	r1, #:upper16:.LC677	@,
	bl	dprint_vfmw	@
	b	.L3171	@
.L3186:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrPic	@
	movw	r1, #:lower16:.LC678	@,
	ldr	r2, .L3189	@,
	movt	r1, #:upper16:.LC678	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	b	.L3177	@
.L3182:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_IModeProcess	@
	subs	r5, r0, #0	@ ret,
	bne	.L3188	@,
.L3170:
	movw	r1, #:lower16:.LC674	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC674	@,
	movw	r3, #7294	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L3171	@
.L3184:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecOrderProcess	@
	subs	r5, r0, #0	@ ret,
	bne	.L3176	@,
.L3179:
	ldr	lr, [r4, r6]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r7, [lr, #12]	@ prephitmp.8690, <variable>.s32DecOrderOutput
	b	.L3175	@
.L3176:
	movw	r1, #:lower16:.LC676	@,
	ldr	r2, .L3189	@,
	movt	r1, #:upper16:.LC676	@,
	mov	r0, #0	@,
	bl	dprint_vfmw	@
	b	.L3179	@
.L3188:
	movw	r1, #:lower16:.LC673	@,
	ldr	r2, .L3189	@,
	movt	r1, #:upper16:.LC673	@,
	mov	r0, #0	@,
	bl	dprint_vfmw	@
	b	.L3170	@
.L3187:
	movw	r1, #:lower16:.LC675	@,
	ldr	r2, .L3189	@,
	movt	r1, #:upper16:.LC675	@,
	mov	r0, #0	@,
	bl	dprint_vfmw	@
	b	.L3173	@
.L3190:
	.align	2
.L3189:
	.word	.LANCHOR1+816
	.fnend
	.size	HEVC_StorePicInDPB, .-HEVC_StorePicInDPB
	.align	2
	.global	HEVCDEC_VDMPostProc
	.type	HEVCDEC_VDMPostProc, %function
HEVCDEC_VDMPostProc:
	.fnstart
.LFB1666:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [fp, #4]	@ ModuleLowlyEnable, ModuleLowlyEnable
	movw	r2, #:lower16:2124848	@ tmp143,
	movt	r2, #:upper16:2124848	@ tmp143,
	cmp	ip, #0	@ ModuleLowlyEnable,
	mov	r5, r3	@ pLumaInfo, pLumaInfo
	str	r1, [r0, r2]	@ ErrRatio, <variable>.CurrPic.err_level
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r3, [fp, #8]	@ VdhId, VdhId
	beq	.L3192	@,
	rsb	lr, r3, r3, asl #3	@, tmp148, VdhId, VdhId,
	movw	r1, #:lower16:g_VdmDrvParam	@ tmp144,
	movt	r1, #:upper16:g_VdmDrvParam	@ tmp144,
	add	r3, r1, lr, asl #3	@, tmp150, tmp144, tmp148,
	ldr	r3, [r3, #52]	@ D.47323, <variable>.ChanIntState
	cmp	r3, #3	@ D.47323,
	beq	.L3198	@,
	cmp	r3, #1	@ D.47323,
	beq	.L3192	@,
.L3195:
	mov	r1, r5	@, pLumaInfo
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_StorePicInDPB	@
	subs	r2, r0, #0	@ ret,
	bne	.L3199	@,
	mov	r0, r2	@ D.47326, ret
	mov	r2, #1	@ tmp153,
	str	r2, [r4, #160]	@ tmp153, <variable>.AllowStartDec
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L3199:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC679	@,
	movt	r1, #:upper16:.LC679	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrPic	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearDPB	@
	mvn	r0, #0	@ D.47326,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L3192:
	bl	HEVC_ClearAllSlice	@
	b	.L3195	@
.L3198:
	bl	HEVC_ClearAllSlice	@
	mov	r0, #0	@ D.47326,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	HEVCDEC_VDMPostProc, .-HEVCDEC_VDMPostProc
	.align	2
	.global	HEVC_CreateLostPicture
	.type	HEVC_CreateLostPicture, %function
HEVC_CreateLostPicture:
	.fnstart
.LFB1610:
	@ args = 0, pretend = 0, frame = 560
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #564
	sub	sp, sp, #564	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:4306452	@ ivtmp.8780,
	movw	r2, #:lower16:1960396	@ ivtmp.8772,
	movt	r3, #:upper16:4306452	@ ivtmp.8780,
	movt	r2, #:upper16:1960396	@ ivtmp.8772,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	add	r3, r0, r3	@ ivtmp.8780, pHevcCtx, ivtmp.8780
	add	r2, r0, r2	@ ivtmp.8772, pHevcCtx, ivtmp.8772
	movw	r0, #:lower16:1960372	@,
	movt	r0, #:upper16:1960372	@,
	str	r0, [fp, #-600]	@, %sfp
	movw	r0, #:lower16:1960392	@ tmp275,
	movt	r0, #:upper16:1960392	@ tmp275,
	mov	r5, r1	@ iLostPoc, iLostPoc
	mov	r7, #0	@ i.8786,
.L3207:
	ldr	lr, [r3, #0]	@ <variable>.eFrameStoreState, <variable>.eFrameStoreState
	cmp	lr, #0	@ <variable>.eFrameStoreState,
	bne	.L3201	@,
	mov	r9, r7, asl #3	@ tmp269, i.8786,
	movw	ip, #:lower16:4306448	@ tmp165,
	add	r6, r9, r7	@ tmp163, tmp269, i.8786
	movt	ip, #:upper16:4306448	@ tmp165,
	mov	r1, r6, asl #6	@ tmp164, tmp163,
	add	r6, r1, ip	@ tmp165, tmp164, tmp165
	adds	r6, r4, r6	@ D.44808, pHevcCtx, tmp165
	beq	.L3202	@,
	ldr	ip, [fp, #-600]	@, %sfp
	ldr	sl, [r4, ip]	@ D.48141, <variable>.DPB.used_size
	cmp	sl, #0	@ D.48141,
	beq	.L3202	@,
	ldr	r1, [r4, r0]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r6, r1	@ D.44808, <variable>.DPB.fs
	beq	.L3201	@,
	tst	sl, #1	@ D.48141,
	mov	ip, r2	@ ivtmp.8772, ivtmp.8772
	bne	.L3203	@,
	mov	lr, #1	@ i,
	cmp	lr, sl	@ i, D.48141
	bcs	.L3202	@,
	mov	ip, r2	@ ivtmp.8772, ivtmp.8772
	ldr	r1, [ip], #4	@ D.48142, <variable>.DPB.fs
	cmp	r6, r1	@ D.44808, D.48142
	bne	.L3203	@,
	b	.L3201	@
.L3204:
	ldr	r8, [r1], #4	@ D.48142, <variable>.DPB.fs
	cmp	r6, r8	@ D.44808, D.48142
	beq	.L3201	@,
	ldr	r8, [ip, #4]	@ D.48142, <variable>.DPB.fs
	add	ip, r1, #4	@ ivtmp.8772, tmp291,
	cmp	r6, r8	@ D.44808, D.48142
	beq	.L3201	@,
.L3203:
	add	lr, lr, #1	@ tmp292, i,
	mov	r1, ip	@ tmp291, ivtmp.8772
	cmp	lr, sl	@ tmp292, D.48141
	add	lr, lr, #1	@ i, tmp292,
	bcc	.L3204	@,
.L3202:
	add	r7, r9, r7	@ tmp179, tmp269, i.8786
	movw	r6, #:lower16:4306520	@,
	movt	r6, #:upper16:4306520	@,
	mov	r2, #504	@,
	mov	r7, r7, asl #6	@ tmp180, tmp179,
	sub	r0, fp, #548	@,,
	add	r8, r7, r4	@ tmp181, tmp180, pHevcCtx
	mov	lr, #101	@ tmp171,
	add	r1, r8, r6	@, tmp181,
	str	r5, [fp, #-588]	@ iLostPoc, stLostPic.thispoc
	mov	r6, #1	@ tmp172,
	str	lr, [fp, #-556]	@ tmp171, stLostPic.err_level
	strb	r6, [fp, #-595]	@ tmp172, stLostPic.state
	strb	r6, [fp, #-596]	@ tmp172, stLostPic.is_ref_idc
	bl	memcpy	@
	movw	r1, #:lower16:4306448	@ tmp202,
	movt	r1, #:upper16:4306448	@ tmp202,
	add	ip, r8, r1	@ tmp202, tmp181, tmp202
	movw	r0, #:lower16:4306448	@ tmp193,
	movt	r0, #:upper16:4306448	@ tmp193,
	mov	r1, #0	@ tmp188,
	add	r2, r7, r0	@ tmp193, tmp180, tmp193
	str	r1, [fp, #-348]	@ tmp188, stLostPic.fs_image.error_level
	add	r0, r4, r2	@ tmp195, pHevcCtx, tmp193
	str	r0, [fp, #-552]	@ tmp195, stLostPic.frame_store
	strb	r6, [ip, #2]	@ tmp172, <variable>.is_displayed
	movw	r3, #:lower16:1960372	@ tmp210,
	ldr	r2, [fp, #-552]	@ stLostPic.frame_store, stLostPic.frame_store
	movt	r3, #:upper16:1960372	@ tmp210,
	str	r1, [r2, #8]	@ tmp188, <variable>.eFirstFrameState
	ldr	r0, [fp, #-552]	@ stLostPic.frame_store, stLostPic.frame_store
	strb	r6, [r0, #0]	@ tmp172, <variable>.non_existing
	ldr	r0, [r4, r3]	@ temp.8802, <variable>.DPB.used_size
	cmp	r0, r1	@ temp.8802,
	beq	.L3206	@,
	mov	ip, r0, asl #2	@ D.56731, temp.8802,
	mov	lr, r1	@ bIsFindPoc, ivtmp.8768
	tst	ip, #4	@ D.56731,
	mvn	r2, #-2147483648	@ closestPoc.8801,
	bne	.L3212	@,
	movw	r1, #:lower16:1960392	@ tmp320,
	movt	r1, #:upper16:1960392	@ tmp320,
	add	r3, r4, r1	@ tmp320, pHevcCtx, tmp320
	ldr	r3, [r3, #0]	@ D.44817, <variable>.DPB.fs
	ldr	r2, [r3, #12]	@ <variable>.poc, <variable>.poc
	rsb	r2, r5, r2	@ tmp323, iLostPoc, <variable>.poc
	cmp	r2, #0	@ tmp323,
	rsblt	r2, r2, #0	@ closestPoc, tmp323
	cmn	r2, #-2147483647	@ closestPoc,
	bge	.L3236	@,
	ldrb	r3, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	beq	.L3236	@,
	mov	lr, r6	@ bIsFindPoc, tmp172
	mov	r1, #4	@ ivtmp.8768,
.L3212:
	add	r6, r4, r1	@ tmp211, pHevcCtx, ivtmp.8768
	movw	r3, #:lower16:1960392	@ tmp212,
	movt	r3, #:upper16:1960392	@ tmp212,
	add	r3, r6, r3	@ tmp212, tmp211, tmp212
	ldr	r6, [r3, #0]	@ D.44817, <variable>.DPB.fs
	ldr	r3, [r6, #12]	@ <variable>.poc, <variable>.poc
	rsb	r3, r5, r3	@ tmp214, iLostPoc, <variable>.poc
	cmp	r3, #0	@ tmp214,
	rsblt	r3, r3, #0	@ closestPoc, tmp214
	cmp	r3, r2	@ closestPoc, closestPoc.8801
	bge	.L3209	@,
	ldrb	r6, [r6, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #0	@ <variable>.is_reference,
	movne	lr, #1	@ bIsFindPoc,
	beq	.L3209	@,
	add	r1, r1, #4	@ tmp287, ivtmp.8768,
	cmp	r1, ip	@ tmp287, D.56731
	beq	.L3211	@,
.L3266:
	add	r6, r4, r1	@ tmp297, pHevcCtx, tmp287
	movw	r2, #:lower16:1960392	@ tmp299,
	movt	r2, #:upper16:1960392	@ tmp299,
	add	r2, r6, r2	@ tmp299, tmp297, tmp299
	ldr	r6, [r2, #0]	@ D.44817, <variable>.DPB.fs
	ldr	r2, [r6, #12]	@ <variable>.poc, <variable>.poc
	rsb	r2, r5, r2	@ tmp302, iLostPoc, <variable>.poc
	cmp	r2, #0	@ tmp302,
	rsblt	r2, r2, #0	@ closestPoc, tmp302
	cmp	r2, r3	@ closestPoc, closestPoc
	bge	.L3238	@,
	ldrb	r6, [r6, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #0	@ <variable>.is_reference,
	beq	.L3238	@,
	mov	lr, #1	@ bIsFindPoc,
	add	r1, r1, #4	@ ivtmp.8768, tmp287,
	b	.L3212	@
.L3201:
	add	r7, r7, #1	@ i.8786, i.8786,
	add	r3, r3, #576	@ ivtmp.8780, ivtmp.8780,
	cmp	r7, #20	@ i.8786,
	bne	.L3207	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC686	@,
	movt	r1, #:upper16:.LC686	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44816,
.L3214:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3209:
	add	r1, r1, #4	@ tmp287, ivtmp.8768,
	mov	r3, r2	@ closestPoc, closestPoc.8801
	cmp	r1, ip	@ tmp287, D.56731
	bne	.L3266	@,
.L3211:
	cmp	lr, #0	@ bIsFindPoc,
	beq	.L3206	@,
	movw	r1, #:lower16:1960392	@ ivtmp.8762,
	movt	r1, #:upper16:1960392	@ ivtmp.8762,
	add	r1, r4, r1	@ ivtmp.8762, pHevcCtx, ivtmp.8762
	sub	r7, r0, #1	@ tmp278, temp.8802,
	and	ip, r7, #1	@ tmp280, tmp278,
	mov	r7, #0	@ i,
	ldr	r2, [r1, #0]	@ temp.8787, <variable>.DPB.fs
	ldr	lr, [r2, #12]	@ <variable>.poc, <variable>.poc
	rsb	lr, r5, lr	@ tmp222, iLostPoc, <variable>.poc
	cmp	lr, #0	@ tmp222,
	rsblt	lr, lr, #0	@ tmp224, tmp222
	cmp	lr, r3	@ tmp224, closestPoc
	beq	.L3267	@,
.L3228:
	mov	r7, #1	@ i,
	cmp	r0, r7	@ temp.8802, i
	add	r1, r1, #4	@ ivtmp.8762, ivtmp.8762,
	bls	.L3216	@,
	cmp	ip, #0	@ tmp280,
	beq	.L3218	@,
	ldr	r2, [r1, #0]	@ temp.8787, <variable>.DPB.fs
	ldr	lr, [r2, #12]	@ <variable>.poc, <variable>.poc
	rsb	ip, r5, lr	@ tmp314, iLostPoc, <variable>.poc
	cmp	ip, #0	@ tmp314,
	rsblt	ip, ip, #0	@ tmp315, tmp314
	cmp	ip, r3	@ tmp315, closestPoc
	beq	.L3268	@,
.L3230:
	add	r7, r7, #1	@ i, i,
	add	r1, r1, #4	@ ivtmp.8762, ivtmp.8762,
	cmp	r0, r7	@ temp.8802, i
	bhi	.L3218	@,
	b	.L3216	@
.L3215:
	ldr	r2, [r1, #4]	@ temp.8787, <variable>.DPB.fs
	add	r7, r7, #1	@ i, i,
	mov	ip, r7	@ tmp281, i
	ldr	r1, [r2, #12]	@ <variable>.poc, <variable>.poc
	rsb	r1, r5, r1	@ tmp310, iLostPoc, <variable>.poc
	cmp	r1, #0	@ tmp310,
	rsblt	r1, r1, #0	@ tmp311, tmp310
	cmp	r1, r3	@ tmp311, closestPoc
	beq	.L3269	@,
	add	r7, ip, #1	@ i, tmp281,
	add	r1, lr, #4	@ ivtmp.8762, tmp282,
	cmp	r0, r7	@ temp.8802, i
	bls	.L3216	@,
.L3218:
	ldr	r2, [r1, #0]	@ temp.8787, <variable>.DPB.fs
	add	lr, r1, #4	@ tmp282, ivtmp.8762,
	ldr	ip, [r2, #12]	@ <variable>.poc, <variable>.poc
	rsb	ip, r5, ip	@ tmp306, iLostPoc, <variable>.poc
	cmp	ip, #0	@ tmp306,
	rsblt	ip, ip, #0	@ tmp307, tmp306
	cmp	ip, r3	@ tmp307, closestPoc
	bne	.L3215	@,
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #0	@ <variable>.is_reference,
	beq	.L3215	@,
.L3254:
	ldr	r1, [r2, #32]	@, <variable>.logic_fs_id
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	movw	r1, #:lower16:.LC681	@,
	movt	r1, #:upper16:.LC681	@,
	mov	r6, r0	@ pstRefLFs,
	movw	r0, #:lower16:490098	@ tmp229,
	movt	r0, #:upper16:490098	@ tmp229,
	add	r3, r7, r0	@ tmp229, i, tmp229
	mov	r0, #1	@,
	ldr	r2, [r4, r3, asl #2]	@ tmp231, <variable>.DPB.fs
	mov	r3, r5	@, iLostPoc
	ldr	r2, [r2, #12]	@, <variable>.poc
	bl	dprint_vfmw	@
	cmp	r6, #0	@ pstRefLFs,
	beq	.L3216	@,
	ldr	r0, [r6, #520]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r0, #0	@ <variable>.pstDecodeFs,
	beq	.L3270	@,
	mov	r1, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_NewLogicFs	@
	mov	r1, r0	@, LogicFsID
	mov	r7, r0	@ LogicFsID,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ tmp246, pstLFs,
	movne	r3, #1	@ tmp246
	cmp	r7, #0	@ LogicFsID,
	mov	r1, r0	@ pstLFs,
	movlt	r3, #0	@, tmp246,
	cmp	r3, #0	@ tmp246,
	beq	.L3220	@,
	ldr	r8, [fp, #-552]	@ stLostPic.frame_store, stLostPic.frame_store
	movw	ip, #:lower16:1960372	@ tmp252,
	movt	ip, #:upper16:1960372	@ tmp252,
	mov	r0, r4	@, pHevcCtx
	sub	r2, fp, #596	@,,
	str	r7, [r8, #32]	@ LogicFsID, <variable>.logic_fs_id
	add	r8, r6, #520
	ldmia	r8, {r8, sl, lr}	@ phole ldm
	ldrsb	r3, [r6, #4]	@ <variable>.PmvIdc, <variable>.PmvIdc
	str	r8, [r1, #520]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	str	lr, [r1, #528]	@ <variable>.pstTfOutFs, <variable>.pstTfOutFs
	str	sl, [r1, #524]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	ldr	r1, [r4, ip]	@, <variable>.DPB.used_size
	str	r3, [fp, #-560]	@ <variable>.PmvIdc, stLostPic.pmv_address_idc
	bl	HEVC_InsertFrmInDPB	@
	subs	r6, r0, #0	@ ret,
	bne	.L3271	@,
	mov	r1, r7	@, LogicFsID
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r2, r6	@, ret
	bl	FSP_SetDisplay	@
	ldr	r1, [r4, #192]	@ <variable>.PocRandomAccess, <variable>.PocRandomAccess
	mov	r0, r6	@ D.44816, ret
	cmn	r1, #-2147483647	@ <variable>.PocRandomAccess,
	streq	r5, [r4, #192]	@ iLostPoc, <variable>.PocRandomAccess
	b	.L3214	@
.L3238:
	mov	r2, r3	@ closestPoc, closestPoc
	add	r1, r1, #4	@ ivtmp.8768, tmp287,
	b	.L3212	@
.L3269:
	ldrb	r1, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	bne	.L3254	@,
	add	r7, ip, #1	@ i, tmp281,
	add	r1, lr, #4	@ ivtmp.8762, tmp282,
	cmp	r0, r7	@ temp.8802, i
	bhi	.L3218	@,
.L3216:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC682	@,
	movt	r1, #:upper16:.LC682	@,
	bl	dprint_vfmw	@
	mvn	r0, #3	@ D.44816,
	b	.L3214	@
.L3236:
	mvn	r2, #-2147483648	@ closestPoc,
	mov	r1, #4	@ ivtmp.8768,
	b	.L3212	@
.L3267:
	ldrb	lr, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #0	@ <variable>.is_reference,
	beq	.L3228	@,
	b	.L3254	@
.L3268:
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #0	@ <variable>.is_reference,
	beq	.L3230	@,
	b	.L3254	@
.L3220:
	ldr	r2, [fp, #-552]	@ stLostPic.frame_store, stLostPic.frame_store
	mov	r0, r3	@, tmp246
	movw	r1, #:lower16:.LC684	@,
	movt	r1, #:upper16:.LC684	@,
	strb	r3, [r2, #0]	@ tmp246, <variable>.non_existing
	bl	dprint_vfmw	@
	mvn	r0, #3	@ D.44816,
	b	.L3214	@
.L3271:
	ldr	r0, [fp, #-552]	@ stLostPic.frame_store, stLostPic.frame_store
	mov	r1, r7	@, LogicFsID
	mov	r5, #0	@ tmp261,
	mov	r2, #1	@,
	strb	r5, [r0, #0]	@ tmp261, <variable>.non_existing
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	mov	r0, r5	@, tmp261
	movw	r1, #:lower16:.LC685	@,
	movt	r1, #:upper16:.LC685	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44816,
	b	.L3214	@
.L3206:
	ldr	ip, [fp, #-552]	@ stLostPic.frame_store, stLostPic.frame_store
	mov	lr, #0	@ tmp218,
	mov	r0, lr	@, tmp218
	movw	r1, #:lower16:.LC680	@,
	movt	r1, #:upper16:.LC680	@,
	strb	lr, [ip, #0]	@ tmp218, <variable>.non_existing
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44816,
	b	.L3214	@
.L3270:
	movw	r1, #:lower16:.LC683	@,
	movt	r1, #:upper16:.LC683	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearDPB	@
	mvn	r0, #3	@ D.44816,
	b	.L3214	@
	.fnend
	.size	HEVC_CreateLostPicture, .-HEVC_CreateLostPicture
	.align	2
	.global	HEVC_RecoverDPBProcess
	.type	HEVC_RecoverDPBProcess, %function
HEVC_RecoverDPBProcess:
	.fnstart
.LFB1575:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:1960372	@ tmp165,
	movw	sl, #:lower16:1960368	@ tmp166,
	movt	r7, #:upper16:1960372	@ tmp165,
	movt	sl, #:upper16:1960368	@ tmp166,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
.L3273:
	ldr	r8, [r4, r7]	@ prephitmp.8818, <variable>.DPB.used_size
	movw	r1, #:lower16:.LC687	@,
	ldr	ip, [r4, sl]	@ prephitmp.8829, <variable>.DPB.size
	movw	r6, #:lower16:1960372	@ tmp146,
	movw	r5, #:lower16:1960368	@ tmp147,
	ldr	r2, .L3282	@,
	cmp	r8, ip	@ prephitmp.8818, prephitmp.8829
	mov	r0, #13	@,
	movt	r1, #:upper16:.LC687	@,
	movt	r6, #:upper16:1960372	@ tmp146,
	movt	r5, #:upper16:1960368	@ tmp147,
	mov	r3, r8	@, prephitmp.8818
	bcc	.L3279	@,
	str	ip, [sp, #0]	@ prephitmp.8829,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_IncreaseDPBSize	@
	cmp	r0, #0	@,
	beq	.L3273	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC688	@,
	ldr	r2, .L3282	@,
	movt	r1, #:upper16:.LC688	@,
	bl	dprint_vfmw	@
	mov	r8, r5	@ tmp164, tmp147
	mov	r7, r6	@ tmp163, tmp146
	ldr	ip, [r4, r6]	@ prephitmp.8818, <variable>.DPB.used_size
	ldr	r5, [r4, r5]	@ prephitmp.8829, <variable>.DPB.size
	b	.L3274	@
.L3281:
	ldr	ip, [r4, r7]	@ prephitmp.8818, <variable>.DPB.used_size
	ldr	r5, [r4, r8]	@ prephitmp.8829, <variable>.DPB.size
.L3274:
	cmp	ip, r5	@ prephitmp.8818, prephitmp.8829
	movw	r1, #:lower16:.LC689	@,
	mov	r3, ip	@, prephitmp.8818
	ldr	r2, .L3282	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC689	@,
	bcc	.L3279	@,
	str	r5, [sp, #0]	@ prephitmp.8829,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_OutputUnRefPicWithMinPoc	@
	cmp	r0, #0	@,
	beq	.L3281	@,
	ldr	r2, .L3282	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC513	@,
	movt	r1, #:upper16:.LC513	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_PrintDPBState	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearDPB	@
.L3279:
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
.L3283:
	.align	2
.L3282:
	.word	.LANCHOR1+836
	.fnend
	.size	HEVC_RecoverDPBProcess, .-HEVC_RecoverDPBProcess
	.align	2
	.global	HEVC_RefPicProcess
	.type	HEVC_RefPicProcess, %function
HEVC_RefPicProcess:
	.fnstart
.LFB1576:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	bl	HEVC_RemoveDummyFrame	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ApplyReferencePictureSet	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RemoveUnusedApcStore	@
	mov	r0, r4	@, pHevcCtx
	sub	r5, fp, #24	@ tmp143,,
	bl	HEVC_RemoveUnUsedFrameStore	@
.L3285:
	mov	r1, r5	@, tmp143
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_CheckThatAllRefPicsAreAvailable	@
	movw	r1, #:lower16:.LC690	@,
	movt	r1, #:upper16:.LC690	@,
	cmp	r0, #0	@,
	mov	r0, #1	@,
	bne	.L3290	@,
	ldr	r2, [fp, #-24]	@, iLostPoc
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	ldr	r1, [fp, #-24]	@, iLostPoc
	bl	HEVC_CreateLostPicture	@
	cmp	r0, #0	@,
	beq	.L3285	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RemoveDummyFrame	@
	mvn	r0, #0	@ D.41666,
.L3286:
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
.L3290:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_UpdateReflist	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_UpdateLTReflist	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RecoverDPBProcess	@
	mov	r0, #0	@ D.41666,
	b	.L3286	@
	.fnend
	.size	HEVC_RefPicProcess, .-HEVC_RefPicProcess
	.align	2
	.global	HEVC_DecSlice
	.type	HEVC_DecSlice, %function
HEVC_DecSlice:
	.fnstart
.LFB1578:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:1960196	@ tmp151,
	movt	r2, #:upper16:1960196	@ tmp151,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	movw	lr, #:lower16:2125432	@ tmp152,
	movt	lr, #:upper16:2125432	@ tmp152,
	ldr	r1, [r0, r2]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r3, #:lower16:2125428	@ tmp153,
	movt	r3, #:upper16:2125428	@ tmp153,
	ldr	r0, [r1, #16]	@ D.41698, <variable>.nal_unit_type
	sub	ip, r0, #16	@ tmp157, D.41698,
	str	r0, [r4, lr]	@ D.41698, <variable>.CurrSlice.nal_unit_type
	cmp	ip, #4	@ tmp157,
	ldr	r2, [r1, #32]	@ <variable>.nuh_temporal_id, <variable>.nuh_temporal_id
	str	r2, [r4, r3]	@ <variable>.nuh_temporal_id, <variable>.CurrSlice.nuh_temporal_id
	bls	.L3292	@,
	movw	r1, #:lower16:2124820	@ tmp158,
	movt	r1, #:upper16:2124820	@ tmp158,
	ldr	r3, [r4, r1]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #0	@ <variable>.CurrPic.pic_type,
	beq	.L3310	@,
.L3293:
	ldrb	r5, [r4, #1]	@ zero_extendqisi2	@ <variable>.bNoOutputOfPriorPicsFlag, <variable>.bNoOutputOfPriorPicsFlag
	cmp	r5, #1	@ <variable>.bNoOutputOfPriorPicsFlag,
	beq	.L3311	@,
.L3295:
	ldr	r2, [r4, #200]	@ D.41721, <variable>.NumSlicePara
	ldr	lr, [r4, #144]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r2, lr	@ D.41721, <variable>.MaxSliceNum
	bcs	.L3312	@,
	movw	r1, #:lower16:2126924	@ tmp183,
	movt	r1, #:upper16:2126924	@ tmp183,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.new_pic_type, <variable>.CurrSlice.new_pic_type
	cmp	r3, #1	@ <variable>.CurrSlice.new_pic_type,
	beq	.L3313	@,
.L3298:
	movw	ip, #:lower16:2124809	@ tmp192,
	movt	ip, #:upper16:2124809	@ tmp192,
	ldrb	r1, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	cmp	r1, #0	@ <variable>.CurrPic.state,
	beq	.L3314	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_PicTypeStatistic	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_CalcStreamBits	@
	movw	r2, #:lower16:2126924	@ tmp195,
	movt	r2, #:upper16:2126924	@ tmp195,
	ldr	r0, [r4, r2]	@ <variable>.CurrSlice.new_pic_type, <variable>.CurrSlice.new_pic_type
	cmp	r0, #2	@ <variable>.CurrSlice.new_pic_type,
	beq	.L3304	@,
	movw	r3, #:lower16:2125363	@ tmp197,
	movt	r3, #:upper16:2125363	@ tmp197,
	ldrb	lr, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.dependent_slice_segment_flag, <variable>.CurrSlice.dependent_slice_segment_flag
	cmp	lr, #0	@ <variable>.CurrSlice.dependent_slice_segment_flag,
	beq	.L3315	@,
.L3305:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_WriteSliceMsg	@
	cmp	r0, #0	@,
	bne	.L3316	@,
.L3307:
	movw	r0, #:lower16:2125436	@ tmp202,
	movw	lr, #:lower16:2125408	@ tmp204,
	movt	r0, #:upper16:2125436	@ tmp202,
	movt	lr, #:upper16:2125408	@ tmp204,
	mov	r1, #1	@ tmp206,
	str	r1, [r4, #160]	@ tmp206, <variable>.AllowStartDec
	ldr	r2, [r4, r0]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	r0, #0	@ D.41710,
	ldr	ip, [r4, lr]	@ <variable>.CurrSlice.poc, <variable>.CurrSlice.poc
	str	r2, [r4, #264]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.prev_pic_parameter_set_id
	str	ip, [r4, #244]	@ <variable>.CurrSlice.poc, <variable>.prev_poc
.L3294:
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
.L3310:
	movw	r0, #:lower16:1960188	@ tmp160,
	movt	r0, #:upper16:1960188	@ tmp160,
	ldr	r3, [r4, r0]	@ D.48156, <variable>.pstExtraData
	ldr	ip, [r3, #716]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	ip, #1	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	bne	.L3293	@,
	ldr	lr, [r3, #712]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	lr, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L3293	@,
	ldr	r2, [r3, #720]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	r2, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L3293	@,
	ldr	r1, [r3, #692]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r3, r1, #1024	@ tmp164, <variable>.s32FastForwardBackwardSpeed,
	cmp	r3, #2048	@ tmp164,
	bls	.L3293	@,
.L3292:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_FlushOutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L3293	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC691	@,
	ldr	r2, .L3320	@,
	movt	r1, #:upper16:.LC691	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3315:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecList	@
	cmp	r0, #0	@ ret.8890
	bne	.L3317	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_IsRefListWrong	@
	cmp	r0, #0	@,
	beq	.L3305	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_PrintDPBState	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC699	@,
	movt	r1, #:upper16:.LC699	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3311:
	movw	r0, #:lower16:1960372	@ tmp170,
	movt	r0, #:upper16:1960372	@ tmp170,
	ldr	ip, [r4, r0]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	ip, #0	@ <variable>.DPB.used_size,
	beq	.L3295	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_EmptyFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L3295	@,
	mov	r0, r5	@, <variable>.bNoOutputOfPriorPicsFlag
	movw	r1, #:lower16:.LC692	@,
	ldr	r2, .L3320	@,
	movt	r1, #:upper16:.LC692	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3313:
	movw	r2, #:lower16:1960188	@ tmp187,
	movt	r2, #:upper16:1960188	@ tmp187,
	ldr	lr, [r4, #212]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	ldr	r3, [r4, r2]	@ D.41739, <variable>.pstExtraData
	add	r0, lr, #1	@ tmp186, <variable>.TotalPicNum,
	str	r0, [r4, #212]	@ tmp186, <variable>.TotalPicNum
	ldr	ip, [r3, #8]	@ <variable>.s32DecMode, <variable>.s32DecMode
	cmp	ip, #2	@ <variable>.s32DecMode,
	beq	.L3299	@,
	ldr	r3, [r3, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r3, #2	@ <variable>.s32DecOrderOutput,
	beq	.L3318	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_RefPicProcess	@
	cmp	r0, #0	@,
	beq	.L3299	@,
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3318:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_UpdateReflist	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_UpdateLTReflist	@
.L3299:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_InitPic	@
	cmn	r0, #2	@ ret.8887,
	beq	.L3294	@,
	cmp	r0, #0	@ ret.8887,
	bne	.L3319	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_SetScalingList	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_WritePicMsg	@
	cmp	r0, #0	@,
	beq	.L3298	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC696	@,
	movt	r1, #:upper16:.LC696	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3304:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
	b	.L3307	@
.L3314:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC697	@,
	movt	r1, #:upper16:.LC697	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3312:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC693	@,
	movt	r1, #:upper16:.LC693	@,
	bl	dprint_vfmw	@
	ldr	r1, [r4, #200]	@ temp.8881, <variable>.NumSlicePara
	ldr	r3, [r4, #144]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r1, r3	@ temp.8881, <variable>.MaxSliceNum
	bcc	.L3297	@,
	movw	r2, #:lower16:g_event_report	@ tmp178,
	movt	r2, #:upper16:g_event_report	@ tmp178,
	ldr	ip, [r2, #0]	@ g_event_report.582, g_event_report
	cmp	ip, #0	@ g_event_report.582,
	beq	.L3297	@,
	str	r1, [fp, #-28]	@ temp.8881, para
	sub	r2, fp, #28	@,,
	str	r3, [fp, #-24]	@ <variable>.MaxSliceNum, para
	mov	r1, #108	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r3, #8	@,
	blx	ip	@ g_event_report.582
.L3297:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC694	@,
	movt	r1, #:upper16:.LC694	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrPic	@
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3317:
	mov	r2, r0	@, ret.8890
	movw	r1, #:lower16:.LC698	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC698	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3316:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC700	@,
	movt	r1, #:upper16:.LC700	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3319:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC695	@,
	movt	r1, #:upper16:.LC695	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41710,
	b	.L3294	@
.L3321:
	.align	2
.L3320:
	.word	.LANCHOR1+860
	.fnend
	.size	HEVC_DecSlice, .-HEVC_DecSlice
	.align	2
	.global	HEVC_DecOneNal
	.type	HEVC_DecOneNal, %function
HEVC_DecOneNal:
	.fnstart
.LFB1543:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:1960196	@ tmp174,
	movt	r1, #:upper16:1960196	@ tmp174,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	ldr	r2, [r0, r1]	@ temp.8941, <variable>.pCurrNal
	ldr	r3, [r2, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r3, #0	@ <variable>.nal_segment,
	beq	.L3323	@,
	ldr	r1, [r0, #216]	@ prephitmp.8908, <variable>.MaxBytesReceived
	mov	r3, #0	@ i,
.L3324:
	rsb	r0, r3, r3, asl #3	@, tmp179, i, i,
	add	r3, r3, #1	@ i, i,
	add	lr, r2, r0, asl #2	@, tmp181, temp.8941, tmp179,
	ldr	ip, [lr, #48]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r1, r1, ip	@ prephitmp.8908, prephitmp.8908, <variable>.bitstream_length
	str	r1, [r4, #216]	@ prephitmp.8908, <variable>.MaxBytesReceived
	ldr	r0, [r2, #8]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r0, r3	@ <variable>.nal_segment, i
	bhi	.L3324	@,
.L3323:
	movw	ip, #:lower16:1960196	@ tmp187,
	movt	ip, #:upper16:1960196	@ tmp187,
	mov	r1, #0	@ tmp185,
	strb	r1, [r2, #1]	@ tmp185, <variable>.nal_used_segment
	ldr	r2, [r4, ip]	@ D.39277, <variable>.pCurrNal
	movw	ip, #:lower16:1960196	@ tmp195,
	movt	ip, #:upper16:1960196	@ tmp195,
	ldr	r3, [r2, #16]	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	sub	r0, r3, #36	@ tmp188, <variable>.nal_unit_type,
	cmp	r0, #1	@ tmp188,
	movls	r0, #1	@ tmp190,
	strlsb	r0, [r4, #0]	@ tmp190, <variable>.bNewSequence
	ldr	lr, [r2, #4]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r1, lr, #16	@ tmp193, <variable>.nal_bitoffset,
	str	r1, [r2, #4]	@ tmp193, <variable>.nal_bitoffset
	ldr	r3, [r4, ip]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [r3, #16]	@ temp.8922, <variable>.nal_unit_type
	cmp	r2, #49	@ temp.8922,
	ldrls	pc, [pc, r2, asl #2]	@ temp.8922
	b	.L3326	@
.L3334:
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3327
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3328
	.word	.L3329
	.word	.L3330
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3331
	.word	.L3331
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3326
	.word	.L3332
	.word	.L3333
.L3333:
	movw	lr, #:lower16:1960336	@ temp.8950,
	movt	lr, #:upper16:1960336	@ temp.8950,
	add	r5, r4, lr	@ temp.8950, pHevcCtx, temp.8950
	mov	r1, #32	@,
	mov	r0, r5	@, temp.8950
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r6, r0	@ D.39364,
	mov	r0, r5	@, temp.8950
	bl	BsGet	@
	movw	ip, #:lower16:1128615492	@ tmp250,
	movw	r3, #:lower16:1213419593	@ tmp253,
	movt	ip, #:upper16:1128615492	@ tmp250,
	movt	r3, #:upper16:1213419593	@ tmp253,
	cmp	r0, ip	@, tmp250
	cmpeq	r6, r3	@, D.39364, tmp253
	bne	.L3350	@,
	movw	r5, #:lower16:g_event_report	@ tmp274,
	movt	r5, #:upper16:g_event_report	@ tmp274,
	mov	r0, #1	@ tmp258,
	strb	r0, [r4, #6]	@ tmp258, <variable>.IsStreamEndFlag
	ldr	ip, [r5, #0]	@ g_event_report.8953, g_event_report
	cmp	ip, #0	@ g_event_report.8953,
	beq	.L3342	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #112	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.8953
.L3342:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecVDM	@
	cmp	r0, #0	@,
	bne	.L3357	@,
.L3350:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
	mov	r0, #0	@ D.39298,
.L3337:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L3326:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC705	@,
	movt	r1, #:upper16:.LC705	@,
	bl	dprint_vfmw	@
	movw	ip, #:lower16:1960196	@ tmp265,
	movt	ip, #:upper16:1960196	@ tmp265,
	ldr	r1, [r4, ip]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [r1, #16]	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	cmp	r2, #63	@ <variable>.nal_unit_type,
	bls	.L3350	@,
	movw	r5, #:lower16:g_event_report	@ tmp275,
	movt	r5, #:upper16:g_event_report	@ tmp275,
	ldr	ip, [r5, #0]	@ g_event_report.8960, g_event_report
	cmp	ip, #0	@ g_event_report.8960,
	beq	.L3344	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #102	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.8960
.L3344:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
	ldr	ip, [r5, #0]	@ g_event_report.8962, g_event_report
	cmp	ip, #0	@ g_event_report.8962,
	beq	.L3335	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.8962
	mov	r0, #0	@ D.39298,
	b	.L3337	@
.L3327:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecSlice	@
	cmn	r0, #2	@ ret.8938,
	beq	.L3337	@,
	cmp	r0, #0	@ ret.8938,
	bne	.L3360	@,
.L3335:
	mov	r0, #0	@ D.39298,
	b	.L3337	@
.L3328:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecVPS	@
	mov	r5, r0	@ ret,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
	cmp	r5, #0	@ ret,
	beq	.L3335	@,
	movw	r5, #:lower16:g_event_report	@ tmp197,
	movt	r5, #:upper16:g_event_report	@ tmp197,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC701	@,
	movt	r1, #:upper16:.LC701	@,
	bl	dprint_vfmw	@
	ldr	ip, [r5, #0]	@ g_event_report.481, g_event_report
	cmp	ip, #0	@ g_event_report.481,
	bne	.L3352	@,
.L3336:
	mvn	r0, #0	@ D.39298,
	b	.L3337	@
.L3329:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecSPS	@
	mov	r5, r0	@ ret.8925,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
	cmp	r5, #0	@ ret.8925,
	beq	.L3335	@,
	movw	r5, #:lower16:g_event_report	@ tmp202,
	movt	r5, #:upper16:g_event_report	@ tmp202,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC702	@,
	movt	r1, #:upper16:.LC702	@,
	bl	dprint_vfmw	@
	ldr	ip, [r5, #0]	@ g_event_report.8926, g_event_report
	cmp	ip, #0	@ g_event_report.8926,
	bne	.L3352	@,
	mvn	r0, #0	@ D.39298,
	b	.L3337	@
.L3330:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecPPS	@
	mov	r5, r0	@ ret.8930,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
	cmp	r5, #0	@ ret.8930,
	beq	.L3335	@,
	movw	r5, #:lower16:g_event_report	@ tmp207,
	movt	r5, #:upper16:g_event_report	@ tmp207,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC703	@,
	movt	r1, #:upper16:.LC703	@,
	bl	dprint_vfmw	@
	ldr	ip, [r5, #0]	@ g_event_report.8931, g_event_report
	cmp	ip, #0	@ g_event_report.8931,
	beq	.L3336	@,
.L3352:
	sub	r2, fp, #28	@ tmp209,,
	mvn	r6, #0	@ tmp208,
	mov	r1, #100	@,
	mov	r3, #4	@,
	str	r6, [r2, #-4]!	@ tmp208,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	blx	ip	@ g_event_report.8931
	ldr	ip, [r5, #0]	@ g_event_report.8933, g_event_report
	cmp	ip, #0	@ g_event_report.8933,
	beq	.L3336	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.8933
	mov	r0, r6	@ D.39298, tmp208
	b	.L3337	@
.L3331:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecSEI	@
	mov	r5, r0	@ ret.8935,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
	cmp	r5, #0	@ ret.8935,
	beq	.L3335	@,
	movw	r1, #:lower16:.LC704	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC704	@,
	bl	dprint_vfmw	@
.L3355:
	movw	r2, #:lower16:g_event_report	@ tmp213,
	movt	r2, #:upper16:g_event_report	@ tmp213,
	ldr	ip, [r2, #0]	@ g_event_report.8939, g_event_report
	cmp	ip, #0	@ g_event_report.8939,
	beq	.L3336	@,
.L3349:
	mov	r2, #0	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.8956
	mvn	r0, #0	@ D.39298,
	b	.L3337	@
.L3332:
	ldrb	r5, [r4, #5]	@ zero_extendqisi2	@ <variable>.bIsInsertEOPICNal, <variable>.bIsInsertEOPICNal
	cmp	r5, #1	@ <variable>.bIsInsertEOPICNal,
	beq	.L3339	@,
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
.L3339:
	movw	r7, #:lower16:1960336	@ D.39331,
	movt	r7, #:upper16:1960336	@ D.39331,
	add	r5, r4, r7	@ D.39331, pHevcCtx, D.39331
	mov	r1, #32	@,
	mov	r7, #0	@ tmp215,
	strb	r7, [r4, #5]	@ tmp215, <variable>.bIsInsertEOPICNal
	mov	r0, r5	@, D.39331
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r6, r0	@ D.39332,
	mov	r0, r5	@, D.39331
	bl	BsGet	@
	and	r5, r6, #65280	@ tmp222, D.39332,
	mov	r1, r6, asl #24	@ tmp220, D.39332,
	movw	r3, #:lower16:.LANCHOR1	@ tmp231,
	movt	r3, #:upper16:.LANCHOR1	@ tmp231,
	orr	r1, r1, r6, lsr #24	@, tmp221, tmp220, D.39332,
	and	r6, r6, #16711680	@ tmp218, D.39332,
	orr	r1, r1, r5, asl #8	@, D.39340, tmp221, tmp222,
	orr	r6, r1, r6, lsr #8	@, tmp236, D.39340, tmp218,
	and	ip, r0, #65280	@ tmp228, D.39333,
	mov	r2, r0, asl #24	@ tmp226, D.39333,
	orr	r2, r2, r0, lsr #24	@, tmp227, tmp226, D.39333,
	and	r0, r0, #16711680	@ tmp224, D.39333,
	orr	ip, r2, ip, asl #8	@, D.39348, tmp227, tmp228,
	ldr	r2, [r3, #881]	@ tmp240,
	ldr	r3, [r3, #885]	@ tmp234,
	orr	r0, ip, r0, lsr #8	@, tmp230, D.39348, tmp224,
	cmp	r0, r3	@ tmp230, tmp234
	cmpeq	r6, r2	@, tmp236, tmp240
	bne	.L3335	@,
	movw	r5, #:lower16:g_event_report	@ tmp273,
	movt	r5, #:upper16:g_event_report	@ tmp273,
	ldr	ip, [r5, #0]	@ g_event_report.8944, g_event_report
	cmp	ip, r7	@ g_event_report.8944,
	beq	.L3340	@,
	mov	r2, r7	@, tmp215
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #112	@,
	mov	r3, r7	@, tmp2
	blx	ip	@ g_event_report.8944
.L3340:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecVDM	@
	cmp	r0, #0	@,
	beq	.L3335	@,
.L3357:
	ldr	ip, [r5, #0]	@ g_event_report.8956, g_event_report
	cmp	ip, #0	@ g_event_report.8956,
	bne	.L3349	@,
	mvn	r0, #0	@ D.39298,
	b	.L3337	@
.L3360:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
	b	.L3355	@
	.fnend
	.size	HEVC_DecOneNal, .-HEVC_DecOneNal
	.align	2
	.global	HEVCDEC_DecodePacket
	.type	HEVCDEC_DecodePacket, %function
HEVCDEC_DecodePacket:
	.fnstart
.LFB1542:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #24
	sub	sp, sp, #24	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pPacket
	mov	r2, #0	@ tmp167,
	mov	r4, r0	@ pHevcCtx, pHevcCtx
	str	r2, [fp, #-40]	@ tmp167, RefNum
	str	r2, [fp, #-44]	@ tmp167, ReadNum
	str	r2, [fp, #-48]	@ tmp167, NewNum
	beq	.L3382	@,
	movw	r3, #:lower16:1960188	@ tmp172,
	movt	r3, #:upper16:1960188	@ tmp172,
	ldrb	ip, [r0, #4]	@ zero_extendqisi2	@ <variable>.bHaveNalNotDecoded, <variable>.bHaveNalNotDecoded
	ldr	r3, [r0, r3]	@ <variable>.pstExtraData, <variable>.pstExtraData
	cmp	ip, #1	@ <variable>.bHaveNalNotDecoded,
	ldr	r0, [r3, #8]	@ <variable>.s32DecMode, <variable>.s32DecMode
	mov	ip, r0, asl #16	@ tmp173, <variable>.s32DecMode,
	and	r0, ip, #458752	@ tmp175, tmp173,
	str	r0, [r4, #224]	@ tmp175, <variable>.AdvancedCfg
	ldr	ip, [r3, #0]	@ <variable>.s32RefErrThr, <variable>.s32RefErrThr
	str	ip, [r4, #228]	@ <variable>.s32RefErrThr, <variable>.RefErrorThr
	ldr	r0, [r3, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	str	r0, [r4, #232]	@ <variable>.s32OutErrThr, <variable>.OutErrorThr
	beq	.L3364	@,
	ldr	r0, [r3, #864]	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r0, #1	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn,
	beq	.L3383	@,
.L3365:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ReceivePacket	@
	movw	ip, #:lower16:1960196	@ tmp196,
	movt	ip, #:upper16:1960196	@ tmp196,
	mov	r1, #0	@ tmp198,
	movw	r3, #:lower16:4321212	@ tmp195,
	movt	r3, #:upper16:4321212	@ tmp195,
	ldr	r2, [r4, ip]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r1, [r4, #4]	@ tmp198, <variable>.bHaveNalNotDecoded
	str	r2, [r4, r3]	@ <variable>.pCurrNal, <variable>.pLastNal
	cmp	r0, r1	@,
	beq	.L3366	@,
.L3367:
	mov	r0, #0	@ D.39120,
.L3363:
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
.L3383:
	ldr	ip, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	ip, #1	@ <variable>.s32WaitFsFlag,
	bne	.L3365	@,
	movw	r3, #:lower16:4321208	@ tmp186,
	movt	r3, #:upper16:4321208	@ tmp186,
	ldr	r0, [r4, r3]	@ <variable>.u32SCDWrapAround, <variable>.u32SCDWrapAround
	cmp	r0, #1	@ <variable>.u32SCDWrapAround,
	bne	.L3365	@,
	movw	r0, #:lower16:4321212	@ tmp189,
	movt	r0, #:upper16:4321212	@ tmp189,
	movw	r1, #:lower16:1960196	@ tmp188,
	movt	r1, #:upper16:1960196	@ tmp188,
	ldr	ip, [r4, r0]	@ <variable>.pLastNal, <variable>.pLastNal
	mov	r0, r2	@ D.39120, tmp167
	str	r2, [r4, r3]	@ tmp167, <variable>.u32SCDWrapAround
	strb	r2, [r4, #4]	@ tmp167, <variable>.bHaveNalNotDecoded
	str	ip, [r4, r1]	@ <variable>.pLastNal, <variable>.pCurrNal
	b	.L3363	@
.L3364:
	movw	lr, #:lower16:1960196	@ tmp200,
	movt	lr, #:upper16:1960196	@ tmp200,
	ldr	r0, [r4, lr]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r0, #0	@ <variable>.pCurrNal,
	strneb	r2, [r4, #4]	@ tmp167, <variable>.bHaveNalNotDecoded
	beq	.L3384	@,
.L3366:
	movw	r5, #:lower16:1960196	@ tmp203,
	movt	r5, #:upper16:1960196	@ tmp203,
	mov	r7, #0	@ tmp204,
	movw	r6, #:lower16:1960172	@ tmp206,
	ldr	r0, [r4, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movt	r6, #:upper16:1960172	@ tmp206,
	str	r7, [r0, #4]	@ tmp204, <variable>.nal_bitoffset
	ldr	r3, [r4, r5]	@ temp.9000, <variable>.pCurrNal
	ldr	r0, [r4, r6]	@, <variable>.pBS
	ldr	r1, [r3, #44]	@, <variable>.streamBuffer
	ldr	r2, [r3, #48]	@, <variable>.bitstream_length
	bl	BsInit	@
	mov	r1, #24	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	BsSkip	@
	mov	r1, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	ldr	sl, [r4, r5]	@ temp.9002, <variable>.pCurrNal
	bl	BsGet	@
	mov	r1, #6	@,
	str	r0, [sl, #24]	@, <variable>.forbidden_zero_bit
	ldr	r0, [r4, r6]	@, <variable>.pBS
	ldr	r8, [r4, r5]	@ temp.9004, <variable>.pCurrNal
	bl	BsGet	@
	mov	r1, #6	@,
	str	r0, [r8, #16]	@, <variable>.nal_unit_type
	ldr	r0, [r4, r6]	@, <variable>.pBS
	ldr	sl, [r4, r5]	@ temp.9006, <variable>.pCurrNal
	bl	BsGet	@
	mov	r1, #3	@,
	str	r0, [sl, #28]	@, <variable>.nuh_reserved_zero_6bits
	ldr	r0, [r4, r6]	@, <variable>.pBS
	ldr	r8, [r4, r5]	@ temp.9008, <variable>.pCurrNal
	bl	BsGet	@
	sub	sl, r0, #1	@ tmp224,,
	str	sl, [r8, #32]	@ tmp224, <variable>.nuh_temporal_id
	ldr	sl, [r4, r5]	@ temp.9018, <variable>.pCurrNal
	ldr	r0, [sl, #16]	@, <variable>.nal_unit_type
	bl	HEVC_IsSliceUnit	@
	sxtb	r8, r0	@ D.39168,
	cmp	r8, #1	@ D.39168,
	bne	.L3370	@,
	mov	r0, r4	@, pHevcCtx
	sub	r1, fp, #52	@,,
	sub	r2, fp, #56	@,,
	bl	HEVC_InquireSliceProperty	@
	cmp	r0, r7	@,
	bne	.L3371	@,
	ldr	r7, [fp, #-52]	@ IsNewPic, IsNewPic
	cmp	r7, #1	@ IsNewPic,
	beq	.L3385	@,
.L3372:
	ldr	r5, [fp, #-56]	@ IsSizeChanged, IsSizeChanged
	cmp	r5, #1	@ IsSizeChanged,
	bne	.L3373	@,
	movw	ip, #:lower16:2125432	@ tmp250,
	movt	ip, #:upper16:2125432	@ tmp250,
	ldr	r2, [r4, ip]	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	sub	r1, r2, #16	@ tmp251, <variable>.CurrSlice.nal_unit_type,
	cmp	r1, #4	@ tmp251,
	bls	.L3386	@,
.L3374:
	ldrb	r5, [r4, #1]	@ zero_extendqisi2	@ <variable>.bNoOutputOfPriorPicsFlag, <variable>.bNoOutputOfPriorPicsFlag
	cmp	r5, #1	@ <variable>.bNoOutputOfPriorPicsFlag,
	beq	.L3387	@,
.L3375:
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	bne	.L3373	@,
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	sub	r3, fp, #48	@,,
	sub	r1, fp, #40	@,,
	sub	r2, fp, #44	@,,
	bl	VCTRL_GetChanImgNum	@
	movw	r0, #:lower16:1960188	@ tmp266,
	movt	r0, #:upper16:1960188	@ tmp266,
	ldr	r3, [r4, r0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r3, #788]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r3, #1	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L3373	@,
	ldr	r2, [fp, #-44]	@ ReadNum, ReadNum
	ldr	r1, [fp, #-48]	@ NewNum, NewNum
	add	lr, r1, r2	@ tmp268, NewNum, ReadNum
	cmp	lr, #0	@ tmp268,
	strgtb	r3, [r4, #4]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.bHaveNalNotDecoded
	mvngt	r0, #1	@ D.39120,
	bgt	.L3363	@,
.L3373:
	movw	r0, #:lower16:1960196	@ tmp275,
	movt	r0, #:upper16:1960196	@ tmp275,
	ldr	sl, [r4, r0]	@ temp.9018, <variable>.pCurrNal
	ldr	r0, [sl, #16]	@, <variable>.nal_unit_type
	bl	HEVC_IsSliceUnit	@
	sxtb	ip, r0	@ D.39218,
	cmp	ip, #1	@ D.39218,
	bne	.L3370	@,
.L3377:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_DecOneNal	@
	cmn	r0, #2	@ ret.9034,
	beq	.L3363	@,
	cmp	r0, #0	@ ret.9034,
	beq	.L3367	@,
	movw	r1, #:lower16:.LC708	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC708	@,
	bl	dprint_vfmw	@
.L3381:
	mvn	r0, #0	@ D.39120,
	b	.L3363	@
.L3370:
	movw	r5, #:lower16:1960196	@ tmp280,
	movt	r5, #:upper16:1960196	@ tmp280,
	mov	r6, #0	@ tmp279,
	str	r6, [sl, #4]	@ tmp279, <variable>.nal_bitoffset
	ldr	lr, [r4, r5]	@ temp.9021, <variable>.pCurrNal
	movw	r1, #:lower16:1960336	@,
	movw	r6, #:lower16:1960172	@ tmp285,
	movt	r1, #:upper16:1960336	@,
	movt	r6, #:upper16:1960172	@ tmp285,
	add	r0, r4, r1	@, pHevcCtx,
	ldr	r2, [lr, #48]	@, <variable>.bitstream_length
	ldr	r1, [lr, #44]	@, <variable>.streamBuffer
	bl	BsInit	@
	mov	r1, #24	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	BsSkip	@
	mov	r1, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	ldr	r7, [r4, r5]	@ temp.9026, <variable>.pCurrNal
	bl	BsGet	@
	mov	r1, #6	@,
	str	r0, [r7, #24]	@, <variable>.forbidden_zero_bit
	ldr	r0, [r4, r6]	@, <variable>.pBS
	ldr	r7, [r4, r5]	@ temp.9028, <variable>.pCurrNal
	bl	BsGet	@
	mov	r1, #6	@,
	str	r0, [r7, #16]	@, <variable>.nal_unit_type
	ldr	r0, [r4, r6]	@, <variable>.pBS
	ldr	r7, [r4, r5]	@ temp.9030, <variable>.pCurrNal
	bl	BsGet	@
	mov	r1, #3	@,
	str	r0, [r7, #28]	@, <variable>.nuh_reserved_zero_6bits
	ldr	r0, [r4, r6]	@, <variable>.pBS
	ldr	r5, [r4, r5]	@ temp.9032, <variable>.pCurrNal
	bl	BsGet	@
	sub	r2, r0, #1	@ tmp299,,
	str	r2, [r5, #32]	@ tmp299, <variable>.nuh_temporal_id
	b	.L3377	@
.L3386:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_FlushOutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L3374	@,
	mov	r0, r5	@, IsSizeChanged
	movw	r1, #:lower16:.LC691	@,
	ldr	r2, .L3388	@,
	movt	r1, #:upper16:.LC691	@,
	bl	dprint_vfmw	@
	b	.L3374	@
.L3384:
	movw	r1, #:lower16:.LC709	@,
	movt	r1, #:upper16:.LC709	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39120,
	b	.L3363	@
.L3385:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_HaveSliceToDec	@
	subs	r3, r0, #0	@ D.39177,
	bne	.L3372	@,
	ldr	lr, [r4, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r0, #:lower16:1960336	@,
	movt	r0, #:upper16:1960336	@,
	mov	r2, #13	@,
	add	r0, r4, r0	@, pHevcCtx,
	ldr	r1, .L3388+4	@,
	str	r3, [lr, #4]	@ D.39177, <variable>.nal_bitoffset
	bl	BsInit	@
	mov	r1, #40	@,
	ldr	r0, [r4, r6]	@, <variable>.pBS
	bl	BsSkip	@
	ldr	r3, [r4, r5]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #48	@ tmp242,
	mov	r0, r4	@, pHevcCtx
	str	ip, [r3, #16]	@ tmp242, <variable>.nal_unit_type
	strb	r7, [r4, #5]	@ IsNewPic, <variable>.bIsInsertEOPICNal
	bl	HEVC_DecOneNal	@
	ldr	r2, [r4, #248]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	strb	r7, [r4, #4]	@ IsNewPic, <variable>.bHaveNalNotDecoded
	mvn	r0, #1	@ D.39120,
	add	r1, r2, #1	@ tmp246, <variable>.NewPicCounter,
	str	r1, [r4, #248]	@ tmp246, <variable>.NewPicCounter
	b	.L3363	@
.L3387:
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_EmptyFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L3375	@,
	mov	r0, r5	@, <variable>.bNoOutputOfPriorPicsFlag
	movw	r1, #:lower16:.LC692	@,
	ldr	r2, .L3388	@,
	movt	r1, #:upper16:.LC692	@,
	bl	dprint_vfmw	@
	b	.L3375	@
.L3371:
	mov	r0, r8	@, D.39168
	movw	r1, #:lower16:.LC707	@,
	movt	r1, #:upper16:.LC707	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pHevcCtx
	bl	HEVC_ClearCurrNal	@
	movw	r3, #:lower16:g_event_report	@ tmp274,
	movt	r3, #:upper16:g_event_report	@ tmp274,
	ldr	ip, [r3, #0]	@ g_event_report.477, g_event_report
	cmp	ip, #0	@ g_event_report.477,
	beq	.L3381	@,
	mov	r2, r7	@, tmp204
	ldr	r0, [r4, #236]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r7	@, tmp2
	blx	ip	@ g_event_report.477
	mvn	r0, #0	@ D.39120,
	b	.L3363	@
.L3382:
	mov	r0, r1	@, pPacket
	movw	r1, #:lower16:.LC706	@,
	movt	r1, #:upper16:.LC706	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39120,
	b	.L3363	@
.L3389:
	.align	2
.L3388:
	.word	.LANCHOR1+892
	.word	.LANCHOR1+876
	.fnend
	.size	HEVCDEC_DecodePacket, .-HEVCDEC_DecodePacket
	.section	.rodata
	.align	2
.LANCHOR1 = . + 0
	.type	__func__.45942, %object
	.size	__func__.45942, 14
__func__.45942:
	.ascii	"HEVC_IsNewPic\000"
	.space	2
	.type	__func__.44166, %object
	.size	__func__.44166, 16
__func__.44166:
	.ascii	"HEVC_RepairList\000"
	.type	__func__.41567, %object
	.size	__func__.41567, 27
__func__.41567:
	.ascii	"HEVC_GetUnRefPicWithMinPoc\000"
	.space	1
	.type	SarTable.38716, %object
	.size	SarTable.38716, 136
SarTable.38716:
	.word	1
	.word	1
	.word	1
	.word	1
	.word	12
	.word	11
	.word	10
	.word	11
	.word	16
	.word	11
	.word	40
	.word	33
	.word	24
	.word	11
	.word	20
	.word	11
	.word	32
	.word	11
	.word	80
	.word	33
	.word	18
	.word	11
	.word	15
	.word	11
	.word	64
	.word	33
	.word	160
	.word	99
	.word	4
	.word	3
	.word	3
	.word	2
	.word	2
	.word	1
	.type	__func__.39400, %object
	.size	__func__.39400, 18
__func__.39400:
	.ascii	"HEVC_CalcTileInfo\000"
	.space	2
	.type	C.799.46839, %object
	.size	C.799.46839, 16
C.799.46839:
	.word	1
	.word	2
	.word	2
	.word	1
	.type	C.800.46840, %object
	.size	C.800.46840, 16
C.800.46840:
	.word	1
	.word	2
	.word	1
	.word	1
	.type	__func__.47210, %object
	.size	__func__.47210, 16
__func__.47210:
	.ascii	"HEVC_ReleaseNAL\000"
	.type	__func__.47425, %object
	.size	__func__.47425, 13
__func__.47425:
	.ascii	"HEVCDEC_Init\000"
	.space	3
	.type	__func__.47773, %object
	.size	__func__.47773, 20
__func__.47773:
	.ascii	"HEVC_HaveSliceToDec\000"
	.type	quant_ts_default, %object
	.size	quant_ts_default, 16
quant_ts_default:
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.type	quant8_inter_default, %object
	.size	quant8_inter_default, 64
quant8_inter_default:
	.word	269488144
	.word	403968529
	.word	286265360
	.word	421008402
	.word	303108112
	.word	471406612
	.word	336728336
	.word	555489560
	.word	403968529
	.word	690035737
	.word	421008402
	.word	908665116
	.word	471406612
	.word	1194731809
	.word	555489560
	.word	1531393577
	.type	__func__.44908, %object
	.size	__func__.44908, 19
__func__.44908:
	.ascii	"HEVC_OutputCurrPic\000"
	.space	1
	.type	__func__.44952, %object
	.size	__func__.44952, 23
__func__.44952:
	.ascii	"HEVC_FirstFrameFastOut\000"
	.space	1
	.type	g_CropUnitX, %object
	.size	g_CropUnitX, 16
g_CropUnitX:
	.word	1
	.word	2
	.word	2
	.word	1
	.type	g_CropUnitY, %object
	.size	g_CropUnitY, 16
g_CropUnitY:
	.word	1
	.word	2
	.word	1
	.word	1
	.type	__func__.41841, %object
	.size	__func__.41841, 27
__func__.41841:
	.ascii	"HEVC_DecSliceSegmentHeader\000"
	.space	1
	.type	__func__.45449, %object
	.size	__func__.45449, 21
__func__.45449:
	.ascii	"HEVC_CheckFrameStore\000"
	.space	3
	.type	__func__.44401, %object
	.size	__func__.44401, 13
__func__.44401:
	.ascii	"HEVC_InitDPB\000"
	.space	3
	.type	__func__.47806, %object
	.size	__func__.47806, 21
__func__.47806:
	.ascii	"HEVCDEC_GetRemainImg\000"
	.space	3
	.type	__func__.45417, %object
	.size	__func__.45417, 19
__func__.45417:
	.ascii	"HEVC_OutputFrmToVO\000"
	.space	1
	.type	__func__.45353, %object
	.size	__func__.45353, 27
__func__.45353:
	.ascii	"HEVC_FlushOutputFrmFromDPB\000"
	.space	1
	.type	__func__.41615, %object
	.size	__func__.41615, 30
__func__.41615:
	.ascii	"HEVC_OutputUnRefPicWithMinPoc\000"
	.space	2
	.type	__func__.47600, %object
	.size	__func__.47600, 14
__func__.47600:
	.ascii	"HEVC_ClearDPB\000"
	.space	2
	.type	__func__.43851, %object
	.size	__func__.43851, 12
__func__.43851:
	.ascii	"HEVC_DecVDM\000"
	.type	__func__.41595, %object
	.size	__func__.41595, 21
__func__.41595:
	.ascii	"HEVC_IncreaseDPBSize\000"
	.space	3
	.type	__func__.43347, %object
	.size	__func__.43347, 17
__func__.43347:
	.ascii	"HEVC_WritePicMsg\000"
	.space	3
	.type	__func__.47360, %object
	.size	__func__.47360, 23
__func__.47360:
	.ascii	"HEVCDEC_GetImageBuffer\000"
	.space	1
	.type	__func__.45235, %object
	.size	__func__.45235, 20
__func__.45235:
	.ascii	"HEVC_InsertFrmInDPB\000"
	.type	__func__.45021, %object
	.size	__func__.45021, 22
__func__.45021:
	.ascii	"HEVC_DispOrderProcess\000"
	.space	2
	.type	__func__.44991, %object
	.size	__func__.44991, 21
__func__.44991:
	.ascii	"HEVC_DecOrderProcess\000"
	.space	3
	.type	__func__.44964, %object
	.size	__func__.44964, 22
__func__.44964:
	.ascii	"HEVC_SimpleDPBProcess\000"
	.space	2
	.type	__func__.45066, %object
	.size	__func__.45066, 19
__func__.45066:
	.ascii	"HEVC_StorePicInDPB\000"
	.space	1
	.type	__func__.41631, %object
	.size	__func__.41631, 23
__func__.41631:
	.ascii	"HEVC_RecoverDPBProcess\000"
	.space	1
	.type	__func__.41695, %object
	.size	__func__.41695, 14
__func__.41695:
	.ascii	"HEVC_DecSlice\000"
	.space	2
	.type	g_HEVCNalTypeEOPIC, %object
	.size	g_HEVCNalTypeEOPIC, 13
g_HEVCNalTypeEOPIC:
	.byte	0
	.byte	0
	.byte	1
	.byte	96
	.byte	0
	.byte	72
	.byte	83
	.byte	80
	.byte	73
	.byte	67
	.byte	69
	.byte	78
	.byte	68
	.space	3
	.type	__func__.39116, %object
	.size	__func__.39116, 21
__func__.39116:
	.ascii	"HEVCDEC_DecodePacket\000"
	.data
	.align	2
.LANCHOR0 = . + 0
	.type	g_quantTSDefault4x4, %object
	.size	g_quantTSDefault4x4, 64
g_quantTSDefault4x4:
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.word	16
	.type	g_quantInterDefault8x8, %object
	.size	g_quantInterDefault8x8, 256
g_quantInterDefault8x8:
	.word	16
	.word	16
	.word	16
	.word	16
	.word	17
	.word	18
	.word	20
	.word	24
	.word	16
	.word	16
	.word	16
	.word	17
	.word	18
	.word	20
	.word	24
	.word	25
	.word	16
	.word	16
	.word	17
	.word	18
	.word	20
	.word	24
	.word	25
	.word	28
	.word	16
	.word	17
	.word	18
	.word	20
	.word	24
	.word	25
	.word	28
	.word	33
	.word	17
	.word	18
	.word	20
	.word	24
	.word	25
	.word	28
	.word	33
	.word	41
	.word	18
	.word	20
	.word	24
	.word	25
	.word	28
	.word	33
	.word	41
	.word	54
	.word	20
	.word	24
	.word	25
	.word	28
	.word	33
	.word	41
	.word	54
	.word	71
	.word	24
	.word	25
	.word	28
	.word	33
	.word	41
	.word	54
	.word	71
	.word	91
	.type	g_quantIntraDefault8x8, %object
	.size	g_quantIntraDefault8x8, 256
g_quantIntraDefault8x8:
	.word	16
	.word	16
	.word	16
	.word	16
	.word	17
	.word	18
	.word	21
	.word	24
	.word	16
	.word	16
	.word	16
	.word	16
	.word	17
	.word	19
	.word	22
	.word	25
	.word	16
	.word	16
	.word	17
	.word	18
	.word	20
	.word	22
	.word	25
	.word	29
	.word	16
	.word	16
	.word	18
	.word	21
	.word	24
	.word	27
	.word	31
	.word	36
	.word	17
	.word	17
	.word	20
	.word	24
	.word	30
	.word	35
	.word	41
	.word	47
	.word	18
	.word	19
	.word	22
	.word	27
	.word	35
	.word	44
	.word	54
	.word	65
	.word	21
	.word	22
	.word	25
	.word	31
	.word	41
	.word	54
	.word	70
	.word	88
	.word	24
	.word	25
	.word	29
	.word	36
	.word	47
	.word	65
	.word	88
	.word	115
	.type	quant8_intra_default, %object
	.size	quant8_intra_default, 64
quant8_intra_default:
	.word	269488144
	.word	404034065
	.word	269488144
	.word	420877073
	.word	303108112
	.word	488183316
	.word	353505296
	.word	606018328
	.word	403968273
	.word	791225118
	.word	454431506
	.word	1094069283
	.word	521737749
	.word	1480996393
	.word	605886744
	.word	1935163695
	.section	.rodata.str1.4,"aMS",%progbits,1
	.align	2
.LC0:
	.ascii	"HEVC_GetScalingListDefaultAddress NULL.\012\000"
	.space	3
.LC1:
	.ascii	"%s, %d, CurrSlice.poc = %d, PocRandomAccess = %d, n"
	.ascii	"al_unit_type = %d, should skip this frame\012\000"
	.space	2
.LC2:
	.ascii	"%s, %d, CurrSlice.poc = %d, bNoRaslOutputFlag = %d,"
	.ascii	" nal_unit_type = %d, should skip this frame\012\000"
.LC3:
	.ascii	"%s, %d, PrevRAPIsBLA = %d, CurrSlice.poc = %d, PocC"
	.ascii	"RA = %d, nal_unit_type = %d, should skip this frame"
	.ascii	"\012\000"
.LC4:
	.ascii	"HEVC_VpsSpsPpsCheck pic_parameter_set_id(%d) out of"
	.ascii	" range\012\000"
	.space	1
.LC5:
	.ascii	"pps with this pic_parameter_set_id = %d havn't be d"
	.ascii	"ecoded\012\000"
	.space	1
.LC6:
	.ascii	"HEVC_VpsSpsPpsCheck seq_parameter_set_id(%d) out of"
	.ascii	" range\012\000"
	.space	1
.LC7:
	.ascii	"sps with this seq_parameter_set_id = %d havn't be d"
	.ascii	"ecoded\012\000"
	.space	1
.LC8:
	.ascii	"HEVC_VpsSpsPpsCheck video_parameter_set_id out of r"
	.ascii	"ange\012\000"
	.space	3
.LC9:
	.ascii	"vps with this video_parameter_set_id = %d havn't be"
	.ascii	" decoded\012\000"
	.space	3
.LC10:
	.ascii	"nal_segment = %d is not expected value\012\000"
.LC11:
	.ascii	"%s: pHevcCtx->DPB.used_size(%d) > DPB.size(%d), err"
	.ascii	"or resilence.\012\000"
	.space	2
.LC12:
	.ascii	"release(apc=%d, pmvIdc=%d)\011\000"
.LC13:
	.ascii	"%s unkown slice type(%d).\012\000"
	.space	1
.LC14:
	.ascii	"%s pListX[%d] no available pic to repair.\012\000"
	.space	1
.LC15:
	.ascii	"%s: pListX[%d][%d] = NULL, repair it with pos(%d).\012"
	.ascii	"\000"
.LC16:
	.ascii	"ListX ERROR: list0size >= %d\012\000"
	.space	2
.LC17:
	.ascii	"ListX ERROR: list1size >= %d\012\000"
	.space	2
.LC18:
	.ascii	"pListX[0][%d] = NULL\012\000"
	.space	2
.LC19:
	.ascii	"pListX[0][%d]->frame_store = NULL\012\000"
	.space	1
.LC20:
	.ascii	"pListX[1][%d] = NULL\012\000"
	.space	2
.LC21:
	.ascii	"pListX[1][%d]->frame_store = NULL\012\000"
	.space	1
.LC22:
	.ascii	"TileWidthInCtb is 0\012\000"
	.space	3
.LC23:
	.ascii	"%s DPB.used_size(%d) >= 17.\012\000"
	.space	3
.LC24:
	.ascii	"%s can't find such pic.\012\000"
	.space	3
.LC25:
	.ascii	"%s find pos=%d, poc=%d.\012\000"
	.space	3
.LC26:
	.ascii	"NULL pointer: %s, L%d\012\000"
	.space	1
.LC27:
	.ascii	"/home/tangxiaodi/HiSTBAndroidV5/images_and_tools/re"
	.ascii	"lease/hi3798mv100/verify/maintain_spc062/HiSTBAndro"
	.ascii	"idV5_release/HiSTBAndroidV600R001C00SPC064/device/h"
	.ascii	"isilicon/bigfish/sdk/source/kernel/linux-3.10.y/dri"
	.ascii	"vers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/hevc"
	.ascii	".c\000"
	.space	2
.LC28:
	.ascii	"--------------- PrintAPCState START ---------------"
	.ascii	"\012\000"
	.space	3
.LC29:
	.ascii	"APC.used_size:%d, APC.size:%d\012\000"
	.space	1
.LC30:
	.ascii	"%d: is_used=%d, idc=%d, poc=%d\012\000"
.LC31:
	.ascii	"--------------- PrintAPCState END ---------------\012"
	.ascii	"\000"
	.space	1
.LC32:
	.ascii	"--------------- PrintFrameStoreState START --------"
	.ascii	"-------\012\000"
.LC33:
	.ascii	"Fs=%d, pFs=%p, state=%d, is_reference=%d, is_displa"
	.ascii	"yed=%d \000"
	.space	1
.LC34:
	.ascii	"p_usrdat[%d]=%p \000"
	.space	3
.LC35:
	.ascii	"\012\000"
	.space	2
.LC36:
	.ascii	"--------------- PrintFrameStoreState END ----------"
	.ascii	"-----\012\000"
	.space	2
.LC37:
	.ascii	"--------------- PrintNaluArraySlot START ----------"
	.ascii	"-----\012\000"
	.space	2
.LC38:
	.ascii	"NalArray[%d]=%p,is_valid=%d   \000"
	.space	1
.LC39:
	.ascii	"--------------- PrintNaluArraySlot END ------------"
	.ascii	"---\012\000"
.LC40:
	.ascii	"dar=%d\012\000"
.LC41:
	.ascii	"%s num_tile_columns(%d) out of range(0, %d].\012\000"
	.space	2
.LC42:
	.ascii	"%s num_tile_rows(%d) out of range(0, %d].\012\000"
	.space	1
.LC43:
	.ascii	"%s 0 idx(%d) out of range(0, 512).\012\000"
.LC44:
	.ascii	"%s 1 idx(%d) out of range(0, 512).\012\000"
.LC45:
	.ascii	"Error, BsLen: 0x%x, TotalPos: 0x%x\012\000"
.LC46:
	.ascii	"HEVC_ue_v ERROR: LeadingZeros (%d) >= 32, return 0x"
	.ascii	"%x\012\000"
	.space	1
.LC47:
	.ascii	"nal_hrd_parameters_present_flag\000"
.LC48:
	.ascii	"vcl_hrd_parameters_present_flag\000"
.LC49:
	.ascii	"sub_pic_cpb_params_present_flag\000"
.LC50:
	.ascii	"tick_divisor_minus2\000"
.LC51:
	.ascii	"du_cpb_removal_delay_increment_length_minus1\000"
	.space	3
.LC52:
	.ascii	"sub_pic_cpb_params_in_pic_timing_sei_flag\000"
	.space	2
.LC53:
	.ascii	"dpb_output_delay_du_length_minus1\000"
	.space	2
.LC54:
	.ascii	"bit_rate_scale\000"
	.space	1
.LC55:
	.ascii	"cpb_size_scale\000"
	.space	1
.LC56:
	.ascii	"cpb_size_du_scale\000"
	.space	2
.LC57:
	.ascii	"initial_cpb_removal_delay_length_minus1\000"
.LC58:
	.ascii	"au_cpb_removal_delay_length_minus1\000"
	.space	1
.LC59:
	.ascii	"dpb_output_delay_length_minus1\000"
	.space	1
.LC60:
	.ascii	"fixed_pic_rate_general_flag\000"
.LC61:
	.ascii	"fixed_pic_rate_within_cvs_flag\000"
	.space	1
.LC62:
	.ascii	"elemental_duration_in_tc_minus1\000"
.LC63:
	.ascii	"low_delay_hrd_flag\000"
	.space	1
.LC64:
	.ascii	"cpb_cnt_minus1\000"
	.space	1
.LC65:
	.ascii	"cpb_cnt_minus1(%d) out of range(0,31).\012\000"
.LC66:
	.ascii	"bit_rate_value_minus1\000"
	.space	2
.LC67:
	.ascii	"cpb_size_value_minus1\000"
	.space	2
.LC68:
	.ascii	"cbr_flag\000"
	.space	3
.LC69:
	.ascii	"cpb_size_du_value_minus1\000"
	.space	3
.LC70:
	.ascii	"bit_rate_du_value_minus1\000"
	.space	3
.LC71:
	.ascii	"aspect_ratio_info_present_flag\000"
	.space	1
.LC72:
	.ascii	"aspect_ratio_idc\000"
	.space	3
.LC73:
	.ascii	"sar_width\000"
	.space	2
.LC74:
	.ascii	"sar_height\000"
	.space	1
.LC75:
	.ascii	"overscan_info_present_flag\000"
	.space	1
.LC76:
	.ascii	"overscan_appropriate_flag\000"
	.space	2
.LC77:
	.ascii	"video_signal_type_present_flag\000"
	.space	1
.LC78:
	.ascii	"video_format\000"
	.space	3
.LC79:
	.ascii	"video_full_range_flag\000"
	.space	2
.LC80:
	.ascii	"colour_description_present_flag\000"
.LC81:
	.ascii	"colour_primaries\000"
	.space	3
.LC82:
	.ascii	"transfer_characteristics\000"
	.space	3
.LC83:
	.ascii	"matrix_coeffs\000"
	.space	2
.LC84:
	.ascii	"chroma_loc_info_present_flag\000"
	.space	3
.LC85:
	.ascii	"chroma_sample_loc_type_top_field\000"
	.space	3
.LC86:
	.ascii	"chroma_sample_loc_type_bottom_field\000"
.LC87:
	.ascii	"neutral_chroma_indication_flag\000"
	.space	1
.LC88:
	.ascii	"field_seq_flag\000"
	.space	1
.LC89:
	.ascii	"frame_field_info_present_flag\000"
	.space	2
.LC90:
	.ascii	"default_display_window_flag\000"
.LC91:
	.ascii	"def_disp_win_left_offset\000"
	.space	3
.LC92:
	.ascii	"VUI pSps->chroma_format_idc out of range(0,3).\012\000"
.LC93:
	.ascii	"def_disp_win_right_offset\000"
	.space	2
.LC94:
	.ascii	"def_disp_win_top_offset\000"
.LC95:
	.ascii	"def_disp_win_bottom_offset\000"
	.space	1
.LC96:
	.ascii	"vui_timing_info_present_flag\000"
	.space	3
.LC97:
	.ascii	"vui_num_units_in_tick\000"
	.space	2
.LC98:
	.ascii	"vui_time_scale\000"
	.space	1
.LC99:
	.ascii	"vui_poc_proportional_to_timing_flag\000"
.LC100:
	.ascii	"vui_num_ticks_poc_diff_one_minus1\000"
	.space	2
.LC101:
	.ascii	"vui_hrd_parameters_present_flag\000"
.LC102:
	.ascii	"VUI HEVC_DecHrdParam error.\012\000"
	.space	3
.LC103:
	.ascii	"bitstream_restriction_flag\000"
	.space	1
.LC104:
	.ascii	"tiles_fixed_structure_flag\000"
	.space	1
.LC105:
	.ascii	"motion_vectors_over_pic_boundaries_flag\000"
.LC106:
	.ascii	"restricted_ref_pic_lists_flag\000"
	.space	2
.LC107:
	.ascii	"min_spatial_segmentation_idc\000"
	.space	3
.LC108:
	.ascii	"VUI min_spatial_segmentation_idc out of range(0,409"
	.ascii	"5).\012\000"
.LC109:
	.ascii	"max_bytes_per_pic_denom\000"
.LC110:
	.ascii	"max_bits_per_min_cu_denom\000"
	.space	2
.LC111:
	.ascii	"log2_max_mv_length_horizontal\000"
	.space	2
.LC112:
	.ascii	"log2_max_mv_length_vertical\000"
.LC113:
	.ascii	"luma_log2_weight_denom\000"
	.space	1
.LC114:
	.ascii	"luma_log2_weight_denom out of range(0,7).\012\000"
	.space	1
.LC115:
	.ascii	"delta_chroma_log2_weight_denom\000"
	.space	1
.LC116:
	.ascii	"delta_chroma_log2_weight_denom out of range(-7,7).\012"
	.ascii	"\000"
.LC117:
	.ascii	"luma_weight_l0_flag\000"
.LC118:
	.ascii	"chroma_weight_l0_flag\000"
	.space	2
.LC119:
	.ascii	"delta_luma_weight_l0\000"
	.space	3
.LC120:
	.ascii	"delta_luma_weight_l0(%d) out of range(-128,127).\012"
	.ascii	"\000"
	.space	2
.LC121:
	.ascii	"luma_offset_l0\000"
	.space	1
.LC122:
	.ascii	"luma_offset_l0(%d) out of range(-128,127).\012\000"
.LC123:
	.ascii	"delta_chroma_weight_l0\000"
	.space	1
.LC124:
	.ascii	"delta_chroma_offset_l0\000"
	.space	1
.LC125:
	.ascii	"delta_chroma_weight_l0 out of range(-128,127).\012\000"
.LC126:
	.ascii	"delta_chroma_offset_l0 out of range(-512,511).\012\000"
.LC127:
	.ascii	"luma_weight_l1_flag\000"
.LC128:
	.ascii	"chroma_weight_l1_flag\000"
	.space	2
.LC129:
	.ascii	"delta_luma_weight_l1\000"
	.space	3
.LC130:
	.ascii	"delta_luma_weight_l1 out of range(-128,127).\012\000"
	.space	2
.LC131:
	.ascii	"luma_offset_l1\000"
	.space	1
.LC132:
	.ascii	"luma_offset_l1 out of range(-128,127).\012\000"
.LC133:
	.ascii	"delta_chroma_weight_l1\000"
	.space	1
.LC134:
	.ascii	"delta_chroma_offset_l1\000"
	.space	1
.LC135:
	.ascii	"delta_chroma_weight_l1 out of range(-128,127).\012\000"
.LC136:
	.ascii	"delta_chroma_offset_l1 out of range(-512,511).\012\000"
.LC137:
	.ascii	"ref_pic_list_modification_flag_l0\000"
	.space	2
.LC138:
	.ascii	"list_entry_l0\000"
	.space	2
.LC139:
	.ascii	"ref_pic_list_modification_flag_l1\000"
	.space	2
.LC140:
	.ascii	"list_entry_l1\000"
	.space	2
.LC141:
	.ascii	"inter_ref_pic_set_prediction_flag\000"
	.space	2
.LC142:
	.ascii	"delta_idx_minus1\000"
	.space	3
.LC143:
	.ascii	"delta_idx(%d) > idx(%d).\012\000"
	.space	2
.LC144:
	.ascii	"rIdx(%d) > (idx-1)(%d) or < 0).\012\000"
	.space	3
.LC145:
	.ascii	"delta_rps_sign\000"
	.space	1
.LC146:
	.ascii	"abs_delta_rps_minus1\000"
	.space	3
.LC147:
	.ascii	"pTempRPset->num_of_pics(%d) out of range(0,15).\012"
	.ascii	"\000"
	.space	3
.LC148:
	.ascii	"used_by_curr_pic_flag\000"
	.space	2
.LC149:
	.ascii	"use_delta_flag\000"
	.space	1
.LC150:
	.ascii	"num_of_pics out of range(0,15).\012\000"
	.space	3
.LC151:
	.ascii	"num_negative_pics\000"
	.space	2
.LC152:
	.ascii	"pTempRPset->num_negative_pics(%d) out of range(0,15"
	.ascii	").\012\000"
	.space	1
.LC153:
	.ascii	"num_positive_pics\000"
	.space	2
.LC154:
	.ascii	"pTempRPset->num_positive_pics(%d) out of range(0,15"
	.ascii	").\012\000"
	.space	1
.LC155:
	.ascii	"pShortTermRpset->num_of_pics(%d) out of range[0,%d]"
	.ascii	".\012\000"
	.space	2
.LC156:
	.ascii	"delta_poc_s0_minus1\000"
.LC157:
	.ascii	"used_by_curr_pic_s0_flag\000"
	.space	3
.LC158:
	.ascii	"delta_poc_s1_minus1\000"
.LC159:
	.ascii	"used_by_curr_pic_s1_flag\000"
	.space	3
.LC160:
	.ascii	"HEVC_Sei_User_Data_Unregistered payloadSize < 16\012"
	.ascii	"\000"
	.space	2
.LC161:
	.ascii	"uuid_iso_iec_11578\000"
	.space	1
.LC162:
	.ascii	"userData\000"
	.space	3
.LC163:
	.ascii	"refreshed_region_flag\000"
	.space	2
.LC164:
	.ascii	"tone_map_id\000"
.LC165:
	.ascii	"tone_map_cancel_flag\000"
	.space	3
.LC166:
	.ascii	"tone_map_persistence_flag\000"
	.space	2
.LC167:
	.ascii	"coded_data_bit_depth\000"
	.space	3
.LC168:
	.ascii	"target_bit_depth\000"
	.space	3
.LC169:
	.ascii	"Unsupport: target_bit_depth(%d) > 8\012\000"
	.space	3
.LC170:
	.ascii	"tone_map_model_id\000"
	.space	2
.LC171:
	.ascii	"min_value\000"
	.space	2
.LC172:
	.ascii	"max_value\000"
	.space	2
.LC173:
	.ascii	"sigmoid_midpoint\000"
	.space	3
.LC174:
	.ascii	"sigmoid_width\000"
	.space	2
.LC175:
	.ascii	"start_of_coded_interval\000"
.LC176:
	.ascii	"num_pivots\000"
	.space	1
.LC177:
	.ascii	"pTon->num_pivots > 256\012\000"
.LC178:
	.ascii	"coded_pivot_value\000"
	.space	2
.LC179:
	.ascii	"target_pivot_value\000"
	.space	1
.LC180:
	.ascii	"camera_iso_speed_idc\000"
	.space	3
.LC181:
	.ascii	"camera_iso_speed_value\000"
	.space	1
.LC182:
	.ascii	"exposure_compensation_value_sign_flag\000"
	.space	2
.LC183:
	.ascii	"exposure_compensation_value_numerator\000"
	.space	2
.LC184:
	.ascii	"exposure_compensation_value_denom_idc\000"
	.space	2
.LC185:
	.ascii	"ref_screen_luminance_white\000"
	.space	1
.LC186:
	.ascii	"extended_range_white_level\000"
	.space	1
.LC187:
	.ascii	"nominal_black_level_code_value\000"
	.space	1
.LC188:
	.ascii	"nominal_white_level_code_value\000"
	.space	1
.LC189:
	.ascii	"extended_white_level_code_value\000"
.LC190:
	.ascii	"hash_type\000"
	.space	2
.LC191:
	.ascii	"picture_checksum\000"
	.space	3
.LC192:
	.ascii	"picture_crc\000"
.LC193:
	.ascii	"picture_md5\000"
.LC194:
	.ascii	"%s release streambuff=%p, bitstream_length=%d\012\000"
	.space	1
.LC195:
	.ascii	"Init dec para\012\000"
	.space	1
.LC196:
	.ascii	"%s: Get context addr failed!\012\000"
	.space	2
.LC197:
	.ascii	"%s: VCTRL_GetChanIDByCtx() return -1!\012\000"
	.space	1
.LC198:
	.ascii	"%s last frame fs unrelease, fix it!\012\000"
	.space	3
.LC199:
	.ascii	"Panic: All zero data sequence in RBSP \012\000"
.LC200:
	.ascii	"nal_trail_zero_bit_num err\012\000"
.LC201:
	.ascii	"HEVC_CombinePacket FATAL: pCurrNal=NULL!\012\000"
	.space	2
.LC202:
	.ascii	"END of the bit buffer, copy the first packet!\012\000"
	.space	1
.LC203:
	.ascii	"scaling_list_pred_matrix_id_delta\000"
	.space	2
.LC204:
	.ascii	"scaling_list_pred_matrix_id_delta out of range(0,ma"
	.ascii	"trixId).\012\000"
	.space	3
.LC205:
	.ascii	"HEVC_DecScalingListData pMatrixAddress NULL.\012\000"
	.space	2
.LC206:
	.ascii	"scaling_list_dc_coef_minus8\000"
.LC207:
	.ascii	"scaling_list_dc_coef_minus8 out of range(-7,247).\012"
	.ascii	"\000"
	.space	1
.LC208:
	.ascii	"scaling_list_delta_coef\000"
.LC209:
	.ascii	"scaling_list_dc_coef_minus8 out of range(-128,127)."
	.ascii	"\012\000"
	.space	3
.LC210:
	.ascii	"scaling_list_pred_mode_flag\000"
.LC211:
	.ascii	"%s: pImg is NULL!\012\000"
	.space	1
.LC212:
	.ascii	"%s, REPORT_IFRAME_ERR\012\000"
	.space	1
.LC213:
	.ascii	"%s: InsertImgToVoQueue failed!\012\000"
.LC214:
	.ascii	"%s: ImgErrorLevel = %d, OutErrThr:%d, discarded!\012"
	.ascii	"\000"
	.space	2
.LC215:
	.ascii	"%s output current picture failed\012\000"
	.space	2
.LC216:
	.ascii	"HEVC_InitListX error.\012\000"
	.space	1
.LC217:
	.ascii	"HEVC_RepairList error.\012\000"
.LC218:
	.ascii	"NumSlicePara(%d) >= MaxSliceNum(%d)\012\000"
	.space	3
.LC219:
	.ascii	"pps_seq_parameter_set_id\000"
	.space	3
.LC220:
	.ascii	"pic_parameter_set_id(%d) out of range[0,15].\012\000"
	.space	2
.LC221:
	.ascii	"SPS(%d) haven't decode.\012\000"
	.space	3
.LC222:
	.ascii	"dependent_slice_segments_enabled_flag\000"
	.space	2
.LC223:
	.ascii	"output_flag_present_flag\000"
	.space	3
.LC224:
	.ascii	"num_extra_slice_header_bits\000"
.LC225:
	.ascii	"sign_data_hiding_flag\000"
	.space	2
.LC226:
	.ascii	"cabac_init_present_flag\000"
.LC227:
	.ascii	"num_ref_idx_l0_default_active_minus1\000"
	.space	3
.LC228:
	.ascii	"num_ref_idx_l0_default_active out of range[0,15].\012"
	.ascii	"\000"
	.space	1
.LC229:
	.ascii	"num_ref_idx_l1_default_active_minus1\000"
	.space	3
.LC230:
	.ascii	"num_ref_idx_l1_default_active out of range[0,15].\012"
	.ascii	"\000"
	.space	1
.LC231:
	.ascii	"init_qp_minus26\000"
.LC232:
	.ascii	"pic_init_qp(%d) out of range[-%d,51].\012\000"
	.space	1
.LC233:
	.ascii	"constrained_intra_pred_flag\000"
.LC234:
	.ascii	"transform_skip_enabled_flag\000"
.LC235:
	.ascii	"cu_qp_delta_enabled_flag\000"
	.space	3
.LC236:
	.ascii	"diff_cu_qp_delta_depth\000"
	.space	1
.LC237:
	.ascii	"diff_cu_qp_delta_depth out of range[0,3].\012\000"
	.space	1
.LC238:
	.ascii	"pps_cb_qp_offset\000"
	.space	3
.LC239:
	.ascii	"pic_cb_qp_offset out of range[-12,12].\012\000"
.LC240:
	.ascii	"pps_cr_qp_offset\000"
	.space	3
.LC241:
	.ascii	"pic_cr_qp_offset out of range[-12,12].\012\000"
.LC242:
	.ascii	"pps_slice_chroma_qp_offsets_present_flag\000"
	.space	3
.LC243:
	.ascii	"weighted_pred_flag\000"
	.space	1
.LC244:
	.ascii	"weighted_bipred_flag\000"
	.space	3
.LC245:
	.ascii	"transquant_bypass_enable_flag\000"
	.space	2
.LC246:
	.ascii	"tiles_enabled_flag\000"
	.space	1
.LC247:
	.ascii	"entropy_coding_sync_enabled_flag\000"
	.space	3
.LC248:
	.ascii	"num_tile_columns_minus1\000"
.LC249:
	.ascii	"num_tile_columns(%d) out of range(0,%d).\012\000"
	.space	2
.LC250:
	.ascii	"num_tile_rows_minus1\000"
	.space	3
.LC251:
	.ascii	"num_tile_rows out(%d) of range(0,%d).\012\000"
	.space	1
.LC252:
	.ascii	"Logic limit(%d), num_tile_columns(%d) exceed.\012\000"
	.space	1
.LC253:
	.ascii	"Logic limit(%d), num_tile_rows(%d) exceed.\012\000"
.LC254:
	.ascii	"uniform_spacing_flag\000"
	.space	3
.LC255:
	.ascii	"column_width_minus1\000"
.LC256:
	.ascii	"column_width[%d](%d) out of range (0 %d)\012\000"
	.space	2
.LC257:
	.ascii	"row_height_minus1\000"
	.space	2
.LC258:
	.ascii	"row_height[%d](%d) out of range (0 %d)\012\000"
.LC259:
	.ascii	"column_bd[%d](%d) <= 0, invalid!\012\000"
	.space	2
.LC260:
	.ascii	"row_bd[%d](%d) <= 0, invalid!\012\000"
	.space	1
.LC261:
	.ascii	"loop_filter_across_tiles_enabled_flag\000"
	.space	2
.LC262:
	.ascii	"PPS tile width(%d) is too small.(Logic Unsupport)\012"
	.ascii	"\000"
	.space	1
.LC263:
	.ascii	"PPS tile height(%d) is too small.(Logic Unsupport)\012"
	.ascii	"\000"
.LC264:
	.ascii	"loop_filter_across_slices_enabled_flag\000"
	.space	1
.LC265:
	.ascii	"deblocking_filter_control_present_flag\000"
	.space	1
.LC266:
	.ascii	"deblocking_filter_override_enabled_flag\000"
.LC267:
	.ascii	"pps_disable_deblocking_filter_flag\000"
	.space	1
.LC268:
	.ascii	"pps_beta_offset_div2\000"
	.space	3
.LC269:
	.ascii	"pps_beta_offset_div2(%d) out of range(-6,6).\012\000"
	.space	2
.LC270:
	.ascii	"pps_tc_offset_div2\000"
	.space	1
.LC271:
	.ascii	"pps_tc_offset_div2(%d) out of range(-6,6).\012\000"
.LC272:
	.ascii	"pps_scaling_list_data_present_flag\000"
	.space	1
.LC273:
	.ascii	"PPS HEVC_DecScalingListData error.\012\000"
.LC274:
	.ascii	"lists_modification_present_flag\000"
.LC275:
	.ascii	"log2_parallel_merge_level_minus2\000"
	.space	3
.LC276:
	.ascii	"log2_parallel_merge_level(%d) out of range(2,log2_c"
	.ascii	"tb_sizeY).\012\000"
	.space	1
.LC277:
	.ascii	"slice_segment_header_extension_present_flag\000"
.LC278:
	.ascii	"pps_extension_flag\000"
	.space	1
.LC279:
	.ascii	"\000"
	.space	3
.LC280:
	.ascii	"chroma_format_idc\000"
	.space	2
.LC281:
	.ascii	"pSPS->chroma_format_idc out of range(0,3).\012\000"
.LC282:
	.ascii	"pSPS->chroma_format_idc not equal(%d) 1.\012\000"
	.space	2
.LC283:
	.ascii	"pic_width_in_luma_samples\000"
	.space	2
.LC284:
	.ascii	"pic_width_in_luma_samples out of range(0,8192).\012"
	.ascii	"\000"
	.space	3
.LC285:
	.ascii	"pic_height_in_luma_samples\000"
	.space	1
.LC286:
	.ascii	"pic_height_in_luma_samples out of range(0,4096).\012"
	.ascii	"\000"
	.space	2
.LC287:
	.ascii	"ERROR Unkown level: %d\012\000"
.LC288:
	.ascii	"conformance_window_flag\000"
.LC289:
	.ascii	"conf_win_left_offset\000"
	.space	3
.LC290:
	.ascii	"conf_win_right_offset\000"
	.space	2
.LC291:
	.ascii	"conf_win_left_offset+conf_win_right_offset out of r"
	.ascii	"ange.\012\000"
	.space	2
.LC292:
	.ascii	"conf_win_top_offset\000"
.LC293:
	.ascii	"conf_win_bottom_offset\000"
	.space	1
.LC294:
	.ascii	"conf_win_top_offset+conf_win_bottom_offset out of r"
	.ascii	"ange.\012\000"
	.space	2
.LC295:
	.ascii	"bit_depth_luma_minus8\000"
	.space	2
.LC296:
	.ascii	"bit_depth_luma(%d) out of range(8,14).\012\000"
.LC297:
	.ascii	"bit_depth_luma(%d) not equal 8.\012\000"
	.space	3
.LC298:
	.ascii	"bit_depth_chroma_minus8\000"
.LC299:
	.ascii	"bit_depth_chroma(%d) out of range[8,14].\012\000"
	.space	2
.LC300:
	.ascii	"bit_depth_chroma(%d) not equal 8.\012\000"
	.space	1
.LC301:
	.ascii	"log2_max_pic_order_cnt_lsb_minus4\000"
	.space	2
.LC302:
	.ascii	"log2_max_pic_order_cnt_lsb_minus4 out of range[0,12"
	.ascii	"].\012\000"
	.space	1
.LC303:
	.ascii	"sps_sub_layer_ordering_info_present_flag\000"
	.space	3
.LC304:
	.ascii	"sps_max_dec_pic_buffering_minus1\000"
	.space	3
.LC305:
	.ascii	"sps_num_reorder_pics\000"
	.space	3
.LC306:
	.ascii	"sps_max_latency_increase_plus1\000"
	.space	1
.LC307:
	.ascii	"log2_min_coding_block_size_minus3\000"
	.space	2
.LC308:
	.ascii	"log2_min_luma_coding_block_size_minus3 out of range"
	.ascii	"(0,3).\012\000"
	.space	1
.LC309:
	.ascii	"log2_diff_max_min_coding_block_size\000"
.LC310:
	.ascii	"log2_diff_max_min_luma_coding_block_size out of ran"
	.ascii	"ge(0,3).\012\000"
	.space	3
.LC311:
	.ascii	"log2_ctb_sizeY out of range(4,6).\012\000"
	.space	1
.LC312:
	.ascii	"log2_min_transform_block_size_minus2\000"
	.space	3
.LC313:
	.ascii	"log2_min_transform_block_size_minus2 out of range(0"
	.ascii	",3).\012\000"
	.space	3
.LC314:
	.ascii	"log2_diff_max_min_transform_block_size\000"
	.space	1
.LC315:
	.ascii	"log2_diff_max_min_transform_block_size out of range"
	.ascii	"(0,3).\012\000"
	.space	1
.LC316:
	.ascii	"quadtree_tu_log2_min_size not less than log2_min_cb"
	.ascii	"_sizeY.\012\000"
.LC317:
	.ascii	"quadtree_tu_log2_max_size greater than Min( CtbLog2"
	.ascii	"SizeY, 5 ).\012\000"
.LC318:
	.ascii	"max_transform_hierarchy_depth_inter\000"
.LC319:
	.ascii	"max_transform_hierarchy_depth_inter out of range(0,"
	.ascii	"CtbLog2SizeY-Log2MinTrafoSize).\012\000"
.LC320:
	.ascii	"max_transform_hierarchy_depth_intra\000"
.LC321:
	.ascii	"max_transform_hierarchy_depth_intra out of range(0,"
	.ascii	"CtbLog2SizeY-Log2MinTrafoSize).\012\000"
.LC322:
	.ascii	"scaling_list_enabled_flag\000"
	.space	2
.LC323:
	.ascii	"sps_scaling_list_data_present_flag\000"
	.space	1
.LC324:
	.ascii	"SPS HEVC_DecScalingListData error.\012\000"
.LC325:
	.ascii	"amp_enabled_flag\000"
	.space	3
.LC326:
	.ascii	"sample_adaptive_offset_enabled_flag\000"
.LC327:
	.ascii	"SPS sao is off and pic height(%d) is too small.(Log"
	.ascii	"ic Unsupported).\012\000"
	.space	3
.LC328:
	.ascii	"pcm_enabled_flag\000"
	.space	3
.LC329:
	.ascii	"pcm_sample_bit_depth_luma_minus1\000"
	.space	3
.LC330:
	.ascii	"pcm_sample_bit_depth_chroma_minus1\000"
	.space	1
.LC331:
	.ascii	"log2_min_pcm_luma_coding_block_size_minus3\000"
	.space	1
.LC332:
	.ascii	"log2_min_pcm_coding_block_size_minus3(%d) out of ra"
	.ascii	"nge[0,2].\012\000"
	.space	2
.LC333:
	.ascii	"log2_diff_max_min_pcm_luma_coding_block_size\000"
	.space	3
.LC334:
	.ascii	"log2_diff_max_min_pcm_coding_block_size(%d) out of "
	.ascii	"range[0,2].\012\000"
.LC335:
	.ascii	"pcm_log2_max_size greater than Min( CtbLog2SizeY, 5"
	.ascii	" ).\012\000"
.LC336:
	.ascii	"pcm_loop_filter_disable_flag\000"
	.space	3
.LC337:
	.ascii	"num_short_term_ref_pic_sets\000"
.LC338:
	.ascii	"num_short_term_ref_pic_sets out of range[0,64].\012"
	.ascii	"\000"
	.space	3
.LC339:
	.ascii	"SPS HEVC_DecShortTermRefPicSet error.\012\000"
	.space	1
.LC340:
	.ascii	"long_term_ref_pics_present_flag\000"
.LC341:
	.ascii	"num_long_term_ref_pic_sps\000"
	.space	2
.LC342:
	.ascii	"num_long_term_ref_pic_sps out of range[0,32].\012\000"
	.space	1
.LC343:
	.ascii	"lt_ref_pic_poc_lsb_sps\000"
	.space	1
.LC344:
	.ascii	"used_by_curr_pic_lt_sps_flag\000"
	.space	3
.LC345:
	.ascii	"sps_temporal_mvp_enable_flag\000"
	.space	3
.LC346:
	.ascii	"sps_strong_intra_smoothing_enable_flag\000"
	.space	1
.LC347:
	.ascii	"vui_parameters_present_flag\000"
.LC348:
	.ascii	"SPS HEVC_DecVuiParam error.\012\000"
	.space	3
.LC349:
	.ascii	"sps_extension_flag\000"
	.space	1
.LC350:
	.ascii	"general_profile_space[]\000"
.LC351:
	.ascii	"general_tier_flag[]\000"
.LC352:
	.ascii	"general_profile_idc[]\000"
	.space	2
.LC353:
	.ascii	"general_profile_compatibility_flag[][%d]\000"
	.space	3
.LC354:
	.ascii	"general_progressive_source_flag\000"
.LC355:
	.ascii	"general_interlaced_source_flag\000"
	.space	1
.LC356:
	.ascii	"general_non_packed_constraint_flag\000"
	.space	1
.LC357:
	.ascii	"general_frame_only_constraint_flag\000"
	.space	1
.LC358:
	.ascii	"general_reserved_zero_44bits[0..15]\000"
.LC359:
	.ascii	"general_reserved_zero_44bits[16..31]\000"
	.space	3
.LC360:
	.ascii	"general_reserved_zero_44bits[32..43]\000"
	.space	3
.LC361:
	.ascii	"general_level_idc\000"
	.space	2
.LC362:
	.ascii	"sub_layer_level_present_flag\000"
	.space	3
.LC363:
	.ascii	"sub_layer_profile_present_flag\000"
	.space	1
.LC364:
	.ascii	"reserved_zero_2bits\000"
.LC365:
	.ascii	"reserved_zero_2bits not equal 0.\012\000"
	.space	2
.LC366:
	.ascii	"sub_layer_profile_space\000"
.LC367:
	.ascii	"sub_layer_tier_flag\000"
.LC368:
	.ascii	"sub_layer_profile_idc\000"
	.space	2
.LC369:
	.ascii	"sub_layer_profile_compatibility_flag\000"
	.space	3
.LC370:
	.ascii	"sub_layer_level_idc\000"
.LC371:
	.ascii	"vps_reserved_three_2bits\000"
	.space	3
.LC372:
	.ascii	"vps_reserved_three_2bits(%d) not equal 0x3.\012\000"
	.space	3
.LC373:
	.ascii	"vps_max_layers_minus1\000"
	.space	2
.LC374:
	.ascii	"vps_max_layers_minus1 out of range(0,63).\012\000"
	.space	1
.LC375:
	.ascii	"vps_max_sub_layers_minus1\000"
	.space	2
.LC376:
	.ascii	"vps_max_sub_layers_minus1 out of range(0,6).\012\000"
	.space	2
.LC377:
	.ascii	"vps_temporal_id_nesting_flag\000"
	.space	3
.LC378:
	.ascii	"vps_reserved_ffff_16bits\000"
	.space	3
.LC379:
	.ascii	"vps_reserved_0xffff_16bits not equal 0xffff.\012\000"
	.space	2
.LC380:
	.ascii	"VPS HEVC_DecPTL error.\012\000"
.LC381:
	.ascii	"vps_sub_layer_ordering_info_present_flag\000"
	.space	3
.LC382:
	.ascii	"vps_max_dec_pic_buffering_minus1[i]\000"
.LC383:
	.ascii	"vps_num_reorder_pics[i]\000"
.LC384:
	.ascii	"vps_max_latency_increase_plus1[i]\000"
	.space	2
.LC385:
	.ascii	"vps_max_layer_id\000"
	.space	3
.LC386:
	.ascii	"vps_num_layer_sets_minus1\000"
	.space	2
.LC387:
	.ascii	"vps_num_layer_sets_minus1(%d) out of range(0,1023)."
	.ascii	"\012\000"
	.space	3
.LC388:
	.ascii	"layer_id_included_flag[%d][%d]\000"
	.space	1
.LC389:
	.ascii	"vps_timing_info_present_flag\000"
	.space	3
.LC390:
	.ascii	"vps_num_units_in_tick\000"
	.space	2
.LC391:
	.ascii	"vps_time_scale\000"
	.space	1
.LC392:
	.ascii	"vps_poc_proportional_to_timing_flag\000"
.LC393:
	.ascii	"vps_num_ticks_poc_diff_one_minus1\000"
	.space	2
.LC394:
	.ascii	"vps_num_hrd_parameters\000"
	.space	1
.LC395:
	.ascii	"hrd_layer_set_idx\000"
	.space	2
.LC396:
	.ascii	"cprms_present_flag\000"
	.space	1
.LC397:
	.ascii	"VPS HEVC_DecHrdParam error.\012\000"
	.space	3
.LC398:
	.ascii	"vps_extension_flag\000"
	.space	1
.LC399:
	.ascii	"HEVC_ReadByteAlignment: code should not be zero.\012"
	.ascii	"\000"
	.space	2
.LC400:
	.ascii	"HEVC_ReadByteAlignment: code:%d\012\000"
	.space	3
.LC401:
	.ascii	"first_slice_segment_in_pic_flag\000"
.LC402:
	.ascii	"no_output_of_prior_pics_flag\000"
	.space	3
.LC403:
	.ascii	"slice_pic_parameter_set_id\000"
	.space	1
.LC404:
	.ascii	"%s: pic_parameter_set_id(%d) out of range(0 %d)!\012"
	.ascii	"\000"
	.space	2
.LC405:
	.ascii	"HEVC_VpsSpsPpsCheck != HEVC_DEC_NORMAL\012\000"
.LC406:
	.ascii	"dependent_slice_segment_flag\000"
	.space	3
.LC407:
	.ascii	"max_cu_width(%d)/max_cu_height(%d) = 0\012\000"
.LC408:
	.ascii	"slice_segment_address\000"
	.space	2
.LC409:
	.ascii	"slice_segment_address(%d) out of range(0,%d).\012\000"
	.space	1
.LC410:
	.ascii	"slice_reserved_flag\000"
.LC411:
	.ascii	"slice_reserved_flag: %d\012\000"
	.space	3
.LC412:
	.ascii	"slice_type\000"
	.space	1
.LC413:
	.ascii	"slice_type(%d) out of range(0,2].\012\000"
	.space	1
.LC414:
	.ascii	"pic_output_flag\000"
.LC415:
	.ascii	"pic_order_cnt_lsb\000"
	.space	2
.LC416:
	.ascii	"short_term_ref_pic_set_sps_flag\000"
.LC417:
	.ascii	"SH HEVC_DecShortTermRefPicSet error.\012\000"
	.space	2
.LC418:
	.ascii	"short_term_ref_pic_set_idx\000"
	.space	1
.LC419:
	.ascii	"short_term_ref_pic_set_idx(%d) out of range[0,%d].\012"
	.ascii	"\000"
.LC420:
	.ascii	"num_long_term_sps\000"
	.space	2
.LC421:
	.ascii	"num_long_term_sps(%d) out of range[0,%d].\012\000"
	.space	1
.LC422:
	.ascii	"num_long_term_pics\000"
	.space	1
.LC423:
	.ascii	"SH ERROR: (num_negative_pics(%d) + num_positive_pic"
	.ascii	"s(%d) + num_of_longterm_pics(%d)) > %d\012\000"
	.space	1
.LC424:
	.ascii	"lt_idx_sps\000"
	.space	1
.LC425:
	.ascii	"lt_idx_sps[%d] = %d, but out of range[0,%d].\012\000"
	.space	2
.LC426:
	.ascii	"poc_lsb_lt\000"
	.space	1
.LC427:
	.ascii	"used_by_curr_pic_lt_flag\000"
	.space	3
.LC428:
	.ascii	"delta_poc_msb_present_flag\000"
	.space	1
.LC429:
	.ascii	"delta_poc_msb_cycle_lt\000"
	.space	1
.LC430:
	.ascii	"ERROR: pRPS->num_of_pics(%d) > %d.\012\000"
.LC431:
	.ascii	"slice_temporal_mvp_enable_flag\000"
	.space	1
.LC432:
	.ascii	"slice_sao_luma_flag\000"
.LC433:
	.ascii	"slice_sao_chroma_flag\000"
	.space	2
.LC434:
	.ascii	"num_ref_idx_active_override_flag\000"
	.space	3
.LC435:
	.ascii	"num_ref_idx_l0_active_minus1\000"
	.space	3
.LC436:
	.ascii	"num_ref_idx_l0_active(%d) out of range(0,%d).\012\000"
	.space	1
.LC437:
	.ascii	"num_ref_idx_l1_active_minus1\000"
	.space	3
.LC438:
	.ascii	"num_ref_idx_l1_active(%d) out of range(0,%d).\012\000"
	.space	1
.LC439:
	.ascii	"pRPS is null.\012\000"
	.space	1
.LC440:
	.ascii	"pRPS->num_of_pics out(%d) of range(0,%d).\012\000"
	.space	1
.LC441:
	.ascii	"SH HEVC_DecRefPicListsModification error.\012\000"
	.space	1
.LC442:
	.ascii	"mvd_l1_zero_flag\000"
	.space	3
.LC443:
	.ascii	"cabac_init_flag\000"
.LC444:
	.ascii	"collocated_from_l0_flag\000"
.LC445:
	.ascii	"collocated_ref_idx\000"
	.space	1
.LC446:
	.ascii	"collocated_from_l0_flag=%d, collocated_ref_idx(%d) "
	.ascii	"out of range(0,%d).\012\000"
.LC447:
	.ascii	"SH HEVC_DecPredWeightTable error.\012\000"
	.space	1
.LC448:
	.ascii	"five_minus_max_num_merge_cand\000"
	.space	2
.LC449:
	.ascii	"SH max_num_merge_cand(%d) out of range(1,5).\012\000"
	.space	2
.LC450:
	.ascii	"slice_qp_delta\000"
	.space	1
.LC451:
	.ascii	"SH slice_qp(%d) out of range [-%d,51].\012\000"
.LC452:
	.ascii	"slice_cb_qp_offset\000"
	.space	1
.LC453:
	.ascii	"SH slice_cb_qp_offset(%d) out of range[-12,12].\012"
	.ascii	"\000"
	.space	3
.LC454:
	.ascii	"SH slice_cb_qp_offset(%d)+pic_cb_qp_offset(%d) out "
	.ascii	"of range[-12,12].\012\000"
	.space	2
.LC455:
	.ascii	"slice_cr_qp_offset\000"
	.space	1
.LC456:
	.ascii	"SH slice_cr_qp_offset(%d) out of range[-12,12].\012"
	.ascii	"\000"
	.space	3
.LC457:
	.ascii	"SH slice_cr_qp_offset+pPPS->pic_cr_qp_offset(%d) ou"
	.ascii	"t of range[-12,12].\012\000"
.LC458:
	.ascii	"deblocking_filter_override_flag\000"
.LC459:
	.ascii	"slice_disable_deblocking_filter_flag\000"
	.space	3
.LC460:
	.ascii	"slice_beta_offset_div2\000"
	.space	1
.LC461:
	.ascii	"SH slice_beta_offset_div2(%d) out of range(-6,6).\012"
	.ascii	"\000"
	.space	1
.LC462:
	.ascii	"slice_tc_offset_div2\000"
	.space	3
.LC463:
	.ascii	"SH slice_tc_offset_div2(%d) out of range(-6,6).\012"
	.ascii	"\000"
	.space	3
.LC464:
	.ascii	"slice_loop_filter_across_slices_enabled_flag\000"
	.space	3
.LC465:
	.ascii	"num_entry_point_offsets\000"
.LC466:
	.ascii	"CurrSlice.num_entry_point_offsets(%d) out of range["
	.ascii	"0,%d].\012\000"
	.space	1
.LC467:
	.ascii	"offset_len_minus1\000"
	.space	2
.LC468:
	.ascii	"CurrSlice.offset_len(%d) out of range[1,32].\012\000"
	.space	2
.LC469:
	.ascii	"entry_point_offset_minus1\000"
	.space	2
.LC470:
	.ascii	"slice_segment_header_extension_length\000"
	.space	2
.LC471:
	.ascii	"slice_segment_header_extension_length(%d) out of ra"
	.ascii	"nge [0,256]\012\000"
.LC472:
	.ascii	"bitsLeft(%d) < slice_segment_header_extension_lengt"
	.ascii	"h(%d)\012\000"
	.space	2
.LC473:
	.ascii	"slice_segment_header_extension_data_byte\000"
	.space	3
.LC474:
	.ascii	"HEVC_DecSliceSegmentHeader dec err\012\000"
.LC475:
	.ascii	"%s frame logic_fs_id=%d, state=%d\012\000"
	.space	1
.LC476:
	.ascii	"LogicFs(fs=%p, poc=%d, FirstFrameState=%d) is null,"
	.ascii	" logic_fs_id = %d\012\000"
	.space	2
.LC477:
	.ascii	"%s frame poc=%d, is already output\012\000"
.LC478:
	.ascii	"%s frame(%p) invalid, state:%d, non_existing:%d\012"
	.ascii	"\000"
	.space	3
.LC479:
	.ascii	"framestore %d allocate apc %d\012\000"
	.space	1
.LC480:
	.ascii	"find APC, but logic_fs_id %d abnormal(poc=%d, ref=%"
	.ascii	"d, logic_fs=%p, dec_fs=%p)\012\000"
	.space	1
.LC481:
	.ascii	"pListX[0][%d] = NULL, listXsize[0] = %d\012\000"
	.space	3
.LC482:
	.ascii	"pListX[0][%d]->frame_store = NULL, listXsize[0] = %"
	.ascii	"d\012\000"
	.space	2
.LC483:
	.ascii	"pListX[0][%d] frame_store(%p), pstLogicFs(%p) inval"
	.ascii	"id\012\000"
	.space	1
.LC484:
	.ascii	"pListX[1][%d] = NULL, listXsize[1] = %d\012\000"
	.space	3
.LC485:
	.ascii	"pListX[1][%d]->frame_store = NULL, listXsize[1] = %"
	.ascii	"d\012\000"
	.space	2
.LC486:
	.ascii	"pListX[i][%d] pstLogicFs(%p) invalid\012\000"
	.space	2
.LC487:
	.ascii	"--------------- PrintCurrSlicelistX START ---------"
	.ascii	"------\012\000"
	.space	1
.LC488:
	.ascii	"List0, size: %d\012\000"
	.space	3
.LC489:
	.ascii	"pListX[0][%d]:%p \000"
	.space	2
.LC490:
	.ascii	"pFrameStore:%p \000"
.LC491:
	.ascii	"pLogicFs:%p \000"
	.space	3
.LC492:
	.ascii	"List1, size: %d\012\000"
	.space	3
.LC493:
	.ascii	"pListX[1][%d]: %p\000"
	.space	2
.LC494:
	.ascii	"--------------- PrintCurrSlicelistX END -----------"
	.ascii	"----\012\000"
	.space	3
.LC495:
	.ascii	"FSP_GetFspType -1\012\000"
	.space	1
.LC496:
	.ascii	"FSP_GetLogicFs return NULL\012\000"
.LC497:
	.ascii	"HEVC_DECRecycleImage ERROR, DispState = FS_DISP_STA"
	.ascii	"TE_NOT_USED\012\000"
.LC498:
	.ascii	"FS_ALLOC_ERR, ClearAll\012\000"
.LC499:
	.ascii	"Can not new logic fs! ClearAll\012\000"
.LC500:
	.ascii	"hevc partition fs memory fail!\012\000"
.LC501:
	.ascii	"ERROR: HEVC FSP_ConfigInstance fail!\012\000"
	.space	2
.LC502:
	.ascii	"%s arrange mem failed.\012\000"
.LC503:
	.ascii	"%s pstLogicFsImage is NULL!\012\000"
	.space	3
.LC504:
	.ascii	"%s InsertVO err:%d, ClearAll\012\000"
	.space	2
.LC505:
	.ascii	"cann't find slot for current nal\012\000"
	.space	2
.LC506:
	.ascii	"receive a zero packet\012\000"
	.space	1
.LC507:
	.ascii	"nal_release_err\012\000"
	.space	3
.LC508:
	.ascii	"%s: pstLogicFsImage is NULL!\012\000"
	.space	2
.LC509:
	.ascii	"HEVC InsertVO Failed return %d, ClearAll\012\000"
	.space	2
.LC510:
	.ascii	"HEVC.c line %d: frame para err(ret=%d), recycle ima"
	.ascii	"ge self\012\000"
.LC511:
	.ascii	"%s: HEVC_OutputFrmToVO err!\012\000"
	.space	3
.LC512:
	.ascii	"%s call HEVC_GetUnRefPicWithMinPoc failed\012\000"
	.space	1
.LC513:
	.ascii	"%s call HEVC_OutputOneFrmFromDPB failed\012\000"
	.space	3
.LC514:
	.ascii	"%s: flush dpb failed, return %d\012\000"
	.space	3
.LC515:
	.ascii	"DecVDM no slice and needn't start VDM, but MaxBytes"
	.ascii	"Received exceed threshold!\012\000"
	.space	1
.LC516:
	.ascii	"DecVDM no slice and needn't start VDM\012\000"
	.space	1
.LC517:
	.ascii	"IPBDecMode Changed (%d -> %d)\012\000"
	.space	1
.LC518:
	.ascii	"Discard this B(poc=%d) before P, is_ref_idc=%d.\012"
	.ascii	"\000"
	.space	3
.LC519:
	.ascii	"VDM start, TotalPicNum=%d.\012\000"
.LC520:
	.ascii	"%s no correct slice in the pic\012\000"
.LC521:
	.ascii	"%s DPB.size(%d) already reached max(%d).\012\000"
	.space	2
.LC522:
	.ascii	"%s increase DPB size to %d\012\000"
.LC523:
	.ascii	"%s no enough fs(total_fs_num=%d) to increase DPB si"
	.ascii	"ze.\012\000"
.LC524:
	.ascii	"pps_pic_parameter_set_id\000"
	.space	3
.LC525:
	.ascii	"pic_parameter_set_id(%d) out of range(0,63).\012\000"
	.space	2
.LC526:
	.ascii	"PPS[%d] decode error.\012\000"
	.space	1
.LC527:
	.ascii	"sps_video_parameter_set_id\000"
	.space	1
.LC528:
	.ascii	"sps_video_parameter_set_id out of range(0,%d).\012\000"
.LC529:
	.ascii	"sps_max_sub_layers_minus1\000"
	.space	2
.LC530:
	.ascii	"sps_max_sub_layers_minus1 out of range(0,6).\012\000"
	.space	2
.LC531:
	.ascii	"sps_temporal_id_nesting_flag\000"
	.space	3
.LC532:
	.ascii	"SPS HEVC_DecPTL error.\012\000"
.LC533:
	.ascii	"sps_seq_parameter_set_id\000"
	.space	3
.LC534:
	.ascii	"sps_seq_parameter_set_id out of range(0,%d).\012\000"
	.space	2
.LC535:
	.ascii	"SPS[%d] decode error0.\012\000"
.LC536:
	.ascii	"SPS[%d] decode error.\012\000"
	.space	1
.LC537:
	.ascii	"vps_video_parameter_set_id\000"
	.space	1
.LC538:
	.ascii	"pVPS->vps_video_parameter_set_id out of range(0,15)"
	.ascii	".\012\000"
	.space	2
.LC539:
	.ascii	"VPS[%d] decode error0.\012\000"
.LC540:
	.ascii	"VPS[%d] decode error1.\012\000"
.LC541:
	.ascii	"BitDepthChange ReRange FS Luma(%d-->%d),Chroma(%d -"
	.ascii	"->%d)\012\000"
	.space	2
.LC542:
	.ascii	"HEVC_InitDPB error, return %d\012\000"
	.space	1
.LC543:
	.ascii	"HEVC_AllocFrameStore error\012\000"
.LC544:
	.ascii	"image_id=%d, pmv_idc=%d\012\000"
	.space	3
.LC545:
	.ascii	"pic msg burst0:\012\000"
	.space	3
.LC546:
	.ascii	"%s call HEVC_CalcTileInfo failed.\012\000"
	.space	1
.LC547:
	.ascii	"logic frame id(=%d): get LogicFs error!\012\000"
	.space	3
.LC548:
	.ascii	"phy fs is null: pstDecodeFs = %p, pstDispOutFs = %p"
	.ascii	"\012\000"
	.space	3
.LC549:
	.ascii	"pic_struct\000"
	.space	1
.LC550:
	.ascii	"source_scan_type\000"
	.space	3
.LC551:
	.ascii	"duplicate_flag\000"
	.space	1
.LC552:
	.ascii	"au_cpb_removal_delay_minus1\000"
.LC553:
	.ascii	"pic_dpb_output_delay\000"
	.space	3
.LC554:
	.ascii	"pic_dpb_output_du_delay\000"
.LC555:
	.ascii	"num_decoding_units_minus1\000"
	.space	2
.LC556:
	.ascii	"du_common_cpb_removal_delay_flag\000"
	.space	3
.LC557:
	.ascii	"du_common_cpb_removal_delay_minus1\000"
	.space	1
.LC558:
	.ascii	"pPic->num_decoding_units_minus1 > 255\012\000"
	.space	1
.LC559:
	.ascii	"num_nalus_in_du_minus1\000"
	.space	1
.LC560:
	.ascii	"bp_seq_parameter_set_id\000"
.LC561:
	.ascii	"Wrong bp_seq_parameter_set_id = %d, should be 0 to "
	.ascii	"15!\012\000"
.LC562:
	.ascii	"irap_cpb_params_present_flag\000"
	.space	3
.LC563:
	.ascii	"cpb_delay_offset\000"
	.space	3
.LC564:
	.ascii	"dpb_delay_offset\000"
	.space	3
.LC565:
	.ascii	"concatenation_flag\000"
	.space	1
.LC566:
	.ascii	"au_cpb_removal_delay_delta_minus1\000"
	.space	2
.LC567:
	.ascii	"HEVC_Sei_Buf_Period cpb_cnt_minus1(%d) out of range"
	.ascii	"(0,31).\012\000"
.LC568:
	.ascii	"nal_initial_cpb_removal_delay\000"
	.space	2
.LC569:
	.ascii	"nal_initial_cpb_removal_offset\000"
	.space	1
.LC570:
	.ascii	"nal_initial_alt_cpb_removal_delay\000"
	.space	2
.LC571:
	.ascii	"nal_initial_cpb_alt_removal_offset\000"
	.space	1
.LC572:
	.ascii	"active_video_parameter_set_id\000"
	.space	2
.LC573:
	.ascii	"self_contained_cvs_flag\000"
.LC574:
	.ascii	"no_parameter_set_update_flag\000"
	.space	3
.LC575:
	.ascii	"num_sps_ids_minus1\000"
	.space	1
.LC576:
	.ascii	"pAct->num_sps_ids_minus1 > 15\012\000"
	.space	1
.LC577:
	.ascii	"active_seq_parameter_set_id\000"
.LC578:
	.ascii	"decoding_unit_idx\000"
	.space	2
.LC579:
	.ascii	"du_spt_cpb_removal_delay_increment\000"
	.space	1
.LC580:
	.ascii	"dpb_output_du_delay_present_flag\000"
	.space	3
.LC581:
	.ascii	"pic_spt_dpb_output_du_delay\000"
.LC582:
	.ascii	"recovery_poc_cnt\000"
	.space	3
.LC583:
	.ascii	"exact_match_flag\000"
	.space	3
.LC584:
	.ascii	"broken_link_flag\000"
	.space	3
.LC585:
	.ascii	"frame_packing_arrangement_id\000"
	.space	3
.LC586:
	.ascii	"frame_packing_arrangement_cancel_flag\000"
	.space	2
.LC587:
	.ascii	"frame_packing_arrangement_type\000"
	.space	1
.LC588:
	.ascii	"frame_packing_arrangement_type(%d) out of range\012"
	.ascii	"\000"
	.space	3
.LC589:
	.ascii	"quincunx_sampling_flag\000"
	.space	1
.LC590:
	.ascii	"content_interpretation_type\000"
.LC591:
	.ascii	"spatial_flipping_flag\000"
	.space	2
.LC592:
	.ascii	"frame0_flipped_flag\000"
.LC593:
	.ascii	"field_views_flag\000"
	.space	3
.LC594:
	.ascii	"current_frame_is_frame0_flag\000"
	.space	3
.LC595:
	.ascii	"frame0_self_contained_flag\000"
	.space	1
.LC596:
	.ascii	"frame1_self_contained_flag\000"
	.space	1
.LC597:
	.ascii	"frame0_grid_position_x\000"
	.space	1
.LC598:
	.ascii	"frame0_grid_position_y\000"
	.space	1
.LC599:
	.ascii	"frame1_grid_position_x\000"
	.space	1
.LC600:
	.ascii	"frame1_grid_position_y\000"
	.space	1
.LC601:
	.ascii	"frame_packing_arrangement_reserved_byte\000"
.LC602:
	.ascii	"frame_packing_arrangement_persistence_flag\000"
	.space	1
.LC603:
	.ascii	"upsampled_aspect_ratio_flag\000"
.LC604:
	.ascii	"display_orientation_cancel_flag\000"
.LC605:
	.ascii	"hor_flip\000"
	.space	3
.LC606:
	.ascii	"ver_flip\000"
	.space	3
.LC607:
	.ascii	"anticlockwise_rotation\000"
	.space	1
.LC608:
	.ascii	"display_orientation_persistence_flag\000"
	.space	3
.LC609:
	.ascii	"temporal_sub_layer_zero_idx\000"
.LC610:
	.ascii	"irap_pic_id\000"
.LC611:
	.ascii	"sop_seq_parameter_set_id\000"
	.space	3
.LC612:
	.ascii	"num_entries_in_sop_minus1\000"
	.space	2
.LC613:
	.ascii	"num_entries_in_sop_minus1 out of range(0,1024)\012\000"
.LC614:
	.ascii	"sop_vcl_nut\000"
.LC615:
	.ascii	"sop_temporal_id\000"
.LC616:
	.ascii	"sop_short_term_rps_idx\000"
	.space	1
.LC617:
	.ascii	"sop_poc_delta\000"
	.space	2
.LC618:
	.ascii	"unknown prefix SEI payload byte\000"
.LC619:
	.ascii	"unknown suffix SEI payload byte\000"
.LC620:
	.ascii	"reserved_payload_extension_data\000"
.LC621:
	.ascii	"payload_bit_equal_to_one\000"
	.space	3
.LC622:
	.ascii	"payload_bit_equal_to_zero\000"
	.space	2
.LC623:
	.ascii	"last_payload_type_byte\000"
	.space	1
.LC624:
	.ascii	"last_payload_size_byte\000"
	.space	1
.LC625:
	.ascii	"HEVC_SeiMessage HEVC_Sei_Payload error.\012\000"
	.space	3
.LC626:
	.ascii	"bitstream_subset_flag\000"
	.space	2
.LC627:
	.ascii	"nesting_op_flag\000"
.LC628:
	.ascii	"default_op_flag\000"
.LC629:
	.ascii	"nesting_num_ops_minus1\000"
	.space	1
.LC630:
	.ascii	"nesting_num_ops_minus1 out of range(0,7)\012\000"
	.space	2
.LC631:
	.ascii	"nesting_max_temporal_id_plus1\000"
	.space	2
.LC632:
	.ascii	"nesting_op_idx\000"
	.space	1
.LC633:
	.ascii	"all_layers_flag\000"
.LC634:
	.ascii	"nesting_no_op_max_temporal_id_plus1\000"
.LC635:
	.ascii	"nesting_num_layers_minus1\000"
	.space	2
.LC636:
	.ascii	"nesting_num_layers_minus1 out of range(0,63)\012\000"
	.space	2
.LC637:
	.ascii	"SEI HEVC_SeiMessage error.\012\000"
.LC638:
	.ascii	"SEI BsIsByteAligned error.\012\000"
.LC639:
	.ascii	"rbsp_trailing_bits\000"
	.space	1
.LC640:
	.ascii	"SEI rbsp_trailing_bits(%d) not equal 0x80.\012\000"
.LC641:
	.ascii	"--------------- PrintDPBState START ---------------"
	.ascii	"\012\000"
	.space	3
.LC642:
	.ascii	"DPB: size:%d, used_size:%d, negative:%d, positive:%"
	.ascii	"d, longterm:%d\012\000"
	.space	1
.LC643:
	.ascii	"fs[%d]:%p non_existing:%d state:%d is_ref:%d displa"
	.ascii	"yed:%d poc:%d long_term:%d LogicFs:%p, fsp_ref:%d f"
	.ascii	"sp_disp:%d logic_id:%d img_id:%d\012\000"
.LC644:
	.ascii	"fs[%d]\011\000"
.LC645:
	.ascii	"LogicFs:%p\011\000"
.LC646:
	.ascii	"LogicTick:%d\011\000"
	.space	2
.LC647:
	.ascii	"IsRef:%d\011\000"
	.space	2
.LC648:
	.ascii	"s32DispState:%d\011\000"
	.space	3
.LC649:
	.ascii	"LogicFs:Null\011\000"
	.space	2
.LC650:
	.ascii	"DecFs:%p\011\000"
	.space	2
.LC651:
	.ascii	"DecTick:%d\011\000"
.LC652:
	.ascii	"DecFs:Null\011\000"
.LC653:
	.ascii	"DispFs:%p\011\000"
	.space	1
.LC654:
	.ascii	"DispTick:%d\011\000"
	.space	3
.LC655:
	.ascii	"DispFs:Null\011\000"
	.space	3
.LC656:
	.ascii	"--------------- PrintDPBState END ---------------\012"
	.ascii	"\000"
	.space	1
.LC657:
	.ascii	"Unkown Error: No available fs, try to remove unused"
	.ascii	" fs!\012\000"
	.space	3
.LC658:
	.ascii	"Remove failed, clear DPB!\012\000"
	.space	1
.LC659:
	.ascii	"Remove success! DPB: used %d, size %d.\012\000"
.LC660:
	.ascii	"No frame store available!\012\000"
	.space	1
.LC661:
	.ascii	"%s ReadImgNum = %d, NewImgNum = %d, FrameStore leak"
	.ascii	", ClearAll!\012\000"
.LC662:
	.ascii	"%s with invalid pos(%d)\012\000"
	.space	3
.LC663:
	.ascii	"%s get APC error, ret %d\012\000"
	.space	2
.LC664:
	.ascii	"DPB.used_size may bigger than DPB.size\012\000"
.LC665:
	.ascii	"HEVC_InsertFrmInDPB Failed, ret = %d\012\000"
	.space	2
.LC666:
	.ascii	"%s call HEVC_OutputFrmFromDPB failed\012\000"
	.space	2
.LC667:
	.ascii	"%s call HEVC_RemoveUnUsedFrameStore Failed.\012\000"
	.space	3
.LC668:
	.ascii	"%s call HEVC_InsertFrmInDPB Failed.\012\000"
	.space	3
.LC669:
	.ascii	"%s call HEVC_CheckFrameStore failed!\012\000"
	.space	2
.LC670:
	.ascii	"%s %d: InsertFrmInDPB failed, return %d\012\000"
	.space	3
.LC671:
	.ascii	"%s CurrPic.state = HEVC_PIC_EMPTY, return HEVC_DEC_"
	.ascii	"NORMAL\012\000"
	.space	1
.LC672:
	.ascii	"Discard cur pic, ErrLevel(%d) > OutErrThr(%d)\012\000"
	.space	1
.LC673:
	.ascii	"%s call HEVC_IModeProcess Failed\012\000"
	.space	2
.LC674:
	.ascii	"HEVC_StorePicInDpb return(%d) from L%d\012\000"
.LC675:
	.ascii	"%s call HEVC_SimpleDPBProcess Failed\012\000"
	.space	2
.LC676:
	.ascii	"%s call HEVC_DecOrderProcess Failed\012\000"
	.space	3
.LC677:
	.ascii	"%s call HEVC_DispOrderProcess Failed\012\000"
	.space	2
.LC678:
	.ascii	"%s return HEVC_DEC_ERR\012\000"
.LC679:
	.ascii	"HEVC_StorePicInDPB failed, ret = %d\012\000"
	.space	3
.LC680:
	.ascii	"DPB no suited fs for lost pic.\012\000"
.LC681:
	.ascii	"Take poc(%d) to creat lost poc(%d).\012\000"
	.space	3
.LC682:
	.ascii	"DPB ERROR: Can not get ref_fs!\012\000"
.LC683:
	.ascii	"DPB ERROR: Ref DecodeFs = NULL, ClearDPB!\012\000"
	.space	1
.LC684:
	.ascii	"ERROR: Can not new logic fs!\012\000"
	.space	2
.LC685:
	.ascii	"Lost pic insert in DPB Failed!\012\000"
.LC686:
	.ascii	"No frame store for lost pic.\012\000"
	.space	2
.LC687:
	.ascii	"%s: DPB.used_size(%d) >= DPB.size(%d), need to incr"
	.ascii	"ease DPB size.\012\000"
	.space	1
.LC688:
	.ascii	"%s call HEVC_IncreaseDPBSize failed\012\000"
	.space	3
.LC689:
	.ascii	"%s: DPB.used_size(%d) >= DPB.size(%d), output minpo"
	.ascii	"c frame.\012\000"
	.space	3
.LC690:
	.ascii	"Ref frame(poc %d) lost.\012\000"
	.space	3
.LC691:
	.ascii	"%s call HEVC_FlushOutputFrmFromDPB failed\012\000"
	.space	1
.LC692:
	.ascii	"%s call HEVC_EmptyFrmFromDPB failed\012\000"
	.space	3
.LC693:
	.ascii	"Start Reason: SliceParaNum= %d, \012\000"
	.space	2
.LC694:
	.ascii	"Too many slice , err!\012\000"
	.space	1
.LC695:
	.ascii	"Init pic err, exit\012\000"
.LC696:
	.ascii	"HEVC_WritePicMsg failed!\012\000"
	.space	2
.LC697:
	.ascii	"Cur pic not init yet, discard this slice!\012\000"
	.space	1
.LC698:
	.ascii	"Dec List error, ret=%d\012\000"
.LC699:
	.ascii	"Ref List is Wrong!\012\000"
.LC700:
	.ascii	"HEVC_WriteSliceMsg err.\012\000"
	.space	3
.LC701:
	.ascii	"VPS decode error.\012\000"
	.space	1
.LC702:
	.ascii	"SPS decode error.\012\000"
	.space	1
.LC703:
	.ascii	"PPS decode error.\012\000"
	.space	1
.LC704:
	.ascii	"SEI decode error.\012\000"
	.space	1
.LC705:
	.ascii	"***** NAL: UNSUPPORT, nal_unit_type=%d\012\000"
.LC706:
	.ascii	"HEVCDEC_DecodePacket NULL == pPacket!\012\000"
	.space	1
.LC707:
	.ascii	"HEVC_InquireSliceProperty error.\012\000"
	.space	2
.LC708:
	.ascii	"HEVC_DecOneNal ERR\012\000"
.LC709:
	.ascii	"HEVCDEC_DecodePacket NULL == pHevcCtx->pCurrNal!\012"
	.ascii	"\000"
	.ident	"GCC: (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) 4.4.1"
	.section	.note.GNU-stack,"",%progbits
